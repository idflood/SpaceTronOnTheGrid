!function(n){function e(r){if(t[r])return t[r].exports;var a=t[r]={exports:{},id:r,loaded:!1};return n[r].call(a.exports,a,a.exports,e),a.loaded=!0,a.exports}var t={};return e.m=n,e.c=t,e.p="assets/",e(0)}([function(n,e,t){var r,a=function(n,e){return function(){return n.apply(e,arguments)}};r=function(n){var e,r,i,o,l,s,u,m,d,g,c,h,p;return c=t(2),h=t(3),e=t(18),g=t(7),i=t(8),m=t(9),d=t(6),l=t(10),o=t(11),p=t(15),u=t(12),s=t(13),window.App=r=function(){function n(n){var t,r,i,s,u,v;null==n&&(n={}),this.animate=a(this.animate,this),this.onWindowResize=a(this.onWindowResize,this),this.updateCameraAspect=a(this.updateCameraAspect,this),this.onAudioLoaded=a(this.onAudioLoaded,this),this.play=a(this.play,this),this.onTimerSeeked=a(this.onTimerSeeked,this),this.onTimerStatusChanged=a(this.onTimerStatusChanged,this),window.updateCameraAspect=this.updateCameraAspect,this.autoplay=!1,null!=n.autoplay&&(this.autoplay=n.autoplay),this.shaders=new g,r="assets/08 - Space Tron On The Grid.mp3",this.audio=new e(r,{onCanPlay:this.onAudioLoaded}),window.audio=this.audio,this.factory=new l,i=JSON.parse(p),this.settings=i.settings,this.data=o.normalizeData(i.data,this.factory),this.tweenTime=new h(this.data),this.tweenTime.timer.statusChanged.add(this.onTimerStatusChanged),this.tweenTime.timer.seeked.add(this.onTimerSeeked),null!=n.time?this.tweenTime.timer.seek([n.time]):this.settings.time&&this.tweenTime.timer.seek([this.settings.time]),v=this.getScreenSize(),this.camera=new c.PerspectiveCamera(45,v.width/v.height,1,2e3),this.camera.position.z=600,window.activeCamera=this.camera,this.scene=new c.Scene,this.scene.fog=new c.FogExp2(1118481,.0045),this.sceneManager=new d(this.tweenTime,this.data,this.scene,this.camera,this.factory),this.time=1e-4*Date.now(),t=$('<div class="experiment"></div>'),s=t.get(0),this.containerWebgl=s,$("body").append(t),this.renderer=new c.WebGLRenderer({antialias:!1,alpha:!1}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(v.width,v.height),this.renderer.setClearColor(1118481,1),u=new c.DirectionalLight(16777215,.4),u.position.set(100,300,700),this.scene.add(u),s.appendChild(this.renderer.domElement),window.addEventListener("resize",this.onWindowResize,!1),this.postfx=new m(this.scene,this.camera,this.renderer,v),this.onWindowResize(),this.animate()}return n.prototype.onTimerStatusChanged=function(n){return $("body").toggleClass("is-stopped",!n),n?this.audio.play():this.audio.pause()},n.prototype.onTimerSeeked=function(n){return this.audio.seek(n/1e3)},n.prototype.play=function(){return this.tweenTime.timer.play(),$("body").addClass("is-playing")},n.prototype.onAudioLoaded=function(){return console.log("audio loaded"),$("body").addClass("is-audio-loaded"),this.autoplay?this.play():void 0},n.prototype.getScreenSize=function(){var n,e,t,r;return e=window.innerWidth,n=window.innerHeight,window.editorEnabled&&(r=295,$("body").hasClass("timeline-is-closed")&&(r=95),t=279,$("body").hasClass("properties-is-closed")&&(t=0),n-=r,e-=t),{width:e,height:n}},n.prototype.updateCameraAspect=function(n,e){return null==e&&(e=!1),e===!1&&(e=this.getScreenSize()),n.aspect=e.width/e.height,n.updateProjectionMatrix()},n.prototype.onWindowResize=function(){var n;return n=this.getScreenSize(),this.updateCameraAspect(this.camera,n),this.updateCameraAspect(window.activeCamera,n),this.renderer.setSize(n.width,n.height),this.postfx.resize(n.width,n.height)},n.prototype.animate=function(){return requestAnimationFrame(this.animate),this.audio.update(),this.shaders.update(),this.render()},n.prototype.render=function(){var n,e;return e=1e-4*Date.now(),n=e-this.time,this.particles&&this.particles.update(),this.chaos&&this.chaos.update(),this.camera.lookAt(this.scene.position),this.postfx.render(n),this.time=e},n}()}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){THREE.CopyShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")}},function(n,e,t){n.exports=THREE},function(n,e,t){n.exports=TweenTime.Core},,,function(n,e,t){var r,a=function(n,e){return function(){return n.apply(e,arguments)}};r=function(n){var e,r,i;return i=t(16),r=t(17),e=function(){function n(n,e,t,r,i){this.tweenTime=n,this.data=e,this.scene=t,this.defaultCamera=r,this.factory=i,this.update=a(this.update,this),this.timer=this.tweenTime.timer,this.timer.updated.add(this.update),this.update(0)}return n.prototype.update=function(n){var e,t,r,a,i,o,l,s,u;for(e=this.defaultCamera,l=n/1e3,o=this.data,r=0,i=o.length;i>r;r++)a=o[r],s=l>=a.start&&l<=a.end?!0:!1,a.object||(u=a.type,t=this.factory.create(u,a.values,l-a.start),a.object=t,t.container&&(t.container._data=a)),(a.object&&s===!1||a.isDirtyObject)&&(a.isDirtyObject=!1,a.object&&a.object.container&&a.object.container.parent&&this.scene.remove(a.object.container)),a.classObject||(a.classObject=this.factory.getTypeClass(a.type)),s&&a.object.container&&!a.object.container.parent&&this.scene.add(a.object.container),a.object&&a.object.isCamera&&(e=a.object.container,window.updateCameraAspect(e)),a.object&&a.object.update(l-a.start,a.values);return window.activeCamera=e,window.renderModel?window.renderModel.camera=e:void 0},n}()}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r;r=function(n){var e,r,a,i,o;return o=t(2),e=t(19),a=t(41),r=t(42),i=function(){function n(){var n,e,t,r,a,i,l;for(window.shaders=this,this.shaders=[],this.shadersWhite=[],this.shadersRed=[],this.shadersBlue=[],i=15100928,n=2600175,a=50,this.simpleMaterial=new o.MeshBasicMaterial({color:14540253,shading:o.FlatShading,side:o.DoubleSide}),this.simpleMaterialRed=new o.MeshBasicMaterial({color:i,shading:o.FlatShading,side:o.DoubleSide}),this.simpleMaterialBlue=new o.MeshBasicMaterial({color:n,shading:o.FlatShading,side:o.DoubleSide}),e=t=0,l=a;l>=0?l>t:t>l;e=l>=0?++t:--t)r=this.createMaterialLine(14540253),this.shaders.push(r),this.shadersWhite.push(r),r=this.createMaterialLine(i),this.shaders.push(r),this.shadersRed.push(r),r=this.createMaterialLine(n),this.shaders.push(r),this.shadersBlue.push(r)}return n.COLOR_WHITE=0,n.COLOR_RED=1,n.COLOR_BLUE=2,n.prototype.update=function(n){var e,t,r,a,i,o,l,s,u,m;for(null==n&&(n=0),s=this.shaders,u=[],i=0,o=s.length;o>i;i++)m=s[i],m.uniforms.percent.value=Math.max(0,m.uniforms.percent.value-.03*m.speed),m.uniforms.percent.value<.02?n&&Math.random()<n?u.push(m.uniforms.percent.value=2):Math.random()<.02?(t=0,l=0,a=0,r=!1,window.global&&window.global.values&&(r=window.global.values,t=r.bassSensibility,l=r.midSensibility,a=r.highSensibility),e=window.audio.data.filters,(e.bass.timeDomainRMS>t||e.mid.timeDomainRMS>l||e.high.timeDomainRMS>a)&&(m.uniforms.percent.value=2),r&&Math.random()<r.autoAnimate?u.push(m.uniforms.percent.value=2):u.push(void 0)):u.push(void 0):u.push(void 0);return u},n.prototype.getMaterialLine=function(e,t){var r;if(e===!1){switch(t){case n.COLOR_RED:return this.simpleMaterialRed;case n.COLOR_BLUE:return this.simpleMaterialBlue}return this.simpleMaterial}return r=this.shadersWhite,t===n.COLOR_RED&&(r=this.shadersRed),t===n.COLOR_BLUE&&(r=this.shadersBlue),r[Math.floor(Math.random()*r.length)]},n.prototype.createMaterialLine=function(n){var e,t;return t={percent:{type:"f",value:1},color:{type:"c",value:new o.Color(n)},fogColor:{type:"c",value:new o.Color(1118481)},fogDensity:{type:"f",.2045:.2045}},e=new o.ShaderMaterial({vertexShader:a,fragmentShader:r,side:o.DoubleSide,shading:o.FlatShading,uniforms:t,transparent:!0,depthWrite:!1,depthTest:!1,fog:!0}),e.speed=Math.random()+.5,e.blending=o.AdditiveBlending,e},n}()}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r;r=function(n){var e,r;return r=t(2),e=function(){function n(n){var e,t,a;this.scene=n,a=r.ImageUtils.loadTexture("src/images/background.jpg"),a.wrapS=a.wrapT=r.RepeatWrapping,a.repeat.set(2,2),t=new r.MeshBasicMaterial({map:a}),e=new r.Mesh(new r.PlaneGeometry(1600,1600,4,4),t),e.material.depthTest=!1,e.material.depthWrite=!1,e.position.set(0,0,-10),this.scene.add(e)}return n}()}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r;r=function(n){var e,r;return r=t(2),t(21),t(22),t(23),t(24),t(25),t(20),t(26),t(1),t(27),t(28),t(29),e=function(){function n(n,e,t,a){var i,o,l;this.scene=n,this.camera=e,this.renderer=t,this.renderer.autoClear=!1,o=new r.RenderPass(this.scene,this.camera),window.renderModel=o,i=null!=window.devicePixelRatio?window.devicePixelRatio:1,this.renderTargetParameters={minFilter:r.LinearFilter,magFilter:r.LinearFilter,format:r.RGBFormat,stencilBufer:!1},this.renderTarget=new r.WebGLRenderTarget(a.width*i,a.height*i,this.renderTargetParameters),this.effectFXAA=new r.ShaderPass(r.FXAAShader),this.effectFXAA.uniforms.resolution.value.set(1/(a.width*i),1/(a.height*i)),this.bloom=new r.BloomPass(.9,25,4),this.glitchPass=new r.GlitchPass2,this.glitchPass.intensity=.3,this.glitchPass.uniforms.tScratch.value=r.ImageUtils.loadTexture("src/images/lensflare_dirt.jpg"),l=new r.Vector2(a.width*i,a.height*i),this.customPass=new r.CustomPostPass(.55,l),this.customPass.renderToScreen=!0,this.composer=new r.EffectComposer(this.renderer,this.renderTarget),this.composer.setSize(a.width*i,a.height*i),this.composer.addPass(o),this.composer.addPass(this.bloom),this.composer.addPass(this.customPass)}return n.prototype.resize=function(n,e){var t;return t=null!=window.devicePixelRatio?window.devicePixelRatio:1,this.renderTarget=new r.WebGLRenderTarget(n*t,e*t,this.renderTargetParameters),this.composer.reset(this.renderTarget),this.effectFXAA.uniforms.resolution.value.set(1/(n*t),1/(e*t)),this.customPass.uniforms.resolution.value.set(n*t,e*t)},n.prototype.render=function(n){return this.renderer.clear(),this.composer.render(n)},n}()}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r,a=function(n,e){return function(){return n.apply(e,arguments)}};r=function(n){var e,r,i,o,l,s,u,m,d,g;return r=t(31),s=t(19),o=t(32),e=t(33),u=t(30),d=t(34),i=t(35),m=t(13),g=function(n,e){var t,r;for(t in e)r=e[t],"object"==typeof n[t]&&null!==n[t]?n[t]=g({},r):n[t]=r;return n},l=function(){function n(){this.getTypeClass=a(this.getTypeClass,this)}return n.elements={Chaos:{classObject:m},Circles:{classObject:o},Boxes:{classObject:e},Lines:{classObject:u},Camera:{classObject:r},Global:{classObject:s},Box:{classObject:d},Circle:{classObject:i}},n.prototype.getTypeClass=function(e){return n.elements[e].classObject},n.getTypeProperties=function(e){var t,r,a,i,o,l,s;if(r=n.elements[e],r&&(t=r.classObject)){l=[],s=r.classObject.properties;for(a in s)o=s[a],i=g({},o),i.keys=[],l.push(i);return console.log(l),l}},n.prototype.create=function(e,t,r){var a;return a=n.elements[e],a?new a.classObject(t):(console.warn("Can't create item: "+e),!1)},n}(),window.ElementFactory=l}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r;r=function(n){var e,r,a;return a=t(16),r=t(10),e=function(){function n(){}return n.normalizeItem=function(n,e){var t,r,i,o,l,s,u;if(n.classObject||(n.classObject=e.getTypeClass(n.type)),s=n.classObject.properties){for(r in s){if(l=s[r],t=a.find(n.properties,function(n){return n.name===l.name}),!t){o={};for(i in l)u=l[i],o[i]=u;o.keys=[],n.properties.push(o)}t&&!t.group&&l.group&&(t.group=l.group)}return n}},n.normalizeData=function(e,t){return e=a.map(e,function(e){return n.normalizeItem(e,t)})},n}()}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r;r=function(n){var e,r,a,i;return i=t(16),a=t(2),e=t(36),r=function(){function n(e,t,r){var i,o,l,s,u,m,d,g,c,h;this.values=null!=e?e:{},null==t&&(t=0),null==r&&(r=0),c=n.properties;for(u in c)g=c[u],null==this.values[u]&&(this.values[u]=g.val);if(this.container=new a.Object3D,0===r&&this.container.position.set(0,0,100),this.items=[],this.speed=2*Math.random()-1,this.scale=2*Math.random()+.1,m=new a.MeshPhongMaterial({ambient:197379,color:14540253,specular:16777215,shininess:10,shading:a.FlatShading}),m.blending=a.AdditiveBlending,i=n.circleGeom,Math.random()<.7&&(i=n.ringGeom),this.el=new a.Mesh(i,m),r>0&&(this.el.position.x=60*Math.random()+10,this.el.position.y=60*Math.random()+10,this.el.position.z=60*Math.random()+10),this.el.scale.set(this.scale,this.scale,this.scale),this.container.add(this.el),5>r)for(o=s=0,h=this.values.numItems-1;h>=0?h>=s:s>=h;o=h>=0?++s:--s)d=1,Math.random()>.7&&(d=parseInt(3*Math.random,10)+1),l=new n({numItems:d},0,r+1),this.el.add(l.container),this.items.push(l)}return n.circleGeom=new a.CircleGeometry(10,30,0,2*Math.PI),n.ringGeom=new a.RingGeometry(9,11,30,1,0,2*Math.PI),n.properties={numItems:{name:"numItems",label:"num items",val:5,triggerRebuild:!0}},n.prototype.update=function(n,e,t){var r,a,i,o,l,s,u;for(null==e&&(e=!1),null==t&&(t=!1),u=window.audio.data.filters.mid.timeDomainRMS,r=this.el.scale.x,u>.2&&Math.random()<.1&&(r+=10*u),r+=.992*(this.scale-r),this.el.scale.set(r,r,r),l=this.items,s=[],i=0,o=l.length;o>i;i++)a=l[i],s.push(a.update());return s},n}()}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r,a=function(n,e){function t(){this.constructor=n}for(var r in e)i.call(e,r)&&(n[r]=e[r]);return t.prototype=e.prototype,n.prototype=new t,n.__super__=e.prototype,n},i={}.hasOwnProperty;r=function(n){var e,r,i,o,l,s,u,m,d,g;return g=t(16),d=t(2),l=t(39),i=t(37),r=t(36),m=t(7),e=t(38),u=t(43),s=t(44),o=function(n){function t(n,e){var r,a,i;this.values=null!=n?n:{},null==e&&(e=0),i=t.properties;for(r in i)a=i[r],null==this.values[r]&&(this.values[r]=a.val);t.__super__.constructor.apply(this,arguments),this.container=new d.Object3D,this.container.position.set(0,0,0),this.items=[],this.build()}return a(t,n),t.lineGeom=new d.PlaneGeometry(100,1),t.circleGeom=new d.CircleGeometry(10,30,0,2*Math.PI),t.ringGeom2=new e(10,30,0,2*Math.PI),t.triGeom=new e(10,3,0,2*Math.PI),t.squareGeom=new e(10,4,0,2*Math.PI),t.TYPE_LINE=0,t.TYPE_SQUARE=1,t.TYPE_CIRCLE=2,t.TYPE_TRI=3,t.properties={numItems:{name:"numItems",label:"num items",val:10,triggerRebuild:!0,group:"global"},seed:{name:"seed",label:"seed",val:10042,triggerRebuild:!0,group:"global"},depth:{name:"depth",label:"depth",val:20,triggerRebuild:!0,group:"global"},spread:{name:"spread",label:"spread",val:300,triggerRebuild:!0,group:"global"},spreadY:{name:"spreadY",label:"spreadY",val:300,triggerRebuild:!0,group:"global"},maxChilds:{name:"maxChilds",label:"maxChilds",val:8,triggerRebuild:!0,group:"global"},horizontalSymmetry:{name:"horizontalSymmetry",label:"horizontalSymmetry",val:1,min:0,max:1,triggerRebuild:!0,group:"global"},verticalSymmetry:{name:"verticalSymmetry",label:"verticalSymmetry",val:0,min:0,max:1,triggerRebuild:!0,group:"global"},x:{name:"x",label:"x",val:0,group:"position"},y:{name:"y",label:"y",val:0,group:"position"},z:{name:"z",label:"z",val:0,group:"position"},rotationX:{name:"rotationX",label:"x",val:0,min:-2,max:2,group:"rotation",triggerRebuild:!0},rotationY:{name:"rotationY",label:"y",val:0,min:-2,max:2,group:"rotation",triggerRebuild:!0},rotationZ:{name:"rotationZ",label:"z",val:0,min:-2,max:2,group:"rotation",triggerRebuild:!0},rotationRandX:{name:"rotationRandX",label:"rand x",val:0,min:0,max:1,group:"rotation",triggerRebuild:!0},rotationRandY:{name:"rotationRandY",label:"rand y",val:0,min:0,max:1,group:"rotation",triggerRebuild:!0},rotationRandZ:{name:"rotationRandZ",label:"rand z",val:1,min:0,max:1,group:"rotation",triggerRebuild:!0},circles:{name:"circles",label:"circles",val:0,triggerRebuild:!0,group:"geometry"},squares:{name:"squares",label:"squares",val:0,triggerRebuild:!0,group:"geometry"},tri:{name:"tri",label:"tri",val:0,triggerRebuild:!0,group:"geometry"},lineWidth:{name:"lineWidth",label:"line width",val:1,triggerRebuild:!0,group:"line"},lineWidthRand:{name:"lineWidthRand",label:"line width randomness",val:0,triggerRebuild:!0,group:"line"},lineHeight:{name:"lineHeight",label:"line height",val:1,triggerRebuild:!0,group:"line"},lineHeightRand:{name:"lineHeightRand",label:"line height randomness",val:0,triggerRebuild:!0,group:"line"},materialRed:{name:"materialRed",label:"percent red",val:0,min:0,max:1,triggerRebuild:!0,group:"material"},materialBlue:{name:"materialBlue",label:"percent blue",val:0,min:0,max:1,triggerRebuild:!0,group:"material"},materialAnimated:{name:"materialAnimated",label:"percent animated",val:0,triggerRebuild:!0,group:"material"}},t.prototype.getDefaultProperties=function(){return t.properties},t.prototype.rebuild=function(n){return this.empty(),this.build(n)},t.prototype.empty=function(){var n,e,t,r;if(this.items&&this.items.length){for(r=this.items,e=0,t=r.length;t>e;e++)n=r[e],this.container.remove(n);return this.items=[]}},t.prototype.getItemType=function(n){var e;return e=n.random(0,1e3)/1e3,e<this.values.circles?t.TYPE_CIRCLE:e<this.values.circles+this.values.squares?t.TYPE_SQUARE:e<this.values.circles+this.values.squares+this.values.tri?t.TYPE_TRI:t.TYPE_LINE},t.prototype.getItemColor=function(n){var e;return e=n.random(0,1e3)/1e3,e<this.values.materialBlue?m.COLOR_BLUE:e<this.values.materialBlue+this.values.materialRed?m.COLOR_RED:m.COLOR_WHITE},t.prototype.build=function(n){var e,r,a,i,o,s,u,m,g,c,h,p,v,y,b,f,R,x,E,w,S,_,C,k,T,M,z,P,H,A,I,D,O,F,L,Y,N,W,G,j,X,B,U,q,V,Z,Q,K,$;for(null==n&&(n=0),N=new l(this.values.seed+"x"),W=new l(this.values.seed+"y"),M=new l(this.values.seed+"rotationX"),z=new l(this.values.seed+"rotationY"),P=new l(this.values.seed+"rotationZ"),H=new l(this.values.seed+"scale"),A=new l(this.values.seed+"scaleLine"),D=new l(this.values.seed+"scaleSquare"),I=new l(this.values.seed+"scaleLineHeight"),C=new l(this.values.seed+"childs"),T=new l(this.values.seed+"horizontalSymmetry"),Y=new l(this.values.seed+"verticalSymmetry"),F=new l(this.values.seed+"spacing"),L=new l(this.values.seed+"type"),k=new l(this.values.seed+"color"),O=new l(this.values.seed+"shaderAnim"),V=this.values.spread,K=V/2,Z=this.values.spreadY,Q=Z/2,S=[],o=c=0,E=this.values.numItems;E>=0?E>c:c>E;o=E>=0?++c:--c){if(e=!1,O.random(100)/100<this.values.materialAnimated&&(e=!0),v=1,U=H.random(0,100)/100+.2,f=.01*N.random(100*V)-K,R=.01*W.random(100*Z)-Q,x=new d.Vector3(f,R,o*-this.values.depth),j=M.random(0,1e3)/1e3*Math.PI*this.values.rotationRandX+this.values.rotationX*Math.PI,X=z.random(0,1e3)/1e3*Math.PI*this.values.rotationRandY+this.values.rotationY*Math.PI,B=P.random(0,1e3)/1e3*Math.PI*this.values.rotationRandZ+this.values.rotationZ*Math.PI,G=new d.Vector3(j,X,B),U=new d.Vector3(U,U,U),a=new d.Geometry,i=!1,$=!1,v=parseInt(C.random(0,this.values.maxChilds),10),g=this.getItemType(L),u=this.getItemColor(k),r=t.lineGeom,p=window.shaders.getMaterialLine(e,u),this.values.horizontalSymmetry&&T.random(0,100)/100<=this.values.horizontalSymmetry&&(i=!0),this.values.verticalSymmetry&&Y.random(0,100)/100<=this.values.verticalSymmetry&&($=!0),g===t.TYPE_LINE&&(U.y=U.y*this.values.lineWidth*(A.random(1,100)/100)*(this.values.lineWidthRand+1),U.y=Math.max(.5,U.y),U.x=U.x*this.values.lineHeight*(I.random(1,100)/100)*(this.values.lineHeightRand+1),U.x=Math.max(.01,U.x)),g===t.TYPE_CIRCLE&&(r=t.ringGeom2),g===t.TYPE_TRI?r=t.triGeom:g===t.TYPE_SQUARE&&(r=t.squareGeom,_=.5+D.random(0,100)/100,U.multiplyScalar(_)),this.addItem(a,r,p,o,U,x,G,i,$),v>1)for(q=30+.4*F.random(0,100),y=x.clone().normalize().multiplyScalar(q),y.z=0,s=h=0,w=v-1;w>=0?w>=h:h>=w;s=w>=0?++h:--h)b=x.clone().add(y.multiplyScalar(s+1)),this.addItem(a,r,p,o,U,b,G,i,$);m=new d.Mesh(a,p),m.matrixAutoUpdate=!1,this.container.add(m),S.push(this.items.push(m))}return S},t.prototype.addItem=function(n,e,t,r,a,i,o,l,s){var u,m,g,c;return c=new d.Quaternion,c.setFromAxisAngle(new d.Vector3(o.x,o.y,o.z),Math.PI/2),u=new d.Object3D,u.position.x=i.x,u.position.y=i.y,u.position.z=i.z,u.rotation.setFromQuaternion(c),u.scale.copy(a),u.updateMatrix(),n.merge(e,u.matrix),l&&(g=new d.Object3D,m=new d.Object3D,m.position.x=i.x,m.position.y=i.y,m.position.z=i.z,m.rotation.setFromQuaternion(c),m.scale.copy(a),g.add(m),g.scale.x=-1,g.updateMatrix(),m.updateMatrix(),n.merge(e,g.matrix.multiply(m.matrix)),s&&(g=new d.Object3D,m=new d.Object3D,m.position.x=i.x,m.position.y=i.y,m.position.z=i.z,m.rotation.setFromQuaternion(c),m.scale.copy(a),g.add(m),g.scale.x=-1,g.scale.y=-1,g.updateMatrix(),m.updateMatrix(),n.merge(e,g.matrix.multiply(m.matrix)))),s&&(g=new d.Object3D,this.container.add(g),m=new d.Object3D,m.position.x=i.x,m.position.y=i.y,m.position.z=i.z,m.rotation.setFromQuaternion(c),m.scale.copy(a),g.add(m),g.scale.y=-1,g.updateMatrix(),m.updateMatrix(),n.merge(e,g.matrix.multiply(m.matrix))),n},t.prototype.getMaterial=function(n){var e,t;return t={time:{type:"f",value:0},seed:{type:"f",value:1e3*Math.random()},strength:{type:"f",value:.2},color:{type:"c",value:new d.Color(n)},fogColor:{type:"c",value:new d.Color(1118481)},fogDensity:{type:"f",.2045:.2045}},e=new d.ShaderMaterial({vertexShader:u,fragmentShader:s,side:d.DoubleSide,uniforms:t,transparent:!0,depthWrite:!1,depthTest:!1,fog:!0}),e.blending=d.AdditiveBlending,e},t.prototype.update=function(n,e,r){var a,i,o,l,s;null==e&&(e=!1),null==r&&(r=!1),e===!1&&(e=this.values),i=!1,l=t.properties;for(a in l)o=l[a],o.triggerRebuild&&this.valueChanged(a,e)&&(i=!0);s=window.audio.data.filters.mid.timeDomainRMS,(r||this.valueChanged("x",e)||this.valueChanged("y",e)||this.valueChanged("z",e))&&this.container.position.set(e.x,e.y,e.z),this.values=g.merge(this.values,e),i===!0&&this.rebuild(n)},t.prototype.destroy=function(){var n,e,t,r;for(r=this.container.children,e=0,t=r.length;t>e;e++)n=r[e],this.container.remove(n);return this.container=null},t}(i)}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},,function(n,e,t){n.exports='{\n  "settings": {\n    "time": 231826.4140000241,\n    "duration": 240,\n    "domain": [\n      34285,\n      239999\n    ]\n  },\n  "data": [\n    {\n      "id": "gloabl",\n      "type": "Global",\n      "label": "Global",\n      "start": 0,\n      "end": 240,\n      "collapsed": false,\n      "properties": [\n        {\n          "name": "bassSensibility",\n          "label": "bassSensibility",\n          "val": 5,\n          "keys": [\n            {\n              "time": 130.80899999999997,\n              "val": 130,\n              "ease": "Quad.easeOut"\n            },\n            {\n              "time": 138.7439999999998,\n              "val": 100,\n              "ease": "Quad.easeOut"\n            },\n            {\n              "time": 144.14699999999996,\n              "val": 80,\n              "ease": "Quad.easeOut"\n            },\n            {\n              "time": 177.71099999999998,\n              "val": 120,\n              "ease": "Quad.easeOut"\n            }\n          ]\n        },\n        {\n          "name": "midSensibility",\n          "label": "midSensibility",\n          "val": 100,\n          "keys": []\n        },\n        {\n          "name": "highSensibility",\n          "label": "highSensibility",\n          "val": 120,\n          "keys": []\n        },\n        {\n          "name": "autoAnimate",\n          "label": "autoAnimate",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "keys": [\n            {\n              "time": 1.64,\n              "val": 0.05,\n              "ease": "Quad.easeOut"\n            },\n            {\n              "time": 1.858,\n              "val": 0\n            },\n            {\n              "time": 216.852,\n              "val": 0\n            },\n            {\n              "time": 236.5629999999993,\n              "val": 0.2,\n              "ease": "Quad.easeOut"\n            },\n            {\n              "time": 240,\n              "val": 1,\n              "ease": "Quad.easeOut"\n            }\n          ]\n        }\n      ],\n      "values": {\n        "bassSensibility": 120,\n        "midSensibility": 100,\n        "highSensibility": 120,\n        "autoAnimate": 0.18845102253916685\n      }\n    },\n    {\n      "id": "camera1",\n      "type": "Camera",\n      "label": "Camera 1",\n      "start": 0,\n      "end": 240,\n      "collapsed": false,\n      "properties": [\n        {\n          "keys": [\n            {\n              "time": 0,\n              "val": 700,\n              "ease": "Quart.easeInOut"\n            },\n            {\n              "time": 1.1000000000000016,\n              "val": 370,\n              "ease": "Quart.easeInOut"\n            },\n            {\n              "time": 9.538,\n              "val": -80.93835187185027,\n              "ease": "Linear.easeNone"\n            },\n            {\n              "time": 240,\n              "val": -3850,\n              "ease": "Quad.easeOut"\n            }\n          ],\n          "name": "z",\n          "val": 600\n        },\n        {\n          "keys": [],\n          "name": "target_y",\n          "val": 0\n        },\n        {\n          "name": "fov",\n          "label": "fov",\n          "val": 45,\n          "keys": []\n        },\n        {\n          "name": "x",\n          "label": "x",\n          "val": 0,\n          "keys": []\n        },\n        {\n          "name": "y",\n          "label": "y",\n          "val": 0,\n          "keys": []\n        },\n        {\n          "name": "target_x",\n          "label": "target x",\n          "val": 0,\n          "keys": []\n        },\n        {\n          "name": "target_z",\n          "label": "target z",\n          "val": -10000,\n          "keys": []\n        }\n      ],\n      "values": {\n        "x": 0,\n        "y": 0,\n        "z": -3845.259110193444,\n        "target_x": 0,\n        "target_y": 0,\n        "target_z": -10000,\n        "fov": 45\n      },\n      "isDirtyObject": false\n    },\n    {\n      "isDirty": true,\n      "id": "item2",\n      "label": "Chaos 2",\n      "type": "Chaos",\n      "start": 12.588,\n      "end": 55.836,\n      "collapsed": false,\n      "properties": [\n        {\n          "name": "numItems",\n          "label": "num items",\n          "val": 57,\n          "triggerRebuild": true,\n          "keys": [],\n          "group": "global"\n        },\n        {\n          "name": "seed",\n          "label": "seed",\n          "val": 85,\n          "triggerRebuild": true,\n          "keys": [],\n          "group": "global"\n        },\n        {\n          "name": "depth",\n          "label": "depth",\n          "val": 4.6,\n          "triggerRebuild": true,\n          "keys": [],\n          "group": "global"\n        },\n        {\n          "name": "spread",\n          "label": "spread",\n          "val": 302.7,\n          "triggerRebuild": true,\n          "keys": [],\n          "group": "global"\n        },\n        {\n          "name": "maxChilds",\n          "label": "maxChilds",\n          "val": 2,\n          "triggerRebuild": true,\n          "keys": [],\n          "group": "global"\n        },\n        {\n          "name": "x",\n          "label": "x",\n          "val": 0,\n          "keys": [],\n          "group": "position"\n        },\n        {\n          "name": "y",\n          "label": "y",\n          "val": 0,\n          "keys": [],\n          "group": "position"\n        },\n        {\n          "name": "z",\n          "label": "z",\n          "val": -908,\n          "keys": [],\n          "group": "position"\n        },\n        {\n          "name": "spreadY",\n          "label": "spreadY",\n          "val": 177.5,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "rotationX",\n          "label": "x",\n          "val": 0,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationY",\n          "label": "y",\n          "val": 0,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationZ",\n          "label": "z",\n          "val": 0.199,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandX",\n          "label": "rand x",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandY",\n          "label": "rand y",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandZ",\n          "label": "rand z",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "circles",\n          "label": "circles",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "materialAnimated",\n          "label": "percent animated",\n          "val": 0.31,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "squares",\n          "label": "squares",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "lineWidth",\n          "label": "line width",\n          "val": 0.7,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineWidthRand",\n          "label": "line width randomness",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeight",\n          "label": "line height",\n          "val": 0.642,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeightRand",\n          "label": "line height randomness",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "horizontalSymmetry",\n          "label": "horizontalSymmetry",\n          "val": 1,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "verticalSymmetry",\n          "label": "verticalSymmetry",\n          "val": 0.04,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "materialRed",\n          "label": "percent red",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialBlue",\n          "label": "percent blue",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "tri",\n          "label": "tri",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        }\n      ],\n      "values": {\n        "numItems": 57,\n        "seed": 85,\n        "depth": 4.6,\n        "spread": 302.7,\n        "maxChilds": 2,\n        "x": 0,\n        "y": 0,\n        "z": -908,\n        "spreadY": 177.5,\n        "rotationX": 0,\n        "rotationY": 0,\n        "rotationZ": 0.199,\n        "rotationRandX": 0,\n        "rotationRandY": 0,\n        "rotationRandZ": 0,\n        "circles": 0,\n        "materialAnimated": 0.31,\n        "squares": 0,\n        "lineWidth": 0.7,\n        "lineWidthRand": 0,\n        "lineHeight": 0.642,\n        "lineHeightRand": 1,\n        "horizontalSymmetry": 1,\n        "verticalSymmetry": 0.04,\n        "materialRed": 0,\n        "materialBlue": 0,\n        "tri": 0\n      },\n      "isDirtyObject": false\n    },\n    {\n      "isDirty": true,\n      "id": "item3",\n      "label": "Chaos 3",\n      "type": "Chaos",\n      "start": -0.035,\n      "end": 37.43900000000004,\n      "collapsed": false,\n      "properties": [\n        {\n          "name": "numItems",\n          "label": "num items",\n          "val": 4,\n          "triggerRebuild": true,\n          "keys": [],\n          "group": "global"\n        },\n        {\n          "name": "seed",\n          "label": "seed",\n          "val": 93042,\n          "triggerRebuild": true,\n          "keys": [],\n          "group": "global"\n        },\n        {\n          "name": "depth",\n          "label": "depth",\n          "val": 22,\n          "triggerRebuild": true,\n          "keys": [],\n          "group": "global"\n        },\n        {\n          "name": "spread",\n          "label": "spread",\n          "val": 210,\n          "triggerRebuild": true,\n          "keys": [],\n          "group": "global"\n        },\n        {\n          "name": "maxChilds",\n          "label": "maxChilds",\n          "val": 5,\n          "triggerRebuild": true,\n          "keys": [],\n          "group": "global"\n        },\n        {\n          "name": "x",\n          "label": "x",\n          "val": 10.1,\n          "keys": [],\n          "group": "position"\n        },\n        {\n          "name": "y",\n          "label": "y",\n          "val": -105,\n          "keys": [],\n          "group": "position"\n        },\n        {\n          "name": "z",\n          "label": "z",\n          "val": -80,\n          "keys": [],\n          "group": "position"\n        },\n        {\n          "name": "spreadY",\n          "label": "spreadY",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "rotationX",\n          "label": "x",\n          "val": 0,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationY",\n          "label": "y",\n          "val": 0,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationZ",\n          "label": "z",\n          "val": 0.201,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandX",\n          "label": "rand x",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandY",\n          "label": "rand y",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandZ",\n          "label": "rand z",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "circles",\n          "label": "circles",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "materialAnimated",\n          "label": "percent animated",\n          "val": 0.5,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "squares",\n          "label": "squares",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "lineWidth",\n          "label": "line width",\n          "val": -13.9,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineWidthRand",\n          "label": "line width randomness",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeight",\n          "label": "line height",\n          "val": 305.3,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeightRand",\n          "label": "line height randomness",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "horizontalSymmetry",\n          "label": "horizontalSymmetry",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "verticalSymmetry",\n          "label": "verticalSymmetry",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "materialRed",\n          "label": "percent red",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialBlue",\n          "label": "percent blue",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "tri",\n          "label": "tri",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        }\n      ],\n      "values": {\n        "numItems": 4,\n        "seed": 93042,\n        "depth": 22,\n        "spread": 210,\n        "maxChilds": 5,\n        "x": 10.1,\n        "y": -105,\n        "z": -80,\n        "spreadY": 0,\n        "rotationX": 0,\n        "rotationY": 0,\n        "rotationZ": 0.201,\n        "rotationRandX": 0,\n        "rotationRandY": 0,\n        "rotationRandZ": 0,\n        "circles": 0,\n        "materialAnimated": 0.5,\n        "squares": 0,\n        "lineWidth": -13.9,\n        "lineWidthRand": 0,\n        "lineHeight": 305.3,\n        "lineHeightRand": 0,\n        "horizontalSymmetry": 0,\n        "verticalSymmetry": 0,\n        "materialRed": 0,\n        "materialBlue": 0,\n        "tri": 0\n      },\n      "isDirtyObject": false\n    },\n    {\n      "isDirty": true,\n      "id": "item4",\n      "label": "Chaos 4",\n      "type": "Chaos",\n      "start": 0.983,\n      "end": 32.432,\n      "collapsed": false,\n      "properties": [\n        {\n          "name": "numItems",\n          "label": "num items",\n          "val": 29,\n          "triggerRebuild": true,\n          "keys": [],\n          "group": "global"\n        },\n        {\n          "name": "seed",\n          "label": "seed",\n          "val": 98042,\n          "triggerRebuild": true,\n          "keys": [],\n          "group": "global"\n        },\n        {\n          "name": "depth",\n          "label": "depth",\n          "val": 12,\n          "triggerRebuild": true,\n          "keys": [],\n          "group": "global"\n        },\n        {\n          "name": "spread",\n          "label": "spread",\n          "val": 450,\n          "triggerRebuild": true,\n          "keys": [],\n          "group": "global"\n        },\n        {\n          "name": "maxChilds",\n          "label": "maxChilds",\n          "val": 3,\n          "triggerRebuild": true,\n          "keys": [],\n          "group": "global"\n        },\n        {\n          "name": "x",\n          "label": "x",\n          "val": 0,\n          "keys": [],\n          "group": "position"\n        },\n        {\n          "name": "y",\n          "label": "y",\n          "val": -5,\n          "keys": [],\n          "group": "position"\n        },\n        {\n          "name": "z",\n          "label": "z",\n          "val": -390,\n          "keys": [],\n          "group": "position"\n        },\n        {\n          "name": "spreadY",\n          "label": "spreadY",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "rotationX",\n          "label": "x",\n          "val": 0,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationY",\n          "label": "y",\n          "val": 0,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationZ",\n          "label": "z",\n          "val": 0.201,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandX",\n          "label": "rand x",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandY",\n          "label": "rand y",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandZ",\n          "label": "rand z",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "circles",\n          "label": "circles",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "materialAnimated",\n          "label": "percent animated",\n          "val": 0.4,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "squares",\n          "label": "squares",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "lineWidth",\n          "label": "line width",\n          "val": 0.62,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineWidthRand",\n          "label": "line width randomness",\n          "val": 4.3,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeight",\n          "label": "line height",\n          "val": 11.148,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeightRand",\n          "label": "line height randomness",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "horizontalSymmetry",\n          "label": "horizontalSymmetry",\n          "val": 1,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "verticalSymmetry",\n          "label": "verticalSymmetry",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "materialRed",\n          "label": "percent red",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialBlue",\n          "label": "percent blue",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "tri",\n          "label": "tri",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        }\n      ],\n      "values": {\n        "numItems": 29,\n        "seed": 98042,\n        "depth": 12,\n        "spread": 450,\n        "maxChilds": 3,\n        "x": 0,\n        "y": -5,\n        "z": -390,\n        "spreadY": 0,\n        "rotationX": 0,\n        "rotationY": 0,\n        "rotationZ": 0.201,\n        "rotationRandX": 0,\n        "rotationRandY": 0,\n        "rotationRandZ": 0,\n        "circles": 0,\n        "materialAnimated": 0.4,\n        "squares": 0,\n        "lineWidth": 0.62,\n        "lineWidthRand": 4.3,\n        "lineHeight": 11.148,\n        "lineHeightRand": 0,\n        "horizontalSymmetry": 1,\n        "verticalSymmetry": 0,\n        "materialRed": 0,\n        "materialBlue": 0,\n        "tri": 0\n      },\n      "isDirtyObject": false\n    },\n    {\n      "isDirty": true,\n      "id": "item5",\n      "label": "Chaos 5",\n      "type": "Chaos",\n      "start": 17.118,\n      "end": 52.301,\n      "collapsed": false,\n      "properties": [\n        {\n          "name": "numItems",\n          "label": "num items",\n          "val": 21,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "seed",\n          "label": "seed",\n          "val": 34042,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "depth",\n          "label": "depth",\n          "val": 8,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spread",\n          "label": "spread",\n          "val": 300,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spreadY",\n          "label": "spreadY",\n          "val": 140,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "maxChilds",\n          "label": "maxChilds",\n          "val": 8,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "x",\n          "label": "x",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "y",\n          "label": "y",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "z",\n          "label": "z",\n          "val": -1054,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "rotationX",\n          "label": "x",\n          "val": 0,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationY",\n          "label": "y",\n          "val": 0,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationZ",\n          "label": "z",\n          "val": 0,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandX",\n          "label": "rand x",\n          "val": 0.7,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandY",\n          "label": "rand y",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandZ",\n          "label": "rand z",\n          "val": 0.56,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "circles",\n          "label": "circles",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "squares",\n          "label": "squares",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "lineWidth",\n          "label": "line width",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineWidthRand",\n          "label": "line width randomness",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "materialAnimated",\n          "label": "percent animated",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "lineHeight",\n          "label": "line height",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeightRand",\n          "label": "line height randomness",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "horizontalSymmetry",\n          "label": "horizontalSymmetry",\n          "val": 1,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "verticalSymmetry",\n          "label": "verticalSymmetry",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "materialRed",\n          "label": "percent red",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialBlue",\n          "label": "percent blue",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "tri",\n          "label": "tri",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        }\n      ],\n      "values": {\n        "numItems": 21,\n        "seed": 34042,\n        "depth": 8,\n        "spread": 300,\n        "spreadY": 140,\n        "maxChilds": 8,\n        "x": 0,\n        "y": 0,\n        "z": -1054,\n        "rotationX": 0,\n        "rotationY": 0,\n        "rotationZ": 0,\n        "rotationRandX": 0.7,\n        "rotationRandY": 0,\n        "rotationRandZ": 0.56,\n        "circles": 0,\n        "squares": 0,\n        "lineWidth": 1,\n        "lineWidthRand": 0,\n        "materialAnimated": 1,\n        "lineHeight": 1,\n        "lineHeightRand": 0,\n        "horizontalSymmetry": 1,\n        "verticalSymmetry": 0,\n        "materialRed": 0,\n        "materialBlue": 0,\n        "tri": 0\n      },\n      "isDirtyObject": false\n    },\n    {\n      "isDirty": true,\n      "id": "item6",\n      "label": "Chaos 6",\n      "type": "Chaos",\n      "start": 26.024,\n      "end": 87.155,\n      "collapsed": false,\n      "properties": [\n        {\n          "name": "numItems",\n          "label": "num items",\n          "val": 80,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "seed",\n          "label": "seed",\n          "val": 9142,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "depth",\n          "label": "depth",\n          "val": 3.5,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spread",\n          "label": "spread",\n          "val": -140,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spreadY",\n          "label": "spreadY",\n          "val": 60,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "maxChilds",\n          "label": "maxChilds",\n          "val": 4,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "x",\n          "label": "x",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "y",\n          "label": "y",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "z",\n          "label": "z",\n          "val": -1800,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "rotationX",\n          "label": "x",\n          "val": 0,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationY",\n          "label": "y",\n          "val": 0.3,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationZ",\n          "label": "z",\n          "val": 0,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandX",\n          "label": "rand x",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandY",\n          "label": "rand y",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandZ",\n          "label": "rand z",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "circles",\n          "label": "circles",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "squares",\n          "label": "squares",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "lineWidth",\n          "label": "line width",\n          "val": 0.9,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineWidthRand",\n          "label": "line width randomness",\n          "val": 2.5,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "materialAnimated",\n          "label": "percent animated",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "lineHeight",\n          "label": "line height",\n          "val": 0.41,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeightRand",\n          "label": "line height randomness",\n          "val": 4.1,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "horizontalSymmetry",\n          "label": "horizontalSymmetry",\n          "val": 1,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "verticalSymmetry",\n          "label": "verticalSymmetry",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "materialRed",\n          "label": "percent red",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialBlue",\n          "label": "percent blue",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "tri",\n          "label": "tri",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        }\n      ],\n      "values": {\n        "numItems": 80,\n        "seed": 9142,\n        "depth": 3.5,\n        "spread": -140,\n        "spreadY": 60,\n        "maxChilds": 4,\n        "x": 0,\n        "y": 0,\n        "z": -1800,\n        "rotationX": 0,\n        "rotationY": 0.3,\n        "rotationZ": 0,\n        "rotationRandX": 0,\n        "rotationRandY": 0,\n        "rotationRandZ": 0,\n        "circles": 0,\n        "squares": 0,\n        "lineWidth": 0.9,\n        "lineWidthRand": 2.5,\n        "materialAnimated": 1,\n        "lineHeight": 0.41,\n        "lineHeightRand": 4.1,\n        "horizontalSymmetry": 1,\n        "verticalSymmetry": 0,\n        "materialRed": 0,\n        "materialBlue": 0,\n        "tri": 0\n      },\n      "isDirtyObject": false\n    },\n    {\n      "isDirty": true,\n      "id": "item7",\n      "label": "Chaos 7",\n      "type": "Chaos",\n      "start": 20.035,\n      "end": 72.32999999999998,\n      "collapsed": false,\n      "properties": [\n        {\n          "name": "numItems",\n          "label": "num items",\n          "val": 78,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "seed",\n          "label": "seed",\n          "val": 9642,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "depth",\n          "label": "depth",\n          "val": 10,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spread",\n          "label": "spread",\n          "val": 170,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spreadY",\n          "label": "spreadY",\n          "val": 158.4,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "maxChilds",\n          "label": "maxChilds",\n          "val": 8,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "x",\n          "label": "x",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "y",\n          "label": "y",\n          "val": -17,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "z",\n          "label": "z",\n          "val": -1150,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "rotationX",\n          "label": "x",\n          "val": 0,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationY",\n          "label": "y",\n          "val": 0.1,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationZ",\n          "label": "z",\n          "val": 1.4,\n          "min": 0,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandX",\n          "label": "rand x",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandY",\n          "label": "rand y",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandZ",\n          "label": "rand z",\n          "val": 0.56,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "circles",\n          "label": "circles",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "squares",\n          "label": "squares",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "lineWidth",\n          "label": "line width",\n          "val": 0.4,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineWidthRand",\n          "label": "line width randomness",\n          "val": 3,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "materialAnimated",\n          "label": "percent animated",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "lineHeight",\n          "label": "line height",\n          "val": 0.2,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeightRand",\n          "label": "line height randomness",\n          "val": 3,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "horizontalSymmetry",\n          "label": "horizontalSymmetry",\n          "val": 1,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "verticalSymmetry",\n          "label": "verticalSymmetry",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "materialRed",\n          "label": "percent red",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialBlue",\n          "label": "percent blue",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "tri",\n          "label": "tri",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        }\n      ],\n      "values": {\n        "numItems": 78,\n        "seed": 9642,\n        "depth": 10,\n        "spread": 170,\n        "spreadY": 158.4,\n        "maxChilds": 8,\n        "x": 0,\n        "y": -17,\n        "z": -1150,\n        "rotationX": 0,\n        "rotationY": 0.1,\n        "rotationZ": 1.4,\n        "rotationRandX": 0,\n        "rotationRandY": 0,\n        "rotationRandZ": 0.56,\n        "circles": 0,\n        "squares": 0,\n        "lineWidth": 0.4,\n        "lineWidthRand": 3,\n        "materialAnimated": 1,\n        "lineHeight": 0.2,\n        "lineHeightRand": 3,\n        "horizontalSymmetry": 1,\n        "verticalSymmetry": 0,\n        "materialRed": 0,\n        "materialBlue": 0,\n        "tri": 0\n      },\n      "isDirtyObject": false\n    },\n    {\n      "isDirty": true,\n      "id": "item8",\n      "label": "Chaos 8",\n      "type": "Chaos",\n      "start": 60.202,\n      "end": 107.71,\n      "collapsed": false,\n      "properties": [\n        {\n          "name": "numItems",\n          "label": "num items",\n          "val": 64,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "seed",\n          "label": "seed",\n          "val": 3842,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "depth",\n          "label": "depth",\n          "val": 12,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spread",\n          "label": "spread",\n          "val": -291,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spreadY",\n          "label": "spreadY",\n          "val": 167,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "maxChilds",\n          "label": "maxChilds",\n          "val": 12,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "x",\n          "label": "x",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "y",\n          "label": "y",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "z",\n          "label": "z",\n          "val": -2100,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "rotationX",\n          "label": "x",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationY",\n          "label": "y",\n          "val": -0.3,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationZ",\n          "label": "z",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandX",\n          "label": "rand x",\n          "val": 0.05,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandY",\n          "label": "rand y",\n          "val": 0.04,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandZ",\n          "label": "rand z",\n          "val": 0.05,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "circles",\n          "label": "circles",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "squares",\n          "label": "squares",\n          "val": 0.4,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "lineWidth",\n          "label": "line width",\n          "val": 0.5,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineWidthRand",\n          "label": "line width randomness",\n          "val": 2.3,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeight",\n          "label": "line height",\n          "val": 3.3,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeightRand",\n          "label": "line height randomness",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "materialAnimated",\n          "label": "percent animated",\n          "val": 0.8,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "horizontalSymmetry",\n          "label": "horizontalSymmetry",\n          "val": 1,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "verticalSymmetry",\n          "label": "verticalSymmetry",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "materialRed",\n          "label": "percent red",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialBlue",\n          "label": "percent blue",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "tri",\n          "label": "tri",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        }\n      ],\n      "values": {\n        "numItems": 64,\n        "seed": 3842,\n        "depth": 12,\n        "spread": -291,\n        "spreadY": 167,\n        "maxChilds": 12,\n        "x": 0,\n        "y": 0,\n        "z": -2100,\n        "rotationX": 0,\n        "rotationY": -0.3,\n        "rotationZ": 0,\n        "rotationRandX": 0.05,\n        "rotationRandY": 0.04,\n        "rotationRandZ": 0.05,\n        "circles": 0,\n        "squares": 0.4,\n        "lineWidth": 0.5,\n        "lineWidthRand": 2.3,\n        "lineHeight": 3.3,\n        "lineHeightRand": 0,\n        "materialAnimated": 0.8,\n        "horizontalSymmetry": 1,\n        "verticalSymmetry": 0,\n        "materialRed": 0,\n        "materialBlue": 0,\n        "tri": 0\n      },\n      "isDirtyObject": false\n    },\n    {\n      "isDirty": true,\n      "id": "item9",\n      "label": "Chaos 9",\n      "type": "Chaos",\n      "start": 73.495,\n      "end": 130.643,\n      "collapsed": false,\n      "properties": [\n        {\n          "name": "numItems",\n          "label": "num items",\n          "val": 50,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "seed",\n          "label": "seed",\n          "val": 32042,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "depth",\n          "label": "depth",\n          "val": 6.7,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spread",\n          "label": "spread",\n          "val": 235,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spreadY",\n          "label": "spreadY",\n          "val": 96,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "maxChilds",\n          "label": "maxChilds",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "x",\n          "label": "x",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "y",\n          "label": "y",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "z",\n          "label": "z",\n          "val": -2600,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "rotationX",\n          "label": "x",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationY",\n          "label": "y",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationZ",\n          "label": "z",\n          "val": -0.2,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandX",\n          "label": "rand x",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandY",\n          "label": "rand y",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandZ",\n          "label": "rand z",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "circles",\n          "label": "circles",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "squares",\n          "label": "squares",\n          "val": 0.6,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "lineWidth",\n          "label": "line width",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineWidthRand",\n          "label": "line width randomness",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeight",\n          "label": "line height",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeightRand",\n          "label": "line height randomness",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "materialAnimated",\n          "label": "percent animated",\n          "val": 0.96,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "horizontalSymmetry",\n          "label": "horizontalSymmetry",\n          "val": 1,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "verticalSymmetry",\n          "label": "verticalSymmetry",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "materialRed",\n          "label": "percent red",\n          "val": 0.1,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialBlue",\n          "label": "percent blue",\n          "val": 0.53,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "tri",\n          "label": "tri",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        }\n      ],\n      "values": {\n        "numItems": 50,\n        "seed": 32042,\n        "depth": 6.7,\n        "spread": 235,\n        "spreadY": 96,\n        "maxChilds": 0,\n        "x": 0,\n        "y": 0,\n        "z": -2600,\n        "rotationX": 0,\n        "rotationY": 0,\n        "rotationZ": -0.2,\n        "rotationRandX": 0,\n        "rotationRandY": 0,\n        "rotationRandZ": 0,\n        "circles": 0,\n        "squares": 0.6,\n        "lineWidth": 1,\n        "lineWidthRand": 0,\n        "lineHeight": 1,\n        "lineHeightRand": 0,\n        "materialAnimated": 0.96,\n        "horizontalSymmetry": 1,\n        "verticalSymmetry": 0,\n        "materialRed": 0.1,\n        "materialBlue": 0.53,\n        "tri": 0\n      },\n      "isDirtyObject": false\n    },\n    {\n      "isDirty": true,\n      "id": "item10",\n      "label": "Chaos 10",\n      "type": "Chaos",\n      "start": 102.377,\n      "end": 141.892,\n      "collapsed": false,\n      "properties": [\n        {\n          "name": "numItems",\n          "label": "num items",\n          "val": 75,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "seed",\n          "label": "seed",\n          "val": 15042,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "depth",\n          "label": "depth",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spread",\n          "label": "spread",\n          "val": 260,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spreadY",\n          "label": "spreadY",\n          "val": 100,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "maxChilds",\n          "label": "maxChilds",\n          "val": 8.1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "x",\n          "label": "x",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "y",\n          "label": "y",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "z",\n          "label": "z",\n          "val": -3000,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "rotationX",\n          "label": "x",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationY",\n          "label": "y",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationZ",\n          "label": "z",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandX",\n          "label": "rand x",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandY",\n          "label": "rand y",\n          "val": 0.8,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandZ",\n          "label": "rand z",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "circles",\n          "label": "circles",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "squares",\n          "label": "squares",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "lineWidth",\n          "label": "line width",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineWidthRand",\n          "label": "line width randomness",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeight",\n          "label": "line height",\n          "val": 0.1,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeightRand",\n          "label": "line height randomness",\n          "val": 3.5,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "materialAnimated",\n          "label": "percent animated",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "horizontalSymmetry",\n          "label": "horizontalSymmetry",\n          "val": 1,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "verticalSymmetry",\n          "label": "verticalSymmetry",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "materialRed",\n          "label": "percent red",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialBlue",\n          "label": "percent blue",\n          "val": 0.2,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "tri",\n          "label": "tri",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        }\n      ],\n      "values": {\n        "numItems": 75,\n        "seed": 15042,\n        "depth": 1,\n        "spread": 260,\n        "spreadY": 100,\n        "maxChilds": 8.1,\n        "x": 0,\n        "y": 0,\n        "z": -3000,\n        "rotationX": 0,\n        "rotationY": 0,\n        "rotationZ": 0,\n        "rotationRandX": 0,\n        "rotationRandY": 0.8,\n        "rotationRandZ": 0,\n        "circles": 0,\n        "squares": 0,\n        "lineWidth": 0,\n        "lineWidthRand": 1,\n        "lineHeight": 0.1,\n        "lineHeightRand": 3.5,\n        "materialAnimated": 1,\n        "horizontalSymmetry": 1,\n        "verticalSymmetry": 0,\n        "materialRed": 0,\n        "materialBlue": 0.2,\n        "tri": 0\n      },\n      "isDirtyObject": false\n    },\n    {\n      "isDirty": true,\n      "id": "item11",\n      "label": "Chaos 11",\n      "type": "Chaos",\n      "start": 112.889,\n      "end": 152.972,\n      "collapsed": false,\n      "properties": [\n        {\n          "name": "numItems",\n          "label": "num items",\n          "val": 64,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "seed",\n          "label": "seed",\n          "val": 44402,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "depth",\n          "label": "depth",\n          "val": 12,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spread",\n          "label": "spread",\n          "val": 300,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spreadY",\n          "label": "spreadY",\n          "val": 300,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "maxChilds",\n          "label": "maxChilds",\n          "val": 3,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "x",\n          "label": "x",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "y",\n          "label": "y",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "z",\n          "label": "z",\n          "val": -3000,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "rotationX",\n          "label": "x",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationY",\n          "label": "y",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationZ",\n          "label": "z",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandX",\n          "label": "rand x",\n          "val": 0.225,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandY",\n          "label": "rand y",\n          "val": 0.368,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandZ",\n          "label": "rand z",\n          "val": 0.75,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "circles",\n          "label": "circles",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "squares",\n          "label": "squares",\n          "val": 0.2,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "lineWidth",\n          "label": "line width",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineWidthRand",\n          "label": "line width randomness",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeight",\n          "label": "line height",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeightRand",\n          "label": "line height randomness",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "materialAnimated",\n          "label": "percent animated",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "horizontalSymmetry",\n          "label": "horizontalSymmetry",\n          "val": 1,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "verticalSymmetry",\n          "label": "verticalSymmetry",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "materialRed",\n          "label": "percent red",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialBlue",\n          "label": "percent blue",\n          "val": 0.3,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "tri",\n          "label": "tri",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        }\n      ],\n      "values": {\n        "numItems": 64,\n        "seed": 44402,\n        "depth": 12,\n        "spread": 300,\n        "spreadY": 300,\n        "maxChilds": 3,\n        "x": 0,\n        "y": 0,\n        "z": -3000,\n        "rotationX": 0,\n        "rotationY": 0,\n        "rotationZ": 0,\n        "rotationRandX": 0.225,\n        "rotationRandY": 0.368,\n        "rotationRandZ": 0.75,\n        "circles": 0,\n        "squares": 0.2,\n        "lineWidth": 1,\n        "lineWidthRand": 0,\n        "lineHeight": 1,\n        "lineHeightRand": 0,\n        "materialAnimated": 1,\n        "horizontalSymmetry": 1,\n        "verticalSymmetry": 0,\n        "materialRed": 0,\n        "materialBlue": 0.3,\n        "tri": 0\n      },\n      "isDirtyObject": false\n    },\n    {\n      "isDirty": true,\n      "id": "item12",\n      "label": "Chaos 12",\n      "type": "Chaos",\n      "start": 120.719,\n      "end": 212.46800000000002,\n      "collapsed": false,\n      "properties": [\n        {\n          "name": "numItems",\n          "label": "num items",\n          "val": 80,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "seed",\n          "label": "seed",\n          "val": 656,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "depth",\n          "label": "depth",\n          "val": 6,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spread",\n          "label": "spread",\n          "val": 220,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spreadY",\n          "label": "spreadY",\n          "val": 108,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "maxChilds",\n          "label": "maxChilds",\n          "val": 8,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "horizontalSymmetry",\n          "label": "horizontalSymmetry",\n          "val": 0.793,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "verticalSymmetry",\n          "label": "verticalSymmetry",\n          "val": 0.3,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "x",\n          "label": "x",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "y",\n          "label": "y",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "z",\n          "label": "z",\n          "val": -3300,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "rotationX",\n          "label": "x",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationY",\n          "label": "y",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationZ",\n          "label": "z",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandX",\n          "label": "rand x",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandY",\n          "label": "rand y",\n          "val": 0.9,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandZ",\n          "label": "rand z",\n          "val": 0.2,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "circles",\n          "label": "circles",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "squares",\n          "label": "squares",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "lineWidth",\n          "label": "line width",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineWidthRand",\n          "label": "line width randomness",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeight",\n          "label": "line height",\n          "val": 0.5,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeightRand",\n          "label": "line height randomness",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "materialAnimated",\n          "label": "percent animated",\n          "val": 0.95,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialRed",\n          "label": "percent red",\n          "val": 0.2,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialBlue",\n          "label": "percent blue",\n          "val": 0.3,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "tri",\n          "label": "tri",\n          "val": 0.2,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        }\n      ],\n      "values": {\n        "numItems": 80,\n        "seed": 656,\n        "depth": 6,\n        "spread": 220,\n        "spreadY": 108,\n        "maxChilds": 8,\n        "horizontalSymmetry": 0.793,\n        "verticalSymmetry": 0.3,\n        "x": 0,\n        "y": 0,\n        "z": -3300,\n        "rotationX": 0,\n        "rotationY": 0,\n        "rotationZ": 0,\n        "rotationRandX": 0,\n        "rotationRandY": 0.9,\n        "rotationRandZ": 0.2,\n        "circles": 0,\n        "squares": 0,\n        "lineWidth": 1,\n        "lineWidthRand": 0,\n        "lineHeight": 0.5,\n        "lineHeightRand": 1,\n        "materialAnimated": 0.95,\n        "materialRed": 0.2,\n        "materialBlue": 0.3,\n        "tri": 0.2\n      },\n      "isDirtyObject": false\n    },\n    {\n      "isDirty": true,\n      "id": "item13",\n      "label": "Chaos 13",\n      "type": "Chaos",\n      "start": 151.87,\n      "end": 241.144,\n      "collapsed": false,\n      "properties": [\n        {\n          "name": "numItems",\n          "label": "num items",\n          "val": 63,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "seed",\n          "label": "seed",\n          "val": 6614,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "depth",\n          "label": "depth",\n          "val": 3.8,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spread",\n          "label": "spread",\n          "val": 121,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spreadY",\n          "label": "spreadY",\n          "val": 167,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "maxChilds",\n          "label": "maxChilds",\n          "val": 16,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "horizontalSymmetry",\n          "label": "horizontalSymmetry",\n          "val": 0.3,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "verticalSymmetry",\n          "label": "verticalSymmetry",\n          "val": 0.8,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "x",\n          "label": "x",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "y",\n          "label": "y",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "z",\n          "label": "z",\n          "val": -3900,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "rotationX",\n          "label": "x",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationY",\n          "label": "y",\n          "val": -0.1,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationZ",\n          "label": "z",\n          "val": 0.5,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandX",\n          "label": "rand x",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandY",\n          "label": "rand y",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandZ",\n          "label": "rand z",\n          "val": 0.2,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "circles",\n          "label": "circles",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "squares",\n          "label": "squares",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "lineWidth",\n          "label": "line width",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineWidthRand",\n          "label": "line width randomness",\n          "val": 1.62,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeight",\n          "label": "line height",\n          "val": 0.2,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeightRand",\n          "label": "line height randomness",\n          "val": 1.2,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "materialAnimated",\n          "label": "percent animated",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialRed",\n          "label": "percent red",\n          "val": 0.3,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialBlue",\n          "label": "percent blue",\n          "val": 0.3,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "tri",\n          "label": "tri",\n          "val": 0.1,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        }\n      ],\n      "values": {\n        "numItems": 63,\n        "seed": 6614,\n        "depth": 3.8,\n        "spread": 121,\n        "spreadY": 167,\n        "maxChilds": 16,\n        "horizontalSymmetry": 0.3,\n        "verticalSymmetry": 0.8,\n        "x": 0,\n        "y": 0,\n        "z": -3900,\n        "rotationX": 0,\n        "rotationY": -0.1,\n        "rotationZ": 0.5,\n        "rotationRandX": 0,\n        "rotationRandY": 0,\n        "rotationRandZ": 0.2,\n        "circles": 0,\n        "squares": 0,\n        "lineWidth": 0,\n        "lineWidthRand": 1.62,\n        "lineHeight": 0.2,\n        "lineHeightRand": 1.2,\n        "materialAnimated": 1,\n        "materialRed": 0.3,\n        "materialBlue": 0.3,\n        "tri": 0.1\n      },\n      "isDirtyObject": false\n    },\n    {\n      "isDirty": true,\n      "id": "item15",\n      "label": "Chaos 15",\n      "type": "Chaos",\n      "start": 0,\n      "end": 2,\n      "collapsed": false,\n      "properties": [\n        {\n          "name": "numItems",\n          "label": "num items",\n          "val": 120,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "seed",\n          "label": "seed",\n          "val": 8842,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "depth",\n          "label": "depth",\n          "val": 1.5,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spread",\n          "label": "spread",\n          "val": 260,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "spreadY",\n          "label": "spreadY",\n          "val": 150,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "maxChilds",\n          "label": "maxChilds",\n          "val": 12,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "horizontalSymmetry",\n          "label": "horizontalSymmetry",\n          "val": 0.4,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "verticalSymmetry",\n          "label": "verticalSymmetry",\n          "val": 0.2,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "global",\n          "keys": []\n        },\n        {\n          "name": "x",\n          "label": "x",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "y",\n          "label": "y",\n          "val": 0,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "z",\n          "label": "z",\n          "val": 520,\n          "group": "position",\n          "keys": []\n        },\n        {\n          "name": "rotationX",\n          "label": "x",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationY",\n          "label": "y",\n          "val": 0,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationZ",\n          "label": "z",\n          "val": 0.5,\n          "min": -2,\n          "max": 2,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandX",\n          "label": "rand x",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandY",\n          "label": "rand y",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "rotationRandZ",\n          "label": "rand z",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "group": "rotation",\n          "triggerRebuild": true,\n          "keys": []\n        },\n        {\n          "name": "circles",\n          "label": "circles",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "squares",\n          "label": "squares",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        },\n        {\n          "name": "lineWidth",\n          "label": "line width",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineWidthRand",\n          "label": "line width randomness",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeight",\n          "label": "line height",\n          "val": 0.2,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "lineHeightRand",\n          "label": "line height randomness",\n          "val": 1,\n          "triggerRebuild": true,\n          "group": "line",\n          "keys": []\n        },\n        {\n          "name": "materialRed",\n          "label": "percent red",\n          "val": 0.3,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialBlue",\n          "label": "percent blue",\n          "val": 0,\n          "min": 0,\n          "max": 1,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "materialAnimated",\n          "label": "percent animated",\n          "val": 0.9,\n          "triggerRebuild": true,\n          "group": "material",\n          "keys": []\n        },\n        {\n          "name": "tri",\n          "label": "tri",\n          "val": 0,\n          "triggerRebuild": true,\n          "group": "geometry",\n          "keys": []\n        }\n      ],\n      "values": {\n        "numItems": 120,\n        "seed": 8842,\n        "depth": 1.5,\n        "spread": 260,\n        "spreadY": 150,\n        "maxChilds": 12,\n        "horizontalSymmetry": 0.4,\n        "verticalSymmetry": 0.2,\n        "x": 0,\n        "y": 0,\n        "z": 520,\n        "rotationX": 0,\n        "rotationY": 0,\n        "rotationZ": 0.5,\n        "rotationRandX": 0,\n        "rotationRandY": 0,\n        "rotationRandZ": 0,\n        "circles": 0,\n        "squares": 0,\n        "lineWidth": 1,\n        "lineWidthRand": 0,\n        "lineHeight": 0.2,\n        "lineHeightRand": 1,\n        "materialRed": 0.3,\n        "materialBlue": 0,\n        "materialAnimated": 0.9,\n        "tri": 0\n      },\n      "isDirtyObject": false\n    }\n  ]\n}\n';
},function(n,e,t){n.exports=_},function(n,e,t){n.exports=void 0},function(n,e,t){var r,r;!function(e){n.exports=e()}(function(){return function n(e,t,a){function i(l,s){if(!t[l]){if(!e[l]){var u="function"==typeof r&&r;if(!s&&u)return r(l,!0);if(o)return o(l,!0);var m=new Error("Cannot find module '"+l+"'");throw m.code="MODULE_NOT_FOUND",m}var d=t[l]={exports:{}};e[l][0].call(d.exports,function(n){var t=e[l][1][n];return i(t?t:n)},d,d.exports,n,e,t,a)}return t[l].exports}for(var o="function"==typeof r&&r,l=0;l<a.length;l++)i(a[l]);return i}({1:[function(n,e,t){"use strict";function r(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}var a=function(){function n(e){var t=void 0===arguments[1]?{}:arguments[1];r(this,n),this.options=t,this.fftSize=t.fftSize||512,this.filters=t.filters||this.getDefaultFilters(),this.audio=this.initAudio(e),this.currentTime=0,this.playing=!1,this.context=new(window.AudioContext||window.webkitAudioContext),this.source=this.context.createMediaElementSource(this.audio),this.analyser=this.context.createAnalyser(),this.analyser.fftSize=this.fftSize,this.samples=this.analyser.frequencyBinCount,this.delay=this.context.createDelay?this.context.createDelay():this.context.createDelayNode(),this.delay.delayTime.value=2*this.fftSize/this.context.sampleRate,this.data={timeDomainData:new Uint8Array(this.samples),timeDomainRMS:0,filters:{}},this.source.connect(this.analyser),this.analyser.connect(this.delay),this.delay.connect(this.context.destination),this.filters=this.initFilters(this.filters,this.data)}return n.prototype.initAudio=function(n){var e=this,t=!1;return t="string"==typeof n?new Audio(n):n,t.addEventListener("canplay",function(){e.options.onCanPlay&&e.options.onCanPlay(e)}),t},n.prototype.update=function(){if(this.playing){var n=this;this.analyser.smoothingTimeConstant=!1,this.analyser.getByteTimeDomainData(this.data.timeDomainData),this.data.timeDomainRMS=this.rms(this.data.timeDomainData),Object.keys(this.filters).forEach(function(e){var t=n.filters[e],r=n.data.filters[e];t.analyserNode.fftSize=n.fftSize,t.analyserNode.getByteTimeDomainData(r.timeDomainData),r.timeDomainRMS+=.4*(n.rms(r.timeDomainData)-r.timeDomainRMS)})}},n.prototype.rms=function(n){for(var e=n.length,t=0,r=0;e>r;r++){var a=Math.abs(n[r]-128);t+=a*a}return Math.sqrt(t/e)},n.prototype.play=function(){this.audio&&(this.playing=!0,this.audio.play(),this.audio.currentTime=this.currentTime)},n.prototype.pause=function(){this.audio&&(this.playing=!1,this.audio.pause())},n.prototype.seek=function(n){this.currentTime=n,this.audio&&this.audio.paused===!1&&(this.audio.currentTime=this.currentTime)},n.prototype.getValue=function(n){var e=void 0;return n?void 0!==this.data.filters[n]&&(e=this.data.filters[n].timeDomainRMS):e=this.data.timeDomainRMS,e},n.prototype.initFilters=function(n,e){var t=this;return Object.keys(n).forEach(function(r){var a=n[r];a.biquadFilter=t.context.createBiquadFilter(),a.biquadFilter.type=a.type,a.biquadFilter.frequency.value=a.frequency,a.biquadFilter.Q.value=a.Q,a.analyserNode=t.context.createAnalyser(),a.analyserNode.fftSize=t.fftSize,a.gainNode=t.context.createGain?t.context.createGain():t.context.createGainNode(),a.gainNode.gain.value=a.gain,t.source.connect(a.gainNode),a.gainNode.connect(a.biquadFilter),a.biquadFilter.connect(a.analyserNode),e.filters[r]={timeDomainData:new Uint8Array(t.samples),timeDomainRMS:0}}),n},n.prototype.getDefaultFilters=function(){return{bass:{type:"lowpass",frequency:120,Q:1.2,gain:12},mid:{type:"bandpass",frequency:400,Q:1.2,gain:12},high:{type:"highpass",frequency:2e3,Q:1.2,gain:12}}},n}();e.exports=a},{}]},{},[1])(1)})},function(n,e,t){var r;r=function(n){var e,r,a;return a=t(16),r=t(2),e=function(){function n(n,e){this.values=null!=n?n:{},null==e&&(e=0),window.global=this}return n.properties={bassSensibility:{name:"bassSensibility",label:"bassSensibility x",val:120,min:0,max:200},midSensibility:{name:"midSensibility",label:"midSensibility",val:100,min:0,max:200},highSensibility:{name:"highSensibility",label:"highSensibility",val:120,min:0,max:200},autoAnimate:{name:"autoAnimate",label:"autoAnimate",val:0,min:0,max:1}},n.prototype.update=function(n,e,t){return null==e&&(e=!1),null==t&&(t=!1),e===!1&&(e=this.values),this.values=a.merge(this.values,e)},n.prototype.destroy=function(){},n}()}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){THREE.GlitchPass2=function(n){void 0===THREE.DigitalGlitch2&&console.error("THREE.GlitchPass relies on THREE.DigitalGlitch");var e=THREE.DigitalGlitch2;this.uniforms=THREE.UniformsUtils.clone(e.uniforms),void 0==n&&(n=64),this.intensity=1,this.uniforms.tDisp.value=this.generateHeightmap(n),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader}),this.enabled=!0,this.renderToScreen=!1,this.needsSwap=!0,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null),this.scene.add(this.quad),this.goWild=!1,this.curF=0,this.generateTrigger()},THREE.GlitchPass2.prototype={render:function(n,e,t,r){this.uniforms.tDiffuse.value=t,this.uniforms.seed.value=Math.random(),this.uniforms.amount.value=Math.random()/420*this.intensity,this.uniforms.angle.value=THREE.Math.randFloat(-Math.PI,Math.PI),this.uniforms.seed_x.value=THREE.Math.randFloat(-1,1),this.uniforms.seed_y.value=THREE.Math.randFloat(-1,1),this.uniforms.seed_x.value*=.001,this.uniforms.seed_y.value*=.001,this.uniforms.distortion_x.value=THREE.Math.randFloat(0,.001),this.uniforms.distortion_y.value=THREE.Math.randFloat(0,.001),this.generateTrigger(),this.uniforms.byp.value=0,this.curF++,this.quad.material=this.material,this.renderToScreen?n.render(this.scene,this.camera):n.render(this.scene,this.camera,e,!1)},generateTrigger:function(){this.randX=THREE.Math.randInt(120,240)},generateHeightmap:function(n){for(var e=new Float32Array(n*n*3),t=n*n,r=0;t>r;r++){var a=THREE.Math.randFloat(0,1);e[3*r+0]=a,e[3*r+1]=a,e[3*r+2]=a}var i=new THREE.DataTexture(e,n,n,THREE.RGBFormat,THREE.FloatType);return i.minFilter=THREE.NearestFilter,i.magFilter=THREE.NearestFilter,i.needsUpdate=!0,i.flipY=!1,i}}},function(n,e,t){THREE.EffectComposer=function(n,e){if(this.renderer=n,void 0===e){var t=window.innerWidth||1,r=window.innerHeight||1,a={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1};e=new THREE.WebGLRenderTarget(t,r,a)}this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader"),this.copyPass=new THREE.ShaderPass(THREE.CopyShader)},THREE.EffectComposer.prototype={swapBuffers:function(){var n=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=n},addPass:function(n){this.passes.push(n)},insertPass:function(n,e){this.passes.splice(e,0,n)},render:function(n){this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2;var e,t,r=!1,a=this.passes.length;for(t=0;a>t;t++)if(e=this.passes[t],e.enabled){if(e.render(this.renderer,this.writeBuffer,this.readBuffer,n,r),e.needsSwap){if(r){var i=this.renderer.context;i.stencilFunc(i.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,n),i.stencilFunc(i.EQUAL,1,4294967295)}this.swapBuffers()}e instanceof THREE.MaskPass?r=!0:e instanceof THREE.ClearMaskPass&&(r=!1)}},reset:function(n){void 0===n&&(n=this.renderTarget1.clone(),n.width=window.innerWidth,n.height=window.innerHeight),this.renderTarget1=n,this.renderTarget2=n.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(n,e){var t=this.renderTarget1.clone();t.width=n,t.height=e,this.reset(t)}}},function(n,e,t){THREE.MaskPass=function(n,e){this.scene=n,this.camera=e,this.enabled=!0,this.clear=!0,this.needsSwap=!1,this.inverse=!1},THREE.MaskPass.prototype={render:function(n,e,t,r){var a=n.context;a.colorMask(!1,!1,!1,!1),a.depthMask(!1);var i,o;this.inverse?(i=0,o=1):(i=1,o=0),a.enable(a.STENCIL_TEST),a.stencilOp(a.REPLACE,a.REPLACE,a.REPLACE),a.stencilFunc(a.ALWAYS,i,4294967295),a.clearStencil(o),n.render(this.scene,this.camera,t,this.clear),n.render(this.scene,this.camera,e,this.clear),a.colorMask(!0,!0,!0,!0),a.depthMask(!0),a.stencilFunc(a.EQUAL,1,4294967295),a.stencilOp(a.KEEP,a.KEEP,a.KEEP)}},THREE.ClearMaskPass=function(){this.enabled=!0},THREE.ClearMaskPass.prototype={render:function(n,e,t,r){var a=n.context;a.disable(a.STENCIL_TEST)}}},function(n,e,t){THREE.BloomPass=function(n,e,t,r){n=void 0!==n?n:1,e=void 0!==e?e:25,t=void 0!==t?t:4,r=void 0!==r?r:256;var a={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat};this.renderTargetX=new THREE.WebGLRenderTarget(r,r,a),this.renderTargetY=new THREE.WebGLRenderTarget(r,r,a),void 0===THREE.CopyShader&&console.error("THREE.BloomPass relies on THREE.CopyShader");var i=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(i.uniforms),this.copyUniforms.opacity.value=n,this.materialCopy=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,blending:THREE.AdditiveBlending,transparent:!0}),void 0===THREE.ConvolutionShader&&console.error("THREE.BloomPass relies on THREE.ConvolutionShader");var o=THREE.ConvolutionShader;this.convolutionUniforms=THREE.UniformsUtils.clone(o.uniforms),this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurx,this.convolutionUniforms.cKernel.value=THREE.ConvolutionShader.buildKernel(t),this.materialConvolution=new THREE.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader,defines:{KERNEL_SIZE_FLOAT:e.toFixed(1),KERNEL_SIZE_INT:e.toFixed(0)}}),this.enabled=!0,this.needsSwap=!1,this.clear=!1,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null),this.scene.add(this.quad)},THREE.BloomPass.prototype={render:function(n,e,t,r,a){a&&n.context.disable(n.context.STENCIL_TEST),this.quad.material=this.materialConvolution,this.convolutionUniforms.tDiffuse.value=t,this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurX,n.render(this.scene,this.camera,this.renderTargetX,!0),this.convolutionUniforms.tDiffuse.value=this.renderTargetX,this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurY,n.render(this.scene,this.camera,this.renderTargetY,!0),this.quad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetY,a&&n.context.enable(n.context.STENCIL_TEST),n.render(this.scene,this.camera,t,this.clear)}},THREE.BloomPass.blurX=new THREE.Vector2(.001953125,0),THREE.BloomPass.blurY=new THREE.Vector2(0,.001953125)},function(n,e,t){THREE.ShaderPass=function(n,e){this.textureID=void 0!==e?e:"tDiffuse",this.uniforms=THREE.UniformsUtils.clone(n.uniforms),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}),this.renderToScreen=!1,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null),this.scene.add(this.quad)},THREE.ShaderPass.prototype={render:function(n,e,t,r){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=t),this.quad.material=this.material,this.renderToScreen?n.render(this.scene,this.camera):n.render(this.scene,this.camera,e,this.clear)}}},function(n,e,t){THREE.RenderPass=function(n,e,t,r,a){this.scene=n,this.camera=e,this.overrideMaterial=t,this.clearColor=r,this.clearAlpha=void 0!==a?a:1,this.oldClearColor=new THREE.Color,this.oldClearAlpha=1,this.enabled=!0,this.clear=!0,this.needsSwap=!1},THREE.RenderPass.prototype={render:function(n,e,t,r){this.scene.overrideMaterial=this.overrideMaterial,this.clearColor&&(this.oldClearColor.copy(n.getClearColor()),this.oldClearAlpha=n.getClearAlpha(),n.setClearColor(this.clearColor,this.clearAlpha)),n.render(this.scene,this.camera,t,this.clear),this.clearColor&&n.setClearColor(this.oldClearColor,this.oldClearAlpha),this.scene.overrideMaterial=null}}},function(n,e,t){THREE.CustomPostShader={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1/1024,1/512)},time:{type:"f",value:0},nIntensity:{type:"f",value:.05}},vertexShader:t(50),fragmentShader:t(51)},THREE.CustomPostPass=function(n,e){var t=THREE.CustomPostShader;this.uniforms=THREE.UniformsUtils.clone(t.uniforms),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader}),this.uniforms.nIntensity.value=e,void 0!==n&&(this.uniforms.nIntensity.value=n),this.enabled=!0,this.renderToScreen=!1,this.needsSwap=!0,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null),this.scene.add(this.quad)},THREE.CustomPostPass.prototype={render:function(n,e,t,r){this.uniforms.tDiffuse.value=t,this.uniforms.time.value+=r,this.quad.material=this.material,this.renderToScreen?n.render(this.scene,this.camera):n.render(this.scene,this.camera,e,!1)}}},function(n,e,t){THREE.FXAAShader={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1/1024,1/512)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec2 resolution;","varying vec2 vUv;","#define FXAA_REDUCE_MIN   (1.0/128.0)","#define FXAA_REDUCE_MUL   (1.0/8.0)","#define FXAA_SPAN_MAX     8.0","void main() {","vec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;","vec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;","vec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;","vec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;","vec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );","vec3 rgbM  = rgbaM.xyz;","float opacity  = rgbaM.w;","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float lumaNW = dot( rgbNW, luma );","float lumaNE = dot( rgbNE, luma );","float lumaSW = dot( rgbSW, luma );","float lumaSE = dot( rgbSE, luma );","float lumaM  = dot( rgbM,  luma );","float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );","float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );","vec2 dir;","dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));","dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));","float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );","float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );","dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),","max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),","dir * rcpDirMin)) * resolution;","vec3 rgbA = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz;","rgbA += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz;","rgbA *= 0.5;","vec3 rgbB = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz;","rgbB += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz;","rgbB *= 0.25;","rgbB += rgbA * 0.5;","float lumaB = dot( rgbB, luma );","if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {","gl_FragColor = vec4( rgbA, opacity );","} else {","gl_FragColor = vec4( rgbB, opacity );","}","}"].join("\n")}},function(n,e,t){THREE.ConvolutionShader={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{type:"t",value:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(.001953125,0)},cKernel:{type:"fv1",value:[]}},vertexShader:["uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float cKernel[ KERNEL_SIZE_INT ];","uniform sampler2D tDiffuse;","uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","vec2 imageCoord = vUv;","vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );","for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {","sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];","imageCoord += uImageIncrement;","}","gl_FragColor = sum;","}"].join("\n"),buildKernel:function(n){function e(n,e){return Math.exp(-(n*n)/(2*e*e))}var t,r,a,i,o=25,l=2*Math.ceil(3*n)+1;for(l>o&&(l=o),i=.5*(l-1),r=new Array(l),a=0,t=0;l>t;++t)r[t]=e(t-i,n),a+=r[t];for(t=0;l>t;++t)r[t]/=a;return r}}},function(n,e,t){THREE.DigitalGlitch2={uniforms:{tDiffuse:{type:"t",value:null},tDisp:{type:"t",value:null},tScratch:{type:"t",value:null},byp:{type:"i",value:0},amount:{type:"f",value:.08},angle:{type:"f",value:.02},seed:{type:"f",value:.02},seed_x:{type:"f",value:.02},seed_y:{type:"f",value:.02},distortion_x:{type:"f",value:.5},distortion_y:{type:"f",value:.6},col_s:{type:"f",value:.05}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform int byp;","uniform sampler2D tDiffuse;","uniform sampler2D tDisp;","uniform sampler2D tScratch;","uniform float amount;","uniform float angle;","uniform float seed;","uniform float seed_x;","uniform float seed_y;","uniform float distortion_x;","uniform float distortion_y;","uniform float col_s;","varying vec2 vUv;","float rand(vec2 co){","return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);","}","float luma(vec3 color) {","return dot(color, vec3(0.299, 0.587, 0.114));","}","float luma(vec4 color) {","return dot(color.rgb, vec3(0.299, 0.587, 0.114));","}","void main() {","vec2 p = vUv;","vec4 scratches = texture2D(tScratch, p);","if(byp<1) {","float xs = floor(gl_FragCoord.x / 0.5);","float ys = floor(gl_FragCoord.y / 0.5);","vec4 normal = texture2D (tDisp, p*seed*seed);","if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {","if(seed_x>0.){","p.y = 1. - (p.y + distortion_y);","}","else {","p.y = distortion_y;","}","}","if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {","if(seed_y>0.){","p.x=distortion_x;","}","else {","p.x = 1. - (p.x + distortion_x);","}","}","p.x+=normal.x*seed_x*(seed/5.);","p.y+=normal.y*seed_y*(seed/5.);","vec2 offset = amount * vec2( cos(angle), sin(angle));","vec4 cr = texture2D(tDiffuse, p + offset);","vec4 cga = texture2D(tDiffuse, p);","vec4 cb = texture2D(tDiffuse, p - offset);","gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);","gl_FragColor = gl_FragColor+ snow;","}","else {","gl_FragColor=texture2D (tDiffuse, vUv);","}","vec3 scratchBlend = gl_FragColor.rgb + scratches.rgb;","float center = smoothstep(0.0, 0.5, length(vUv-0.5));","float luminance = luma(gl_FragColor.rgb);","float brightnessMap = smoothstep(0.1, 0.4, luminance * center );","gl_FragColor.rgb = mix(gl_FragColor.rgb, scratchBlend, brightnessMap);","}"].join("\n")}},function(n,e,t){var r,a=function(n,e){function t(){this.constructor=n}for(var r in e)i.call(e,r)&&(n[r]=e[r]);return t.prototype=e.prototype,n.prototype=new t,n.__super__=e.prototype,n},i={}.hasOwnProperty;r=function(n){var e,r,i;return e=t(45),i=t(46),r=function(n){function t(){return t.__super__.constructor.apply(this,arguments)}return a(t,n),t.prototype.getItemClass=function(){return e},t}(i)}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r;r=function(n){var e,r;return r=t(2),e=function(){function n(n,e){this.values=null!=n?n:{},null==e&&(e=0),this.isCamera=!0,this.target=new r.Vector3(this.values.target_x,this.values.target_y,this.values.target_z),this.container=new r.PerspectiveCamera(this.values.fov,window.innerWidth/window.innerHeight,1,2e3),this.container.position.set(this.values.x,this.values.y,this.values.z)}return n.properties={x:{name:"x",label:"x",val:0},y:{name:"y",label:"y",val:0},z:{name:"z",label:"z",val:700},target_x:{name:"target_x",label:"target x",val:0},target_y:{name:"target_y",label:"target y",val:0},target_z:{name:"target_z",label:"target z",val:0},fov:{name:"fov",label:"fov",val:45}},n.prototype.update=function(n,e,t){return null==e&&(e=!1),null==t&&(t=!1),null!=e.fov&&(this.container.fov=e.fov),this.container.position.set(e.x,e.y,e.z),this.target.set(e.target_x,e.target_y,e.target_z),this.container.lookAt(this.target)},n.prototype.destroy=function(){return delete this.container,delete this.isCamera},n}()}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r,a=function(n,e){function t(){this.constructor=n}for(var r in e)i.call(e,r)&&(n[r]=e[r]);return t.prototype=e.prototype,n.prototype=new t,n.__super__=e.prototype,n},i={}.hasOwnProperty;r=function(n){var e,r,i;return e=t(47),i=t(46),r=function(n){function t(){return t.__super__.constructor.apply(this,arguments)}return a(t,n),t.prototype.getItemClass=function(){return e},t}(i)}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r,a=function(n,e){function t(){this.constructor=n}for(var r in e)i.call(e,r)&&(n[r]=e[r]);return t.prototype=e.prototype,n.prototype=new t,n.__super__=e.prototype,n},i={}.hasOwnProperty;r=function(n){var e,r,i;return e=t(48),i=t(46),r=function(n){function t(){return t.__super__.constructor.apply(this,arguments)}return a(t,n),t.prototype.getItemClass=function(){return e},t}(i)}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r,a=function(n,e){return function(){return n.apply(e,arguments)}},i=function(n,e){function t(){this.constructor=n}for(var r in e)o.call(e,r)&&(n[r]=e[r]);return t.prototype=e.prototype,n.prototype=new t,n.__super__=e.prototype,n},o={}.hasOwnProperty;r=function(n){var e,r,o,l,s,u,m,d;return d=t(16),m=t(2),o=t(40),r=t(37),e=t(36),s=t(43),l=t(44),u=function(n){function e(n,t){var r,i,o,l;this.values=null!=n?n:{},null==t&&(t=0),this.getGeometry=a(this.getGeometry,this),l=this.getDefaultProperties();for(i in l)o=l[i],null==this.values[i]&&(this.values[i]=o.val);e.__super__.constructor.apply(this,arguments),this.timeline=new TimelineMax,r=new m.Color(values.color),this.material=this.getMaterial(r),this.container=new m.Mesh(this.getGeometry(),this.material)}return i(e,n),e.properties={x:{name:"x",label:"x",val:0},y:{name:"y",label:"y",val:0},z:{name:"z",label:"z",val:0},rotX:{name:"rotX",label:"rotation x",val:0},rotY:{name:"rotY",label:"rotation y",val:0},rotZ:{name:"rotZ",label:"rotation z",val:0},scaleX:{name:"scaleX",label:"scale x",val:1},scaleY:{name:"scaleY",label:"scale y",val:1},scaleZ:{name:"scaleZ",label:"scale z",val:1},color:{name:"color",label:"color",type:"color",val:"#888888"},opacity:{name:"opacity",label:"opacity",val:1,min:0,max:1}},e.prototype.getDefaultProperties=function(){return e.properties},e.prototype.getGeometry=function(){return new m.PlaneGeometry(100,100)},e.prototype.destroy=function(){return e.__super__.destroy.apply(this,arguments),this.container&&(this.container.parent&&this.container.parent.remove(this.container),delete this.container),delete this.geometry,delete this.timeline},e.prototype.update=function(n,e,t){null==e&&(e=!1),null==t&&(t=!1),e===!1&&(e=this.values),(t||this.valueChanged("x",e)||this.valueChanged("y",e)||this.valueChanged("z",e))&&this.container.position.set(e.x,e.y,e.z),(t||this.valueChanged("rotX",e)||this.valueChanged("rotY",e)||this.valueChanged("rotZ",e))&&this.container.rotation.set(this.degreeToRadian(e.rotX),this.degreeToRadian(e.rotY),this.degreeToRadian(e.rotZ)),(t||this.valueChanged("scaleX",e)||this.valueChanged("scaleY",e)||this.valueChanged("scaleZ",e))&&(e.scaleX=e.scaleX||1e-9,e.scaleY=e.scaleY||1e-9,e.scaleZ=e.scaleZ||1e-9,this.container.scale.set(e.scaleX,e.scaleY,e.scaleZ)),(t||this.valueChanged("color",e))&&(this.material.color=new m.Color(e.color)),(t||this.valueChanged("opacity",e))&&(this.material.opacity=e.opacity)},e.prototype.getMaterial=function(n){var e;return e=new m.MeshPhongMaterial({ambient:197379,color:14540253,specular:8947848,shininess:30,shading:m.FlatShading}),e.transparent=!0,e.depthWrite=!1,e.depthTest=!1,e.side=m.DoubleSide,e.blending=m.AdditiveBlending,e},e}(r)}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r,a=function(n,e){return function(){return n.apply(e,arguments)}},i=function(n,e){function t(){this.constructor=n}for(var r in e)o.call(e,r)&&(n[r]=e[r]);return t.prototype=e.prototype,n.prototype=new t,n.__super__=e.prototype,n},o={}.hasOwnProperty;r=function(n){var e,r,o,l,s,u,m,d,g;return g=t(16),d=t(2),o=t(40),m=t(34),r=t(36),l=t(49),u=t(43),s=t(44),e=function(n){function e(){return this.getGeometry=a(this.getGeometry,this),e.__super__.constructor.apply(this,arguments)}return i(e,n),e.properties={x:{name:"x",label:"x",val:0},y:{name:"y",label:"y",val:0},z:{name:"z",label:"z",val:0},rotX:{name:"rotX",label:"rotation x",val:0},rotY:{name:"rotY",label:"rotation y",val:0},rotZ:{name:"rotZ",label:"rotation z",val:0},scaleX:{name:"scaleX",label:"scale x",val:1},scaleY:{name:"scaleY",label:"scale y",val:1},scaleZ:{name:"scaleZ",label:"scale z",val:1},innerRadius:{name:"innerRadius",label:"innerRadius",val:.7,min:0,max:1},angle:{name:"angle",label:"angle",val:1,min:0,max:1},color:{name:"color",label:"color",type:"color",val:"#888888"},opacity:{name:"opacity",label:"opacity",val:1,min:0,max:1}},e.prototype.getDefaultProperties=function(){return e.properties},e.prototype.getGeometry=function(){var n,e,t;return e=this.values.innerRadius||1e-9,e=Math.min(.999999999,e),t=2*Math.PI,n=this.values.angle*t,new l(100*e,100,30,1,0,n)},e.prototype.update=function(n,t,r){var a;null==t&&(t=!1),null==r&&(r=!1),e.__super__.update.apply(this,arguments),(r||this.valueChanged("innerRadius",t)||this.valueChanged("angle",t))&&(a=this.getGeometry(),this.container.geometry.dynamic=!0,this.container.geometry.vertices=a.vertices,this.container.geometry.verticesNeedUpdate=!0,a.dispose())},e}(m)}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r;r=function(n){var e,r,a,i,o;return r=t(2),a=[new r.Color(16777215),new r.Color(8835512),new r.Color(6668930)],i=[new r.Color(16777215),new r.Color(145232),new r.Color(166558),new r.Color(966569),new r.Color(15908893),new r.Color(14233636)],o=a.length,e=function(){function n(){}return n.get=function(n){return n=Math.abs(parseInt(n,10)),a[n%o]},n}()}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r,a=function(n,e){return function(){return n.apply(e,arguments)}};r=function(n){var e;return e=function(){function n(n,e){this.values=null!=n?n:{},null==e&&(e=0),this.destroy=a(this.destroy,this),this.cache=this.buildCache()}return n.prototype.buildCache=function(){var n,e,t,r;n={},r=this.values;for(e in r)t=r[e],n[e]=t.val;return n},n.prototype.valueChanged=function(n,e){var t,r;return null==e[n]?!1:(r=e[n],t=!0,null!=this.cache[n]&&this.cache[n]===r&&(t=!1),this.cache[n]=r,t)},n.prototype.degreeToRadian=function(n){return Math.PI*n/180},n.prototype.destroy=function(){return delete this.cache},n}()}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r;r=function(n){var e=t(2);return e.CircleGeometry2=function(n,t,r,a){e.Geometry.call(this),this.type="CircleGeometry2",this.parameters={radius:n,segments:t,thetaStart:r,thetaLength:a},n=n||50,t=void 0!==t?Math.max(3,t):8,r=void 0!==r?r:0,a=void 0!==a?a:2*Math.PI;var i,o=[],l=new e.Vector3,s=new e.Vector2(0,0);for(this.vertices.push(l),o.push(s),i=0;t>=i;i++){var u=new e.Vector3,m=r+i/t*a;u.x=n*Math.cos(m),u.y=n*Math.sin(m),this.vertices.push(u),o.push(new e.Vector2(1,i/t))}var d=new e.Vector3(0,0,1);for(i=1;t>=i;i++)this.faces.push(new e.Face3(i,i+1,0,[d.clone(),d.clone(),d.clone()])),this.faceVertexUvs[0].push([o[i].clone(),o[i+1].clone(),new e.Vector2(0,i/t)]);this.computeFaceNormals(),this.boundingSphere=new e.Sphere(new e.Vector3,n)},e.CircleGeometry2.prototype=Object.create(e.Geometry.prototype),e.CircleGeometry2.prototype.constructor=e.CircleGeometry2,e.CircleGeometry2}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){/**
	 * Seedable random number generator functions.
	 * @version 1.0.0
	 * @license Public Domain
	 *
	 * @example
	 * var rng = new RNG('Example');
	 * rng.random(40, 50);  // =>  42
	 * rng.uniform();       // =>  0.7972798995050903
	 * rng.normal();        // => -0.6698504543216376
	 * rng.exponential();   // =>  1.0547367609131555
	 * rng.poisson(4);      // =>  2
	 * rng.gamma(4);        // =>  2.781724687386858
	 */
function r(n){this.s=new Array(256),this.i=0,this.j=0;for(var e=0;256>e;e++)this.s[e]=e;n&&this.mix(n)}function a(n){null==n?n=(Math.random()+Date.now()).toString():"function"==typeof n?(this.uniform=n,this.nextByte=function(){return~~(256*this.uniform())},n=null):"[object String]"!==Object.prototype.toString.call(n)&&(n=JSON.stringify(n)),this._normal=null,n?this._state=new r(n):this._state=null}r.getStringBytes=function(n){for(var e=[],t=0;t<n.length;t++){var r=n.charCodeAt(t),a=[];do a.push(255&r),r>>=8;while(r>0);e=e.concat(a.reverse())}return e},r.prototype._swap=function(n,e){var t=this.s[n];this.s[n]=this.s[e],this.s[e]=t},r.prototype.mix=function(n){for(var e=r.getStringBytes(n),t=0,a=0;a<this.s.length;a++)t+=this.s[a]+e[a%e.length],t%=256,this._swap(a,t)},r.prototype.next=function(){return this.i=(this.i+1)%256,this.j=(this.j+this.s[this.i])%256,this._swap(this.i,this.j),this.s[(this.s[this.i]+this.s[this.j])%256]},a.prototype.nextByte=function(){return this._state.next()},a.prototype.uniform=function(){for(var n=7,e=0,t=0;n>t;t++)e*=256,e+=this.nextByte();return e/(Math.pow(2,8*n)-1)},a.prototype.random=function(n,e){return null==n?this.uniform():(null==e&&(e=n,n=0),n+Math.floor(this.uniform()*(e-n)))},a.prototype.normal=function(){if(null!==this._normal){var n=this._normal;return this._normal=null,n}var e=this.uniform()||Math.pow(2,-53),t=this.uniform();return this._normal=Math.sqrt(-2*Math.log(e))*Math.sin(2*Math.PI*t),Math.sqrt(-2*Math.log(e))*Math.cos(2*Math.PI*t)},a.prototype.exponential=function(){return-Math.log(this.uniform()||Math.pow(2,-53))},a.prototype.poisson=function(n){var e=Math.exp(-(n||1)),t=0,r=1;do t++,r*=this.uniform();while(r>e);return t-1},a.prototype.gamma=function(n){var e=(1>n?1+n:n)-1/3,t=1/Math.sqrt(9*e);do{do var r=this.normal(),a=Math.pow(t*r+1,3);while(0>=a);var i=this.uniform(),o=Math.pow(r,2)}while(i>=1-.0331*o*o&&Math.log(i)>=.5*o+e*(1-a+Math.log(a)));return 1>n?e*a*Math.exp(this.exponential()/-n):e*a},a.roller=function(n,e){var t=n.split(/(\d+)?d(\d+)([+-]\d+)?/).slice(1),r=parseFloat(t[0])||1,i=parseFloat(t[1]),o=parseFloat(t[2])||0;return e=e||new a,function(){for(var n=r+o,t=0;r>t;t++)n+=e.random(i);return n}},a.$=new a,n.exports=a},function(n,e,t){/**
	 * Seedable random number generator functions.
	 * @version 1.0.0
	 * @license Public Domain
	 *
	 * @example
	 * var rng = new RNG('Example');
	 * rng.random(40, 50);  // =>  42
	 * rng.uniform();       // =>  0.7972798995050903
	 * rng.normal();        // => -0.6698504543216376
	 * rng.exponential();   // =>  1.0547367609131555
	 * rng.poisson(4);      // =>  2
	 * rng.gamma(4);        // =>  2.781724687386858
	 */
function r(n){this.s=new Array(256),this.i=0,this.j=0;for(var e=0;256>e;e++)this.s[e]=e;n&&this.mix(n)}function a(n){null==n?n=(Math.random()+Date.now()).toString():"function"==typeof n?(this.uniform=n,this.nextByte=function(){return~~(256*this.uniform())},n=null):"[object String]"!==Object.prototype.toString.call(n)&&(n=JSON.stringify(n)),this._normal=null,n?this._state=new r(n):this._state=null}r.getStringBytes=function(n){for(var e=[],t=0;t<n.length;t++){var r=n.charCodeAt(t),a=[];do a.push(255&r),r>>=8;while(r>0);e=e.concat(a.reverse())}return e},r.prototype._swap=function(n,e){var t=this.s[n];this.s[n]=this.s[e],this.s[e]=t},r.prototype.mix=function(n){for(var e=r.getStringBytes(n),t=0,a=0;a<this.s.length;a++)t+=this.s[a]+e[a%e.length],t%=256,this._swap(a,t)},r.prototype.next=function(){return this.i=(this.i+1)%256,this.j=(this.j+this.s[this.i])%256,this._swap(this.i,this.j),this.s[(this.s[this.i]+this.s[this.j])%256]},a.prototype.nextByte=function(){return this._state.next()},a.prototype.uniform=function(){for(var n=7,e=0,t=0;n>t;t++)e*=256,e+=this.nextByte();return e/(Math.pow(2,8*n)-1)},a.prototype.random=function(n,e){return null==n?this.uniform():(null==e&&(e=n,n=0),n+Math.floor(this.uniform()*(e-n)))},a.prototype.normal=function(){if(null!==this._normal){var n=this._normal;return this._normal=null,n}var e=this.uniform()||Math.pow(2,-53),t=this.uniform();return this._normal=Math.sqrt(-2*Math.log(e))*Math.sin(2*Math.PI*t),Math.sqrt(-2*Math.log(e))*Math.cos(2*Math.PI*t)},a.prototype.exponential=function(){return-Math.log(this.uniform()||Math.pow(2,-53))},a.prototype.poisson=function(n){var e=Math.exp(-(n||1)),t=0,r=1;do t++,r*=this.uniform();while(r>e);return t-1},a.prototype.gamma=function(n){var e=(1>n?1+n:n)-1/3,t=1/Math.sqrt(9*e);do{do var r=this.normal(),a=Math.pow(t*r+1,3);while(0>=a);var i=this.uniform(),o=Math.pow(r,2)}while(i>=1-.0331*o*o&&Math.log(i)>=.5*o+e*(1-a+Math.log(a)));return 1>n?e*a*Math.exp(this.exponential()/-n):e*a},a.roller=function(n,e){var t=n.split(/(\d+)?d(\d+)([+-]\d+)?/).slice(1),r=parseFloat(t[0])||1,i=parseFloat(t[1]),o=parseFloat(t[2])||0;return e=e||new a,function(){for(var n=r+o,t=0;r>t;t++)n+=e.random(i);return n}},a.$=new a},function(n,e,t){n.exports="#define GLSLIFY 1\n\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n"},function(n,e,t){n.exports="#define GLSLIFY 1\n\nprecision highp float;\n\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\n\nfloat aastep_1_0(float threshold, float value) {\n  #ifdef GL_OES_standard_derivatives\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\n  #else\n    return step(threshold, value);\n  #endif  \n}\n\n\n\nvarying vec2 vUv;\nuniform vec3 color;\n// 0 hidden, 1 full, 2 hidden\nuniform float percent;\n\nuniform vec3 fogColor;\nuniform float fogDensity;\n\n// Common\n#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\nfloat square( in float a ) { return a*a; }\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\nfloat average( in float a ) { return a; }\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\n\nfloat quadraticInOut(float t) {\n  float p = 2.0 * t * t;\n  return t < 0.5 ? p : -p + (4.0 * t) - 1.0;\n}\n\nvec3 inputToLinear( in vec3 a ) {\n  return a;\n}\n\nvec3 linearToOutput( in vec3 a ) {\n  return a;\n}\n\nvoid main() {\n  // For fog\n  vec3 outgoingLight = vec3( 0.0 );	// outgoing light does not have an alpha, the surface does\n  vec4 diffuseColor = vec4( color, 1.0 );\n\n  float alpha = 0.0;\n\n  float percentInOut = quadraticInOut(percent / 2.0) * 2.0;\n\n  if (vUv.x < percentInOut && vUv.x >= percentInOut - 1.0) {\n    alpha = 1.0;\n  }\n\n\n  outgoingLight = diffuseColor.rgb;\n\n  float depth = gl_FragCoord.z / gl_FragCoord.w;\n  float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\n  fogFactor = whiteCompliment( fogFactor );\n\n  outgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n  gl_FragColor = vec4(outgoingLight, alpha);\n}\n"},function(n,e,t){n.exports='#define GLSLIFY 1\n\nvarying vec2 vUv;\nvarying float noise;\nuniform float time;\nuniform float strength;\nuniform float seed;\n\n//\n// GLSL textureless classic 3D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-10-11\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289_1_0(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289_1_0(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute_1_1(vec4 x)\n{\n  return mod289_1_0(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt_1_2(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade_1_3(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise, periodic variant\nfloat pnoise_1_4(vec3 P, vec3 rep)\n{\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n  Pi0 = mod289_1_0(Pi0);\n  Pi1 = mod289_1_0(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute_1_1(permute_1_1(ix) + iy);\n  vec4 ixy0 = permute_1_1(ixy + iz0);\n  vec4 ixy1 = permute_1_1(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt_1_2(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt_1_2(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade_1_3(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\n\n\n\nfloat turbulence( vec3 p ) {\n    float w = 100.0;\n    float t = -.5;\n    for (float f = 1.0 ; f <= 10.0 ; f++ ){\n        float power = pow( 2.0, f );\n        t += abs( pnoise_1_4( vec3( power * p ), vec3( 10.0, 10.0, 10.0 ) ) / power );\n    }\n    return t;\n}\n\nvoid main() {\n    vUv = uv;\n\n\n    float time2 = time + seed;\n\n    // add time to the noise parameters so it\'s animated\n    noise = 10.0 *  -.10 * turbulence( 10.5 * normal + time2 );\n    float b = 5.0 * pnoise_1_4( 0.2 * position + vec3( 2.0 * time2 ), vec3( 100.0 ) );\n    float displacement = - noise + b;\n\n    // Less displacement on center.\n    displacement = displacement * vUv.x;\n\n    //vec3 newPosition = position + normal * displacement * strength * 30.0;\n    //vec2 normal2 = normalize(uv - 0.5);\n    vec3 normal2 = normalize(position - 0.5);\n    float strengthMultiplier = 15.0;\n    vec3 newPosition = position + vec3(normal2.x, normal2.y, 0.0) * displacement * strength * strengthMultiplier;\n    //gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n'},function(n,e,t){n.exports="#define GLSLIFY 1\n\nprecision highp float;\n\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\n\nfloat aastep_1_0(float threshold, float value) {\n  #ifdef GL_OES_standard_derivatives\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\n  #else\n    return step(threshold, value);\n  #endif  \n}\n\n\n\nvarying vec2 vUv;\nuniform vec3 color;\n\nuniform vec3 fogColor;\nuniform float fogDensity;\n\n// Common\n#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\nfloat square( in float a ) { return a*a; }\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\nfloat average( in float a ) { return a; }\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\n\nvec3 inputToLinear( in vec3 a ) {\n  return a;\n}\n\nvec3 linearToOutput( in vec3 a ) {\n  return a;\n}\n\nvoid main() {\n  // For fog\n  vec3 outgoingLight = vec3( 0.0 );	// outgoing light does not have an alpha, the surface does\n  vec4 diffuseColor = vec4( color, 1.0 );\n\n  float alpha = 0.0;\n  float wireframe_size = 0.01;\n  float min_x = 0.0;\n  float max_x = 1.0;\n\n  // If max is 1 then wireframe is is only half size.\n  //max_x = max_x * 0.98;\n\n  // Get distance from edges.\n  vec2 edgeX = abs(vec2(vUv.x - min_x, vUv.x - max_x));\n  // Add the wireframe.\n  edgeX = max(vec2(0.0, 0.0), edgeX - wireframe_size);\n\n  // Get the smallest distance from edges.\n  float distance_x = min(edgeX.x, edgeX.y);\n\n\n  alpha = aastep_1_0(distance_x, 0.01);\n\n\n  // Add the fill alpha.\n  if (vUv.x > min_x && vUv.x < max_x) {\n    alpha = max(0.1, alpha);\n  }\n\n  outgoingLight = diffuseColor.rgb;\n\n  float depth = gl_FragCoord.z / gl_FragCoord.w;\n  float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\n  fogFactor = whiteCompliment( fogFactor );\n\n  outgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n  gl_FragColor = vec4(outgoingLight, alpha);\n  //vec3 k = vec3(1.0, 1.0, 1.0);\n  //gl_FragColor = vec4( vec3( vUv, 0. ), 1. );\n  //gl_FragColor = vec4( color, 1.0 );\n}\n"},function(n,e,t){var r,a=function(n,e){function t(){this.constructor=n}for(var r in e)i.call(e,r)&&(n[r]=e[r]);return t.prototype=e.prototype,n.prototype=new t,n.__super__=e.prototype,n},i={}.hasOwnProperty;r=function(n){var e,r,i,o;return o=t(16),i=t(2),r=t(53),e=function(n){function e(){e.__super__.constructor.apply(this,arguments)}return a(e,n),e.circleGeom=new i.PlaneBufferGeometry(100,1),e.ringGeom=!1,e.ringGeom2=!1,e.noOutline=!0,e.prototype.getGeometry=function(){return e.circleGeom},e.prototype.getGeometryOutline=function(n){return!1},e.prototype.update=function(n,e){var t,r,a,i,o,l;for(this.container.position.add(this.velocity),this.velocity=this.velocity.multiplyScalar(.94),l=Date.now()-this.start,i=this.materials,t=0,r=i.length;r>t;t++)a=i[t],a.uniforms.time.value=25e-5*l;return o=this.animatedProperties.scale*this.values.size*.1,this.container.scale.set(1,o,1)},e}(r)}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r,a=function(n,e){function t(){this.constructor=n}for(var r in e)i.call(e,r)&&(n[r]=e[r]);return t.prototype=e.prototype,n.prototype=new t,n.__super__=e.prototype,n},i={}.hasOwnProperty;r=function(n){var e,r,i,o,l,s,u;return u=t(16),l=t(2),i=t(39),s=t(52),r=t(37),e=t(36),o=function(n){function t(n,e){var r,a,i;this.values=null!=n?n:{},null==e&&(e=0),i=t.properties;for(r in i)a=i[r],null==this.values[r]&&(this.values[r]=a.val);t.__super__.constructor.apply(this,arguments),this.timeline=new TimelineMax,this.container=new l.Object3D,this.totalDuration=0,this.items=[],this.items_position=[],this.build(e)}return a(t,n),t.properties={numItems:{name:"numItems",label:"num items",val:20,triggerRebuild:!0},seed:{name:"seed",label:"seed",val:12002,triggerRebuild:!0},randX:{name:"randX",label:"random x",val:80,triggerRebuild:!0},randY:{name:"randY",label:"random y",val:80,triggerRebuild:!0},randZ:{name:"randZ",label:"random z",val:0,triggerRebuild:!0},randRotZ:{name:"randRotZ",label:"random rotation z",val:0,triggerRebuild:!0},randScaleX:{name:"randScaleX",label:"random scale x",val:0,triggerRebuild:!0},randScaleY:{name:"randScaleY",label:"random scale y",val:0,triggerRebuild:!0},circleRadius:{name:"circleRadius",label:"circle radius",val:20},circleRadiusMax:{name:"circleRadiusMax",label:"circle radius max",val:20},progression:{name:"progression",label:"progression",val:1,min:0,max:2},depth:{name:"depth",label:"depth",val:0},percent_color:{name:"percent_color",label:"percent color",val:.4,triggerRebuild:!0},x:{name:"x",label:"x",val:0},y:{name:"y",label:"y",val:0},z:{name:"z",label:"z",val:0},rotX:{name:"rotX",label:"rotation x",val:0},rotY:{name:"rotY",label:"rotation y",val:0},rotZ:{name:"rotZ",label:"rotation z",val:0}},t.prototype.getItemClass=function(){return AnimatedCircle},t.prototype.rebuild=function(n){return this.empty(),this.build(n)},t.prototype.empty=function(){var n,e,t,r;if(this.items&&this.items.length){for(this.timeline.clear(),this.items_position=[],r=this.items,e=0,t=r.length;t>e;e++)n=r[e],this.container.remove(n.container),n.destroy();return this.items=[]}},t.prototype.build=function(n){var t,r,a,o,l,s,u,m,d,g,c,h,p,v,y,b,f,R,x,E,w;for(null==n&&(n=0),this.rng=new i(this.values.seed),this.rngAnimation=new i(this.values.seed+"lorem"),this.rngOutline=new i(this.values.seed),m=c=0,b=this.values.numItems-1;b>=0?b>=c:c>=b;m=b>=0?++c:--c)g=this.getItemClass(),f=this.rng.random(0,1e3)/1e3,l=.8>f?!0:!1,o=f>.5?!0:!1,g.noOutline&&(l=!1,o=!0),r=e.get(this.rng.random(0,1e3)),this.rng.random(0,1e3)>1e3*this.values.percent_color&&(r=e.get(0)),u=r.clone(),l&&u.multiplyScalar(this.rng.random(.1,.5)),R=this.rng.random(this.values.circleRadius,this.values.circleRadiusMax),x=this.getRandomPosition(this.values.randX),E=this.getRandomPosition(this.values.randY),w=this.getRandomPosition(this.values.randZ),p=this.rng.random(0,1e3)/1e3*Math.PI*this.values.randRotZ,v=this.rng.random(0,1e3)/1e3*this.values.randScaleX,y=this.rng.random(0,1e3)/1e3*this.values.randScaleY,h={x:x,y:E,z:w},a=this.rngAnimation.random(0,2400)/1e3,s=this.rngAnimation.random(600,800)/1e3,s*=4,t=this.rngOutline.random(1,400)/100,l===!1&&u.multiplyScalar(3),d=new g({size:R,outlineWidth:t,drawOutline:l,drawCircle:o,color:r,fillColor:u,delay:a,duration:s,depth:this.values.depth,x:h.x,y:h.y,z:h.z,randRotZ:p,randScaleX:v,randScaleY:y}),this.container.add(d.container),this.timeline.add(d.timeline,0),this.items.push(d),this.items_position.push(h);return this.totalDuration=this.timeline.duration(),this.update(n,this.values,!0)},t.prototype.update=function(n,e,r){var a,i,o,l,s,m,d,g,c,h,p,v,y;null==e&&(e=!1),null==r&&(r=!1),e===!1&&(e=this.values),d=!1,p=t.properties;for(l in p)h=p[l],h.triggerRebuild&&this.valueChanged(l,e)&&(d=!0);for((r||this.valueChanged("x",e)||this.valueChanged("y",e)||this.valueChanged("z",e))&&this.container.position.set(e.x,e.y,e.z),(r||this.valueChanged("rotX",e)||this.valueChanged("rotY",e)||this.valueChanged("rotZ",e))&&this.container.rotation.set(this.degreeToRadian(e.rotX),this.degreeToRadian(e.rotY),this.degreeToRadian(e.rotZ)),c=e.progression/2,this.timeline.seek(this.totalDuration*c),v=this.items,i=0,s=v.length;s>i;i++)a=v[i],a.update(n,{progression:e.progression});if(r||this.valueChanged("depth",e))for(y=this.items,l=o=0,m=y.length;m>o;l=++o)a=y[l],g=this.items_position[l],a.container.position.set(g.x,g.y,g.z*e.depth);return this.values=u.merge(this.values,e),d===!0?this.rebuild(n):void 0},t.prototype.getRandomPosition=function(n){return null==n&&(n=1),this.rng.random(-n,n)},t.prototype.destroy=function(){return t.__super__.destroy.apply(this,arguments),this.container&&(this.container.parent&&this.container.parent.remove(this.container),delete this.container),delete this.rng,delete this.rngOutline,delete this.cache},t}(r)}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r,a=function(n,e){function t(){this.constructor=n}for(var r in e)i.call(e,r)&&(n[r]=e[r]);return t.prototype=e.prototype,n.prototype=new t,n.__super__=e.prototype,n},i={}.hasOwnProperty;r=function(n){var e,r,i,o,l,s;return s=t(16),l=t(2),r=t(53),i=t(38),o=t(49),e=function(n){function e(){e.__super__.constructor.apply(this,arguments)}return a(e,n),e.circleGeom=new i(10,30,0,2*Math.PI),e.ringGeom=new o(9,11,30,1,0,2*Math.PI),e.ringGeom2=new o(9,10,30,1,0,2*Math.PI),e.prototype.getGeometry=function(){return e.circleGeom},e.prototype.getGeometryOutline=function(n){return 1>n?e.ringGeom:e.ringGeom2},e}(r)}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r,a=function(n,e){function t(){this.constructor=n}for(var r in e)i.call(e,r)&&(n[r]=e[r]);return t.prototype=e.prototype,n.prototype=new t,n.__super__=e.prototype,n},i={}.hasOwnProperty;r=function(n){var e,r,i,o;return o=t(16),i=t(2),r=t(53),e=function(n){function e(){e.__super__.constructor.apply(this,arguments)}return a(e,n),e.circleGeom=new i.CircleGeometry(10,4,0,2*Math.PI),e.ringGeom=new i.RingGeometry(9,11,4,1,0,2*Math.PI),e.ringGeom2=new i.RingGeometry(9,10,4,1,0,2*Math.PI),e.prototype.getGeometry=function(){return e.circleGeom},e.prototype.getGeometryOutline=function(n){return 1>n?e.ringGeom:e.ringGeom2},e}(r)}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){var r;r=function(n){var e=t(2);return e.RingGeometry2=function(n,t,r,a,i,o){e.Geometry.call(this),this.type="RingGeometry2",this.parameters={innerRadius:n,outerRadius:t,thetaSegments:r,phiSegments:a,thetaStart:i,thetaLength:o},n=n||0,t=t||50,i=void 0!==i?i:0,o=void 0!==o?o:2*Math.PI,r=void 0!==r?Math.max(3,r):8,a=void 0!==a?Math.max(1,a):8;var l,s,u=[],m=n,d=(t-n)/a;for(l=0;a+1>l;l++){for(s=0;r+1>s;s++){var g=new e.Vector3,c=i+s/r*o;g.x=m*Math.cos(c),g.y=m*Math.sin(c),this.vertices.push(g);var h={x:l/a,y:s/r};u.push(new e.Vector2(h.x,h.y))}m+=d}var p=new e.Vector3(0,0,1);for(l=0;a>l;l++){var v=l*(r+1);for(s=0;r>s;s++){var c=s+v,y=c,b=c+r+1,f=c+r+2;this.faces.push(new e.Face3(y,b,f,[p.clone(),p.clone(),p.clone()])),this.faceVertexUvs[0].push([u[y].clone(),u[b].clone(),u[f].clone()]),y=c,b=c+r+2,f=c+1,this.faces.push(new e.Face3(y,b,f,[p.clone(),p.clone(),p.clone()])),this.faceVertexUvs[0].push([u[y].clone(),u[b].clone(),u[f].clone()])}}this.computeFaceNormals(),this.boundingSphere=new e.Sphere(new e.Vector3,m)},e.RingGeometry2.prototype=Object.create(e.Geometry.prototype),e.RingGeometry2.prototype.constructor=e.RingGeometry2,e.RingGeometry2}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))},function(n,e,t){n.exports="#define GLSLIFY 1\n\nvarying vec2 vUv;\n\n// Precompute coords for FXAA\nvarying vec2 v_rgbNW;\nvarying vec2 v_rgbNE;\nvarying vec2 v_rgbSW;\nvarying vec2 v_rgbSE;\nvarying vec2 v_rgbM;\n\nuniform vec2 resolution;\n\n//To save 9 dependent texture reads, you can compute\n//these in the vertex shader and use the optimized\n//frag.glsl function in your frag shader. \n\n//This is best suited for mobile devices, like iOS.\n\nvoid texcoords_1_0(vec2 fragCoord, vec2 resolution,\n			out vec2 v_rgbNW, out vec2 v_rgbNE,\n			out vec2 v_rgbSW, out vec2 v_rgbSE,\n			out vec2 v_rgbM) {\n	vec2 inverseVP = 1.0 / resolution.xy;\n	v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\n	v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\n	v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\n	v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\n	v_rgbM = vec2(fragCoord * inverseVP);\n}\n\n\n\nvoid main() {\n  vUv = uv;\n\n  // FXAA\n  vec2 fragCoord = uv * resolution;\n	texcoords_1_0(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n"},function(n,e,t){n.exports='#define GLSLIFY 1\n\n/**\nBasic FXAA implementation based on the code on geeks3d.com with the\nmodification that the texture2DLod stuff was removed since it\'s\nunsupported by WebGL.\n\n--\n\nFrom:\nhttps://github.com/mitsuhiko/webgl-meincraft\n\nCopyright (c) 2011 by Armin Ronacher.\n\nSome rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided\n      with the distribution.\n\n    * The names of the contributors may not be used to endorse or\n      promote products derived from this software without specific\n      prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n#ifndef FXAA_REDUCE_MIN\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\n#endif\n#ifndef FXAA_REDUCE_MUL\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\n#endif\n#ifndef FXAA_SPAN_MAX\n    #define FXAA_SPAN_MAX     8.0\n#endif\n\n//optimized version for mobile, where dependent \n//texture reads can be a bottleneck\nvec4 fxaa_1_0(sampler2D tex, vec2 fragCoord, vec2 resolution,\n            vec2 v_rgbNW, vec2 v_rgbNE, \n            vec2 v_rgbSW, vec2 v_rgbSE, \n            vec2 v_rgbM) {\n    vec4 color;\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\n    vec4 texColor = texture2D(tex, v_rgbM);\n    vec3 rgbM  = texColor.xyz;\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM  = dot(rgbM,  luma);\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n    \n    mediump vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n    \n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n    \n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n              dir * rcpDirMin)) * inverseVP;\n    \n    vec3 rgbA = 0.5 * (\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\n\n    float lumaB = dot(rgbB, luma);\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\n        color = vec4(rgbA, texColor.a);\n    else\n        color = vec4(rgbB, texColor.a);\n    return color;\n}\n\n\n\n\n//texcoords computed in vertex step\n//to avoid dependent texture reads\nvarying vec2 v_rgbNW;\nvarying vec2 v_rgbNE;\nvarying vec2 v_rgbSW;\nvarying vec2 v_rgbSE;\nvarying vec2 v_rgbM;\n\nhighp float random_2_1(vec2 co)\n{\n    highp float a = 12.9898;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(co.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\n\n\nvec3 blendSoftLight_4_2(vec3 base, vec3 blend) {\n    return mix(\n        sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend), \n        2.0 * base * blend + base * base * (1.0 - 2.0 * blend), \n        step(base, vec3(0.5))\n    );\n}\n\n// Using conditionals\n// vec3 blendSoftLight(vec3 base, vec3 blend) {\n//     return vec3(\n//         ((blend.r < 0.5) ? (2.0 * base.r * blend.r + base.r * base.r * (1.0 - 2.0 * blend.r)) : (sqrt(base.r) * (2.0 * blend.r - 1.0) + 2.0 * base.r * (1.0 - blend.r))),\n//         ((blend.g < 0.5) ? (2.0 * base.g * blend.g + base.g * base.g * (1.0 - 2.0 * blend.g)) : (sqrt(base.g) * (2.0 * blend.g - 1.0) + 2.0 * base.g * (1.0 - blend.g))),\n//         ((blend.b < 0.5) ? (2.0 * base.b * blend.b + base.b * base.b * (1.0 - 2.0 * blend.b)) : (sqrt(base.b) * (2.0 * blend.b - 1.0) + 2.0 * base.b * (1.0 - blend.b)))\n//     );\n// }\n\n\nfloat luma_3_3(vec3 color) {\n  return dot(color, vec3(0.299, 0.587, 0.114));\n}\n\nfloat luma_3_3(vec4 color) {\n  return dot(color.rgb, vec3(0.299, 0.587, 0.114));\n}\n\n\n\n\nuniform sampler2D tDiffuse;\nuniform vec2 resolution;\nuniform float nIntensity;\nuniform float time;\n\nvarying vec2 vUv;\n\nvoid main() {\n  vec2 p = vUv;\n  vec2 fragCoord = vUv * resolution;\n\n  // FXAA\n  gl_FragColor = fxaa_1_0(tDiffuse, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n\n  float center = smoothstep(0.0, 1.0, length(vUv-0.5));\n\n  // Add vignetting.\n  gl_FragColor.rgb = mix(gl_FragColor.rgb, vec3(0.0, 0.0, 0.0), center * 0.5);\n\n  // Add film grain.\n  vec3 g = vec3( random_2_1( (gl_FragCoord.xy / resolution.xy) * time )) * nIntensity;\n\n  vec3 color = blendSoftLight_4_2(gl_FragColor.rgb, g);\n  float luminance = luma_3_3(gl_FragColor.rgb);\n  //reduce the noise based on some\n  //threshold of the background luminance\n  float response = smoothstep(0.05, 0.5, luminance);\n  color = mix(color, gl_FragColor.rgb, pow(response, 2.0));\n\n  gl_FragColor = vec4(color, 1.0);\n\n}\n'},function(n,e,t){n.exports=TweenMax},function(n,e,t){var r,a=function(n,e){return function(){return n.apply(e,arguments)}};r=function(n){var e,r,i,o,l,s,u,m;return m=t(16),s=t(2),i=t(40),u=t(52),r=t(36),l=t(43),o=t(44),e=function(){function n(e,t){var r,i,o,l;this.values=null!=e?e:{},null==t&&(t=0),this.renderOutline=a(this.renderOutline,this),this.renderCircle=a(this.renderCircle,this),o=n.properties;for(r in o)i=o[r],null==this.values[r]&&(this.values[r]=i.val);this.container=new s.Object3D,this.container.scale.set(.001,.001,.001),this.container.position.set(this.values.x,this.values.y,this.values.z),this.container.rotation.set(0,0,this.values.randRotZ),this.materials=[],this.start=Date.now(),this.offset=new s.Vector3,this.velocity=new s.Vector3,this.weight=.5*Math.random()+.5,this.direction=new s.Vector3(2*Math.random()-1,2*Math.random()-1,0),this.speed=0,this.animatedProperties={scale:.001},this.timeline=new TimelineMax,l=TweenLite.to(this.animatedProperties,0,{scale:1e-5,ease:Linear.easeNone}),this.timeline.add(l,0),l=TweenLite.to(this.animatedProperties,this.values.duration,{scale:1,delay:this.values.delay,ease:Cubic.easeOut}),this.timeline.add(l),l=TweenLite.to(this.animatedProperties,.5*this.values.duration,{scale:1,ease:Cubic.easeOut}),this.timeline.add(l),l=TweenLite.to(this.animatedProperties,this.values.duration,{scale:1e-5,ease:Cubic.easeIn}),this.timeline.add(l),this.renderCircle(this.values.size,this.values.fillColor)}return n.circleGeom=new s.CircleGeometry(10,30,0,2*Math.PI),n.ringGeom=new s.RingGeometry(9,11,30,1,0,2*Math.PI),n.ringGeom2=new s.RingGeometry(9,10,30,1,0,2*Math.PI),n.properties={size:{name:"size",label:"size",val:80},outlineWidth:{name:"outlineWidth",label:"outline width",val:2},drawOutline:{name:"drawOutline",label:"draw outline",val:!0},drawCircle:{name:"drawCircle",label:"draw circle",val:!1},color:{name:"color",label:"color",val:!1},fillColor:{name:"fillColor",label:"fill color",val:!1},delay:{name:"delay",label:"delay",val:0},duration:{name:"duration",label:"duration",val:.5},x:{name:"x",label:"x",val:0},y:{name:"y",label:"y",val:0},z:{name:"z",label:"z",val:0},randRotZ:{name:"randRotZ",label:"random rotation z",val:0},randScaleX:{name:"randScaleX",label:"random scale x",val:0},randScaleY:{name:"randScaleY",label:"random scale y",val:0}},n.prototype.getGeometry=function(){return n.circleGeom},n.prototype.getGeometryOutline=function(e){return 1>e?n.ringGeom:n.ringGeom2},n.prototype.destroy=function(){var n,e,t,r;for(this.timeline.clear(),r=this.container.children,e=0,t=r.length;t>e;e++)n=r[e],this.container.remove(n);return this.container=null},n.prototype.getMaterial=function(n){var e,t;return t={time:{type:"f",value:0},seed:{type:"f",value:1e3*Math.random()},strength:{type:"f",value:.2},color:{type:"c",value:n}},e=new s.ShaderMaterial({vertexShader:l,fragmentShader:o,uniforms:t,transparent:!0,depthWrite:!1,depthTest:!1}),e.blending=s.AdditiveBlending,e},n.prototype.update=function(n,e){var t,r,a,i,o,l;for(this.container.position.add(this.velocity),
this.velocity=this.velocity.multiplyScalar(.94),l=Date.now()-this.start,i=this.materials,t=0,r=i.length;r>t;t++)a=i[t],a.uniforms.time.value=25e-5*l,a.uniforms.strength.value=window.audio.data.filters.mid.timeDomainRMS;return o=this.animatedProperties.scale*this.values.size*.1,this.container.scale.set(o*(1+this.values.randScaleX),o*(1+this.values.randScaleY),o)},n.prototype.renderCircle=function(n,e){var t,r;return t=this.getMaterial(e),this.materials.push(t),r=new s.Mesh(this.getGeometry(),t),this.container.add(r)},n.prototype.renderOutline=function(n,e,t){var r,a,i;return r=this.getGeometryOutline(t),a=this.getMaterial(e),this.materials.push(a),i=new s.Mesh(r,a),this.container.add(i)},n}()}.call(e,t,e,n),!(void 0!==r&&(n.exports=r))}]);
//# sourceMappingURL=App.js.map