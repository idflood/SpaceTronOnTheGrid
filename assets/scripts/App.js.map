{"version":3,"sources":["webpack:///App.js","webpack:///webpack/bootstrap 4701a2e0d46f88b03af1?f031","webpack:///./src/scripts/app/App.coffee","webpack:///./src/scripts/vendors/three.js-extras/shaders/CopyShader.js","webpack:///external \"THREE\"","webpack:///external \"TweenTime.Core\"","webpack:///./src/scripts/app/components/Audio.coffee","webpack:///./src/scripts/app/components/Shaders.coffee","webpack:///./src/scripts/app/components/Background.coffee","webpack:///./src/scripts/app/components/PostFX.coffee","webpack:///./src/scripts/app/components/SceneManager.coffee","webpack:///./src/scripts/app/components/ElementFactory.coffee","webpack:///./src/scripts/app/components/DataNormalizer.coffee","webpack:///./src/scripts/app/elements/Particles.coffee","webpack:///./src/scripts/app/elements/OrganizedChaos.coffee","webpack:///external \"_\"","webpack:///./src/scripts/app/data.json","webpack:///external {\"root\":\"signals\",\"commonjs\":\"./signals\",\"amd\":\"signals\"}","webpack:///./src/scripts/app/elements/Global.coffee","webpack:///./src/scripts/app/postprocessing/GlitchPass2.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/EffectComposer.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/MaskPass.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/BloomPass.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/ShaderPass.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/RenderPass.js","webpack:///./src/scripts/app/postprocessing/CustomPostPass.js","webpack:///./src/scripts/vendors/three.js-extras/shaders/FXAAShader.js","webpack:///./src/scripts/vendors/three.js-extras/shaders/ConvolutionShader.js","webpack:///./src/scripts/app/shaders/DigitalGlitch2.js","webpack:///./src/scripts/app/elements/Lines.coffee","webpack:///./src/scripts/app/elements/Camera.coffee","webpack:///./src/scripts/app/elements/Circles.coffee","webpack:///./src/scripts/app/elements/Boxes.coffee","webpack:///./src/scripts/app/elements/SingleObject.coffee","webpack:///./src/scripts/app/elements/Circle.coffee","webpack:///./src/scripts/app/components/Colors.coffee","webpack:///./src/scripts/app/elements/ElementBase.coffee","webpack:///./src/scripts/app/geometries/CircleGeometry2.js","webpack:///./src/scripts/bower_components/rng-js/rng.js?2b54","webpack:///./src/scripts/bower_components/rng-js/rng.js","webpack:///./src/scripts/app/shaders/Basic.vert","webpack:///./src/scripts/app/shaders/Line.frag","webpack:///./src/scripts/app/shaders/BasicNoise.vert","webpack:///./src/scripts/app/shaders/BasicNoise.frag","webpack:///./src/scripts/app/elements/AnimatedLine.coffee","webpack:///./src/scripts/app/elements/SpreadedObjects.coffee","webpack:///./src/scripts/app/elements/AnimatedBox.coffee","webpack:///./src/scripts/app/elements/AnimatedCircle.coffee","webpack:///./src/scripts/app/geometries/RingGeometry2.js","webpack:///./src/scripts/app/postprocessing/CustomPostPass.vert","webpack:///./src/scripts/app/postprocessing/CustomPostPass.frag","webpack:///external \"TweenMax\"","webpack:///./src/scripts/app/elements/AnimatedObject.coffee"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","bind","fn","me","apply","arguments","require","App","Audio","Background","DataNormalizer","ElementFactory","OrganizedChaos","Particles","PostFX","SceneManager","Shaders","THREE","TweenTime","dataJson","window","options","$container","audio_url","conf","container","light1","size","this","animate","onWindowResize","updateCameraAspect","onAudioLoaded","play","onTimerSeeked","onTimerStatusChanged","autoplay","shaders","audio","factory","JSON","parse","settings","data","normalizeData","tweenTime","timer","statusChanged","add","seeked","time","seek","getScreenSize","camera","PerspectiveCamera","width","height","position","z","activeCamera","scene","Scene","fog","FogExp2","sceneManager","Date","now","$","get","containerWebgl","append","renderer","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","setClearColor","DirectionalLight","set","appendChild","domElement","addEventListener","postfx","prototype","is_playing","toggleClass","pause","addClass","console","log","SCREEN_HEIGHT","SCREEN_WIDTH","propertieswidth","timelineheight","innerWidth","innerHeight","editorEnabled","hasClass","aspect","updateProjectionMatrix","resize","requestAnimationFrame","update","render","delta","newTime","particles","chaos","lookAt","undefined","CopyShader","uniforms","tDiffuse","type","value","opacity","vertexShader","join","fragmentShader","Core","_","mp3Url","onLoadedCallback","gain2","muted","parameters","rms","createSound","load","fftSize","filters","playing","timeDelay","bass","mid","high","context","AudioContext","webkitAudioContext","analyser","createAnalyser","source","createBufferSource","frequency","Q","gain","treble","each","_this","spec","key","filter","createBiquadFilter","createDelay","delayNode","createDelayNode","delayTime","createGain","gainNode","createGainNode","delay","sampleRate","connect","destination","samples","frequencyBinCount","freq","Uint8Array","instance","bins","i","num","waveforms","smoothingTimeConstant","getByteFrequencyData","getByteTimeDomainData","currentTime","seconds","buffer","url","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","buff","loop","send","src","stop","disconnect","start","duration","accum","ref","s","length","Math","sqrt","Global","LineFragement","ShaderVertex","blue","j","mat","num_shaders","red","shadersWhite","shadersRed","shadersBlue","simpleMaterial","MeshBasicMaterial","color","shading","FlatShading","side","DoubleSide","simpleMaterialRed","simpleMaterialBlue","createMaterialLine","push","COLOR_WHITE","COLOR_RED","COLOR_BLUE","force","bassSensibility","globalValues","highSensibility","len","midSensibility","results","shader","percent","max","speed","random","global","values","autoAnimate","getMaterialLine","animated","floor","material","Color","fogColor","fogDensity",0.2045,"ShaderMaterial","transparent","depthWrite","depthTest","blending","AdditiveBlending","bg","bgMat","texture","ImageUtils","loadTexture","wrapS","wrapT","RepeatWrapping","repeat","map","Mesh","PlaneGeometry","dpr","renderModel","resolution","autoClear","RenderPass","renderTargetParameters","minFilter","LinearFilter","magFilter","format","RGBFormat","stencilBufer","renderTarget","WebGLRenderTarget","effectFXAA","ShaderPass","FXAAShader","bloom","BloomPass","glitchPass","GlitchPass2","intensity","tScratch","Vector2","customPass","CustomPostPass","renderToScreen","composer","EffectComposer","addPass","reset","clear","Signals","defaultCamera","updated","timestamp","el","item","should_exist","end","object","create","_data","isDirtyObject","parent","remove","classObject","getTypeClass","isCamera","Boxes","Camera","Circle","Circles","Lines","SingleObject","extend","properties","val","elements","Chaos","Box","itemType","getTypeProperties","itemName","element_class","prop","prop_definition","keys","warn","normalizeItem","data_item","existing_prop","key2","new_prop","static_prop","static_properties","value2","find","name","group","Colors","values1","index","geom","num_childs","ref1","Object3D","items","scale","MeshPhongMaterial","ambient","specular","shininess","circleGeom","ringGeom","x","y","numItems","parseInt","CircleGeometry","PI","RingGeometry","label","triggerRebuild","current","volume","child","ctor","constructor","hasProp","__super__","hasOwnProperty","CircleGeometry2","ElementBase","RNG","ShaderFragement","superClass","build","lineGeom","PlaneBufferGeometry","ringGeom2","squareGeom","TYPE_LINE","TYPE_SQUARE","TYPE_CIRCLE","seed","depth","spread","spreadY","maxChilds","horizontalSymmetry","min","verticalSymmetry","rotationX","rotationY","rotationZ","rotationRandX","rotationRandY","rotationRandZ","circles","squares","lineWidth","lineWidthRand","lineHeight","lineHeightRand","materialRed","materialBlue","materialAnimated","getDefaultProperties","rebuild","empty","getItemType","rng","getItemColor","itemColor","ii","offset","pos2","posX","posY","rnd","rngChilds","rngColor","rngHorizontalSymmetry","rngRotationX","rngRotationY","rngRotationZ","rngScale","rngScaleLine","rngScaleLineHeight","rngScaleSquare","rngShaderAnim","rngSpacing","rngType","rngVerticalSymmetry","rngX","rngY","rotation","spacing","spreadY_half","spread_half","Vector3","multiplyScalar","addItem","clone","normalize","k","results1","item2","item2Container","quaternion","Quaternion","setFromAxisAngle","setFromQuaternion","copy","updateMatrix","getMaterial","strength","needs_rebuild","valueChanged","merge","destroy","children","dt_size","DigitalGlitch2","error","UniformsUtils","generateHeightmap","enabled","needsSwap","OrthographicCamera","quad","goWild","curF","generateTrigger","writeBuffer","readBuffer","randFloat","randX","randInt","data_arr","Float32Array","DataTexture","FloatType","NearestFilter","needsUpdate","flipY","stencilBuffer","renderTarget1","renderTarget2","passes","copyPass","swapBuffers","tmp","pass","insertPass","splice","maskActive","il","stencilFunc","NOTEQUAL","EQUAL","MaskPass","ClearMaskPass","inverse","colorMask","depthMask","writeValue","clearValue","enable","STENCIL_TEST","stencilOp","REPLACE","ALWAYS","clearStencil","KEEP","disable","kernelSize","sigma","pars","renderTargetX","renderTargetY","copyShader","copyUniforms","materialCopy","ConvolutionShader","convolutionShader","convolutionUniforms","blurx","buildKernel","materialConvolution","defines","KERNEL_SIZE_FLOAT","toFixed","KERNEL_SIZE_INT","blurX","blurY","textureID","overrideMaterial","clearColor","clearAlpha","oldClearColor","oldClearAlpha","getClearColor","getClearAlpha","CustomPostShader","nIntensity","noiseIntensity","uImageIncrement","cKernel","gauss","exp","sum","halfWidth","kMaxKernelSize","ceil","Array","tDisp","byp","amount","angle","seed_x","seed_y","distortion_x","distortion_y","col_s","AnimatedLine","SpreadedObjects","getItemClass","target","target_x","target_y","target_z","fov","AnimatedCircle","AnimatedBox","getGeometry","timeline","TimelineMax","rotX","rotY","rotZ","scaleX","scaleY","scaleZ","geometry","degreeToRadian","RingGeometry2","innerRadius","inner_radius","pi2","dynamic","vertices","verticesNeedUpdate","dispose","items2","abs","cache","buildCache","has_changed","new_val","degree","radius","segments","thetaStart","thetaLength","Geometry","uvs","center","centerUV","vertex","segment","cos","sin","n","faces","Face3","faceVertexUvs","computeFaceNormals","boundingSphere","Sphere","Object","RC4","mix","toString","uniform","nextByte","stringify","_normal","_state","getStringBytes","string","output","charCodeAt","bytes","concat","reverse","_swap","input","next","BYTES","pow","normal","exponential","poisson","mean","L","gamma","a","d","v","u","x2","roller","expr","parts","split","slice","dice","parseFloat","sides","mod","total","AnimatedObject","noOutline","getGeometryOutline","outlineWidth","progression","timeDiff","velocity","materials","animatedProperties","TweenMax","totalDuration","items_position","randY","randZ","randRotZ","randScaleX","randScaleY","circleRadius","circleRadiusMax","percent_color","border_radius","draw_circle","draw_outline","fillColor","itemClass","pos","rndtype","rngAnimation","rngOutline","getRandomPosition","drawOutline","drawCircle","len1","ref2","outerRadius","thetaSegments","phiSegments","o","radiusStep","uv","thetaSegment","v1","v2","v3","tween","renderOutline","renderCircle","weight","direction","TweenLite","to","ease","Linear","easeNone","Cubic","easeOut","easeIn"],"mappings":"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","file":"App.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var App, Audio, Background, DataNormalizer, ElementFactory, OrganizedChaos, Particles, PostFX, SceneManager, Shaders, THREE, TweenTime, dataJson;\n\t  THREE = __webpack_require__(2);\n\t  TweenTime = __webpack_require__(3);\n\t  Shaders = __webpack_require__(7);\n\t  Background = __webpack_require__(8);\n\t  PostFX = __webpack_require__(9);\n\t  SceneManager = __webpack_require__(10);\n\t  Audio = __webpack_require__(6);\n\t  ElementFactory = __webpack_require__(11);\n\t  DataNormalizer = __webpack_require__(12);\n\t  dataJson = __webpack_require__(17);\n\t  Particles = __webpack_require__(13);\n\t  OrganizedChaos = __webpack_require__(14);\n\t  return window.App = App = (function() {\n\t    function App(options) {\n\t      var $container, audio_url, conf, container, light1, size;\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      this.animate = bind(this.animate, this);\n\t      this.onWindowResize = bind(this.onWindowResize, this);\n\t      this.updateCameraAspect = bind(this.updateCameraAspect, this);\n\t      this.onAudioLoaded = bind(this.onAudioLoaded, this);\n\t      this.play = bind(this.play, this);\n\t      this.onTimerSeeked = bind(this.onTimerSeeked, this);\n\t      this.onTimerStatusChanged = bind(this.onTimerStatusChanged, this);\n\t      window.updateCameraAspect = this.updateCameraAspect;\n\t      this.autoplay = false;\n\t      if (options.autoplay != null) {\n\t        this.autoplay = options.autoplay;\n\t      }\n\t      this.shaders = new Shaders();\n\t      audio_url = './assets/08 - Space Tron On The Grid.mp3';\n\t      this.audio = new Audio(audio_url, this.onAudioLoaded);\n\t      this.factory = new ElementFactory();\n\t      conf = JSON.parse(dataJson);\n\t      this.settings = conf.settings;\n\t      this.data = DataNormalizer.normalizeData(conf.data, this.factory);\n\t      this.tweenTime = new TweenTime(this.data);\n\t      this.tweenTime.timer.statusChanged.add(this.onTimerStatusChanged);\n\t      this.tweenTime.timer.seeked.add(this.onTimerSeeked);\n\t      if (options.time != null) {\n\t        this.tweenTime.timer.seek([options.time]);\n\t      } else if (this.settings.time) {\n\t        this.tweenTime.timer.seek([this.settings.time]);\n\t      }\n\t      size = this.getScreenSize();\n\t      this.camera = new THREE.PerspectiveCamera(45, size.width / size.height, 1, 2000);\n\t      this.camera.position.z = 600;\n\t      window.activeCamera = this.camera;\n\t      this.scene = new THREE.Scene();\n\t      this.scene.fog = new THREE.FogExp2(0x111111, 0.0045);\n\t      this.sceneManager = new SceneManager(this.tweenTime, this.data, this.scene, this.camera, this.factory);\n\t      this.time = Date.now() * 0.0001;\n\t      $container = $('<div class=\"experiment\"></div>');\n\t      container = $container.get(0);\n\t      this.containerWebgl = container;\n\t      $('body').append($container);\n\t      this.renderer = new THREE.WebGLRenderer({\n\t        antialias: false,\n\t        alpha: false\n\t      });\n\t      this.renderer.setPixelRatio(window.devicePixelRatio);\n\t      this.renderer.setSize(size.width, size.height);\n\t      this.renderer.setClearColor(0x111111, 1);\n\t      light1 = new THREE.DirectionalLight(0xffffff, 0.4);\n\t      light1.position.set(100, 300, 700);\n\t      this.scene.add(light1);\n\t      container.appendChild(this.renderer.domElement);\n\t      window.addEventListener('resize', this.onWindowResize, false);\n\t      this.postfx = new PostFX(this.scene, this.camera, this.renderer, size);\n\t      this.onWindowResize();\n\t      this.animate();\n\t    }\n\t\n\t    App.prototype.onTimerStatusChanged = function(is_playing) {\n\t      $('body').toggleClass('is-stopped', !is_playing);\n\t      if (is_playing) {\n\t        return this.audio.play();\n\t      } else {\n\t        return this.audio.pause();\n\t      }\n\t    };\n\t\n\t    App.prototype.onTimerSeeked = function(time) {\n\t      return this.audio.seek(time / 1000);\n\t    };\n\t\n\t    App.prototype.play = function() {\n\t      this.tweenTime.timer.play();\n\t      return $('body').addClass('is-playing');\n\t    };\n\t\n\t    App.prototype.onAudioLoaded = function() {\n\t      console.log(\"audio loaded\");\n\t      $('body').addClass('is-audio-loaded');\n\t      if (this.autoplay) {\n\t        return this.play();\n\t      }\n\t    };\n\t\n\t    App.prototype.getScreenSize = function() {\n\t      var SCREEN_HEIGHT, SCREEN_WIDTH, propertieswidth, timelineheight;\n\t      SCREEN_WIDTH = window.innerWidth;\n\t      SCREEN_HEIGHT = window.innerHeight;\n\t      if (window.editorEnabled) {\n\t        timelineheight = 295;\n\t        if ($('body').hasClass('timeline-is-closed')) {\n\t          timelineheight = 95;\n\t        }\n\t        propertieswidth = 279;\n\t        if ($('body').hasClass('properties-is-closed')) {\n\t          propertieswidth = 0;\n\t        }\n\t        SCREEN_HEIGHT -= timelineheight;\n\t        SCREEN_WIDTH -= propertieswidth;\n\t      }\n\t      return {\n\t        width: SCREEN_WIDTH,\n\t        height: SCREEN_HEIGHT\n\t      };\n\t    };\n\t\n\t    App.prototype.updateCameraAspect = function(camera, size) {\n\t      if (size == null) {\n\t        size = false;\n\t      }\n\t      if (size === false) {\n\t        size = this.getScreenSize();\n\t      }\n\t      camera.aspect = size.width / size.height;\n\t      return camera.updateProjectionMatrix();\n\t    };\n\t\n\t    App.prototype.onWindowResize = function() {\n\t      var size;\n\t      size = this.getScreenSize();\n\t      this.updateCameraAspect(this.camera, size);\n\t      this.updateCameraAspect(window.activeCamera, size);\n\t      this.renderer.setSize(size.width, size.height);\n\t      return this.postfx.resize(size.width, size.height);\n\t    };\n\t\n\t    App.prototype.animate = function() {\n\t      requestAnimationFrame(this.animate);\n\t      this.audio.update();\n\t      this.shaders.update();\n\t      return this.render();\n\t    };\n\t\n\t    App.prototype.render = function() {\n\t      var delta, newTime;\n\t      newTime = Date.now() * 0.0001;\n\t      delta = newTime - this.time;\n\t      if (this.particles) {\n\t        this.particles.update();\n\t      }\n\t      if (this.chaos) {\n\t        this.chaos.update();\n\t      }\n\t      this.camera.lookAt(this.scene.position);\n\t      this.postfx.render(delta);\n\t      return this.time = newTime;\n\t    };\n\t\n\t    return App;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Full-screen textured quad shader\n\t */\n\t\n\tTHREE.CopyShader = {\n\t\n\t\tuniforms: {\n\t\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\t\n\t\t},\n\t\n\t\tvertexShader: [\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tfragmentShader: [\n\t\n\t\t\t\"uniform float opacity;\",\n\t\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\t\"gl_FragColor = opacity * texel;\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\")\n\t\n\t};\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = THREE;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = TweenTime.Core;\n\n/***/ },\n/* 4 */,\n/* 5 */,\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Audio, _;\n\t  _ = __webpack_require__(16);\n\t  return Audio = (function() {\n\t    Audio.instance = false;\n\t\n\t    function Audio(mp3Url, onLoadedCallback) {\n\t      var gain2, muted, parameters;\n\t      this.onLoadedCallback = onLoadedCallback;\n\t      this.rms = bind(this.rms, this);\n\t      this.play = bind(this.play, this);\n\t      this.pause = bind(this.pause, this);\n\t      this.createSound = bind(this.createSound, this);\n\t      this.load = bind(this.load, this);\n\t      this.seek = bind(this.seek, this);\n\t      this.update = bind(this.update, this);\n\t      window.audio = this;\n\t      muted = true;\n\t      this.fftSize = 512;\n\t      this.filters = {};\n\t      this.playing = false;\n\t      this.now = 0.0;\n\t      this.timeDelay = 0.0;\n\t      this.bass = 0;\n\t      this.mid = 0;\n\t      this.high = 0;\n\t      this.context = false;\n\t      if (typeof AudioContext !== \"undefined\") {\n\t        this.context = new AudioContext();\n\t      } else if (typeof webkitAudioContext !== \"undefined\") {\n\t        this.context = new webkitAudioContext();\n\t      }\n\t      this.analyser = this.context.createAnalyser();\n\t      this.analyser.fftSize = this.fftSize;\n\t      this.source = this.context.createBufferSource();\n\t      parameters = {\n\t        bass: {\n\t          type: 0,\n\t          frequency: 120,\n\t          Q: 1.2,\n\t          gain: 2.0\n\t        },\n\t        mid: {\n\t          type: 2,\n\t          frequency: 400,\n\t          Q: 1.2,\n\t          gain: 4.0\n\t        },\n\t        treble: {\n\t          type: 1,\n\t          frequency: 2000,\n\t          Q: 1.2,\n\t          gain: 3.0\n\t        }\n\t      };\n\t      _.each(parameters, (function(_this) {\n\t        return function(spec, key) {\n\t          var filter;\n\t          filter = _this.context.createBiquadFilter();\n\t          filter.key = key;\n\t          filter.type = spec.type;\n\t          filter.frequency = spec.frequency;\n\t          filter.Q.value = spec.Q;\n\t          filter.analyser = _this.context.createAnalyser();\n\t          filter.analyser.fftSize = _this.fftSize;\n\t          if (_this.context.createDelay != null) {\n\t            filter.delayNode = _this.context.createDelay();\n\t          } else {\n\t            filter.delayNode = _this.context.createDelayNode();\n\t          }\n\t          filter.delayNode.delayTime.value = 0;\n\t          if (_this.context.createGain != null) {\n\t            filter.gainNode = _this.context.createGain();\n\t          } else {\n\t            filter.gainNode = _this.context.createGainNode();\n\t          }\n\t          filter.gainNode.gain.value = spec.gain;\n\t          return _this.filters[key] = filter;\n\t        };\n\t      })(this));\n\t      if (this.context.createDelay != null) {\n\t        this.delay = this.context.createDelay();\n\t      } else {\n\t        this.delay = this.context.createDelayNode();\n\t      }\n\t      this.delay.delayTime.value = this.fftSize * 2 / this.context.sampleRate;\n\t      this.source.connect(this.analyser);\n\t      this.analyser.connect(this.delay);\n\t      if (muted) {\n\t        gain2 = this.context.createGain();\n\t        this.delay.connect(gain2);\n\t        gain2.gain.value = 0.00;\n\t        gain2.connect(this.context.destination);\n\t      } else {\n\t        this.delay.connect(this.context.destination);\n\t      }\n\t      _.each(this.filters, (function(_this) {\n\t        return function(filter) {\n\t          _this.source.connect(filter.delayNode);\n\t          filter.delayNode.connect(filter);\n\t          filter.connect(filter.gainNode);\n\t          return filter.gainNode.connect(filter.analyser);\n\t        };\n\t      })(this));\n\t      this.samples = this.analyser.frequencyBinCount;\n\t      this.data = {\n\t        freq: new Uint8Array(this.samples),\n\t        time: new Uint8Array(this.samples),\n\t        filter: {\n\t          bass: new Uint8Array(256),\n\t          mid: new Uint8Array(256),\n\t          treble: new Uint8Array(256)\n\t        }\n\t      };\n\t      this.load(mp3Url);\n\t      Audio.instance = this;\n\t    }\n\t\n\t    Audio.prototype.update = function() {\n\t      var bins, i, num, waveforms;\n\t      if (this.playing === false) {\n\t        return;\n\t      }\n\t      this.analyser.smoothingTimeConstant = 0;\n\t      this.analyser.getByteFrequencyData(this.data.freq);\n\t      this.analyser.getByteTimeDomainData(this.data.time);\n\t      _.each(this.filters, (function(_this) {\n\t        return function(filter) {\n\t          return filter.analyser.getByteTimeDomainData(_this.data.filter[filter.key]);\n\t        };\n\t      })(this));\n\t      bins = [0, 0, 0, 0];\n\t      waveforms = [this.data.time, this.data.filter.bass, this.data.filter.mid, this.data.filter.treble];\n\t      for (num = i = 0; i <= 3; num = ++i) {\n\t        bins[num] = this.rms(waveforms[num]);\n\t      }\n\t      this.bass = bins[1];\n\t      this.mid = bins[2];\n\t      this.high = bins[3];\n\t      return this.now = this.context.currentTime - this.timeDelay;\n\t    };\n\t\n\t    Audio.prototype.seek = function(seconds) {\n\t      this.now = seconds;\n\t      if (this.source.buffer) {\n\t        if (this.playing) {\n\t          this.pause();\n\t          return this.play();\n\t        }\n\t      }\n\t    };\n\t\n\t    Audio.prototype.load = function(url) {\n\t      var request;\n\t      request = new XMLHttpRequest();\n\t      request.open(\"GET\", url, true);\n\t      request.responseType = \"arraybuffer\";\n\t      request.onload = (function(_this) {\n\t        return function() {\n\t          return _this.context.decodeAudioData(request.response, function(buff) {\n\t            _this.buffer = buff;\n\t            _this.source.buffer = _this.buffer;\n\t            _this.source.loop = false;\n\t            if (_this.onLoadedCallback) {\n\t              return _this.onLoadedCallback();\n\t            }\n\t          });\n\t        };\n\t      })(this);\n\t      return request.send();\n\t    };\n\t\n\t    Audio.prototype.createSound = function() {\n\t      var src;\n\t      src = this.context.createBufferSource();\n\t      if (this.buffer) {\n\t        src.buffer = this.buffer;\n\t      }\n\t      src.connect(this.analyser);\n\t      _.each(this.filters, (function(_this) {\n\t        return function(filter) {\n\t          return src.connect(filter.delayNode);\n\t        };\n\t      })(this));\n\t      return src;\n\t    };\n\t\n\t    Audio.prototype.pause = function() {\n\t      if (this.source) {\n\t        if (this.playing) {\n\t          this.source.stop(0);\n\t        }\n\t        this.source.disconnect(0);\n\t        this.source = false;\n\t      }\n\t      return this.playing = false;\n\t    };\n\t\n\t    Audio.prototype.play = function() {\n\t      this.playing = true;\n\t      this.timeDelay = this.context.currentTime - this.now;\n\t      if (!this.source) {\n\t        this.source = this.createSound();\n\t      }\n\t      if (this.source.buffer) {\n\t        return this.source.start(0, this.now, this.buffer.duration - this.now);\n\t      }\n\t    };\n\t\n\t    Audio.prototype.rms = function(data) {\n\t      var accum, i, num, ref, s, size;\n\t      size = data.length;\n\t      accum = 0;\n\t      for (num = i = 0, ref = size - 1; 0 <= ref ? i <= ref : i >= ref; num = 0 <= ref ? ++i : --i) {\n\t        s = (data[num] - 128) / 128;\n\t        accum += s * s;\n\t      }\n\t      return Math.sqrt(accum / size);\n\t    };\n\t\n\t    return Audio;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Audio, Global, LineFragement, ShaderVertex, Shaders, THREE;\n\t  THREE = __webpack_require__(2);\n\t  Audio = __webpack_require__(6);\n\t  Global = __webpack_require__(19);\n\t  ShaderVertex = __webpack_require__(41);\n\t  LineFragement = __webpack_require__(42);\n\t  return Shaders = (function() {\n\t    Shaders.COLOR_WHITE = 0;\n\t\n\t    Shaders.COLOR_RED = 1;\n\t\n\t    Shaders.COLOR_BLUE = 2;\n\t\n\t    function Shaders() {\n\t      var blue, i, j, mat, num_shaders, red, ref;\n\t      window.shaders = this;\n\t      this.shaders = [];\n\t      this.shadersWhite = [];\n\t      this.shadersRed = [];\n\t      this.shadersBlue = [];\n\t      red = 0xe66c00;\n\t      blue = 0x27acef;\n\t      num_shaders = 50;\n\t      this.simpleMaterial = new THREE.MeshBasicMaterial({\n\t        color: 0xdddddd,\n\t        shading: THREE.FlatShading,\n\t        side: THREE.DoubleSide\n\t      });\n\t      this.simpleMaterialRed = new THREE.MeshBasicMaterial({\n\t        color: red,\n\t        shading: THREE.FlatShading,\n\t        side: THREE.DoubleSide\n\t      });\n\t      this.simpleMaterialBlue = new THREE.MeshBasicMaterial({\n\t        color: blue,\n\t        shading: THREE.FlatShading,\n\t        side: THREE.DoubleSide\n\t      });\n\t      for (i = j = 0, ref = num_shaders; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n\t        mat = this.createMaterialLine(0xdddddd);\n\t        this.shaders.push(mat);\n\t        this.shadersWhite.push(mat);\n\t        mat = this.createMaterialLine(red);\n\t        this.shaders.push(mat);\n\t        this.shadersRed.push(mat);\n\t        mat = this.createMaterialLine(blue);\n\t        this.shaders.push(mat);\n\t        this.shadersBlue.push(mat);\n\t      }\n\t    }\n\t\n\t    Shaders.prototype.update = function(force) {\n\t      var bassSensibility, globalValues, highSensibility, j, len, midSensibility, ref, results, shader;\n\t      if (force == null) {\n\t        force = 0;\n\t      }\n\t      ref = this.shaders;\n\t      results = [];\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        shader = ref[j];\n\t        shader.uniforms.percent.value = Math.max(0, shader.uniforms.percent.value - shader.speed * 0.03);\n\t        if (shader.uniforms.percent.value < 0.02) {\n\t          if (force && Math.random() < force) {\n\t            results.push(shader.uniforms.percent.value = 2);\n\t          } else if (Math.random() < 0.02) {\n\t            bassSensibility = 0;\n\t            midSensibility = 0;\n\t            highSensibility = 0;\n\t            globalValues = false;\n\t            if (window.global && window.global.values) {\n\t              globalValues = window.global.values;\n\t              bassSensibility = globalValues.bassSensibility;\n\t              midSensibility = globalValues.midSensibility;\n\t              highSensibility = globalValues.highSensibility;\n\t            }\n\t            if (window.audio.bass > bassSensibility || window.audio.mid > midSensibility || window.audio.high > highSensibility) {\n\t              shader.uniforms.percent.value = 2;\n\t            }\n\t            if (globalValues && Math.random() < globalValues.autoAnimate) {\n\t              results.push(shader.uniforms.percent.value = 2);\n\t            } else {\n\t              results.push(void 0);\n\t            }\n\t          } else {\n\t            results.push(void 0);\n\t          }\n\t        } else {\n\t          results.push(void 0);\n\t        }\n\t      }\n\t      return results;\n\t    };\n\t\n\t    Shaders.prototype.getMaterialLine = function(animated, color) {\n\t      var shaders;\n\t      if (animated === false) {\n\t        switch (color) {\n\t          case Shaders.COLOR_RED:\n\t            return this.simpleMaterialRed;\n\t          case Shaders.COLOR_BLUE:\n\t            return this.simpleMaterialBlue;\n\t        }\n\t        return this.simpleMaterial;\n\t      }\n\t      shaders = this.shadersWhite;\n\t      if (color === Shaders.COLOR_RED) {\n\t        shaders = this.shadersRed;\n\t      }\n\t      if (color === Shaders.COLOR_BLUE) {\n\t        shaders = this.shadersBlue;\n\t      }\n\t      return shaders[Math.floor(Math.random() * shaders.length)];\n\t    };\n\t\n\t    Shaders.prototype.createMaterialLine = function(color) {\n\t      var material, uniforms;\n\t      uniforms = {\n\t        percent: {\n\t          type: 'f',\n\t          value: 1.0\n\t        },\n\t        color: {\n\t          type: 'c',\n\t          value: new THREE.Color(color)\n\t        },\n\t        fogColor: {\n\t          type: \"c\",\n\t          value: new THREE.Color(0x111111)\n\t        },\n\t        fogDensity: {\n\t          type: \"f\",\n\t          0.2045: 0.2045\n\t        }\n\t      };\n\t      material = new THREE.ShaderMaterial({\n\t        vertexShader: ShaderVertex,\n\t        fragmentShader: LineFragement,\n\t        side: THREE.DoubleSide,\n\t        shading: THREE.FlatShading,\n\t        uniforms: uniforms,\n\t        transparent: true,\n\t        depthWrite: false,\n\t        depthTest: false,\n\t        fog: true\n\t      });\n\t      material.speed = Math.random() + 0.5;\n\t      material.blending = THREE.AdditiveBlending;\n\t      return material;\n\t    };\n\t\n\t    return Shaders;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Background, THREE;\n\t  THREE = __webpack_require__(2);\n\t  return Background = (function() {\n\t    function Background(scene) {\n\t      var bg, bgMat, texture;\n\t      this.scene = scene;\n\t      texture = THREE.ImageUtils.loadTexture('src/images/background.jpg');\n\t      texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n\t      texture.repeat.set(2, 2);\n\t      bgMat = new THREE.MeshBasicMaterial({\n\t        map: texture\n\t      });\n\t      bg = new THREE.Mesh(new THREE.PlaneGeometry(1600, 1600, 4, 4), bgMat);\n\t      bg.material.depthTest = false;\n\t      bg.material.depthWrite = false;\n\t      bg.position.set(0, 0, -10);\n\t      this.scene.add(bg);\n\t    }\n\t\n\t    return Background;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var PostFX, THREE;\n\t  THREE = __webpack_require__(2);\n\t  __webpack_require__(21);\n\t  __webpack_require__(22);\n\t  __webpack_require__(23);\n\t  __webpack_require__(24);\n\t  __webpack_require__(25);\n\t  __webpack_require__(20);\n\t  __webpack_require__(26);\n\t  __webpack_require__(1);\n\t  __webpack_require__(27);\n\t  __webpack_require__(28);\n\t  __webpack_require__(29);\n\t  return PostFX = (function() {\n\t    function PostFX(scene, camera, renderer, size) {\n\t      var dpr, renderModel, resolution;\n\t      this.scene = scene;\n\t      this.camera = camera;\n\t      this.renderer = renderer;\n\t      this.renderer.autoClear = false;\n\t      renderModel = new THREE.RenderPass(this.scene, this.camera);\n\t      window.renderModel = renderModel;\n\t      dpr = window.devicePixelRatio != null ? window.devicePixelRatio : 1;\n\t      this.renderTargetParameters = {\n\t        minFilter: THREE.LinearFilter,\n\t        magFilter: THREE.LinearFilter,\n\t        format: THREE.RGBFormat,\n\t        stencilBufer: false\n\t      };\n\t      this.renderTarget = new THREE.WebGLRenderTarget(size.width * dpr, size.height * dpr, this.renderTargetParameters);\n\t      this.effectFXAA = new THREE.ShaderPass(THREE.FXAAShader);\n\t      this.effectFXAA.uniforms['resolution'].value.set(1 / (size.width * dpr), 1 / (size.height * dpr));\n\t      this.bloom = new THREE.BloomPass(0.9, 25, 4);\n\t      this.glitchPass = new THREE.GlitchPass2();\n\t      this.glitchPass.intensity = 0.3;\n\t      this.glitchPass.uniforms.tScratch.value = THREE.ImageUtils.loadTexture(\"src/images/lensflare_dirt.jpg\");\n\t      resolution = new THREE.Vector2(size.width * dpr, size.height * dpr);\n\t      this.customPass = new THREE.CustomPostPass(0.55, resolution);\n\t      this.customPass.renderToScreen = true;\n\t      this.composer = new THREE.EffectComposer(this.renderer, this.renderTarget);\n\t      this.composer.setSize(size.width * dpr, size.height * dpr);\n\t      this.composer.addPass(renderModel);\n\t      this.composer.addPass(this.bloom);\n\t      this.composer.addPass(this.customPass);\n\t    }\n\t\n\t    PostFX.prototype.resize = function(SCREEN_WIDTH, SCREEN_HEIGHT) {\n\t      var dpr;\n\t      dpr = window.devicePixelRatio != null ? window.devicePixelRatio : 1;\n\t      this.renderTarget = new THREE.WebGLRenderTarget(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr, this.renderTargetParameters);\n\t      this.composer.reset(this.renderTarget);\n\t      this.effectFXAA.uniforms['resolution'].value.set(1 / (SCREEN_WIDTH * dpr), 1 / (SCREEN_HEIGHT * dpr));\n\t      return this.customPass.uniforms['resolution'].value.set(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr);\n\t    };\n\t\n\t    PostFX.prototype.render = function(delta) {\n\t      this.renderer.clear();\n\t      return this.composer.render(delta);\n\t    };\n\t\n\t    return PostFX;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var SceneManager, Signals, _;\n\t  _ = __webpack_require__(16);\n\t  Signals = __webpack_require__(18);\n\t  return SceneManager = (function() {\n\t    function SceneManager(tweenTime, data, scene, defaultCamera, factory) {\n\t      this.tweenTime = tweenTime;\n\t      this.data = data;\n\t      this.scene = scene;\n\t      this.defaultCamera = defaultCamera;\n\t      this.factory = factory;\n\t      this.update = bind(this.update, this);\n\t      this.timer = this.tweenTime.timer;\n\t      this.timer.updated.add(this.update);\n\t      this.update(0);\n\t    }\n\t\n\t    SceneManager.prototype.update = function(timestamp) {\n\t      var activeCamera, el, i, item, len, ref, seconds, should_exist, type;\n\t      activeCamera = this.defaultCamera;\n\t      seconds = timestamp / 1000;\n\t      ref = this.data;\n\t      for (i = 0, len = ref.length; i < len; i++) {\n\t        item = ref[i];\n\t        should_exist = seconds >= item.start && seconds <= item.end ? true : false;\n\t        if (!item.object) {\n\t          type = item.type;\n\t          el = this.factory.create(type, item.values, seconds - item.start);\n\t          item.object = el;\n\t          if (el.container) {\n\t            el.container._data = item;\n\t          }\n\t        }\n\t        if ((item.object && should_exist === false) || item.isDirtyObject) {\n\t          item.isDirtyObject = false;\n\t          if (item.object && item.object.container && item.object.container.parent) {\n\t            this.scene.remove(item.object.container);\n\t          }\n\t        }\n\t        if (!item.classObject) {\n\t          item.classObject = this.factory.getTypeClass(item.type);\n\t        }\n\t        if (should_exist && item.object.container && !item.object.container.parent) {\n\t          this.scene.add(item.object.container);\n\t        }\n\t        if (item.object && item.object.isCamera) {\n\t          activeCamera = item.object.container;\n\t          window.updateCameraAspect(activeCamera);\n\t        }\n\t        if (item.object) {\n\t          item.object.update(seconds - item.start, item.values);\n\t        }\n\t      }\n\t      window.activeCamera = activeCamera;\n\t      if (window.renderModel) {\n\t        return window.renderModel.camera = activeCamera;\n\t      }\n\t    };\n\t\n\t    return SceneManager;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Boxes, Camera, Circle, Circles, ElementFactory, Global, Lines, OrganizedChaos, SingleObject, extend;\n\t  Camera = __webpack_require__(31);\n\t  Global = __webpack_require__(19);\n\t  Circles = __webpack_require__(32);\n\t  Boxes = __webpack_require__(33);\n\t  Lines = __webpack_require__(30);\n\t  SingleObject = __webpack_require__(34);\n\t  Circle = __webpack_require__(35);\n\t  OrganizedChaos = __webpack_require__(14);\n\t  extend = function(object, properties) {\n\t    var key, val;\n\t    for (key in properties) {\n\t      val = properties[key];\n\t      if (typeof object[key] === 'object' && object[key] !== null) {\n\t        object[key] = extend({}, val);\n\t      } else {\n\t        object[key] = val;\n\t      }\n\t    }\n\t    return object;\n\t  };\n\t  ElementFactory = (function() {\n\t    function ElementFactory() {\n\t      this.getTypeClass = bind(this.getTypeClass, this);\n\t    }\n\t\n\t    ElementFactory.elements = {\n\t      Chaos: {\n\t        classObject: OrganizedChaos\n\t      },\n\t      Circles: {\n\t        classObject: Circles\n\t      },\n\t      Boxes: {\n\t        classObject: Boxes\n\t      },\n\t      Lines: {\n\t        classObject: Lines\n\t      },\n\t      Camera: {\n\t        classObject: Camera\n\t      },\n\t      Global: {\n\t        classObject: Global\n\t      },\n\t      Box: {\n\t        classObject: SingleObject\n\t      },\n\t      Circle: {\n\t        classObject: Circle\n\t      }\n\t    };\n\t\n\t    ElementFactory.prototype.getTypeClass = function(itemType) {\n\t      return ElementFactory.elements[itemType].classObject;\n\t    };\n\t\n\t    ElementFactory.getTypeProperties = function(itemName) {\n\t      var element_class, item, key, prop, prop_definition, properties, ref;\n\t      item = ElementFactory.elements[itemName];\n\t      if (item) {\n\t        element_class = item.classObject;\n\t        if (element_class) {\n\t          properties = [];\n\t          ref = item.classObject.properties;\n\t          for (key in ref) {\n\t            prop_definition = ref[key];\n\t            prop = extend({}, prop_definition);\n\t            prop.keys = [];\n\t            properties.push(prop);\n\t          }\n\t          console.log(properties);\n\t          return properties;\n\t        }\n\t      }\n\t    };\n\t\n\t    ElementFactory.prototype.create = function(itemName, values, time) {\n\t      var item;\n\t      item = ElementFactory.elements[itemName];\n\t      if (!item) {\n\t        console.warn(\"Can't create item: \" + itemName);\n\t        return false;\n\t      }\n\t      return new item.classObject(values);\n\t    };\n\t\n\t    return ElementFactory;\n\t\n\t  })();\n\t  return window.ElementFactory = ElementFactory;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var DataNormalizer, ElementFactory, _;\n\t  _ = __webpack_require__(16);\n\t  ElementFactory = __webpack_require__(11);\n\t  return DataNormalizer = (function() {\n\t    function DataNormalizer() {}\n\t\n\t    DataNormalizer.normalizeItem = function(data_item, factory) {\n\t      var existing_prop, key, key2, new_prop, static_prop, static_properties, value2;\n\t      if (!data_item.classObject) {\n\t        data_item.classObject = factory.getTypeClass(data_item.type);\n\t      }\n\t      static_properties = data_item.classObject.properties;\n\t      if (!static_properties) {\n\t        return;\n\t      }\n\t      for (key in static_properties) {\n\t        static_prop = static_properties[key];\n\t        existing_prop = _.find(data_item.properties, function(prop) {\n\t          return prop.name === static_prop.name;\n\t        });\n\t        if (!existing_prop) {\n\t          new_prop = {};\n\t          for (key2 in static_prop) {\n\t            value2 = static_prop[key2];\n\t            new_prop[key2] = value2;\n\t          }\n\t          new_prop.keys = [];\n\t          data_item.properties.push(new_prop);\n\t        }\n\t        if (existing_prop && !existing_prop.group && static_prop.group) {\n\t          existing_prop.group = static_prop.group;\n\t        }\n\t      }\n\t      return data_item;\n\t    };\n\t\n\t    DataNormalizer.normalizeData = function(data, factory) {\n\t      data = _.map(data, function(item) {\n\t        return DataNormalizer.normalizeItem(item, factory);\n\t      });\n\t      return data;\n\t    };\n\t\n\t    return DataNormalizer;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Audio, Colors, Particles, THREE, _;\n\t  _ = __webpack_require__(16);\n\t  THREE = __webpack_require__(2);\n\t  Audio = __webpack_require__(6);\n\t  Colors = __webpack_require__(36);\n\t  return Particles = (function() {\n\t    Particles.circleGeom = new THREE.CircleGeometry(10, 30, 0, Math.PI * 2);\n\t\n\t    Particles.ringGeom = new THREE.RingGeometry(10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2);\n\t\n\t    Particles.properties = {\n\t      numItems: {\n\t        name: 'numItems',\n\t        label: 'num items',\n\t        val: 5,\n\t        triggerRebuild: true\n\t      }\n\t    };\n\t\n\t    function Particles(values1, time, index) {\n\t      var geom, i, item, j, key, material, num_childs, prop, ref, ref1;\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      if (index == null) {\n\t        index = 0;\n\t      }\n\t      ref = Particles.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      this.container = new THREE.Object3D();\n\t      if (index === 0) {\n\t        this.container.position.set(0, 0, 100);\n\t      }\n\t      this.items = [];\n\t      this.speed = Math.random() * 2 - 1;\n\t      this.scale = Math.random() * 2 + 0.1;\n\t      material = new THREE.MeshPhongMaterial({\n\t        ambient: 0x030303,\n\t        color: 0xdddddd,\n\t        specular: 0xffffff,\n\t        shininess: 10,\n\t        shading: THREE.FlatShading\n\t      });\n\t      material.blending = THREE.AdditiveBlending;\n\t      geom = Particles.circleGeom;\n\t      if (Math.random() < 0.7) {\n\t        geom = Particles.ringGeom;\n\t      }\n\t      this.el = new THREE.Mesh(geom, material);\n\t      if (index > 0) {\n\t        this.el.position.x = Math.random() * 60 + 10;\n\t        this.el.position.y = Math.random() * 60 + 10;\n\t        this.el.position.z = Math.random() * 60 + 10;\n\t      }\n\t      this.el.scale.set(this.scale, this.scale, this.scale);\n\t      this.container.add(this.el);\n\t      if (index < 5) {\n\t        for (i = j = 0, ref1 = this.values.numItems - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {\n\t          num_childs = 1;\n\t          if (Math.random() > 0.7) {\n\t            num_childs = parseInt(Math.random * 3, 10) + 1;\n\t          }\n\t          item = new Particles({\n\t            numItems: num_childs\n\t          }, 0, index + 1);\n\t          this.el.add(item.container);\n\t          this.items.push(item);\n\t        }\n\t      }\n\t    }\n\t\n\t    Particles.prototype.update = function(seconds, values, force) {\n\t      var current, item, j, len, ref, results, volume;\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      volume = Audio.instance.mid;\n\t      current = this.el.scale.x;\n\t      if (volume > 0.2 && Math.random() < 0.1) {\n\t        current += volume * 10;\n\t      }\n\t      current = current + (this.scale - current) * 0.992;\n\t      this.el.scale.set(current, current, current);\n\t      ref = this.items;\n\t      results = [];\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        item = ref[j];\n\t        results.push(item.update());\n\t      }\n\t      return results;\n\t    };\n\t\n\t    return Particles;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Audio, CircleGeometry2, Colors, ElementBase, OrganizedChaos, RNG, ShaderFragement, ShaderVertex, Shaders, THREE, _;\n\t  _ = __webpack_require__(16);\n\t  THREE = __webpack_require__(2);\n\t  RNG = __webpack_require__(39);\n\t  ElementBase = __webpack_require__(37);\n\t  Audio = __webpack_require__(6);\n\t  Colors = __webpack_require__(36);\n\t  Shaders = __webpack_require__(7);\n\t  CircleGeometry2 = __webpack_require__(38);\n\t  ShaderVertex = __webpack_require__(43);\n\t  ShaderFragement = __webpack_require__(44);\n\t  return OrganizedChaos = (function(superClass) {\n\t    extend(OrganizedChaos, superClass);\n\t\n\t    OrganizedChaos.lineGeom = new THREE.PlaneBufferGeometry(100, 1);\n\t\n\t    OrganizedChaos.circleGeom = new THREE.CircleGeometry(10, 30, 0, Math.PI * 2);\n\t\n\t    OrganizedChaos.ringGeom = new THREE.RingGeometry(10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2);\n\t\n\t    OrganizedChaos.ringGeom2 = new CircleGeometry2(10, 30, 0, Math.PI * 2);\n\t\n\t    OrganizedChaos.squareGeom = new CircleGeometry2(10, 4, 0, Math.PI * 2);\n\t\n\t    OrganizedChaos.TYPE_LINE = 0;\n\t\n\t    OrganizedChaos.TYPE_SQUARE = 1;\n\t\n\t    OrganizedChaos.TYPE_CIRCLE = 2;\n\t\n\t    OrganizedChaos.properties = {\n\t      numItems: {\n\t        name: 'numItems',\n\t        label: 'num items',\n\t        val: 10,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      seed: {\n\t        name: 'seed',\n\t        label: 'seed',\n\t        val: 10042,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      depth: {\n\t        name: 'depth',\n\t        label: 'depth',\n\t        val: 20,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      spread: {\n\t        name: 'spread',\n\t        label: 'spread',\n\t        val: 300,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      spreadY: {\n\t        name: 'spreadY',\n\t        label: 'spreadY',\n\t        val: 300,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      maxChilds: {\n\t        name: 'maxChilds',\n\t        label: 'maxChilds',\n\t        val: 8,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      horizontalSymmetry: {\n\t        name: 'horizontalSymmetry',\n\t        label: 'horizontalSymmetry',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      verticalSymmetry: {\n\t        name: 'verticalSymmetry',\n\t        label: 'verticalSymmetry',\n\t        val: 0,\n\t        min: 0,\n\t        max: 1,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0,\n\t        group: \"position\"\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0,\n\t        group: \"position\"\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0,\n\t        group: \"position\"\n\t      },\n\t      rotationX: {\n\t        name: 'rotationX',\n\t        label: 'x',\n\t        val: 0,\n\t        min: -2,\n\t        max: 2,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      rotationY: {\n\t        name: 'rotationY',\n\t        label: 'y',\n\t        val: 0,\n\t        min: -2,\n\t        max: 2,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      rotationZ: {\n\t        name: 'rotationZ',\n\t        label: 'z',\n\t        val: 0,\n\t        min: -2,\n\t        max: 2,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      rotationRandX: {\n\t        name: 'rotationRandX',\n\t        label: 'rand x',\n\t        val: 0,\n\t        min: 0,\n\t        max: 1,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      rotationRandY: {\n\t        name: 'rotationRandY',\n\t        label: 'rand y',\n\t        val: 0,\n\t        min: 0,\n\t        max: 1,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      rotationRandZ: {\n\t        name: 'rotationRandZ',\n\t        label: 'rand z',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      circles: {\n\t        name: 'circles',\n\t        label: 'circles',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"geometry\"\n\t      },\n\t      squares: {\n\t        name: 'squares',\n\t        label: 'squares',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"geometry\"\n\t      },\n\t      lineWidth: {\n\t        name: 'lineWidth',\n\t        label: 'line width',\n\t        val: 1,\n\t        triggerRebuild: true,\n\t        group: \"line\"\n\t      },\n\t      lineWidthRand: {\n\t        name: 'lineWidthRand',\n\t        label: 'line width randomness',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"line\"\n\t      },\n\t      lineHeight: {\n\t        name: 'lineHeight',\n\t        label: 'line height',\n\t        val: 1,\n\t        triggerRebuild: true,\n\t        group: \"line\"\n\t      },\n\t      lineHeightRand: {\n\t        name: 'lineHeightRand',\n\t        label: 'line height randomness',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"line\"\n\t      },\n\t      materialRed: {\n\t        name: 'materialRed',\n\t        label: 'percent red',\n\t        val: 0,\n\t        min: 0,\n\t        max: 1,\n\t        triggerRebuild: true,\n\t        group: \"material\"\n\t      },\n\t      materialBlue: {\n\t        name: 'materialBlue',\n\t        label: 'percent blue',\n\t        val: 0,\n\t        min: 0,\n\t        max: 1,\n\t        triggerRebuild: true,\n\t        group: \"material\"\n\t      },\n\t      materialAnimated: {\n\t        name: 'materialAnimated',\n\t        label: 'percent animated',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"material\"\n\t      }\n\t    };\n\t\n\t    OrganizedChaos.prototype.getDefaultProperties = function() {\n\t      return OrganizedChaos.properties;\n\t    };\n\t\n\t    function OrganizedChaos(values1, time) {\n\t      var key, prop, ref;\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      ref = OrganizedChaos.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      OrganizedChaos.__super__.constructor.apply(this, arguments);\n\t      this.container = new THREE.Object3D();\n\t      this.container.position.set(0, 0, 0);\n\t      this.items = [];\n\t      this.build();\n\t    }\n\t\n\t    OrganizedChaos.prototype.rebuild = function(time) {\n\t      this.empty();\n\t      return this.build(time);\n\t    };\n\t\n\t    OrganizedChaos.prototype.empty = function() {\n\t      var item, j, len, ref;\n\t      if (!this.items || !this.items.length) {\n\t        return;\n\t      }\n\t      ref = this.items;\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        item = ref[j];\n\t        this.container.remove(item);\n\t      }\n\t      return this.items = [];\n\t    };\n\t\n\t    OrganizedChaos.prototype.getItemType = function(rng) {\n\t      var itemType;\n\t      itemType = rng.random(0, 1000) / 1000;\n\t      if (itemType < this.values.circles) {\n\t        return OrganizedChaos.TYPE_CIRCLE;\n\t      }\n\t      if (itemType < this.values.circles + this.values.squares) {\n\t        return OrganizedChaos.TYPE_SQUARE;\n\t      }\n\t      return OrganizedChaos.TYPE_LINE;\n\t    };\n\t\n\t    OrganizedChaos.prototype.getItemColor = function(rng) {\n\t      var itemColor;\n\t      itemColor = rng.random(0, 1000) / 1000;\n\t      if (itemColor < this.values.materialBlue) {\n\t        return Shaders.COLOR_BLUE;\n\t      }\n\t      if (itemColor < this.values.materialBlue + this.values.materialRed) {\n\t        return Shaders.COLOR_RED;\n\t      }\n\t      return Shaders.COLOR_WHITE;\n\t    };\n\t\n\t    OrganizedChaos.prototype.build = function(time) {\n\t      var animated, geom, horizontalSymmetry, i, ii, itemColor, itemType, j, material, num_childs, offset, pos2, posX, posY, position, ref, results, rnd, rngChilds, rngColor, rngHorizontalSymmetry, rngRotationX, rngRotationY, rngRotationZ, rngScale, rngScaleLine, rngScaleLineHeight, rngScaleSquare, rngShaderAnim, rngSpacing, rngType, rngVerticalSymmetry, rngX, rngY, rotation, rotationX, rotationY, rotationZ, scale, spacing, spread, spreadY, spreadY_half, spread_half, verticalSymmetry;\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      rngX = new RNG(this.values.seed + \"x\");\n\t      rngY = new RNG(this.values.seed + \"y\");\n\t      rngRotationX = new RNG(this.values.seed + \"rotationX\");\n\t      rngRotationY = new RNG(this.values.seed + \"rotationY\");\n\t      rngRotationZ = new RNG(this.values.seed + \"rotationZ\");\n\t      rngScale = new RNG(this.values.seed + \"scale\");\n\t      rngScaleLine = new RNG(this.values.seed + \"scaleLine\");\n\t      rngScaleSquare = new RNG(this.values.seed + \"scaleSquare\");\n\t      rngScaleLineHeight = new RNG(this.values.seed + \"scaleLineHeight\");\n\t      rngChilds = new RNG(this.values.seed + \"childs\");\n\t      rngHorizontalSymmetry = new RNG(this.values.seed + \"horizontalSymmetry\");\n\t      rngVerticalSymmetry = new RNG(this.values.seed + \"verticalSymmetry\");\n\t      rngSpacing = new RNG(this.values.seed + \"spacing\");\n\t      rngType = new RNG(this.values.seed + \"type\");\n\t      rngColor = new RNG(this.values.seed + \"color\");\n\t      rngShaderAnim = new RNG(this.values.seed + \"shaderAnim\");\n\t      spread = this.values.spread;\n\t      spread_half = spread / 2;\n\t      spreadY = this.values.spreadY;\n\t      spreadY_half = spreadY / 2;\n\t      results = [];\n\t      for (i = j = 0, ref = this.values.numItems; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n\t        animated = false;\n\t        if (rngShaderAnim.random(100) / 100 < this.values.materialAnimated) {\n\t          animated = true;\n\t        }\n\t        num_childs = 1;\n\t        scale = rngScale.random(0, 100) / 100 + 0.2;\n\t        posX = rngX.random(spread * 100) * 0.01 - spread_half;\n\t        posY = rngY.random(spreadY * 100) * 0.01 - spreadY_half;\n\t        position = new THREE.Vector3(posX, posY, i * -this.values.depth);\n\t        rotationX = (rngRotationX.random(0, 1000) / 1000 * Math.PI) * this.values.rotationRandX + this.values.rotationX * Math.PI;\n\t        rotationY = (rngRotationY.random(0, 1000) / 1000 * Math.PI) * this.values.rotationRandY + this.values.rotationY * Math.PI;\n\t        rotationZ = (rngRotationZ.random(0, 1000) / 1000 * Math.PI) * this.values.rotationRandZ + this.values.rotationZ * Math.PI;\n\t        rotation = new THREE.Vector3(rotationX, rotationY, rotationZ);\n\t        scale = new THREE.Vector3(scale, scale, scale);\n\t        horizontalSymmetry = false;\n\t        verticalSymmetry = false;\n\t        num_childs = parseInt(rngChilds.random(0, this.values.maxChilds), 10);\n\t        itemType = this.getItemType(rngType);\n\t        itemColor = this.getItemColor(rngColor);\n\t        geom = OrganizedChaos.lineGeom;\n\t        material = window.shaders.getMaterialLine(animated, itemColor);\n\t        if (this.values.horizontalSymmetry && rngHorizontalSymmetry.random(0, 100) / 100 <= this.values.horizontalSymmetry) {\n\t          horizontalSymmetry = true;\n\t        }\n\t        if (this.values.verticalSymmetry && rngVerticalSymmetry.random(0, 100) / 100 <= this.values.verticalSymmetry) {\n\t          verticalSymmetry = true;\n\t        }\n\t        if (itemType === OrganizedChaos.TYPE_LINE) {\n\t          scale.y = (scale.y * this.values.lineWidth) * (rngScaleLine.random(1, 100) / 100) * (this.values.lineWidthRand + 1);\n\t          scale.y = Math.max(0.5, scale.y);\n\t          scale.x = (scale.x * this.values.lineHeight) * (rngScaleLineHeight.random(1, 100) / 100) * (this.values.lineHeightRand + 1);\n\t          scale.x = Math.max(0.01, scale.x);\n\t        }\n\t        if (itemType === OrganizedChaos.TYPE_CIRCLE) {\n\t          geom = OrganizedChaos.ringGeom2;\n\t        } else if (itemType === OrganizedChaos.TYPE_SQUARE) {\n\t          geom = OrganizedChaos.squareGeom;\n\t          rnd = 0.5 + rngScaleSquare.random(0, 100) / 100;\n\t          scale.multiplyScalar(rnd);\n\t        }\n\t        this.addItem(geom, material, i, scale, position, rotation, horizontalSymmetry, verticalSymmetry);\n\t        if (num_childs > 1) {\n\t          spacing = 30 + rngSpacing.random(0, 100) * 0.4;\n\t          offset = position.clone().normalize().multiplyScalar(spacing);\n\t          offset.z = 0;\n\t          results.push((function() {\n\t            var k, ref1, results1;\n\t            results1 = [];\n\t            for (ii = k = 0, ref1 = num_childs - 1; 0 <= ref1 ? k <= ref1 : k >= ref1; ii = 0 <= ref1 ? ++k : --k) {\n\t              pos2 = position.clone().add(offset.multiplyScalar(ii + 1));\n\t              results1.push(this.addItem(geom, material, i, scale, pos2, rotation, horizontalSymmetry, verticalSymmetry));\n\t            }\n\t            return results1;\n\t          }).call(this));\n\t        } else {\n\t          results.push(void 0);\n\t        }\n\t      }\n\t      return results;\n\t    };\n\t\n\t    OrganizedChaos.prototype.addItem = function(geom, material, i, scale, position, rotation, horizontalSymmetry, verticalSymmetry) {\n\t      var item, item2, item2Container, quaternion;\n\t      quaternion = new THREE.Quaternion();\n\t      quaternion.setFromAxisAngle(new THREE.Vector3(rotation.x, rotation.y, rotation.z), Math.PI / 2);\n\t      item = new THREE.Mesh(geom, material);\n\t      item.position.x = position.x;\n\t      item.position.y = position.y;\n\t      item.position.z = position.z;\n\t      item.rotation.setFromQuaternion(quaternion);\n\t      item.scale.copy(scale);\n\t      item.updateMatrix();\n\t      this.container.add(item);\n\t      this.items.push(item);\n\t      if (horizontalSymmetry) {\n\t        item2Container = new THREE.Object3D();\n\t        this.container.add(item2Container);\n\t        item2 = new THREE.Mesh(geom, material);\n\t        item2.position.x = position.x;\n\t        item2.position.y = position.y;\n\t        item2.position.z = position.z;\n\t        item2.rotation.setFromQuaternion(quaternion);\n\t        item2.scale.copy(scale);\n\t        item2.updateMatrix();\n\t        item2Container.add(item2);\n\t        item2Container.scale.x = -1;\n\t        this.items.push(item2Container);\n\t        if (verticalSymmetry) {\n\t          item2Container = new THREE.Object3D();\n\t          this.container.add(item2Container);\n\t          item2 = new THREE.Mesh(geom, material);\n\t          item2.position.x = position.x;\n\t          item2.position.y = position.y;\n\t          item2.position.z = position.z;\n\t          item2.rotation.setFromQuaternion(quaternion);\n\t          item2.scale.copy(scale);\n\t          item2.updateMatrix();\n\t          item2Container.add(item2);\n\t          item2Container.scale.x = -1;\n\t          item2Container.scale.y = -1;\n\t          this.items.push(item2Container);\n\t        }\n\t      }\n\t      if (verticalSymmetry) {\n\t        item2Container = new THREE.Object3D();\n\t        this.container.add(item2Container);\n\t        item2 = new THREE.Mesh(geom, material);\n\t        item2.position.x = position.x;\n\t        item2.position.y = position.y;\n\t        item2.position.z = position.z;\n\t        item2.rotation.setFromQuaternion(quaternion);\n\t        item2.scale.copy(scale);\n\t        item2.updateMatrix();\n\t        item2Container.add(item2);\n\t        item2Container.scale.y = -1;\n\t        return this.items.push(item2Container);\n\t      }\n\t    };\n\t\n\t    OrganizedChaos.prototype.getMaterial = function(color) {\n\t      var material, uniforms;\n\t      uniforms = {\n\t        time: {\n\t          type: 'f',\n\t          value: 0.0\n\t        },\n\t        seed: {\n\t          type: 'f',\n\t          value: Math.random() * 1000\n\t        },\n\t        strength: {\n\t          type: 'f',\n\t          value: 0.2\n\t        },\n\t        color: {\n\t          type: 'c',\n\t          value: new THREE.Color(color)\n\t        },\n\t        fogColor: {\n\t          type: \"c\",\n\t          value: new THREE.Color(0x111111)\n\t        },\n\t        fogDensity: {\n\t          type: \"f\",\n\t          0.2045: 0.2045\n\t        }\n\t      };\n\t      material = new THREE.ShaderMaterial({\n\t        vertexShader: ShaderVertex,\n\t        fragmentShader: ShaderFragement,\n\t        side: THREE.DoubleSide,\n\t        uniforms: uniforms,\n\t        transparent: true,\n\t        depthWrite: false,\n\t        depthTest: false,\n\t        fog: true\n\t      });\n\t      material.blending = THREE.AdditiveBlending;\n\t      return material;\n\t    };\n\t\n\t    OrganizedChaos.prototype.update = function(seconds, values, force) {\n\t      var key, needs_rebuild, prop, ref, volume;\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values === false) {\n\t        values = this.values;\n\t      }\n\t      needs_rebuild = false;\n\t      ref = OrganizedChaos.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (prop.triggerRebuild && this.valueChanged(key, values)) {\n\t          needs_rebuild = true;\n\t        }\n\t      }\n\t      volume = Audio.instance.mid;\n\t      if (force || this.valueChanged(\"x\", values) || this.valueChanged(\"y\", values) || this.valueChanged(\"z\", values)) {\n\t        this.container.position.set(values.x, values.y, values.z);\n\t      }\n\t      this.values = _.merge(this.values, values);\n\t      if (needs_rebuild === true) {\n\t        this.rebuild(seconds);\n\t      }\n\t    };\n\t\n\t    OrganizedChaos.prototype.destroy = function() {\n\t      var child, j, len, ref;\n\t      ref = this.container.children;\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        child = ref[j];\n\t        this.container.remove(child);\n\t      }\n\t      return this.container = null;\n\t    };\n\t\n\t    return OrganizedChaos;\n\t\n\t  })(ElementBase);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 15 */,\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = _;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"{\\n  \\\"settings\\\": {\\n    \\\"time\\\": 0,\\n    \\\"duration\\\": 240,\\n    \\\"domain\\\": [\\n      0,\\n      48000\\n    ]\\n  },\\n  \\\"data\\\": [\\n    {\\n      \\\"id\\\": \\\"gloabl\\\",\\n      \\\"type\\\": \\\"Global\\\",\\n      \\\"label\\\": \\\"Global\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 240,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"bassSensibility\\\",\\n          \\\"label\\\": \\\"bassSensibility\\\",\\n          \\\"val\\\": 5,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 130.80899999999997,\\n              \\\"val\\\": 5,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 138.7439999999998,\\n              \\\"val\\\": 0.8,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 144.14699999999996,\\n              \\\"val\\\": 0.4,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 177.71099999999998,\\n              \\\"val\\\": 0.6,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"midSensibility\\\",\\n          \\\"label\\\": \\\"midSensibility\\\",\\n          \\\"val\\\": 0.8,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"highSensibility\\\",\\n          \\\"label\\\": \\\"highSensibility\\\",\\n          \\\"val\\\": 5,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"autoAnimate\\\",\\n          \\\"label\\\": \\\"autoAnimate\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 1.64,\\n              \\\"val\\\": 0.05,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 1.858,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 216.852,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 236.5629999999993,\\n              \\\"val\\\": 0.2,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 240,\\n              \\\"val\\\": 1,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            }\\n          ]\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"bassSensibility\\\": 5,\\n        \\\"midSensibility\\\": 0.8,\\n        \\\"highSensibility\\\": 5,\\n        \\\"autoAnimate\\\": 0.05\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"camera1\\\",\\n      \\\"type\\\": \\\"Camera\\\",\\n      \\\"label\\\": \\\"Camera 1\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 240,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 0,\\n              \\\"val\\\": 700,\\n              \\\"ease\\\": \\\"Quart.easeInOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 1.7860000000000016,\\n              \\\"val\\\": 290,\\n              \\\"ease\\\": \\\"Quart.easeInOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 9.538,\\n              \\\"val\\\": -80.93835187185027,\\n              \\\"ease\\\": \\\"Linear.easeNone\\\"\\n            },\\n            {\\n              \\\"time\\\": 240,\\n              \\\"val\\\": -3850,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            }\\n          ],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 600\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"fov\\\",\\n          \\\"label\\\": \\\"fov\\\",\\n          \\\"val\\\": 45,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"target_x\\\",\\n          \\\"label\\\": \\\"target x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"target_z\\\",\\n          \\\"label\\\": \\\"target z\\\",\\n          \\\"val\\\": -10000,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 700,\\n        \\\"target_x\\\": 0,\\n        \\\"target_y\\\": 0,\\n        \\\"target_z\\\": -10000,\\n        \\\"fov\\\": 45\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item2\\\",\\n      \\\"label\\\": \\\"Chaos 2\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 1.435,\\n      \\\"end\\\": 41.33200000000003,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 44,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 85,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 4.6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 302.7,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -318,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 8.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.199,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.7,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.522,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.04,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 44,\\n        \\\"seed\\\": 85,\\n        \\\"depth\\\": 4.6,\\n        \\\"spread\\\": 302.7,\\n        \\\"maxChilds\\\": 2,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -318,\\n        \\\"spreadY\\\": 8.5,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.199,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialAnimated\\\": 0.3,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.7,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 0.522,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0.04,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item3\\\",\\n      \\\"label\\\": \\\"Chaos 3\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": -0.035,\\n      \\\"end\\\": 37.43900000000004,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 81042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 22,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 20,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -80,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.42,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": -13.9,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 75.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 1,\\n        \\\"seed\\\": 81042,\\n        \\\"depth\\\": 22,\\n        \\\"spread\\\": 20,\\n        \\\"maxChilds\\\": 4,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -80,\\n        \\\"spreadY\\\": 0,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.42,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialAnimated\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": -13.9,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 75.3,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item4\\\",\\n      \\\"label\\\": \\\"Chaos 4\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 11.944,\\n      \\\"end\\\": 39.27300000000001,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 29,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 98042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 450,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -5,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -640,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.201,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.62,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 4.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 11.148,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 29,\\n        \\\"seed\\\": 98042,\\n        \\\"depth\\\": 12,\\n        \\\"spread\\\": 450,\\n        \\\"maxChilds\\\": 3,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": -5,\\n        \\\"z\\\": -640,\\n        \\\"spreadY\\\": 0,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.201,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialAnimated\\\": 0.4,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.62,\\n        \\\"lineWidthRand\\\": 4.3,\\n        \\\"lineHeight\\\": 11.148,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item5\\\",\\n      \\\"label\\\": \\\"Chaos 5\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 17.74,\\n      \\\"end\\\": 52.301,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 21,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 34042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 140,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1054,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.7,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.56,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 21,\\n        \\\"seed\\\": 34042,\\n        \\\"depth\\\": 8,\\n        \\\"spread\\\": 300,\\n        \\\"spreadY\\\": 140,\\n        \\\"maxChilds\\\": 8,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -1054,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.7,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0.56,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"lineHeight\\\": 1,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item6\\\",\\n      \\\"label\\\": \\\"Chaos 6\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 27.607,\\n      \\\"end\\\": 87.155,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 80,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 9142,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 3.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": -140,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 60,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1800,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.9,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 2.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.41,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 4.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 80,\\n        \\\"seed\\\": 9142,\\n        \\\"depth\\\": 3.5,\\n        \\\"spread\\\": -140,\\n        \\\"spreadY\\\": 60,\\n        \\\"maxChilds\\\": 4,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -1800,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0.3,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.9,\\n        \\\"lineWidthRand\\\": 2.5,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"lineHeight\\\": 0.41,\\n        \\\"lineHeightRand\\\": 4.1,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item7\\\",\\n      \\\"label\\\": \\\"Chaos 7\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 21.222,\\n      \\\"end\\\": 72.32999999999998,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 78,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 9642,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 10,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 170,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 158.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -17,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1010,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 1.4,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.56,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 78,\\n        \\\"seed\\\": 9642,\\n        \\\"depth\\\": 10,\\n        \\\"spread\\\": 170,\\n        \\\"spreadY\\\": 158.4,\\n        \\\"maxChilds\\\": 8,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": -17,\\n        \\\"z\\\": -1010,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0.1,\\n        \\\"rotationZ\\\": 1.4,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0.56,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.4,\\n        \\\"lineWidthRand\\\": 3,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"lineHeight\\\": 0.2,\\n        \\\"lineHeightRand\\\": 3,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item8\\\",\\n      \\\"label\\\": \\\"Chaos 8\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 60.202,\\n      \\\"end\\\": 107.71,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 64,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 3842,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": -291,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 167,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -2100,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -0.3,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.05,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.04,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.05,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 2.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 3.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 64,\\n        \\\"seed\\\": 3842,\\n        \\\"depth\\\": 12,\\n        \\\"spread\\\": -291,\\n        \\\"spreadY\\\": 167,\\n        \\\"maxChilds\\\": 12,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -2100,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": -0.3,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.05,\\n        \\\"rotationRandY\\\": 0.04,\\n        \\\"rotationRandZ\\\": 0.05,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0.4,\\n        \\\"lineWidth\\\": 0.5,\\n        \\\"lineWidthRand\\\": 2.3,\\n        \\\"lineHeight\\\": 3.3,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"materialAnimated\\\": 0.8,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item9\\\",\\n      \\\"label\\\": \\\"Chaos 9\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 73.107,\\n      \\\"end\\\": 130.643,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 50,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 32042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 6.7,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 235,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 96,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -2600,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -0.2,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0.6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.96,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.53,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 50,\\n        \\\"seed\\\": 32042,\\n        \\\"depth\\\": 6.7,\\n        \\\"spread\\\": 235,\\n        \\\"spreadY\\\": 96,\\n        \\\"maxChilds\\\": 0,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -2600,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": -0.2,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0.6,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 1,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"materialAnimated\\\": 0.96,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0.53\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item10\\\",\\n      \\\"label\\\": \\\"Chaos 10\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 102.377,\\n      \\\"end\\\": 141.892,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 75,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 15042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 260,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 100,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3000,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.8,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 3.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 75,\\n        \\\"seed\\\": 15042,\\n        \\\"depth\\\": 1,\\n        \\\"spread\\\": 260,\\n        \\\"spreadY\\\": 100,\\n        \\\"maxChilds\\\": 8.1,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3000,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0.8,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0,\\n        \\\"lineWidthRand\\\": 1,\\n        \\\"lineHeight\\\": 0.1,\\n        \\\"lineHeightRand\\\": 3.5,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0.2\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item11\\\",\\n      \\\"label\\\": \\\"Chaos 11\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 112.889,\\n      \\\"end\\\": 152.972,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 64,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 44402,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3000,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.225,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.368,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.75,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 64,\\n        \\\"seed\\\": 44402,\\n        \\\"depth\\\": 12,\\n        \\\"spread\\\": 300,\\n        \\\"spreadY\\\": 300,\\n        \\\"maxChilds\\\": 3,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3000,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.225,\\n        \\\"rotationRandY\\\": 0.368,\\n        \\\"rotationRandZ\\\": 0.75,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0.2,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 1,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0.3\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item12\\\",\\n      \\\"label\\\": \\\"Chaos 12\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 122.274,\\n      \\\"end\\\": 212.46800000000002,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 80,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 516,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 220,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 50,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 0.8,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.6,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3300,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.03,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.95,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 80,\\n        \\\"seed\\\": 516,\\n        \\\"depth\\\": 6,\\n        \\\"spread\\\": 220,\\n        \\\"spreadY\\\": 50,\\n        \\\"maxChilds\\\": 12,\\n        \\\"horizontalSymmetry\\\": 0.8,\\n        \\\"verticalSymmetry\\\": 0.6,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3300,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 1,\\n        \\\"rotationRandZ\\\": 0.03,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 0.5,\\n        \\\"lineHeightRand\\\": 1,\\n        \\\"materialAnimated\\\": 0.95,\\n        \\\"materialRed\\\": 0.2,\\n        \\\"materialBlue\\\": 0.3\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item13\\\",\\n      \\\"label\\\": \\\"Chaos 13\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 151.87,\\n      \\\"end\\\": 241.144,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 60,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 3914,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 4.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 121,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 27,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 16,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.6,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3900,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.76,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.6,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 1.62,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 1.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 60,\\n        \\\"seed\\\": 3914,\\n        \\\"depth\\\": 4.2,\\n        \\\"spread\\\": 121,\\n        \\\"spreadY\\\": 27,\\n        \\\"maxChilds\\\": 16,\\n        \\\"horizontalSymmetry\\\": 0.3,\\n        \\\"verticalSymmetry\\\": 0.6,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3900,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.76,\\n        \\\"rotationRandY\\\": 0.6,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0,\\n        \\\"lineWidthRand\\\": 1.62,\\n        \\\"lineHeight\\\": 0.2,\\n        \\\"lineHeightRand\\\": 1.2,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"materialRed\\\": 0.3,\\n        \\\"materialBlue\\\": 0.3\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item15\\\",\\n      \\\"label\\\": \\\"Chaos 15\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 2,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 120,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 8842,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 1.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 260,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 150,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 520,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.9,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 120,\\n        \\\"seed\\\": 8842,\\n        \\\"depth\\\": 1.5,\\n        \\\"spread\\\": 260,\\n        \\\"spreadY\\\": 150,\\n        \\\"maxChilds\\\": 12,\\n        \\\"horizontalSymmetry\\\": 0.4,\\n        \\\"verticalSymmetry\\\": 0.2,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 520,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.5,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 0.2,\\n        \\\"lineHeightRand\\\": 1,\\n        \\\"materialRed\\\": 0.3,\\n        \\\"materialBlue\\\": 0,\\n        \\\"materialAnimated\\\": 0.9\\n      },\\n      \\\"isDirtyObject\\\": false\\n    }\\n  ]\\n}\\n\"\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = undefined;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Global, THREE, _;\n\t  _ = __webpack_require__(16);\n\t  THREE = __webpack_require__(2);\n\t  return Global = (function() {\n\t    Global.properties = {\n\t      bassSensibility: {\n\t        name: 'bassSensibility',\n\t        label: 'bassSensibility x',\n\t        val: 5,\n\t        min: 0,\n\t        max: 5\n\t      },\n\t      midSensibility: {\n\t        name: 'midSensibility',\n\t        label: 'midSensibility',\n\t        val: 0.8,\n\t        min: 0,\n\t        max: 5\n\t      },\n\t      highSensibility: {\n\t        name: 'highSensibility',\n\t        label: 'highSensibility',\n\t        val: 5,\n\t        min: 0,\n\t        max: 5\n\t      },\n\t      autoAnimate: {\n\t        name: 'autoAnimate',\n\t        label: 'autoAnimate',\n\t        val: 0,\n\t        min: 0,\n\t        max: 1\n\t      }\n\t    };\n\t\n\t    function Global(values1, time) {\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      window.global = this;\n\t    }\n\t\n\t    Global.prototype.update = function(seconds, values, force) {\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values === false) {\n\t        values = this.values;\n\t      }\n\t      return this.values = _.merge(this.values, values);\n\t    };\n\t\n\t    Global.prototype.destroy = function() {};\n\t\n\t    return Global;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tTHREE.GlitchPass2 = function ( dt_size ) {\n\t\n\t  if ( THREE.DigitalGlitch2 === undefined ) console.error( \"THREE.GlitchPass relies on THREE.DigitalGlitch\" );\n\t\n\t  var shader = THREE.DigitalGlitch2;\n\t  this.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\t\n\t  if(dt_size==undefined) dt_size=64;\n\t\n\t  this.intensity = 1;\n\t  this.uniforms[\"tDisp\"].value=this.generateHeightmap(dt_size);\n\t\n\t\n\t  this.material = new THREE.ShaderMaterial({\n\t    uniforms: this.uniforms,\n\t    vertexShader: shader.vertexShader,\n\t    fragmentShader: shader.fragmentShader\n\t  });\n\t\n\t  this.enabled = true;\n\t  this.renderToScreen = false;\n\t  this.needsSwap = true;\n\t\n\t  this.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t  this.scene  = new THREE.Scene();\n\t\n\t  this.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t  this.scene.add( this.quad );\n\t\n\t  this.goWild=false;\n\t  this.curF=0;\n\t  this.generateTrigger();\n\t\n\t};\n\t\n\tTHREE.GlitchPass2.prototype = {\n\t\n\t  render: function ( renderer, writeBuffer, readBuffer, delta )\n\t  {\n\t    this.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t    this.uniforms[ 'seed' ].value=Math.random();//default seeding\n\t    //this.uniforms[ 'byp' ].value=0;\n\t\n\t    this.uniforms[ 'amount' ].value = (Math.random()/420) * this.intensity;\n\t    this.uniforms[ 'angle' ].value=THREE.Math.randFloat(-Math.PI,Math.PI);\n\t    this.uniforms[ 'seed_x' ].value=THREE.Math.randFloat(-1,1);\n\t    this.uniforms[ 'seed_y' ].value=THREE.Math.randFloat(-1,1);\n\t    this.uniforms[ 'seed_x' ].value *= 0.001;\n\t    this.uniforms[ 'seed_y' ].value *= 0.001;\n\t    this.uniforms[ 'distortion_x' ].value=THREE.Math.randFloat(0,0.001);\n\t    this.uniforms[ 'distortion_y' ].value=THREE.Math.randFloat(0,0.001);\n\t    //this.curF=0;\n\t    this.generateTrigger();\n\t\n\t    this.uniforms[ 'byp' ].value=0;\n\t    this.curF++;\n\t\n\t    this.quad.material = this.material;\n\t    if ( this.renderToScreen )\n\t    {\n\t      renderer.render( this.scene, this.camera );\n\t    }\n\t    else\n\t    {\n\t      renderer.render( this.scene, this.camera, writeBuffer, false );\n\t    }\n\t  },\n\t  generateTrigger:function()\n\t  {\n\t    this.randX=THREE.Math.randInt(120,240);\n\t  },\n\t  generateHeightmap:function(dt_size)\n\t  {\n\t    var data_arr = new Float32Array( dt_size*dt_size * 3 );\n\t    var length=dt_size*dt_size;\n\t\n\t    for ( var i = 0; i < length; i++)\n\t    {\n\t      var val=THREE.Math.randFloat(0,1);\n\t      data_arr[ i*3 + 0 ] = val;\n\t      data_arr[ i*3 + 1 ] = val;\n\t      data_arr[ i*3 + 2 ] = val;\n\t    }\n\t\n\t    var texture = new THREE.DataTexture( data_arr, dt_size, dt_size, THREE.RGBFormat, THREE.FloatType );\n\t    texture.minFilter = THREE.NearestFilter;\n\t    texture.magFilter = THREE.NearestFilter;\n\t    texture.needsUpdate = true;\n\t    texture.flipY = false;\n\t    return texture;\n\t  }\n\t};\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\t\n\t\tthis.renderer = renderer;\n\t\n\t\tif ( renderTarget === undefined ) {\n\t\n\t\t\tvar width = window.innerWidth || 1;\n\t\t\tvar height = window.innerHeight || 1;\n\t\t\tvar parameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\n\t\n\t\t\trenderTarget = new THREE.WebGLRenderTarget( width, height, parameters );\n\t\n\t\t}\n\t\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\t\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\t\n\t\tthis.passes = [];\n\t\n\t\tif ( THREE.CopyShader === undefined )\n\t\t\tconsole.error( \"THREE.EffectComposer relies on THREE.CopyShader\" );\n\t\n\t\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\t\n\t};\n\t\n\tTHREE.EffectComposer.prototype = {\n\t\n\t\tswapBuffers: function() {\n\t\n\t\t\tvar tmp = this.readBuffer;\n\t\t\tthis.readBuffer = this.writeBuffer;\n\t\t\tthis.writeBuffer = tmp;\n\t\n\t\t},\n\t\n\t\taddPass: function ( pass ) {\n\t\n\t\t\tthis.passes.push( pass );\n\t\n\t\t},\n\t\n\t\tinsertPass: function ( pass, index ) {\n\t\n\t\t\tthis.passes.splice( index, 0, pass );\n\t\n\t\t},\n\t\n\t\trender: function ( delta ) {\n\t\n\t\t\tthis.writeBuffer = this.renderTarget1;\n\t\t\tthis.readBuffer = this.renderTarget2;\n\t\n\t\t\tvar maskActive = false;\n\t\n\t\t\tvar pass, i, il = this.passes.length;\n\t\n\t\t\tfor ( i = 0; i < il; i ++ ) {\n\t\n\t\t\t\tpass = this.passes[ i ];\n\t\n\t\t\t\tif ( !pass.enabled ) continue;\n\t\n\t\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\n\t\n\t\t\t\tif ( pass.needsSwap ) {\n\t\n\t\t\t\t\tif ( maskActive ) {\n\t\n\t\t\t\t\t\tvar context = this.renderer.context;\n\t\n\t\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\t\n\t\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\n\t\n\t\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.swapBuffers();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\t\n\t\t\t\t\tmaskActive = true;\n\t\n\t\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\t\n\t\t\t\t\tmaskActive = false;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t},\n\t\n\t\treset: function ( renderTarget ) {\n\t\n\t\t\tif ( renderTarget === undefined ) {\n\t\n\t\t\t\trenderTarget = this.renderTarget1.clone();\n\t\n\t\t\t\trenderTarget.width = window.innerWidth;\n\t\t\t\trenderTarget.height = window.innerHeight;\n\t\n\t\t\t}\n\t\n\t\t\tthis.renderTarget1 = renderTarget;\n\t\t\tthis.renderTarget2 = renderTarget.clone();\n\t\n\t\t\tthis.writeBuffer = this.renderTarget1;\n\t\t\tthis.readBuffer = this.renderTarget2;\n\t\n\t\t},\n\t\n\t\tsetSize: function ( width, height ) {\n\t\n\t\t\tvar renderTarget = this.renderTarget1.clone();\n\t\n\t\t\trenderTarget.width = width;\n\t\t\trenderTarget.height = height;\n\t\n\t\t\tthis.reset( renderTarget );\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.MaskPass = function ( scene, camera ) {\n\t\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\t\n\t\tthis.enabled = true;\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\t\n\t\tthis.inverse = false;\n\t\n\t};\n\t\n\tTHREE.MaskPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tvar context = renderer.context;\n\t\n\t\t\t// don't update color or depth\n\t\n\t\t\tcontext.colorMask( false, false, false, false );\n\t\t\tcontext.depthMask( false );\n\t\n\t\t\t// set up stencil\n\t\n\t\t\tvar writeValue, clearValue;\n\t\n\t\t\tif ( this.inverse ) {\n\t\n\t\t\t\twriteValue = 0;\n\t\t\t\tclearValue = 1;\n\t\n\t\t\t} else {\n\t\n\t\t\t\twriteValue = 1;\n\t\t\t\tclearValue = 0;\n\t\n\t\t\t}\n\t\n\t\t\tcontext.enable( context.STENCIL_TEST );\n\t\t\tcontext.stencilOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\t\tcontext.stencilFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\t\tcontext.clearStencil( clearValue );\n\t\n\t\t\t// draw into the stencil buffer\n\t\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\t\n\t\t\t// re-enable update of color and depth\n\t\n\t\t\tcontext.colorMask( true, true, true, true );\n\t\t\tcontext.depthMask( true );\n\t\n\t\t\t// only render where stencil is set to 1\n\t\n\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );  // draw if == 1\n\t\t\tcontext.stencilOp( context.KEEP, context.KEEP, context.KEEP );\n\t\n\t\t}\n\t\n\t};\n\t\n\t\n\tTHREE.ClearMaskPass = function () {\n\t\n\t\tthis.enabled = true;\n\t\n\t};\n\t\n\tTHREE.ClearMaskPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tvar context = renderer.context;\n\t\n\t\t\tcontext.disable( context.STENCIL_TEST );\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.BloomPass = function ( strength, kernelSize, sigma, resolution ) {\n\t\n\t\tstrength = ( strength !== undefined ) ? strength : 1;\n\t\tkernelSize = ( kernelSize !== undefined ) ? kernelSize : 25;\n\t\tsigma = ( sigma !== undefined ) ? sigma : 4.0;\n\t\tresolution = ( resolution !== undefined ) ? resolution : 256;\n\t\n\t\t// render targets\n\t\n\t\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\t\n\t\tthis.renderTargetX = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\t\tthis.renderTargetY = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\t\n\t\t// copy material\n\t\n\t\tif ( THREE.CopyShader === undefined )\n\t\t\tconsole.error( \"THREE.BloomPass relies on THREE.CopyShader\" );\n\t\n\t\tvar copyShader = THREE.CopyShader;\n\t\n\t\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\t\n\t\tthis.copyUniforms[ \"opacity\" ].value = strength;\n\t\n\t\tthis.materialCopy = new THREE.ShaderMaterial( {\n\t\n\t\t\tuniforms: this.copyUniforms,\n\t\t\tvertexShader: copyShader.vertexShader,\n\t\t\tfragmentShader: copyShader.fragmentShader,\n\t\t\tblending: THREE.AdditiveBlending,\n\t\t\ttransparent: true\n\t\n\t\t} );\n\t\n\t\t// convolution material\n\t\n\t\tif ( THREE.ConvolutionShader === undefined )\n\t\t\tconsole.error( \"THREE.BloomPass relies on THREE.ConvolutionShader\" );\n\t\n\t\tvar convolutionShader = THREE.ConvolutionShader;\n\t\n\t\tthis.convolutionUniforms = THREE.UniformsUtils.clone( convolutionShader.uniforms );\n\t\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurx;\n\t\tthis.convolutionUniforms[ \"cKernel\" ].value = THREE.ConvolutionShader.buildKernel( sigma );\n\t\n\t\tthis.materialConvolution = new THREE.ShaderMaterial( {\n\t\n\t\t\tuniforms: this.convolutionUniforms,\n\t\t\tvertexShader:  convolutionShader.vertexShader,\n\t\t\tfragmentShader: convolutionShader.fragmentShader,\n\t\t\tdefines: {\n\t\t\t\t\"KERNEL_SIZE_FLOAT\": kernelSize.toFixed( 1 ),\n\t\t\t\t\"KERNEL_SIZE_INT\": kernelSize.toFixed( 0 )\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = false;\n\t\tthis.clear = false;\n\t\n\t\n\t\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\t\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\t\n\t};\n\t\n\tTHREE.BloomPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\t\n\t\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\n\t\n\t\t\t// Render quad with blured scene into texture (convolution pass 1)\n\t\n\t\t\tthis.quad.material = this.materialConvolution;\n\t\n\t\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\t\n\t\t\trenderer.render( this.scene, this.camera, this.renderTargetX, true );\n\t\n\t\n\t\t\t// Render quad with blured scene into texture (convolution pass 2)\n\t\n\t\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = this.renderTargetX;\n\t\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurY;\n\t\n\t\t\trenderer.render( this.scene, this.camera, this.renderTargetY, true );\n\t\n\t\t\t// Render original scene with superimposed blur to texture\n\t\n\t\t\tthis.quad.material = this.materialCopy;\n\t\n\t\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetY;\n\t\n\t\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\n\t\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\n\t\t}\n\t\n\t};\n\t\n\tTHREE.BloomPass.blurX = new THREE.Vector2( 0.001953125, 0.0 );\n\tTHREE.BloomPass.blurY = new THREE.Vector2( 0.0, 0.001953125 );\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.ShaderPass = function ( shader, textureID ) {\n\t\n\t\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\t\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\t\n\t\tthis.material = new THREE.ShaderMaterial( {\n\t\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\t\n\t\t} );\n\t\n\t\tthis.renderToScreen = false;\n\t\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = true;\n\t\tthis.clear = false;\n\t\n\t\n\t\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\t\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\t\n\t};\n\t\n\tTHREE.ShaderPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tif ( this.uniforms[ this.textureID ] ) {\n\t\n\t\t\t\tthis.uniforms[ this.textureID ].value = readBuffer;\n\t\n\t\t\t}\n\t\n\t\t\tthis.quad.material = this.material;\n\t\n\t\t\tif ( this.renderToScreen ) {\n\t\n\t\t\t\trenderer.render( this.scene, this.camera );\n\t\n\t\t\t} else {\n\t\n\t\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\t\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\t\n\t\tthis.overrideMaterial = overrideMaterial;\n\t\n\t\tthis.clearColor = clearColor;\n\t\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 1;\n\t\n\t\tthis.oldClearColor = new THREE.Color();\n\t\tthis.oldClearAlpha = 1;\n\t\n\t\tthis.enabled = true;\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\t\n\t};\n\t\n\tTHREE.RenderPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\t\n\t\t\tif ( this.clearColor ) {\n\t\n\t\t\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\t\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\n\t\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\t\n\t\t\t}\n\t\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\n\t\t\tif ( this.clearColor ) {\n\t\n\t\t\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\t\n\t\t\t}\n\t\n\t\t\tthis.scene.overrideMaterial = null;\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tTHREE.CustomPostShader = {\n\t  uniforms: {\n\t    \"tDiffuse\": {type: \"t\", value: null},\n\t    \"resolution\": {type: \"v2\", value: new THREE.Vector2(1 / 1024, 1 / 512)},\n\t    \"time\": {type: \"f\", value: 0},\n\t    \"nIntensity\": {type: \"f\", value: 0.05},\n\t  },\n\t  vertexShader: __webpack_require__(50),\n\t  fragmentShader: __webpack_require__(51),\n\t};\n\t\n\tTHREE.CustomPostPass = function (noiseIntensity, resolution) {\n\t  var shader = THREE.CustomPostShader;\n\t\n\t  this.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\t\n\t  this.material = new THREE.ShaderMaterial({\n\t    uniforms: this.uniforms,\n\t    vertexShader: shader.vertexShader,\n\t    fragmentShader: shader.fragmentShader\n\t  });\n\t\n\t  this.uniforms.nIntensity.value = resolution;\n\t  if ( noiseIntensity !== undefined ) this.uniforms.nIntensity.value = noiseIntensity;\n\t\n\t  this.enabled = true;\n\t  this.renderToScreen = false;\n\t  this.needsSwap = true;\n\t\n\t  this.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t  this.scene  = new THREE.Scene();\n\t\n\t  this.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t  this.scene.add( this.quad );\n\t};\n\t\n\tTHREE.CustomPostPass.prototype = {\n\t  render: function (renderer, writeBuffer, readBuffer, delta) {\n\t    this.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t    this.uniforms[ \"time\" ].value += delta;\n\t\n\t    this.quad.material = this.material;\n\t\n\t    if ( this.renderToScreen ) {\n\t      renderer.render( this.scene, this.camera );\n\t    } else {\n\t      renderer.render( this.scene, this.camera, writeBuffer, false );\n\t    }\n\t  }\n\t};\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author davidedc / http://www.sketchpatch.net/\n\t *\n\t * NVIDIA FXAA by Timothy Lottes\n\t * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\n\t * - WebGL port by @supereggbert\n\t * http://www.glge.org/demos/fxaa/\n\t */\n\t\n\tTHREE.FXAAShader = {\n\t\n\t\tuniforms: {\n\t\n\t\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\t\"resolution\": { type: \"v2\", value: new THREE.Vector2( 1 / 1024, 1 / 512 )  }\n\t\n\t\t},\n\t\n\t\tvertexShader: [\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tfragmentShader: [\n\t\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform vec2 resolution;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"#define FXAA_REDUCE_MIN   (1.0/128.0)\",\n\t\t\t\"#define FXAA_REDUCE_MUL   (1.0/8.0)\",\n\t\t\t\"#define FXAA_SPAN_MAX     8.0\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );\",\n\t\t\t\t\"vec3 rgbM  = rgbaM.xyz;\",\n\t\t\t\t\"float opacity  = rgbaM.w;\",\n\t\n\t\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\t\n\t\t\t\t\"float lumaNW = dot( rgbNW, luma );\",\n\t\t\t\t\"float lumaNE = dot( rgbNE, luma );\",\n\t\t\t\t\"float lumaSW = dot( rgbSW, luma );\",\n\t\t\t\t\"float lumaSE = dot( rgbSE, luma );\",\n\t\t\t\t\"float lumaM  = dot( rgbM,  luma );\",\n\t\t\t\t\"float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\",\n\t\t\t\t\"float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\",\n\t\n\t\t\t\t\"vec2 dir;\",\n\t\t\t\t\"dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\",\n\t\t\t\t\"dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\",\n\t\n\t\t\t\t\"float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\",\n\t\n\t\t\t\t\"float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\",\n\t\t\t\t\"dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\",\n\t\t\t\t\t  \"max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\",\n\t\t\t\t\t\t\t\"dir * rcpDirMin)) * resolution;\",\n\t\n\t\t\t\t\"vec3 rgbA = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\t\"rgbA += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\t\"rgbA *= 0.5;\",\n\t\n\t\t\t\t\"vec3 rgbB = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz;\",\n\t\t\t\t\"rgbB += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz;\",\n\t\t\t\t\"rgbB *= 0.25;\",\n\t\t\t\t\"rgbB += rgbA * 0.5;\",\n\t\n\t\t\t\t\"float lumaB = dot( rgbB, luma );\",\n\t\n\t\t\t\t\"if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\",\n\t\n\t\t\t\t\t\"gl_FragColor = vec4( rgbA, opacity );\",\n\t\n\t\t\t\t\"} else {\",\n\t\n\t\t\t\t\t\"gl_FragColor = vec4( rgbB, opacity );\",\n\t\n\t\t\t\t\"}\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\")\n\t\n\t};\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Convolution shader\n\t * ported from o3d sample to WebGL / GLSL\n\t * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\n\t */\n\t\n\tTHREE.ConvolutionShader = {\n\t\n\t\tdefines: {\n\t\n\t\t\t\"KERNEL_SIZE_FLOAT\": \"25.0\",\n\t\t\t\"KERNEL_SIZE_INT\": \"25\",\n\t\n\t\t},\n\t\n\t\tuniforms: {\n\t\n\t\t\t\"tDiffuse\":        { type: \"t\", value: null },\n\t\t\t\"uImageIncrement\": { type: \"v2\", value: new THREE.Vector2( 0.001953125, 0.0 ) },\n\t\t\t\"cKernel\":         { type: \"fv1\", value: [] }\n\t\n\t\t},\n\t\n\t\tvertexShader: [\n\t\n\t\t\t\"uniform vec2 uImageIncrement;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tfragmentShader: [\n\t\n\t\t\t\"uniform float cKernel[ KERNEL_SIZE_INT ];\",\n\t\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform vec2 uImageIncrement;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vec2 imageCoord = vUv;\",\n\t\t\t\t\"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\n\t\n\t\t\t\t\"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\n\t\n\t\t\t\t\t\"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\n\t\t\t\t\t\"imageCoord += uImageIncrement;\",\n\t\n\t\t\t\t\"}\",\n\t\n\t\t\t\t\"gl_FragColor = sum;\",\n\t\n\t\t\t\"}\"\n\t\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tbuildKernel: function ( sigma ) {\n\t\n\t\t\t// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\n\t\n\t\t\tfunction gauss( x, sigma ) {\n\t\n\t\t\t\treturn Math.exp( - ( x * x ) / ( 2.0 * sigma * sigma ) );\n\t\n\t\t\t}\n\t\n\t\t\tvar i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil( sigma * 3.0 ) + 1;\n\t\n\t\t\tif ( kernelSize > kMaxKernelSize ) kernelSize = kMaxKernelSize;\n\t\t\thalfWidth = ( kernelSize - 1 ) * 0.5;\n\t\n\t\t\tvalues = new Array( kernelSize );\n\t\t\tsum = 0.0;\n\t\t\tfor ( i = 0; i < kernelSize; ++i ) {\n\t\n\t\t\t\tvalues[ i ] = gauss( i - halfWidth, sigma );\n\t\t\t\tsum += values[ i ];\n\t\n\t\t\t}\n\t\n\t\t\t// normalize the kernel\n\t\n\t\t\tfor ( i = 0; i < kernelSize; ++i ) values[ i ] /= sum;\n\t\n\t\t\treturn values;\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author felixturner / http://airtight.cc/\n\t *\n\t * RGB Shift Shader\n\t * Shifts red and blue channels from center in opposite directions\n\t * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n\t * by Tom Butterworth / http://kriss.cx/tom/\n\t *\n\t * amount: shift distance (1 is width of input)\n\t * angle: shift angle in radians\n\t */\n\t\n\tTHREE.DigitalGlitch2 = {\n\t\n\t  uniforms: {\n\t\n\t    \"tDiffuse\":   { type: \"t\", value: null },//diffuse texture\n\t    \"tDisp\":    { type: \"t\", value: null },//displacement texture for digital glitch squares\n\t    \"tScratch\":   { type: \"t\", value: null },//scratch texture\n\t    \"byp\":      { type: \"i\", value: 0 },//apply the glitch ?\n\t    \"amount\":   { type: \"f\", value: 0.08 },\n\t    \"angle\":    { type: \"f\", value: 0.02 },\n\t    \"seed\":     { type: \"f\", value: 0.02 },\n\t    \"seed_x\":   { type: \"f\", value: 0.02 },//-1,1\n\t    \"seed_y\":   { type: \"f\", value: 0.02 },//-1,1\n\t    \"distortion_x\": { type: \"f\", value: 0.5 },\n\t    \"distortion_y\": { type: \"f\", value: 0.6 },\n\t    \"col_s\":    { type: \"f\", value: 0.05 }\n\t  },\n\t\n\t  vertexShader: [\n\t\n\t    \"varying vec2 vUv;\",\n\t    \"void main() {\",\n\t      \"vUv = uv;\",\n\t      \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t    \"}\"\n\t  ].join(\"\\n\"),\n\t\n\t  fragmentShader: [\n\t    \"uniform int byp;\",//should we apply the glitch ?\n\t\n\t    \"uniform sampler2D tDiffuse;\",\n\t    \"uniform sampler2D tDisp;\",\n\t    \"uniform sampler2D tScratch;\",\n\t\n\t    \"uniform float amount;\",\n\t    \"uniform float angle;\",\n\t    \"uniform float seed;\",\n\t    \"uniform float seed_x;\",\n\t    \"uniform float seed_y;\",\n\t    \"uniform float distortion_x;\",\n\t    \"uniform float distortion_y;\",\n\t    \"uniform float col_s;\",\n\t\n\t    \"varying vec2 vUv;\",\n\t\n\t\n\t    \"float rand(vec2 co){\",\n\t      \"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\n\t    \"}\",\n\t\n\t    \"float luma(vec3 color) {\",\n\t      \"return dot(color, vec3(0.299, 0.587, 0.114));\",\n\t    \"}\",\n\t\n\t    \"float luma(vec4 color) {\",\n\t      \"return dot(color.rgb, vec3(0.299, 0.587, 0.114));\",\n\t    \"}\",\n\t\n\t    \"void main() {\",\n\t      // ref for dust/scratch: https://gist.github.com/mattdesl/253aece2d3eaac505823\n\t      \"vec2 p = vUv;\",\n\t      \"vec4 scratches = texture2D(tScratch, p);\",\n\t\n\t\n\t      // https://github.com/mattdesl/lwjgl-basics/wiki/ShaderLesson3\n\t      \"if(byp<1) {\",\n\t        \"float xs = floor(gl_FragCoord.x / 0.5);\",\n\t        \"float ys = floor(gl_FragCoord.y / 0.5);\",\n\t        //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n\t        \"vec4 normal = texture2D (tDisp, p*seed*seed);\",\n\t        \"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\",\n\t          \"if(seed_x>0.){\",\n\t            \"p.y = 1. - (p.y + distortion_y);\",\n\t          \"}\",\n\t          \"else {\",\n\t            \"p.y = distortion_y;\",\n\t          \"}\",\n\t        \"}\",\n\t        \"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\",\n\t          \"if(seed_y>0.){\",\n\t            \"p.x=distortion_x;\",\n\t          \"}\",\n\t          \"else {\",\n\t            \"p.x = 1. - (p.x + distortion_x);\",\n\t          \"}\",\n\t        \"}\",\n\t        \"p.x+=normal.x*seed_x*(seed/5.);\",\n\t        \"p.y+=normal.y*seed_y*(seed/5.);\",\n\t        //base from RGB shift shader\n\t        \"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\n\t        \"vec4 cr = texture2D(tDiffuse, p + offset);\",\n\t        \"vec4 cga = texture2D(tDiffuse, p);\",\n\t        \"vec4 cb = texture2D(tDiffuse, p - offset);\",\n\t\n\t        \"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\n\t        //add noise\n\t        \"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\",\n\t        \"gl_FragColor = gl_FragColor+ snow;\",\n\t      \"}\",\n\t      \"else {\",\n\t        \"gl_FragColor=texture2D (tDiffuse, vUv);\",\n\t      \"}\",\n\t\n\t      \"vec3 scratchBlend = gl_FragColor.rgb + scratches.rgb;\",\n\t      // vignette scratch so that it affect only edges.\n\t      \"float center = smoothstep(0.0, 0.5, length(vUv-0.5));\",\n\t      \"float luminance = luma(gl_FragColor.rgb);\",\n\t      \"float brightnessMap = smoothstep(0.1, 0.4, luminance * center );\",\n\t      \"gl_FragColor.rgb = mix(gl_FragColor.rgb, scratchBlend, brightnessMap);\",\n\t    \"}\"\n\t\n\t  ].join(\"\\n\")\n\t\n\t};\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedLine, Lines, SpreadedObjects;\n\t  AnimatedLine = __webpack_require__(45);\n\t  SpreadedObjects = __webpack_require__(46);\n\t  return Lines = (function(superClass) {\n\t    extend(Lines, superClass);\n\t\n\t    function Lines() {\n\t      return Lines.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Lines.prototype.getItemClass = function() {\n\t      return AnimatedLine;\n\t    };\n\t\n\t    return Lines;\n\t\n\t  })(SpreadedObjects);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Camera, THREE;\n\t  THREE = __webpack_require__(2);\n\t  return Camera = (function() {\n\t    Camera.properties = {\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 700\n\t      },\n\t      target_x: {\n\t        name: 'target_x',\n\t        label: 'target x',\n\t        val: 0\n\t      },\n\t      target_y: {\n\t        name: 'target_y',\n\t        label: 'target y',\n\t        val: 0\n\t      },\n\t      target_z: {\n\t        name: 'target_z',\n\t        label: 'target z',\n\t        val: 0\n\t      },\n\t      fov: {\n\t        name: 'fov',\n\t        label: 'fov',\n\t        val: 45\n\t      }\n\t    };\n\t\n\t    function Camera(values1, time) {\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.isCamera = true;\n\t      this.target = new THREE.Vector3(this.values.target_x, this.values.target_y, this.values.target_z);\n\t      this.container = new THREE.PerspectiveCamera(this.values.fov, window.innerWidth / window.innerHeight, 1, 2000);\n\t      this.container.position.set(this.values.x, this.values.y, this.values.z);\n\t    }\n\t\n\t    Camera.prototype.update = function(seconds, values, force) {\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values.fov != null) {\n\t        this.container.fov = values.fov;\n\t      }\n\t      this.container.position.set(values.x, values.y, values.z);\n\t      this.target.set(values.target_x, values.target_y, values.target_z);\n\t      return this.container.lookAt(this.target);\n\t    };\n\t\n\t    Camera.prototype.destroy = function() {\n\t      delete this.container;\n\t      return delete this.isCamera;\n\t    };\n\t\n\t    return Camera;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedCircle, Circles, SpreadedObjects;\n\t  AnimatedCircle = __webpack_require__(48);\n\t  SpreadedObjects = __webpack_require__(46);\n\t  return Circles = (function(superClass) {\n\t    extend(Circles, superClass);\n\t\n\t    function Circles() {\n\t      return Circles.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Circles.prototype.getItemClass = function() {\n\t      return AnimatedCircle;\n\t    };\n\t\n\t    return Circles;\n\t\n\t  })(SpreadedObjects);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedBox, Boxes, SpreadedObjects;\n\t  AnimatedBox = __webpack_require__(47);\n\t  SpreadedObjects = __webpack_require__(46);\n\t  return Boxes = (function(superClass) {\n\t    extend(Boxes, superClass);\n\t\n\t    function Boxes() {\n\t      return Boxes.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Boxes.prototype.getItemClass = function() {\n\t      return AnimatedBox;\n\t    };\n\t\n\t    return Boxes;\n\t\n\t  })(SpreadedObjects);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Colors, ElementBase, RNG, ShaderFragement, ShaderVertex, SingleObject, THREE, _;\n\t  _ = __webpack_require__(16);\n\t  THREE = __webpack_require__(2);\n\t  RNG = __webpack_require__(40);\n\t  ElementBase = __webpack_require__(37);\n\t  Colors = __webpack_require__(36);\n\t  ShaderVertex = __webpack_require__(43);\n\t  ShaderFragement = __webpack_require__(44);\n\t  return SingleObject = (function(superClass) {\n\t    extend(SingleObject, superClass);\n\t\n\t    SingleObject.properties = {\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      rotX: {\n\t        name: 'rotX',\n\t        label: 'rotation x',\n\t        val: 0\n\t      },\n\t      rotY: {\n\t        name: 'rotY',\n\t        label: 'rotation y',\n\t        val: 0\n\t      },\n\t      rotZ: {\n\t        name: 'rotZ',\n\t        label: 'rotation z',\n\t        val: 0\n\t      },\n\t      scaleX: {\n\t        name: 'scaleX',\n\t        label: 'scale x',\n\t        val: 1\n\t      },\n\t      scaleY: {\n\t        name: 'scaleY',\n\t        label: 'scale y',\n\t        val: 1\n\t      },\n\t      scaleZ: {\n\t        name: 'scaleZ',\n\t        label: 'scale z',\n\t        val: 1\n\t      },\n\t      color: {\n\t        name: 'color',\n\t        label: 'color',\n\t        'type': 'color',\n\t        val: \"#888888\"\n\t      },\n\t      opacity: {\n\t        name: 'opacity',\n\t        label: 'opacity',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1\n\t      }\n\t    };\n\t\n\t    function SingleObject(values1, time) {\n\t      var color, key, prop, ref;\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.getGeometry = bind(this.getGeometry, this);\n\t      ref = this.getDefaultProperties();\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      SingleObject.__super__.constructor.apply(this, arguments);\n\t      this.timeline = new TimelineMax();\n\t      color = new THREE.Color(values.color);\n\t      this.material = this.getMaterial(color);\n\t      this.container = new THREE.Mesh(this.getGeometry(), this.material);\n\t    }\n\t\n\t    SingleObject.prototype.getDefaultProperties = function() {\n\t      return SingleObject.properties;\n\t    };\n\t\n\t    SingleObject.prototype.getGeometry = function() {\n\t      return new THREE.PlaneGeometry(100, 100);\n\t    };\n\t\n\t    SingleObject.prototype.destroy = function() {\n\t      SingleObject.__super__.destroy.apply(this, arguments);\n\t      if (this.container) {\n\t        if (this.container.parent) {\n\t          this.container.parent.remove(this.container);\n\t        }\n\t        delete this.container;\n\t      }\n\t      delete this.geometry;\n\t      return delete this.timeline;\n\t    };\n\t\n\t    SingleObject.prototype.update = function(seconds, values, force) {\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values === false) {\n\t        values = this.values;\n\t      }\n\t      if (force || this.valueChanged(\"x\", values) || this.valueChanged(\"y\", values) || this.valueChanged(\"z\", values)) {\n\t        this.container.position.set(values.x, values.y, values.z);\n\t      }\n\t      if (force || this.valueChanged(\"rotX\", values) || this.valueChanged(\"rotY\", values) || this.valueChanged(\"rotZ\", values)) {\n\t        this.container.rotation.set(this.degreeToRadian(values.rotX), this.degreeToRadian(values.rotY), this.degreeToRadian(values.rotZ));\n\t      }\n\t      if (force || this.valueChanged(\"scaleX\", values) || this.valueChanged(\"scaleY\", values) || this.valueChanged(\"scaleZ\", values)) {\n\t        values.scaleX = values.scaleX || 0.000000001;\n\t        values.scaleY = values.scaleY || 0.000000001;\n\t        values.scaleZ = values.scaleZ || 0.000000001;\n\t        this.container.scale.set(values.scaleX, values.scaleY, values.scaleZ);\n\t      }\n\t      if (force || this.valueChanged(\"color\", values)) {\n\t        this.material.color = new THREE.Color(values.color);\n\t      }\n\t      if (force || this.valueChanged(\"opacity\", values)) {\n\t        this.material.opacity = values.opacity;\n\t      }\n\t    };\n\t\n\t    SingleObject.prototype.getMaterial = function(color) {\n\t      var material;\n\t      material = new THREE.MeshPhongMaterial({\n\t        ambient: 0x030303,\n\t        color: 0xdddddd,\n\t        specular: 0x888888,\n\t        shininess: 30,\n\t        shading: THREE.FlatShading\n\t      });\n\t      material.transparent = true;\n\t      material.depthWrite = false;\n\t      material.depthTest = false;\n\t      material.side = THREE.DoubleSide;\n\t      material.blending = THREE.AdditiveBlending;\n\t      return material;\n\t    };\n\t\n\t    return SingleObject;\n\t\n\t  })(ElementBase);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Circle, Colors, RNG, RingGeometry2, ShaderFragement, ShaderVertex, SingleObject, THREE, _;\n\t  _ = __webpack_require__(16);\n\t  THREE = __webpack_require__(2);\n\t  RNG = __webpack_require__(40);\n\t  SingleObject = __webpack_require__(34);\n\t  Colors = __webpack_require__(36);\n\t  RingGeometry2 = __webpack_require__(49);\n\t  ShaderVertex = __webpack_require__(43);\n\t  ShaderFragement = __webpack_require__(44);\n\t  return Circle = (function(superClass) {\n\t    extend(Circle, superClass);\n\t\n\t    function Circle() {\n\t      this.getGeometry = bind(this.getGeometry, this);\n\t      return Circle.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Circle.properties = {\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      rotX: {\n\t        name: 'rotX',\n\t        label: 'rotation x',\n\t        val: 0\n\t      },\n\t      rotY: {\n\t        name: 'rotY',\n\t        label: 'rotation y',\n\t        val: 0\n\t      },\n\t      rotZ: {\n\t        name: 'rotZ',\n\t        label: 'rotation z',\n\t        val: 0\n\t      },\n\t      scaleX: {\n\t        name: 'scaleX',\n\t        label: 'scale x',\n\t        val: 1\n\t      },\n\t      scaleY: {\n\t        name: 'scaleY',\n\t        label: 'scale y',\n\t        val: 1\n\t      },\n\t      scaleZ: {\n\t        name: 'scaleZ',\n\t        label: 'scale z',\n\t        val: 1\n\t      },\n\t      innerRadius: {\n\t        name: 'innerRadius',\n\t        label: 'innerRadius',\n\t        val: 0.7,\n\t        min: 0,\n\t        max: 1\n\t      },\n\t      angle: {\n\t        name: 'angle',\n\t        label: 'angle',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1\n\t      },\n\t      color: {\n\t        name: 'color',\n\t        label: 'color',\n\t        'type': 'color',\n\t        val: \"#888888\"\n\t      },\n\t      opacity: {\n\t        name: 'opacity',\n\t        label: 'opacity',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1\n\t      }\n\t    };\n\t\n\t    Circle.prototype.getDefaultProperties = function() {\n\t      return Circle.properties;\n\t    };\n\t\n\t    Circle.prototype.getGeometry = function() {\n\t      var angle, inner_radius, pi2;\n\t      inner_radius = this.values.innerRadius || 0.000000001;\n\t      inner_radius = Math.min(0.999999999, inner_radius);\n\t      pi2 = Math.PI * 2;\n\t      angle = this.values.angle * pi2;\n\t      return new RingGeometry2(100 * inner_radius, 100, 30, 1, 0, angle);\n\t    };\n\t\n\t    Circle.prototype.update = function(seconds, values, force) {\n\t      var geom;\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      Circle.__super__.update.apply(this, arguments);\n\t      if (force || this.valueChanged(\"innerRadius\", values) || this.valueChanged(\"angle\", values)) {\n\t        geom = this.getGeometry();\n\t        this.container.geometry.dynamic = true;\n\t        this.container.geometry.vertices = geom.vertices;\n\t        this.container.geometry.verticesNeedUpdate = true;\n\t        geom.dispose();\n\t      }\n\t    };\n\t\n\t    return Circle;\n\t\n\t  })(SingleObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Colors, THREE, items, items2, length;\n\t  THREE = __webpack_require__(2);\n\t  items = [new THREE.Color(0xffffff), new THREE.Color(0x86d1b8), new THREE.Color(0x65c282)];\n\t  items2 = [new THREE.Color(0xffffff), new THREE.Color(0x023750), new THREE.Color(0x028A9E), new THREE.Color(0x0EBFA9), new THREE.Color(0xF2C01D), new THREE.Color(0xD93024)];\n\t  length = items.length;\n\t  return Colors = (function() {\n\t    function Colors() {}\n\t\n\t    Colors.get = function(index) {\n\t      index = Math.abs(parseInt(index, 10));\n\t      return items[index % length];\n\t    };\n\t\n\t    return Colors;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var ElementBase;\n\t  return ElementBase = (function() {\n\t    function ElementBase(values1, time) {\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.destroy = bind(this.destroy, this);\n\t      this.cache = this.buildCache();\n\t    }\n\t\n\t    ElementBase.prototype.buildCache = function() {\n\t      var cache, key, prop, ref;\n\t      cache = {};\n\t      ref = this.values;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        cache[key] = prop.val;\n\t      }\n\t      return cache;\n\t    };\n\t\n\t    ElementBase.prototype.valueChanged = function(key, values) {\n\t      var has_changed, new_val;\n\t      if (values[key] == null) {\n\t        return false;\n\t      }\n\t      new_val = values[key];\n\t      has_changed = true;\n\t      if ((this.cache[key] != null) && this.cache[key] === new_val) {\n\t        has_changed = false;\n\t      }\n\t      this.cache[key] = new_val;\n\t      return has_changed;\n\t    };\n\t\n\t    ElementBase.prototype.degreeToRadian = function(degree) {\n\t      return Math.PI * degree / 180;\n\t    };\n\t\n\t    ElementBase.prototype.destroy = function() {\n\t      return delete this.cache;\n\t    };\n\t\n\t    return ElementBase;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;// Modified to have uv on the edges.\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var THREE = __webpack_require__(2);\n\t\n\tTHREE.CircleGeometry2 = function ( radius, segments, thetaStart, thetaLength ) {\n\t\n\t\tTHREE.Geometry.call( this );\n\t\n\t\tthis.type = 'CircleGeometry2';\n\t\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\t\n\t\tradius = radius || 50;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\t\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\t\n\t\tvar i, uvs = [],\n\t\tcenter = new THREE.Vector3(),\n\t  centerUV = new THREE.Vector2( 0, 0 );\n\t  //centerUV = new THREE.Vector2( 0.5, 0.5 );\n\t\n\t\tthis.vertices.push(center);\n\t\tuvs.push( centerUV );\n\t\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\t\n\t\t\tvar vertex = new THREE.Vector3();\n\t\t\tvar segment = thetaStart + i / segments * thetaLength;\n\t\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\t\n\t\t\tthis.vertices.push( vertex );\n\t\t\t//uvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\n\t\n\t    uvs.push(new THREE.Vector2(1, i / segments));\n\t\t}\n\t\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\n\t\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\t\n\t\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\t//this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\n\t    this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), new THREE.Vector2(0, i / segments) ] );\n\t\n\t\t}\n\t\n\t\tthis.computeFaceNormals();\n\t\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\t\n\t};\n\t\n\tTHREE.CircleGeometry2.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.CircleGeometry2.prototype.constructor = THREE.CircleGeometry2;\n\t\n\treturn THREE.CircleGeometry2;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Seedable random number generator functions.\n\t * @version 1.0.0\n\t * @license Public Domain\n\t *\n\t * @example\n\t * var rng = new RNG('Example');\n\t * rng.random(40, 50);  // =>  42\n\t * rng.uniform();       // =>  0.7972798995050903\n\t * rng.normal();        // => -0.6698504543216376\n\t * rng.exponential();   // =>  1.0547367609131555\n\t * rng.poisson(4);      // =>  2\n\t * rng.gamma(4);        // =>  2.781724687386858\n\t */\n\t\n\t/**\n\t * @param {String} seed A string to seed the generator.\n\t * @constructor\n\t */\n\tfunction RC4(seed) {\n\t    this.s = new Array(256);\n\t    this.i = 0;\n\t    this.j = 0;\n\t    for (var i = 0; i < 256; i++) {\n\t        this.s[i] = i;\n\t    }\n\t    if (seed) {\n\t        this.mix(seed);\n\t    }\n\t}\n\t\n\t/**\n\t * Get the underlying bytes of a string.\n\t * @param {string} string\n\t * @returns {Array} An array of bytes\n\t */\n\tRC4.getStringBytes = function(string) {\n\t    var output = [];\n\t    for (var i = 0; i < string.length; i++) {\n\t        var c = string.charCodeAt(i);\n\t        var bytes = [];\n\t        do {\n\t            bytes.push(c & 0xFF);\n\t            c = c >> 8;\n\t        } while (c > 0);\n\t        output = output.concat(bytes.reverse());\n\t    }\n\t    return output;\n\t};\n\t\n\tRC4.prototype._swap = function(i, j) {\n\t    var tmp = this.s[i];\n\t    this.s[i] = this.s[j];\n\t    this.s[j] = tmp;\n\t};\n\t\n\t/**\n\t * Mix additional entropy into this generator.\n\t * @param {String} seed\n\t */\n\tRC4.prototype.mix = function(seed) {\n\t    var input = RC4.getStringBytes(seed);\n\t    var j = 0;\n\t    for (var i = 0; i < this.s.length; i++) {\n\t        j += this.s[i] + input[i % input.length];\n\t        j %= 256;\n\t        this._swap(i, j);\n\t    }\n\t};\n\t\n\t/**\n\t * @returns {number} The next byte of output from the generator.\n\t */\n\tRC4.prototype.next = function() {\n\t    this.i = (this.i + 1) % 256;\n\t    this.j = (this.j + this.s[this.i]) % 256;\n\t    this._swap(this.i, this.j);\n\t    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n\t};\n\t\n\t/**\n\t * Create a new random number generator with optional seed. If the\n\t * provided seed is a function (i.e. Math.random) it will be used as\n\t * the uniform number generator.\n\t * @param seed An arbitrary object used to seed the generator.\n\t * @constructor\n\t */\n\tfunction RNG(seed) {\n\t    if (seed == null) {\n\t        seed = (Math.random() + Date.now()).toString();\n\t    } else if (typeof seed === \"function\") {\n\t        // Use it as a uniform number generator\n\t        this.uniform = seed;\n\t        this.nextByte = function() {\n\t            return ~~(this.uniform() * 256);\n\t        };\n\t        seed = null;\n\t    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n\t        seed = JSON.stringify(seed);\n\t    }\n\t    this._normal = null;\n\t    if (seed) {\n\t        this._state = new RC4(seed);\n\t    } else {\n\t        this._state = null;\n\t    }\n\t}\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 255.\n\t */\n\tRNG.prototype.nextByte = function() {\n\t    return this._state.next();\n\t};\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 1.\n\t */\n\tRNG.prototype.uniform = function() {\n\t    var BYTES = 7; // 56 bits to make a 53-bit double\n\t    var output = 0;\n\t    for (var i = 0; i < BYTES; i++) {\n\t        output *= 256;\n\t        output += this.nextByte();\n\t    }\n\t    return output / (Math.pow(2, BYTES * 8) - 1);\n\t};\n\t\n\t/**\n\t * Produce a random integer within [n, m).\n\t * @param {number} [n=0]\n\t * @param {number} m\n\t *\n\t */\n\tRNG.prototype.random = function(n, m) {\n\t    if (n == null) {\n\t        return this.uniform();\n\t    } else if (m == null) {\n\t        m = n;\n\t        n = 0;\n\t    }\n\t    return n + Math.floor(this.uniform() * (m - n));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() with the Box-Muller transform.\n\t * @returns {number} Normally-distributed random number of mean 0, variance 1.\n\t */\n\tRNG.prototype.normal = function() {\n\t    if (this._normal !== null) {\n\t        var n = this._normal;\n\t        this._normal = null;\n\t        return n;\n\t    } else {\n\t        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n\t        var y = this.uniform();\n\t        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n\t        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n\t    }\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform().\n\t * @returns {number} Number from the exponential distribution, lambda = 1.\n\t */\n\tRNG.prototype.exponential = function() {\n\t    return -Math.log(this.uniform() || Math.pow(2, -53));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() and Knuth's method.\n\t * @param {number} [mean=1]\n\t * @returns {number} Number from the Poisson distribution.\n\t */\n\tRNG.prototype.poisson = function(mean) {\n\t    var L = Math.exp(-(mean || 1));\n\t    var k = 0, p = 1;\n\t    do {\n\t        k++;\n\t        p *= this.uniform();\n\t    } while (p > L);\n\t    return k - 1;\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform(), this.normal(),\n\t * this.exponential(), and the Marsaglia-Tsang method.\n\t * @param {number} a\n\t * @returns {number} Number from the gamma distribution.\n\t */\n\tRNG.prototype.gamma = function(a) {\n\t    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n\t    var c = 1 / Math.sqrt(9 * d);\n\t    do {\n\t        do {\n\t            var x = this.normal();\n\t            var v = Math.pow(c * x + 1, 3);\n\t        } while (v <= 0);\n\t        var u = this.uniform();\n\t        var x2 = Math.pow(x, 2);\n\t    } while (u >= 1 - 0.0331 * x2 * x2 &&\n\t             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n\t    if (a < 1) {\n\t        return d * v * Math.exp(this.exponential() / -a);\n\t    } else {\n\t        return d * v;\n\t    }\n\t};\n\t\n\t/**\n\t * Accepts a dice rolling notation string and returns a generator\n\t * function for that distribution. The parser is quite flexible.\n\t * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n\t * @param {RNG} rng An optional RNG object.\n\t * @returns {Function}\n\t */\n\tRNG.roller = function(expr, rng) {\n\t    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n\t    var dice = parseFloat(parts[0]) || 1;\n\t    var sides = parseFloat(parts[1]);\n\t    var mod = parseFloat(parts[2]) || 0;\n\t    rng = rng || new RNG();\n\t    return function() {\n\t        var total = dice + mod;\n\t        for (var i = 0; i < dice; i++) {\n\t            total += rng.random(sides);\n\t        }\n\t        return total;\n\t    };\n\t};\n\t\n\t/* Provide a pre-made generator instance. */\n\tRNG.$ = new RNG();\n\t\n\t\n\t/*** EXPORTS FROM exports-loader ***/\n\tmodule.exports = RNG\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Seedable random number generator functions.\n\t * @version 1.0.0\n\t * @license Public Domain\n\t *\n\t * @example\n\t * var rng = new RNG('Example');\n\t * rng.random(40, 50);  // =>  42\n\t * rng.uniform();       // =>  0.7972798995050903\n\t * rng.normal();        // => -0.6698504543216376\n\t * rng.exponential();   // =>  1.0547367609131555\n\t * rng.poisson(4);      // =>  2\n\t * rng.gamma(4);        // =>  2.781724687386858\n\t */\n\t\n\t/**\n\t * @param {String} seed A string to seed the generator.\n\t * @constructor\n\t */\n\tfunction RC4(seed) {\n\t    this.s = new Array(256);\n\t    this.i = 0;\n\t    this.j = 0;\n\t    for (var i = 0; i < 256; i++) {\n\t        this.s[i] = i;\n\t    }\n\t    if (seed) {\n\t        this.mix(seed);\n\t    }\n\t}\n\t\n\t/**\n\t * Get the underlying bytes of a string.\n\t * @param {string} string\n\t * @returns {Array} An array of bytes\n\t */\n\tRC4.getStringBytes = function(string) {\n\t    var output = [];\n\t    for (var i = 0; i < string.length; i++) {\n\t        var c = string.charCodeAt(i);\n\t        var bytes = [];\n\t        do {\n\t            bytes.push(c & 0xFF);\n\t            c = c >> 8;\n\t        } while (c > 0);\n\t        output = output.concat(bytes.reverse());\n\t    }\n\t    return output;\n\t};\n\t\n\tRC4.prototype._swap = function(i, j) {\n\t    var tmp = this.s[i];\n\t    this.s[i] = this.s[j];\n\t    this.s[j] = tmp;\n\t};\n\t\n\t/**\n\t * Mix additional entropy into this generator.\n\t * @param {String} seed\n\t */\n\tRC4.prototype.mix = function(seed) {\n\t    var input = RC4.getStringBytes(seed);\n\t    var j = 0;\n\t    for (var i = 0; i < this.s.length; i++) {\n\t        j += this.s[i] + input[i % input.length];\n\t        j %= 256;\n\t        this._swap(i, j);\n\t    }\n\t};\n\t\n\t/**\n\t * @returns {number} The next byte of output from the generator.\n\t */\n\tRC4.prototype.next = function() {\n\t    this.i = (this.i + 1) % 256;\n\t    this.j = (this.j + this.s[this.i]) % 256;\n\t    this._swap(this.i, this.j);\n\t    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n\t};\n\t\n\t/**\n\t * Create a new random number generator with optional seed. If the\n\t * provided seed is a function (i.e. Math.random) it will be used as\n\t * the uniform number generator.\n\t * @param seed An arbitrary object used to seed the generator.\n\t * @constructor\n\t */\n\tfunction RNG(seed) {\n\t    if (seed == null) {\n\t        seed = (Math.random() + Date.now()).toString();\n\t    } else if (typeof seed === \"function\") {\n\t        // Use it as a uniform number generator\n\t        this.uniform = seed;\n\t        this.nextByte = function() {\n\t            return ~~(this.uniform() * 256);\n\t        };\n\t        seed = null;\n\t    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n\t        seed = JSON.stringify(seed);\n\t    }\n\t    this._normal = null;\n\t    if (seed) {\n\t        this._state = new RC4(seed);\n\t    } else {\n\t        this._state = null;\n\t    }\n\t}\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 255.\n\t */\n\tRNG.prototype.nextByte = function() {\n\t    return this._state.next();\n\t};\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 1.\n\t */\n\tRNG.prototype.uniform = function() {\n\t    var BYTES = 7; // 56 bits to make a 53-bit double\n\t    var output = 0;\n\t    for (var i = 0; i < BYTES; i++) {\n\t        output *= 256;\n\t        output += this.nextByte();\n\t    }\n\t    return output / (Math.pow(2, BYTES * 8) - 1);\n\t};\n\t\n\t/**\n\t * Produce a random integer within [n, m).\n\t * @param {number} [n=0]\n\t * @param {number} m\n\t *\n\t */\n\tRNG.prototype.random = function(n, m) {\n\t    if (n == null) {\n\t        return this.uniform();\n\t    } else if (m == null) {\n\t        m = n;\n\t        n = 0;\n\t    }\n\t    return n + Math.floor(this.uniform() * (m - n));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() with the Box-Muller transform.\n\t * @returns {number} Normally-distributed random number of mean 0, variance 1.\n\t */\n\tRNG.prototype.normal = function() {\n\t    if (this._normal !== null) {\n\t        var n = this._normal;\n\t        this._normal = null;\n\t        return n;\n\t    } else {\n\t        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n\t        var y = this.uniform();\n\t        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n\t        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n\t    }\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform().\n\t * @returns {number} Number from the exponential distribution, lambda = 1.\n\t */\n\tRNG.prototype.exponential = function() {\n\t    return -Math.log(this.uniform() || Math.pow(2, -53));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() and Knuth's method.\n\t * @param {number} [mean=1]\n\t * @returns {number} Number from the Poisson distribution.\n\t */\n\tRNG.prototype.poisson = function(mean) {\n\t    var L = Math.exp(-(mean || 1));\n\t    var k = 0, p = 1;\n\t    do {\n\t        k++;\n\t        p *= this.uniform();\n\t    } while (p > L);\n\t    return k - 1;\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform(), this.normal(),\n\t * this.exponential(), and the Marsaglia-Tsang method.\n\t * @param {number} a\n\t * @returns {number} Number from the gamma distribution.\n\t */\n\tRNG.prototype.gamma = function(a) {\n\t    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n\t    var c = 1 / Math.sqrt(9 * d);\n\t    do {\n\t        do {\n\t            var x = this.normal();\n\t            var v = Math.pow(c * x + 1, 3);\n\t        } while (v <= 0);\n\t        var u = this.uniform();\n\t        var x2 = Math.pow(x, 2);\n\t    } while (u >= 1 - 0.0331 * x2 * x2 &&\n\t             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n\t    if (a < 1) {\n\t        return d * v * Math.exp(this.exponential() / -a);\n\t    } else {\n\t        return d * v;\n\t    }\n\t};\n\t\n\t/**\n\t * Accepts a dice rolling notation string and returns a generator\n\t * function for that distribution. The parser is quite flexible.\n\t * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n\t * @param {RNG} rng An optional RNG object.\n\t * @returns {Function}\n\t */\n\tRNG.roller = function(expr, rng) {\n\t    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n\t    var dice = parseFloat(parts[0]) || 1;\n\t    var sides = parseFloat(parts[1]);\n\t    var mod = parseFloat(parts[2]) || 0;\n\t    rng = rng || new RNG();\n\t    return function() {\n\t        var total = dice + mod;\n\t        for (var i = 0; i < dice; i++) {\n\t            total += rng.random(sides);\n\t        }\n\t        return total;\n\t    };\n\t};\n\t\n\t/* Provide a pre-made generator instance. */\n\tRNG.$ = new RNG();\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nprecision highp float;\\n\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nfloat aastep_1_0(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\n\\n\\nvarying vec2 vUv;\\nuniform vec3 color;\\n// 0 hidden, 1 full, 2 hidden\\nuniform float percent;\\n\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\n\\n// Common\\n#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\n\\nfloat quadraticInOut(float t) {\\n  float p = 2.0 * t * t;\\n  return t < 0.5 ? p : -p + (4.0 * t) - 1.0;\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n  return a;\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n  return a;\\n}\\n\\nvoid main() {\\n  // For fog\\n  vec3 outgoingLight = vec3( 0.0 );\\t// outgoing light does not have an alpha, the surface does\\n  vec4 diffuseColor = vec4( color, 1.0 );\\n\\n  float alpha = 0.0;\\n\\n  float percentInOut = quadraticInOut(percent / 2.0) * 2.0;\\n\\n  if (vUv.x < percentInOut && vUv.x >= percentInOut - 1.0) {\\n    alpha = 1.0;\\n  }\\n\\n\\n  outgoingLight = diffuseColor.rgb;\\n\\n  float depth = gl_FragCoord.z / gl_FragCoord.w;\\n  float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n  fogFactor = whiteCompliment( fogFactor );\\n\\n  outgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n  gl_FragColor = vec4(outgoingLight, alpha);\\n}\\n\"\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\nvarying float noise;\\nuniform float time;\\nuniform float strength;\\nuniform float seed;\\n\\n//\\n// GLSL textureless classic 3D noise \\\"cnoise\\\",\\n// with an RSL-style periodic variant \\\"pnoise\\\".\\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\\n// Version: 2011-10-11\\n//\\n// Many thanks to Ian McEwan of Ashima Arts for the\\n// ideas for permutation and gradient selection.\\n//\\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\\n// Distributed under the MIT license. See LICENSE file.\\n// https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_1_0(vec3 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_1_0(vec4 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_1_1(vec4 x)\\n{\\n  return mod289_1_0(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_1_2(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nvec3 fade_1_3(vec3 t) {\\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\\n}\\n\\n// Classic Perlin noise, periodic variant\\nfloat pnoise_1_4(vec3 P, vec3 rep)\\n{\\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\\n  Pi0 = mod289_1_0(Pi0);\\n  Pi1 = mod289_1_0(Pi1);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute_1_1(permute_1_1(ix) + iy);\\n  vec4 ixy0 = permute_1_1(ixy + iz0);\\n  vec4 ixy1 = permute_1_1(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt_1_2(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt_1_2(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade_1_3(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n  return 2.2 * n_xyz;\\n}\\n\\n\\n\\n\\nfloat turbulence( vec3 p ) {\\n    float w = 100.0;\\n    float t = -.5;\\n    for (float f = 1.0 ; f <= 10.0 ; f++ ){\\n        float power = pow( 2.0, f );\\n        t += abs( pnoise_1_4( vec3( power * p ), vec3( 10.0, 10.0, 10.0 ) ) / power );\\n    }\\n    return t;\\n}\\n\\nvoid main() {\\n    vUv = uv;\\n\\n\\n    float time2 = time + seed;\\n\\n    // add time to the noise parameters so it's animated\\n    noise = 10.0 *  -.10 * turbulence( 10.5 * normal + time2 );\\n    float b = 5.0 * pnoise_1_4( 0.2 * position + vec3( 2.0 * time2 ), vec3( 100.0 ) );\\n    float displacement = - noise + b;\\n\\n    // Less displacement on center.\\n    displacement = displacement * vUv.x;\\n\\n    //vec3 newPosition = position + normal * displacement * strength * 30.0;\\n    //vec2 normal2 = normalize(uv - 0.5);\\n    vec3 normal2 = normalize(position - 0.5);\\n    float strengthMultiplier = 15.0;\\n    vec3 newPosition = position + vec3(normal2.x, normal2.y, 0.0) * displacement * strength * strengthMultiplier;\\n    //gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nprecision highp float;\\n\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nfloat aastep_1_0(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\n\\n\\nvarying vec2 vUv;\\nuniform vec3 color;\\n\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\n\\n// Common\\n#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\n\\nvec3 inputToLinear( in vec3 a ) {\\n  return a;\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n  return a;\\n}\\n\\nvoid main() {\\n  // For fog\\n  vec3 outgoingLight = vec3( 0.0 );\\t// outgoing light does not have an alpha, the surface does\\n  vec4 diffuseColor = vec4( color, 1.0 );\\n\\n  float alpha = 0.0;\\n  float wireframe_size = 0.01;\\n  float min_x = 0.0;\\n  float max_x = 1.0;\\n\\n  // If max is 1 then wireframe is is only half size.\\n  //max_x = max_x * 0.98;\\n\\n  // Get distance from edges.\\n  vec2 edgeX = abs(vec2(vUv.x - min_x, vUv.x - max_x));\\n  // Add the wireframe.\\n  edgeX = max(vec2(0.0, 0.0), edgeX - wireframe_size);\\n\\n  // Get the smallest distance from edges.\\n  float distance_x = min(edgeX.x, edgeX.y);\\n\\n\\n  alpha = aastep_1_0(distance_x, 0.01);\\n\\n\\n  // Add the fill alpha.\\n  if (vUv.x > min_x && vUv.x < max_x) {\\n    alpha = max(0.1, alpha);\\n  }\\n\\n  outgoingLight = diffuseColor.rgb;\\n\\n  float depth = gl_FragCoord.z / gl_FragCoord.w;\\n  float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n  fogFactor = whiteCompliment( fogFactor );\\n\\n  outgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n  gl_FragColor = vec4(outgoingLight, alpha);\\n  //vec3 k = vec3(1.0, 1.0, 1.0);\\n  //gl_FragColor = vec4( vec3( vUv, 0. ), 1. );\\n  //gl_FragColor = vec4( color, 1.0 );\\n}\\n\"\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedLine, AnimatedObject, THREE, _;\n\t  _ = __webpack_require__(16);\n\t  THREE = __webpack_require__(2);\n\t  AnimatedObject = __webpack_require__(53);\n\t  return AnimatedLine = (function(superClass) {\n\t    extend(AnimatedLine, superClass);\n\t\n\t    AnimatedLine.circleGeom = new THREE.PlaneBufferGeometry(100, 1);\n\t\n\t    AnimatedLine.ringGeom = false;\n\t\n\t    AnimatedLine.ringGeom2 = false;\n\t\n\t    AnimatedLine.noOutline = true;\n\t\n\t    function AnimatedLine() {\n\t      AnimatedLine.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    AnimatedLine.prototype.getGeometry = function() {\n\t      return AnimatedLine.circleGeom;\n\t    };\n\t\n\t    AnimatedLine.prototype.getGeometryOutline = function(outlineWidth) {\n\t      return false;\n\t    };\n\t\n\t    AnimatedLine.prototype.update = function(seconds, progression) {\n\t      var i, len, material, ref, scale, timeDiff;\n\t      this.container.position.add(this.velocity);\n\t      this.velocity = this.velocity.multiplyScalar(0.94);\n\t      timeDiff = Date.now() - this.start;\n\t      ref = this.materials;\n\t      for (i = 0, len = ref.length; i < len; i++) {\n\t        material = ref[i];\n\t        material.uniforms['time'].value = 0.00025 * timeDiff;\n\t      }\n\t      scale = this.animatedProperties.scale * this.values.size * 0.1;\n\t      return this.container.scale.set(1, scale, 1);\n\t    };\n\t\n\t    return AnimatedLine;\n\t\n\t  })(AnimatedObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Colors, ElementBase, RNG, SpreadedObjects, THREE, TweenMax, _;\n\t  _ = __webpack_require__(16);\n\t  THREE = __webpack_require__(2);\n\t  RNG = __webpack_require__(39);\n\t  TweenMax = __webpack_require__(52);\n\t  ElementBase = __webpack_require__(37);\n\t  Colors = __webpack_require__(36);\n\t  return SpreadedObjects = (function(superClass) {\n\t    extend(SpreadedObjects, superClass);\n\t\n\t    SpreadedObjects.properties = {\n\t      numItems: {\n\t        name: 'numItems',\n\t        label: 'num items',\n\t        val: 20,\n\t        triggerRebuild: true\n\t      },\n\t      seed: {\n\t        name: 'seed',\n\t        label: 'seed',\n\t        val: 12002,\n\t        triggerRebuild: true\n\t      },\n\t      randX: {\n\t        name: 'randX',\n\t        label: 'random x',\n\t        val: 80,\n\t        triggerRebuild: true\n\t      },\n\t      randY: {\n\t        name: 'randY',\n\t        label: 'random y',\n\t        val: 80,\n\t        triggerRebuild: true\n\t      },\n\t      randZ: {\n\t        name: 'randZ',\n\t        label: 'random z',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      randRotZ: {\n\t        name: 'randRotZ',\n\t        label: 'random rotation z',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      randScaleX: {\n\t        name: 'randScaleX',\n\t        label: 'random scale x',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      randScaleY: {\n\t        name: 'randScaleY',\n\t        label: 'random scale y',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      circleRadius: {\n\t        name: 'circleRadius',\n\t        label: 'circle radius',\n\t        val: 20\n\t      },\n\t      circleRadiusMax: {\n\t        name: 'circleRadiusMax',\n\t        label: 'circle radius max',\n\t        val: 20\n\t      },\n\t      progression: {\n\t        name: 'progression',\n\t        label: 'progression',\n\t        val: 1,\n\t        min: 0,\n\t        max: 2\n\t      },\n\t      depth: {\n\t        name: 'depth',\n\t        label: 'depth',\n\t        val: 0\n\t      },\n\t      percent_color: {\n\t        name: 'percent_color',\n\t        label: 'percent color',\n\t        val: 0.4,\n\t        triggerRebuild: true\n\t      },\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      rotX: {\n\t        name: 'rotX',\n\t        label: 'rotation x',\n\t        val: 0\n\t      },\n\t      rotY: {\n\t        name: 'rotY',\n\t        label: 'rotation y',\n\t        val: 0\n\t      },\n\t      rotZ: {\n\t        name: 'rotZ',\n\t        label: 'rotation z',\n\t        val: 0\n\t      }\n\t    };\n\t\n\t    function SpreadedObjects(values1, time) {\n\t      var key, prop, ref;\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      ref = SpreadedObjects.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      SpreadedObjects.__super__.constructor.apply(this, arguments);\n\t      this.timeline = new TimelineMax();\n\t      this.container = new THREE.Object3D();\n\t      this.totalDuration = 0;\n\t      this.items = [];\n\t      this.items_position = [];\n\t      this.build(time);\n\t    }\n\t\n\t    SpreadedObjects.prototype.getItemClass = function() {\n\t      return AnimatedCircle;\n\t    };\n\t\n\t    SpreadedObjects.prototype.rebuild = function(time) {\n\t      this.empty();\n\t      return this.build(time);\n\t    };\n\t\n\t    SpreadedObjects.prototype.empty = function() {\n\t      var item, j, len, ref;\n\t      if (!this.items || !this.items.length) {\n\t        return;\n\t      }\n\t      this.timeline.clear();\n\t      this.items_position = [];\n\t      ref = this.items;\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        item = ref[j];\n\t        this.container.remove(item.container);\n\t        item.destroy();\n\t      }\n\t      return this.items = [];\n\t    };\n\t\n\t    SpreadedObjects.prototype.build = function(time) {\n\t      var border_radius, color, delay, draw_circle, draw_outline, duration, fillColor, i, item, itemClass, j, pos, randRotZ, randScaleX, randScaleY, ref, rndtype, size, x, y, z;\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.rng = new RNG(this.values.seed);\n\t      this.rngAnimation = new RNG(this.values.seed + \"lorem\");\n\t      this.rngOutline = new RNG(this.values.seed);\n\t      for (i = j = 0, ref = this.values.numItems - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {\n\t        itemClass = this.getItemClass();\n\t        rndtype = this.rng.random(0, 1000) / 1000;\n\t        draw_outline = rndtype < 0.8 ? true : false;\n\t        draw_circle = rndtype > 0.5 ? true : false;\n\t        if (itemClass.noOutline) {\n\t          draw_outline = false;\n\t          draw_circle = true;\n\t        }\n\t        color = Colors.get(this.rng.random(0, 1000));\n\t        if (this.rng.random(0, 1000) > this.values.percent_color * 1000) {\n\t          color = Colors.get(0);\n\t        }\n\t        fillColor = color.clone();\n\t        if (draw_outline) {\n\t          fillColor.multiplyScalar(this.rng.random(0.1, 0.5));\n\t        }\n\t        size = this.rng.random(this.values.circleRadius, this.values.circleRadiusMax);\n\t        x = this.getRandomPosition(this.values.randX);\n\t        y = this.getRandomPosition(this.values.randY);\n\t        z = this.getRandomPosition(this.values.randZ);\n\t        randRotZ = this.rng.random(0, 1000) / 1000 * Math.PI * this.values.randRotZ;\n\t        randScaleX = this.rng.random(0, 1000) / 1000 * this.values.randScaleX;\n\t        randScaleY = this.rng.random(0, 1000) / 1000 * this.values.randScaleY;\n\t        pos = {\n\t          x: x,\n\t          y: y,\n\t          z: z\n\t        };\n\t        delay = this.rngAnimation.random(0, 2400) / 1000;\n\t        duration = this.rngAnimation.random(600, 800) / 1000;\n\t        duration *= 4;\n\t        border_radius = this.rngOutline.random(1, 400) / 100;\n\t        if (draw_outline === false) {\n\t          fillColor.multiplyScalar(3);\n\t        }\n\t        item = new itemClass({\n\t          size: size,\n\t          outlineWidth: border_radius,\n\t          drawOutline: draw_outline,\n\t          drawCircle: draw_circle,\n\t          color: color,\n\t          fillColor: fillColor,\n\t          delay: delay,\n\t          duration: duration,\n\t          depth: this.values.depth,\n\t          x: pos.x,\n\t          y: pos.y,\n\t          z: pos.z,\n\t          randRotZ: randRotZ,\n\t          randScaleX: randScaleX,\n\t          randScaleY: randScaleY\n\t        });\n\t        this.container.add(item.container);\n\t        this.timeline.add(item.timeline, 0);\n\t        this.items.push(item);\n\t        this.items_position.push(pos);\n\t      }\n\t      this.totalDuration = this.timeline.duration();\n\t      return this.update(time, this.values, true);\n\t    };\n\t\n\t    SpreadedObjects.prototype.update = function(seconds, values, force) {\n\t      var item, j, k, key, len, len1, needs_rebuild, pos, progression, prop, ref, ref1, ref2;\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values === false) {\n\t        values = this.values;\n\t      }\n\t      needs_rebuild = false;\n\t      ref = SpreadedObjects.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (prop.triggerRebuild && this.valueChanged(key, values)) {\n\t          needs_rebuild = true;\n\t        }\n\t      }\n\t      if (force || this.valueChanged(\"x\", values) || this.valueChanged(\"y\", values) || this.valueChanged(\"z\", values)) {\n\t        this.container.position.set(values.x, values.y, values.z);\n\t      }\n\t      if (force || this.valueChanged(\"rotX\", values) || this.valueChanged(\"rotY\", values) || this.valueChanged(\"rotZ\", values)) {\n\t        this.container.rotation.set(this.degreeToRadian(values.rotX), this.degreeToRadian(values.rotY), this.degreeToRadian(values.rotZ));\n\t      }\n\t      progression = values.progression / 2;\n\t      this.timeline.seek(this.totalDuration * progression);\n\t      ref1 = this.items;\n\t      for (j = 0, len = ref1.length; j < len; j++) {\n\t        item = ref1[j];\n\t        item.update(seconds, {\n\t          progression: values.progression\n\t        });\n\t      }\n\t      if (force || this.valueChanged(\"depth\", values)) {\n\t        ref2 = this.items;\n\t        for (key = k = 0, len1 = ref2.length; k < len1; key = ++k) {\n\t          item = ref2[key];\n\t          pos = this.items_position[key];\n\t          item.container.position.set(pos.x, pos.y, pos.z * values.depth);\n\t        }\n\t      }\n\t      this.values = _.merge(this.values, values);\n\t      if (needs_rebuild === true) {\n\t        return this.rebuild(seconds);\n\t      }\n\t    };\n\t\n\t    SpreadedObjects.prototype.getRandomPosition = function(scale) {\n\t      if (scale == null) {\n\t        scale = 1;\n\t      }\n\t      return this.rng.random(-scale, scale);\n\t    };\n\t\n\t    SpreadedObjects.prototype.destroy = function() {\n\t      SpreadedObjects.__super__.destroy.apply(this, arguments);\n\t      if (this.container) {\n\t        if (this.container.parent) {\n\t          this.container.parent.remove(this.container);\n\t        }\n\t        delete this.container;\n\t      }\n\t      delete this.rng;\n\t      delete this.rngOutline;\n\t      return delete this.cache;\n\t    };\n\t\n\t    return SpreadedObjects;\n\t\n\t  })(ElementBase);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedBox, AnimatedObject, THREE, _;\n\t  _ = __webpack_require__(16);\n\t  THREE = __webpack_require__(2);\n\t  AnimatedObject = __webpack_require__(53);\n\t  return AnimatedBox = (function(superClass) {\n\t    extend(AnimatedBox, superClass);\n\t\n\t    AnimatedBox.circleGeom = new THREE.CircleGeometry(10, 4, 0, Math.PI * 2);\n\t\n\t    AnimatedBox.ringGeom = new THREE.RingGeometry(10 - 1, 10 + 1, 4, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedBox.ringGeom2 = new THREE.RingGeometry(10 - 1, 10, 4, 1, 0, Math.PI * 2);\n\t\n\t    function AnimatedBox() {\n\t      AnimatedBox.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    AnimatedBox.prototype.getGeometry = function() {\n\t      return AnimatedBox.circleGeom;\n\t    };\n\t\n\t    AnimatedBox.prototype.getGeometryOutline = function(outlineWidth) {\n\t      if (outlineWidth < 1) {\n\t        return AnimatedBox.ringGeom;\n\t      }\n\t      return AnimatedBox.ringGeom2;\n\t    };\n\t\n\t    return AnimatedBox;\n\t\n\t  })(AnimatedObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedCircle, AnimatedObject, CircleGeometry2, RingGeometry2, THREE, _;\n\t  _ = __webpack_require__(16);\n\t  THREE = __webpack_require__(2);\n\t  AnimatedObject = __webpack_require__(53);\n\t  CircleGeometry2 = __webpack_require__(38);\n\t  RingGeometry2 = __webpack_require__(49);\n\t  return AnimatedCircle = (function(superClass) {\n\t    extend(AnimatedCircle, superClass);\n\t\n\t    AnimatedCircle.circleGeom = new CircleGeometry2(10, 30, 0, Math.PI * 2);\n\t\n\t    AnimatedCircle.ringGeom = new RingGeometry2(10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedCircle.ringGeom2 = new RingGeometry2(10 - 1, 10, 30, 1, 0, Math.PI * 2);\n\t\n\t    function AnimatedCircle() {\n\t      AnimatedCircle.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    AnimatedCircle.prototype.getGeometry = function() {\n\t      return AnimatedCircle.circleGeom;\n\t    };\n\t\n\t    AnimatedCircle.prototype.getGeometryOutline = function(outlineWidth) {\n\t      if (outlineWidth < 1) {\n\t        return AnimatedCircle.ringGeom;\n\t      }\n\t      return AnimatedCircle.ringGeom2;\n\t    };\n\t\n\t    return AnimatedCircle;\n\t\n\t  })(AnimatedObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;// Modified to have uv on the edges.\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var THREE = __webpack_require__(2);\n\t\n\tTHREE.RingGeometry2 = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\t\n\t\tTHREE.Geometry.call( this );\n\t\n\t\tthis.type = 'RingGeometry2';\n\t\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\t\n\t\tinnerRadius = innerRadius || 0;\n\t\touterRadius = outerRadius || 50;\n\t\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\t\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\n\t\n\t\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\n\t\tfor ( i = 0; i < phiSegments + 1; i ++ ) { // concentric circles inside ring\n\t\n\t\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) { // number of segments per circle\n\t\n\t\t\t\tvar vertex = new THREE.Vector3();\n\t\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\t\n\t\t\t\tthis.vertices.push( vertex );\n\t\t\t\t//uvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\n\t\t\t  var uv = {\n\t        x: (i / phiSegments),\n\t        y: (o / thetaSegments)\n\t      };\n\t      uvs.push(new THREE.Vector2(uv.x, uv.y));\n\t    }\n\t\n\t\t\tradius += radiusStep;\n\t\n\t\t}\n\t\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\n\t\n\t\tfor ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring\n\t\n\t\t\tvar thetaSegment = i * (thetaSegments + 1);\n\t\n\t\t\tfor ( o = 0; o < thetaSegments ; o ++ ) { // number of segments per circle\n\t\n\t\t\t\tvar segment = o + thetaSegment;\n\t\n\t\t\t\tvar v1 = segment;\n\t\t\t\tvar v2 = segment + thetaSegments + 1;\n\t\t\t\tvar v3 = segment + thetaSegments + 2;\n\t\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\t\n\t\t\t\tv1 = segment;\n\t\t\t\tv2 = segment + thetaSegments + 2;\n\t\t\t\tv3 = segment + 1;\n\t\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\t\n\t\t\t}\n\t\t}\n\t\n\t\tthis.computeFaceNormals();\n\t\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\t\n\t};\n\t\n\tTHREE.RingGeometry2.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.RingGeometry2.prototype.constructor = THREE.RingGeometry2;\n\t\n\treturn THREE.RingGeometry2;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\n\\n// Precompute coords for FXAA\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nuniform vec2 resolution;\\n\\n//To save 9 dependent texture reads, you can compute\\n//these in the vertex shader and use the optimized\\n//frag.glsl function in your frag shader. \\n\\n//This is best suited for mobile devices, like iOS.\\n\\nvoid texcoords_1_0(vec2 fragCoord, vec2 resolution,\\n\\t\\t\\tout vec2 v_rgbNW, out vec2 v_rgbNE,\\n\\t\\t\\tout vec2 v_rgbSW, out vec2 v_rgbSE,\\n\\t\\t\\tout vec2 v_rgbM) {\\n\\tvec2 inverseVP = 1.0 / resolution.xy;\\n\\tv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\\n\\tv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\\n\\tv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\\n\\tv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\\n\\tv_rgbM = vec2(fragCoord * inverseVP);\\n}\\n\\n\\n\\nvoid main() {\\n  vUv = uv;\\n\\n  // FXAA\\n  vec2 fragCoord = uv * resolution;\\n\\ttexcoords_1_0(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\n/**\\nBasic FXAA implementation based on the code on geeks3d.com with the\\nmodification that the texture2DLod stuff was removed since it's\\nunsupported by WebGL.\\n\\n--\\n\\nFrom:\\nhttps://github.com/mitsuhiko/webgl-meincraft\\n\\nCopyright (c) 2011 by Armin Ronacher.\\n\\nSome rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are\\nmet:\\n\\n    * Redistributions of source code must retain the above copyright\\n      notice, this list of conditions and the following disclaimer.\\n\\n    * Redistributions in binary form must reproduce the above\\n      copyright notice, this list of conditions and the following\\n      disclaimer in the documentation and/or other materials provided\\n      with the distribution.\\n\\n    * The names of the contributors may not be used to endorse or\\n      promote products derived from this software without specific\\n      prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n\\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n*/\\n\\n#ifndef FXAA_REDUCE_MIN\\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\\n#endif\\n#ifndef FXAA_REDUCE_MUL\\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\\n#endif\\n#ifndef FXAA_SPAN_MAX\\n    #define FXAA_SPAN_MAX     8.0\\n#endif\\n\\n//optimized version for mobile, where dependent \\n//texture reads can be a bottleneck\\nvec4 fxaa_1_0(sampler2D tex, vec2 fragCoord, vec2 resolution,\\n            vec2 v_rgbNW, vec2 v_rgbNE, \\n            vec2 v_rgbSW, vec2 v_rgbSE, \\n            vec2 v_rgbM) {\\n    vec4 color;\\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\\n    vec4 texColor = texture2D(tex, v_rgbM);\\n    vec3 rgbM  = texColor.xyz;\\n    vec3 luma = vec3(0.299, 0.587, 0.114);\\n    float lumaNW = dot(rgbNW, luma);\\n    float lumaNE = dot(rgbNE, luma);\\n    float lumaSW = dot(rgbSW, luma);\\n    float lumaSE = dot(rgbSE, luma);\\n    float lumaM  = dot(rgbM,  luma);\\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\\n    \\n    mediump vec2 dir;\\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n    \\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\\n    \\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n              dir * rcpDirMin)) * inverseVP;\\n    \\n    vec3 rgbA = 0.5 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\\n\\n    float lumaB = dot(rgbB, luma);\\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\\n        color = vec4(rgbA, texColor.a);\\n    else\\n        color = vec4(rgbB, texColor.a);\\n    return color;\\n}\\n\\n\\n\\n\\n//texcoords computed in vertex step\\n//to avoid dependent texture reads\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nhighp float random_2_1(vec2 co)\\n{\\n    highp float a = 12.9898;\\n    highp float b = 78.233;\\n    highp float c = 43758.5453;\\n    highp float dt= dot(co.xy ,vec2(a,b));\\n    highp float sn= mod(dt,3.14);\\n    return fract(sin(sn) * c);\\n}\\n\\n\\n\\nvec3 blendSoftLight_3_2(vec3 base, vec3 blend) {\\n    return mix(\\n        sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend), \\n        2.0 * base * blend + base * base * (1.0 - 2.0 * blend), \\n        step(base, vec3(0.5))\\n    );\\n}\\n\\n// Using conditionals\\n// vec3 blendSoftLight(vec3 base, vec3 blend) {\\n//     return vec3(\\n//         ((blend.r < 0.5) ? (2.0 * base.r * blend.r + base.r * base.r * (1.0 - 2.0 * blend.r)) : (sqrt(base.r) * (2.0 * blend.r - 1.0) + 2.0 * base.r * (1.0 - blend.r))),\\n//         ((blend.g < 0.5) ? (2.0 * base.g * blend.g + base.g * base.g * (1.0 - 2.0 * blend.g)) : (sqrt(base.g) * (2.0 * blend.g - 1.0) + 2.0 * base.g * (1.0 - blend.g))),\\n//         ((blend.b < 0.5) ? (2.0 * base.b * blend.b + base.b * base.b * (1.0 - 2.0 * blend.b)) : (sqrt(base.b) * (2.0 * blend.b - 1.0) + 2.0 * base.b * (1.0 - blend.b)))\\n//     );\\n// }\\n\\n\\nfloat luma_4_3(vec3 color) {\\n  return dot(color, vec3(0.299, 0.587, 0.114));\\n}\\n\\nfloat luma_4_3(vec4 color) {\\n  return dot(color.rgb, vec3(0.299, 0.587, 0.114));\\n}\\n\\n\\n\\n\\nuniform sampler2D tDiffuse;\\nuniform vec2 resolution;\\nuniform float nIntensity;\\nuniform float time;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vec2 p = vUv;\\n  vec2 fragCoord = vUv * resolution;\\n\\n  // FXAA\\n  gl_FragColor = fxaa_1_0(tDiffuse, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n\\n  float center = smoothstep(0.0, 1.0, length(vUv-0.5));\\n\\n  // Add vignetting.\\n  gl_FragColor.rgb = mix(gl_FragColor.rgb, vec3(0.0, 0.0, 0.0), center * 0.5);\\n\\n  // Add film grain.\\n  vec3 g = vec3( random_2_1( (gl_FragCoord.xy / resolution.xy) * time )) * nIntensity;\\n\\n  vec3 color = blendSoftLight_3_2(gl_FragColor.rgb, g);\\n  float luminance = luma_4_3(gl_FragColor.rgb);\\n  //reduce the noise based on some\\n  //threshold of the background luminance\\n  float response = smoothstep(0.05, 0.5, luminance);\\n  color = mix(color, gl_FragColor.rgb, pow(response, 2.0));\\n\\n  gl_FragColor = vec4(color, 1.0);\\n\\n}\\n\"\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = TweenMax;\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedObject, Audio, Colors, RNG, ShaderFragement, ShaderVertex, THREE, TweenMax, _;\n\t  _ = __webpack_require__(16);\n\t  THREE = __webpack_require__(2);\n\t  RNG = __webpack_require__(40);\n\t  TweenMax = __webpack_require__(52);\n\t  Colors = __webpack_require__(36);\n\t  Audio = __webpack_require__(6);\n\t  ShaderVertex = __webpack_require__(43);\n\t  ShaderFragement = __webpack_require__(44);\n\t  return AnimatedObject = (function() {\n\t    AnimatedObject.circleGeom = new THREE.CircleGeometry(10, 30, 0, Math.PI * 2);\n\t\n\t    AnimatedObject.ringGeom = new THREE.RingGeometry(10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedObject.ringGeom2 = new THREE.RingGeometry(10 - 1, 10, 30, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedObject.properties = {\n\t      size: {\n\t        name: 'size',\n\t        label: 'size',\n\t        val: 80\n\t      },\n\t      outlineWidth: {\n\t        name: 'outlineWidth',\n\t        label: 'outline width',\n\t        val: 2\n\t      },\n\t      drawOutline: {\n\t        name: 'drawOutline',\n\t        label: 'draw outline',\n\t        val: true\n\t      },\n\t      drawCircle: {\n\t        name: 'drawCircle',\n\t        label: 'draw circle',\n\t        val: false\n\t      },\n\t      color: {\n\t        name: 'color',\n\t        label: 'color',\n\t        val: false\n\t      },\n\t      fillColor: {\n\t        name: 'fillColor',\n\t        label: 'fill color',\n\t        val: false\n\t      },\n\t      delay: {\n\t        name: 'delay',\n\t        label: 'delay',\n\t        val: 0\n\t      },\n\t      duration: {\n\t        name: 'duration',\n\t        label: 'duration',\n\t        val: 0.5\n\t      },\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      randRotZ: {\n\t        name: 'randRotZ',\n\t        label: 'random rotation z',\n\t        val: 0\n\t      },\n\t      randScaleX: {\n\t        name: 'randScaleX',\n\t        label: 'random scale x',\n\t        val: 0\n\t      },\n\t      randScaleY: {\n\t        name: 'randScaleY',\n\t        label: 'random scale y',\n\t        val: 0\n\t      }\n\t    };\n\t\n\t    function AnimatedObject(values, time) {\n\t      var key, prop, ref, tween;\n\t      this.values = values != null ? values : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.renderOutline = bind(this.renderOutline, this);\n\t      this.renderCircle = bind(this.renderCircle, this);\n\t      ref = AnimatedObject.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      this.container = new THREE.Object3D();\n\t      this.container.scale.set(0.001, 0.001, 0.001);\n\t      this.container.position.set(this.values.x, this.values.y, this.values.z);\n\t      this.container.rotation.set(0, 0, this.values.randRotZ);\n\t      this.materials = [];\n\t      this.start = Date.now();\n\t      this.offset = new THREE.Vector3();\n\t      this.velocity = new THREE.Vector3();\n\t      this.weight = Math.random() * 0.5 + 0.5;\n\t      this.direction = new THREE.Vector3(Math.random() * 2 - 1, Math.random() * 2 - 1, 0);\n\t      this.speed = 0;\n\t      this.animatedProperties = {\n\t        scale: 0.001\n\t      };\n\t      this.timeline = new TimelineMax();\n\t      tween = TweenLite.to(this.animatedProperties, 0, {\n\t        scale: 0.00001,\n\t        ease: Linear.easeNone\n\t      });\n\t      this.timeline.add(tween, 0);\n\t      tween = TweenLite.to(this.animatedProperties, this.values.duration, {\n\t        scale: 1,\n\t        delay: this.values.delay,\n\t        ease: Cubic.easeOut\n\t      });\n\t      this.timeline.add(tween);\n\t      tween = TweenLite.to(this.animatedProperties, this.values.duration * 0.5, {\n\t        scale: 1,\n\t        ease: Cubic.easeOut\n\t      });\n\t      this.timeline.add(tween);\n\t      tween = TweenLite.to(this.animatedProperties, this.values.duration, {\n\t        scale: 0.00001,\n\t        ease: Cubic.easeIn\n\t      });\n\t      this.timeline.add(tween);\n\t      this.renderCircle(this.values.size, this.values.fillColor);\n\t    }\n\t\n\t    AnimatedObject.prototype.getGeometry = function() {\n\t      return AnimatedObject.circleGeom;\n\t    };\n\t\n\t    AnimatedObject.prototype.getGeometryOutline = function(outlineWidth) {\n\t      if (outlineWidth < 1) {\n\t        return AnimatedObject.ringGeom;\n\t      }\n\t      return AnimatedObject.ringGeom2;\n\t    };\n\t\n\t    AnimatedObject.prototype.destroy = function() {\n\t      var child, i, len, ref;\n\t      this.timeline.clear();\n\t      ref = this.container.children;\n\t      for (i = 0, len = ref.length; i < len; i++) {\n\t        child = ref[i];\n\t        this.container.remove(child);\n\t      }\n\t      return this.container = null;\n\t    };\n\t\n\t    AnimatedObject.prototype.getMaterial = function(color) {\n\t      var material, uniforms;\n\t      uniforms = {\n\t        time: {\n\t          type: 'f',\n\t          value: 0.0\n\t        },\n\t        seed: {\n\t          type: 'f',\n\t          value: Math.random() * 1000\n\t        },\n\t        strength: {\n\t          type: 'f',\n\t          value: 0.2\n\t        },\n\t        color: {\n\t          type: 'c',\n\t          value: color\n\t        }\n\t      };\n\t      material = new THREE.ShaderMaterial({\n\t        vertexShader: ShaderVertex,\n\t        fragmentShader: ShaderFragement,\n\t        uniforms: uniforms,\n\t        transparent: true,\n\t        depthWrite: false,\n\t        depthTest: false\n\t      });\n\t      material.blending = THREE.AdditiveBlending;\n\t      return material;\n\t    };\n\t\n\t    AnimatedObject.prototype.update = function(seconds, progression) {\n\t      var i, len, material, ref, scale, timeDiff;\n\t      this.container.position.add(this.velocity);\n\t      this.velocity = this.velocity.multiplyScalar(0.94);\n\t      timeDiff = Date.now() - this.start;\n\t      ref = this.materials;\n\t      for (i = 0, len = ref.length; i < len; i++) {\n\t        material = ref[i];\n\t        material.uniforms['time'].value = 0.00025 * timeDiff;\n\t        material.uniforms['strength'].value = window.audio.mid;\n\t      }\n\t      scale = this.animatedProperties.scale * this.values.size * 0.1;\n\t      return this.container.scale.set(scale * (1 + this.values.randScaleX), scale * (1 + this.values.randScaleY), scale);\n\t    };\n\t\n\t    AnimatedObject.prototype.renderCircle = function(size, color) {\n\t      var material, object;\n\t      material = this.getMaterial(color);\n\t      this.materials.push(material);\n\t      object = new THREE.Mesh(this.getGeometry(), material);\n\t      return this.container.add(object);\n\t    };\n\t\n\t    AnimatedObject.prototype.renderOutline = function(size, color, outlineWidth) {\n\t      var geom, material, object;\n\t      geom = this.getGeometryOutline(outlineWidth);\n\t      material = this.getMaterial(color);\n\t      this.materials.push(material);\n\t      object = new THREE.Mesh(geom, material);\n\t      return this.container.add(object);\n\t    };\n\t\n\t    return AnimatedObject;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** App.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4701a2e0d46f88b03af1\n **/","# green: 567c6d\n# yellow: e2cb7b\n# brownish: cbad7b\n# red: af1925\n# pink: ddb3b4\n# purple: 715160\n# blue: 406872\n\n\ndefine (require) ->\n  THREE = require 'Three'\n\n  TweenTime = require 'TweenTime'\n\n  Shaders = require 'app/components/Shaders'\n  Background = require 'app/components/Background'\n  PostFX = require 'app/components/PostFX'\n  SceneManager = require 'app/components/SceneManager'\n  Audio = require 'app/components/Audio'\n  ElementFactory = require 'app/components/ElementFactory'\n  DataNormalizer = require 'app/components/DataNormalizer'\n\n  dataJson = require 'raw!app/data.json'\n\n  #Circles = require 'app/elements/Circles'\n\n  Particles = require 'app/elements/Particles'\n  OrganizedChaos = require 'app/elements/OrganizedChaos'\n\n  window.App = class App\n    constructor: (options = {}) ->\n      window.updateCameraAspect = @updateCameraAspect\n\n      @autoplay = false\n      if options.autoplay?\n        @autoplay = options.autoplay\n\n      @shaders = new Shaders()\n\n      audio_url = './assets/08 - Space Tron On The Grid.mp3'\n      @audio = new Audio(audio_url, @onAudioLoaded)\n      @factory = new ElementFactory()\n\n      # Convert loaded data\n      conf = JSON.parse(dataJson)\n      @settings = conf.settings\n      @data = DataNormalizer.normalizeData(conf.data, @factory)\n\n      @tweenTime = new TweenTime(@data)\n      @tweenTime.timer.statusChanged.add(@onTimerStatusChanged)\n      @tweenTime.timer.seeked.add(@onTimerSeeked)\n\n      if options.time?\n        @tweenTime.timer.seek([options.time])\n      else if @settings.time\n        @tweenTime.timer.seek([@settings.time])\n\n      size = @getScreenSize()\n      @camera = new THREE.PerspectiveCamera( 45, size.width / size.height, 1, 2000 )\n      @camera.position.z = 600\n      window.activeCamera = @camera\n\n      @scene = new THREE.Scene()\n      @scene.fog = new THREE.FogExp2( 0x111111, 0.0045 )\n      #@orchestrator = new Orchestrator(@timer, @data, @scene, @camera)\n      @sceneManager = new SceneManager(@tweenTime, @data, @scene, @camera, @factory)\n\n      @time = Date.now() * 0.0001\n      $container = $('<div class=\"experiment\"></div>')\n      container = $container.get(0)\n      @containerWebgl = container # Save for use in EditorUI for object picking.\n      $('body').append($container)\n\n      @renderer = new THREE.WebGLRenderer( { antialias: false, alpha: false } )\n      @renderer.setPixelRatio( window.devicePixelRatio )\n      @renderer.setSize(size.width, size.height)\n\n      @renderer.setClearColor( 0x111111, 1)\n\n      light1 = new THREE.DirectionalLight( 0xffffff, 0.4 )\n      light1.position.set(100, 300, 700)\n      @scene.add(light1)\n\n      container.appendChild( @renderer.domElement )\n\n      window.addEventListener('resize', @onWindowResize, false)\n\n      @postfx = new PostFX(@scene, @camera, @renderer, size)\n\n      @onWindowResize()\n      @animate()\n\n    onTimerStatusChanged: (is_playing) =>\n      $('body').toggleClass('is-stopped', !is_playing)\n      if is_playing\n        @audio.play()\n      else\n        @audio.pause()\n\n    onTimerSeeked: (time) =>\n      @audio.seek(time / 1000)\n\n    play: () =>\n      @tweenTime.timer.play()\n      $('body').addClass('is-playing')\n\n    onAudioLoaded: () =>\n      console.log \"audio loaded\"\n      $('body').addClass('is-audio-loaded')\n      if @autoplay\n        @play()\n\n\n    getScreenSize: () ->\n      SCREEN_WIDTH = window.innerWidth\n      SCREEN_HEIGHT = window.innerHeight\n      if window.editorEnabled\n        timelineheight = 295\n        if $('body').hasClass('timeline-is-closed') then timelineheight = 95\n        propertieswidth = 279\n        if $('body').hasClass('properties-is-closed') then propertieswidth = 0\n        SCREEN_HEIGHT -= timelineheight\n        SCREEN_WIDTH -= propertieswidth\n\n      #console.log {width: SCREEN_WIDTH, height: SCREEN_HEIGHT}\n      return {width: SCREEN_WIDTH, height: SCREEN_HEIGHT}\n\n    updateCameraAspect: (camera, size = false) =>\n      if size == false\n        size = @getScreenSize()\n      camera.aspect = size.width / size.height\n      camera.updateProjectionMatrix()\n\n    onWindowResize: () =>\n      size = @getScreenSize()\n\n      @updateCameraAspect(@camera, size)\n      @updateCameraAspect(window.activeCamera, size)\n\n      @renderer.setSize(size.width, size.height)\n      @postfx.resize(size.width, size.height)\n\n    animate: () =>\n      requestAnimationFrame(@animate)\n      @audio.update()\n      @shaders.update()\n      @render()\n\n    render: () ->\n      newTime = Date.now() * 0.0001\n      delta = newTime - @time\n\n      if @particles then @particles.update()\n      if @chaos then @chaos.update()\n      @camera.lookAt( @scene.position )\n      @postfx.render(delta)\n\n      @time = newTime\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/App.coffee\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nTHREE.CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/CopyShader.js\n ** module id = 1\n ** module chunks = 1\n **/","module.exports = THREE;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"THREE\"\n ** module id = 2\n ** module chunks = 1\n **/","module.exports = TweenTime.Core;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"TweenTime.Core\"\n ** module id = 3\n ** module chunks = 1\n **/","#https://github.com/geluso/delight/commit/2575886522227c34c0d3d77f795f5d00acce284b\ndefine (require) ->\n  _ = require 'lodash'\n\n  class Audio\n    @instance = false\n\n    constructor: (mp3Url, @onLoadedCallback) ->\n      window.audio = this\n      muted = true\n      @fftSize = 512\n      @filters = {}\n      @playing = false\n      @now = 0.0\n      @timeDelay = 0.0\n\n      @bass = 0\n      @mid = 0\n      @high = 0\n\n      @context = false\n      if typeof AudioContext != \"undefined\"\n        @context = new AudioContext()\n      else if typeof webkitAudioContext != \"undefined\"\n        @context = new webkitAudioContext()\n\n      # create analyser\n      @analyser = @context.createAnalyser()\n      @analyser.fftSize = @fftSize\n\n      @source = @context.createBufferSource()\n\n      # create bass/mid/treble filters\n      parameters =\n        bass:\n          type: 0 #lowpass\n          frequency: 120\n          Q: 1.2\n          gain: 2.0\n        mid:\n          type: 2 #bandpass\n          frequency: 400\n          Q: 1.2\n          gain: 4.0\n        treble:\n          type: 1 #highpass\n          frequency: 2000\n          Q: 1.2\n          gain: 3.0\n      _.each parameters, (spec, key) =>\n        filter = @context.createBiquadFilter()\n        filter.key = key\n        filter.type = spec.type\n        filter.frequency = spec.frequency\n        filter.Q.value = spec.Q\n\n        # create analyser for filtered signal\n        filter.analyser = @context.createAnalyser()\n        filter.analyser.fftSize = @fftSize\n\n        # create delay to compensate fftSize lag\n        if @context.createDelay?\n          filter.delayNode = @context.createDelay()\n        else\n          filter.delayNode = @context.createDelayNode()\n        filter.delayNode.delayTime.value = 0\n\n        # create gain node to offset filter loss\n        if @context.createGain?\n          filter.gainNode = @context.createGain()\n        else\n          filter.gainNode = @context.createGainNode()\n        filter.gainNode.gain.value = spec.gain\n\n        @filters[key] = filter\n\n      # create delay to compensate fftSize lag\n      if @context.createDelay?\n        @delay = @context.createDelay()\n      else\n        @delay = @context.createDelayNode()\n      @delay.delayTime.value = @fftSize * 2 / @context.sampleRate\n\n      # connect audio processing pipe\n      @source.connect(@analyser)\n      @analyser.connect(@delay)\n\n\n      if muted\n        gain2 = @context.createGain()\n        @delay.connect(gain2)\n        gain2.gain.value = 0.00\n        gain2.connect(@context.destination)\n      else\n        @delay.connect(@context.destination)\n\n      # connect secondary filters + analysers + gain\n      _.each @filters, (filter) =>\n        @source.connect(filter.delayNode)\n        filter.delayNode.connect(filter)\n        filter.connect(filter.gainNode)\n        filter.gainNode.connect(filter.analyser)\n\n      # create buffers for time/freq data\n      @samples = @analyser.frequencyBinCount\n      @data =\n        freq: new Uint8Array(@samples)\n        time: new Uint8Array(@samples)\n        filter:\n          bass: new Uint8Array(256)\n          mid: new Uint8Array(256)\n          treble: new Uint8Array(256)\n\n      @load(mp3Url)\n\n      # i know, ....\n      Audio.instance = this\n\n    update: () =>\n      if @playing == false then return\n      @analyser.smoothingTimeConstant = 0\n      @analyser.getByteFrequencyData(@data.freq)\n      @analyser.getByteTimeDomainData(@data.time)\n\n      _.each @filters, (filter) =>\n        filter.analyser.getByteTimeDomainData(@data.filter[filter.key])\n\n      # calculate rms\n      bins = [0, 0, 0, 0]\n      waveforms = [@data.time, @data.filter.bass, @data.filter.mid, @data.filter.treble]\n      for num in [0..3]\n        bins[num] = @rms(waveforms[num])\n      @bass = bins[1]\n      @mid = bins[2]\n      @high = bins[3]\n      #if Math.random() < 0.04\n      #  console.log(@bass, @mid, @high)\n\n      @now = @context.currentTime - @timeDelay\n\n    seek: (seconds) =>\n      @now = seconds\n      #@context.currentTime = @now\n\n      if @source.buffer\n        #@source.noteOn(0)\n        if @playing\n          @pause()\n          @play()\n          #@source.stop(0)\n          #@source.start(0, @now, @buffer.duration - @now)\n\n\n    load: (url) =>\n      request = new XMLHttpRequest()\n      request.open(\"GET\", url, true)\n      request.responseType = \"arraybuffer\"\n\n      request.onload = () =>\n        #@buffer = @context.createBuffer(request.response, false)\n        @context.decodeAudioData request.response, (buff) =>\n          @buffer = buff\n          @source.buffer = @buffer\n          @source.loop = false\n          if @onLoadedCallback then @onLoadedCallback()\n          #@play()\n\n      request.send()\n\n    createSound: () =>\n      src = @context.createBufferSource()\n      if @buffer\n        src.buffer = @buffer\n      src.connect(@analyser)\n      _.each @filters, (filter) =>\n        src.connect(filter.delayNode)\n      return src\n\n    pause: () =>\n      if @source\n        if @playing\n          @source.stop(0)\n        @source.disconnect(0)\n        @source = false\n      @playing = false\n\n    play: () =>\n      @playing = true\n      @timeDelay = @context.currentTime - @now\n      #console.log @now\n      if !@source\n        @source = @createSound()\n      if @source.buffer\n        #@source.noteOn(0)\n        @source.start(0, @now, @buffer.duration - @now)\n\n\n    rms: (data) =>\n      size = data.length\n      accum = 0\n      for num in [0..size - 1]\n        s = (data[num] - 128) / 128\n        accum += s * s\n      return Math.sqrt(accum / size)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/Audio.coffee\n **/","define (require) ->\n  THREE = require 'Three'\n  Audio = require 'app/components/Audio'\n  Global = require 'app/elements/Global'\n\n  ShaderVertex = require 'app/shaders/Basic.vert'\n  LineFragement = require 'app/shaders/Line.frag'\n\n  class Shaders\n    @COLOR_WHITE = 0\n    @COLOR_RED = 1\n    @COLOR_BLUE = 2\n\n    constructor: () ->\n      window.shaders = this\n      @shaders = []\n      @shadersWhite = []\n      @shadersRed = []\n      @shadersBlue = []\n\n      red = 0xe66c00\n      blue = 0x27acef\n\n      num_shaders = 50\n      # A non dynamic shader, can be used for all geometries\n      @simpleMaterial = new THREE.MeshBasicMaterial({color: 0xdddddd, shading: THREE.FlatShading, side: THREE.DoubleSide})\n      @simpleMaterialRed = new THREE.MeshBasicMaterial({color: red, shading: THREE.FlatShading, side: THREE.DoubleSide})\n      @simpleMaterialBlue = new THREE.MeshBasicMaterial({color: blue, shading: THREE.FlatShading, side: THREE.DoubleSide})\n\n      for i in [0...num_shaders]\n        mat = @createMaterialLine(0xdddddd)\n        @shaders.push(mat)\n        @shadersWhite.push(mat )\n\n        mat = @createMaterialLine(red)\n        @shaders.push(mat)\n        @shadersRed.push(mat)\n\n        mat = @createMaterialLine(blue)\n        @shaders.push(mat)\n        @shadersBlue.push(mat)\n\n    update: (force = 0) ->\n      for shader in @shaders\n        shader.uniforms.percent.value = Math.max(0, shader.uniforms.percent.value - shader.speed * 0.03)\n\n\n        # Only bump value if it is not already animating.\n        if shader.uniforms.percent.value < 0.02\n          # Can force from intro (hover button)\n          if force && Math.random() < force\n            shader.uniforms.percent.value = 2\n          # only bump values once in a while. Without this\n          # every shaders would animate on the first boum.\n          else if Math.random() < 0.02\n            bassSensibility = 0\n            midSensibility = 0\n            highSensibility = 0\n\n            globalValues = false\n            if window.global && window.global.values\n              globalValues = window.global.values\n              bassSensibility = globalValues.bassSensibility\n              midSensibility = globalValues.midSensibility\n              highSensibility = globalValues.highSensibility\n\n\n            if window.audio.bass > bassSensibility || window.audio.mid > midSensibility || window.audio.high > highSensibility\n              shader.uniforms.percent.value = 2\n            if globalValues && Math.random() < globalValues.autoAnimate\n              shader.uniforms.percent.value = 2\n\n\n      #console.log @lineMaterial1.uniforms.percent.value\n\n    getMaterialLine: (animated, color) ->\n      if animated == false\n        switch color\n          when Shaders.COLOR_RED then return @simpleMaterialRed\n          when Shaders.COLOR_BLUE then return @simpleMaterialBlue\n        return @simpleMaterial\n\n      shaders = @shadersWhite\n      if color == Shaders.COLOR_RED then shaders = @shadersRed\n      if color == Shaders.COLOR_BLUE then shaders = @shadersBlue\n\n      return shaders[Math.floor(Math.random() * shaders.length)]\n\n    createMaterialLine: (color) ->\n      uniforms = {\n        percent: {\n          type: 'f',\n          value: 1.0\n        },\n        color: {\n          type: 'c',\n          value: new THREE.Color(color)\n        },\n        fogColor: {type: \"c\", value: new THREE.Color(0x111111)},\n        fogDensity: {type: \"f\", 0.2045}\n      }\n      material = new THREE.ShaderMaterial({\n        vertexShader: ShaderVertex,\n        fragmentShader: LineFragement,\n        side: THREE.DoubleSide,\n        shading: THREE.FlatShading,\n        uniforms: uniforms,\n        transparent: true,\n        depthWrite: false,\n        depthTest: false,\n        fog: true\n        })\n\n      material.speed = Math.random() + 0.5 # custom property for per shader transition speed\n      material.blending = THREE.AdditiveBlending\n      return material\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/Shaders.coffee\n **/","define (require) ->\n  THREE = require 'Three'\n\n  class Background\n    constructor: (@scene) ->\n      texture = THREE.ImageUtils.loadTexture('src/images/background.jpg')\n      texture.wrapS = texture.wrapT = THREE.RepeatWrapping\n      texture.repeat.set( 2, 2 )\n      bgMat = new THREE.MeshBasicMaterial({map: texture})\n      bg = new THREE.Mesh(new THREE.PlaneGeometry(1600, 1600, 4, 4), bgMat)\n      bg.material.depthTest = false\n      bg.material.depthWrite = false\n      bg.position.set(0, 0, -10)\n      @scene.add(bg)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/Background.coffee\n **/","define (require) ->\n  THREE = require 'Three'\n\n  require 'vendors/three.js-extras/postprocessing/EffectComposer'\n  require 'vendors/three.js-extras/postprocessing/MaskPass'\n  require 'vendors/three.js-extras/postprocessing/BloomPass'\n  require 'vendors/three.js-extras/postprocessing/ShaderPass'\n  require 'vendors/three.js-extras/postprocessing/RenderPass'\n  require 'app/postprocessing/GlitchPass2'\n\n  require 'app/postprocessing/CustomPostPass'\n\n  require 'vendors/three.js-extras/shaders/CopyShader'\n  require 'vendors/three.js-extras/shaders/FXAAShader'\n  require 'vendors/three.js-extras/shaders/ConvolutionShader'\n  require 'app/shaders/DigitalGlitch2'\n\n  class PostFX\n    constructor: (@scene, @camera, @renderer, size) ->\n      @renderer.autoClear = false\n\n      renderModel = new THREE.RenderPass( @scene, @camera )\n      # There will only be 1 rendermodel and we need to be able\n      # to swith camera from the orchestrator.\n      window.renderModel = renderModel\n\n      dpr = if window.devicePixelRatio? then window.devicePixelRatio else 1\n\n      @renderTargetParameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBufer: false }\n      @renderTarget = new THREE.WebGLRenderTarget(size.width * dpr, size.height * dpr, @renderTargetParameters)\n\n      @effectFXAA = new THREE.ShaderPass( THREE.FXAAShader )\n      @effectFXAA.uniforms[ 'resolution' ].value.set(1 / (size.width * dpr), 1 / (size.height * dpr))\n\n      @bloom = new THREE.BloomPass(0.9, 25, 4)\n\n      @glitchPass = new THREE.GlitchPass2()\n      @glitchPass.intensity = 0.3;\n      @glitchPass.uniforms.tScratch.value = THREE.ImageUtils.loadTexture( \"src/images/lensflare_dirt.jpg\" )\n\n\n      resolution = new THREE.Vector2(size.width * dpr, size.height * dpr)\n      @customPass = new THREE.CustomPostPass(0.55, resolution)\n      @customPass.renderToScreen = true\n\n      @composer = new THREE.EffectComposer( @renderer, @renderTarget )\n      @composer.setSize(size.width * dpr, size.height * dpr)\n      @composer.addPass( renderModel )\n      #@composer.addPass( @effectFXAA )\n      @composer.addPass( @bloom )\n      #@composer.addPass( @glitchPass )\n      @composer.addPass(@customPass)\n\n    resize: (SCREEN_WIDTH, SCREEN_HEIGHT) ->\n      dpr = if window.devicePixelRatio? then window.devicePixelRatio else 1\n      #@composer.setSize(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr)\n      @renderTarget = new THREE.WebGLRenderTarget(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr, @renderTargetParameters)\n      @composer.reset(@renderTarget)\n      @effectFXAA.uniforms['resolution'].value.set(1 / (SCREEN_WIDTH * dpr), 1 / (SCREEN_HEIGHT * dpr))\n      @customPass.uniforms['resolution'].value.set(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr)\n\n    render: (delta) ->\n      @renderer.clear()\n      @composer.render(delta)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/PostFX.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  Signals = require 'js-signals'\n\n  class SceneManager\n    constructor: (@tweenTime, @data, @scene, @defaultCamera, @factory) ->\n      @timer = @tweenTime.timer\n      @timer.updated.add(@update)\n      @update(0)\n\n    update: (timestamp) =>\n      activeCamera = @defaultCamera\n      seconds = timestamp / 1000\n\n      for item in @data\n        should_exist = if seconds >= item.start && seconds <= item.end then true else false\n\n        # Create the item\n        if !item.object\n          type = item.type\n          el = @factory.create(type, item.values, seconds - item.start)\n          # Save reference to the custom object class in data\n          item.object = el\n          # And a reference to the data from the 3d container\n          if el.container\n            el.container._data = item\n\n        # Remove the item from the scene\n        if (item.object && should_exist == false) || item.isDirtyObject\n          item.isDirtyObject = false\n          if item.object && item.object.container && item.object.container.parent\n            @scene.remove(item.object.container)\n            #item.object.destroy()\n            #delete item.object\n\n        # Assign the object class to be able to access all object properties in propertiesEditor\n        if !item.classObject then item.classObject = @factory.getTypeClass(item.type)\n\n        # If object doesn't exist skip the update.\n        #if should_exist == false then continue\n\n\n        # Add item to scene if it exists.\n        if should_exist && item.object.container && !item.object.container.parent\n          @scene.add(item.object.container)\n\n        # If this is a camera set it as the active camera.\n        if item.object && item.object.isCamera\n          activeCamera = item.object.container\n          window.updateCameraAspect(activeCamera)\n\n        # Update the item\n        if item.object then item.object.update(seconds - item.start, item.values)\n\n      # Set correct camera\n      window.activeCamera = activeCamera\n      if window.renderModel\n        window.renderModel.camera = activeCamera\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/SceneManager.coffee\n **/","define (require) ->\n  Camera = require 'app/elements/Camera'\n  Global = require 'app/elements/Global'\n  Circles = require 'app/elements/Circles'\n  Boxes = require 'app/elements/Boxes'\n  Lines = require 'app/elements/Lines'\n\n  SingleObject = require 'app/elements/SingleObject'\n  Circle = require 'app/elements/Circle'\n  OrganizedChaos = require 'app/elements/OrganizedChaos'\n\n  extend = (object, properties) ->\n    for key, val of properties\n      if typeof(object[key]) == 'object' && object[key] != null\n        object[key] = extend({}, val)\n      else\n        object[key] = val\n    object\n\n  class ElementFactory\n    @elements:\n      Chaos:\n        classObject: OrganizedChaos\n      Circles:\n        classObject: Circles\n      Boxes:\n        classObject: Boxes\n      Lines:\n        classObject: Lines\n      Camera:\n        classObject: Camera\n      Global:\n        classObject: Global\n      Box:\n        classObject: SingleObject\n      Circle:\n        classObject: Circle\n\n    getTypeClass: (itemType) =>\n      ElementFactory.elements[itemType].classObject\n\n    @getTypeProperties: (itemName) =>\n      item = ElementFactory.elements[itemName]\n      if item\n        element_class = item.classObject\n        if element_class\n          properties = []\n          for key, prop_definition of item.classObject.properties\n            prop = extend({}, prop_definition)\n            prop.keys = []\n            properties.push(prop)\n          console.log properties\n          return properties\n      return\n\n    create: (itemName, values, time) ->\n      item = ElementFactory.elements[itemName]\n      if !item\n        console.warn(\"Can't create item: \" + itemName)\n        return false\n\n      return new item.classObject(values)\n\n  window.ElementFactory = ElementFactory\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/ElementFactory.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  ElementFactory = require 'app/components/ElementFactory'\n\n  class DataNormalizer\n    @normalizeItem = (data_item, factory) ->\n      if !data_item.classObject\n        data_item.classObject = factory.getTypeClass(data_item.type)\n      static_properties = data_item.classObject.properties\n\n      if !static_properties then return\n      for key, static_prop of static_properties\n        existing_prop = _.find(data_item.properties, (prop) -> prop.name == static_prop.name)\n        # Create the property with default values if it doesn't exist in given data.\n        if !existing_prop\n          new_prop = {}\n          # clone static prop in new_prop\n          for key2, value2 of static_prop\n            new_prop[key2] = value2\n\n          new_prop.keys = []\n          data_item.properties.push(new_prop)\n        # Add the group information.\n        if existing_prop && !existing_prop.group && static_prop.group\n          existing_prop.group = static_prop.group\n      return data_item\n\n    @normalizeData = (data, factory) ->\n      data = _.map(data, (item) ->\n        DataNormalizer.normalizeItem(item, factory)\n      )\n      return data\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/DataNormalizer.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  Audio = require 'app/components/Audio'\n  Colors = require 'app/components/Colors'\n\n  class Particles\n    @circleGeom = new THREE.CircleGeometry( 10, 30, 0, Math.PI * 2 )\n    @ringGeom = new THREE.RingGeometry( 10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2 )\n\n    @properties:\n      numItems: {name: 'numItems', label: 'num items', val: 5, triggerRebuild: true}\n\n    constructor: (@values = {}, time = 0, index = 0) ->\n      # Set the default value of instance properties.\n      for key, prop of Particles.properties\n        if !@values[key]?\n          @values[key] = prop.val\n\n      @container = new THREE.Object3D()\n      if index == 0\n        @container.position.set(0, 0, 100)\n      @items = []\n\n      @speed = Math.random() * 2 - 1\n      @scale = Math.random() * 2 + 0.1\n\n      material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0xffffff, shininess: 10, shading: THREE.FlatShading })\n      material.blending = THREE.AdditiveBlending\n\n      geom = Particles.circleGeom\n      if Math.random() < 0.7\n        geom = Particles.ringGeom\n\n      @el = new THREE.Mesh(geom , material )\n      #@el.position.x = index * (Math.random() * 20 + 20)\n      if index > 0\n        @el.position.x = Math.random() * 60 + 10\n        @el.position.y = Math.random() * 60 + 10\n        @el.position.z = Math.random() * 60 + 10\n\n      #@el.rotation.x = Math.random() * 0.4 - 0.2\n\n      @el.scale.set(@scale, @scale, @scale)\n      @container.add(@el)\n\n      if index < 5\n        for i in [0..@values.numItems - 1]\n          num_childs = 1\n          if Math.random() > 0.7\n            num_childs = parseInt(Math.random * 3, 10) + 1\n          item = new Particles({numItems: num_childs}, 0, index + 1)\n\n          @el.add( item.container )\n          @items.push(item)\n\n\n    update: (seconds, values = false, force = false) ->\n      #@container.rotation.z += @speed / 100\n\n      volume = Audio.instance.mid\n      current = @el.scale.x\n      if volume > 0.2 && Math.random() < 0.1\n        current += volume * 10\n\n      current = current + (@scale - current) * 0.992\n      @el.scale.set(current, current, current)\n\n\n      for item in @items\n        item.update()\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Particles.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'exports?RNG!rng'\n  ElementBase = require 'app/elements/ElementBase'\n\n  Audio = require 'app/components/Audio'\n  Colors = require 'app/components/Colors'\n  Shaders = require 'app/components/Shaders'\n\n  CircleGeometry2 = require 'app/geometries/CircleGeometry2'\n  ShaderVertex = require 'app/shaders/BasicNoise.vert'\n  ShaderFragement = require 'app/shaders/BasicNoise.frag'\n\n\n  class OrganizedChaos extends ElementBase\n    @lineGeom = new THREE.PlaneBufferGeometry( 100, 1)\n    @circleGeom = new THREE.CircleGeometry( 10, 30, 0, Math.PI * 2 )\n    @ringGeom = new THREE.RingGeometry( 10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2 )\n    @ringGeom2 = new CircleGeometry2( 10, 30, 0, Math.PI * 2 )\n\n    @squareGeom = new CircleGeometry2( 10, 4, 0, Math.PI * 2 )\n\n    @TYPE_LINE = 0\n    @TYPE_SQUARE = 1\n    @TYPE_CIRCLE = 2\n\n    @properties:\n      numItems: {name: 'numItems', label: 'num items', val: 10, triggerRebuild: true, group: \"global\"}\n      seed: {name: 'seed', label: 'seed', val: 10042, triggerRebuild: true, group: \"global\"}\n      depth: {name: 'depth', label: 'depth', val: 20, triggerRebuild: true, group: \"global\"}\n      spread: {name: 'spread', label: 'spread', val: 300, triggerRebuild: true, group: \"global\"}\n      spreadY: {name: 'spreadY', label: 'spreadY', val: 300, triggerRebuild: true, group: \"global\"}\n      maxChilds: {name: 'maxChilds', label: 'maxChilds', val: 8, triggerRebuild: true, group: \"global\"}\n      horizontalSymmetry: {name: 'horizontalSymmetry', label: 'horizontalSymmetry', val: 1, min: 0, max: 1, triggerRebuild: true, group: \"global\"}\n      verticalSymmetry: {name: 'verticalSymmetry', label: 'verticalSymmetry', val: 0, min: 0, max: 1, triggerRebuild: true, group: \"global\"}\n      x: {name: 'x', label: 'x', val: 0, group: \"position\"}\n      y: {name: 'y', label: 'y', val: 0, group: \"position\"}\n      z: {name: 'z', label: 'z', val: 0, group: \"position\"}\n      rotationX: {name: 'rotationX', label: 'x', val: 0, min: -2, max: 2, group: \"rotation\", triggerRebuild: true}\n      rotationY: {name: 'rotationY', label: 'y', val: 0, min: -2, max: 2, group: \"rotation\", triggerRebuild: true}\n      rotationZ: {name: 'rotationZ', label: 'z', val: 0, min: -2, max: 2, group: \"rotation\", triggerRebuild: true}\n      rotationRandX: {name: 'rotationRandX', label: 'rand x', val: 0, min: 0, max: 1, group: \"rotation\", triggerRebuild: true}\n      rotationRandY: {name: 'rotationRandY', label: 'rand y', val: 0, min: 0, max: 1, group: \"rotation\", triggerRebuild: true}\n      rotationRandZ: {name: 'rotationRandZ', label: 'rand z', val: 1, min: 0, max: 1, group: \"rotation\", triggerRebuild: true}\n      circles: {name: 'circles', label: 'circles', val: 0, triggerRebuild: true, group: \"geometry\"}\n      squares: {name: 'squares', label: 'squares', val: 0, triggerRebuild: true, group: \"geometry\"}\n      lineWidth: {name: 'lineWidth', label: 'line width', val: 1, triggerRebuild: true, group: \"line\"}\n      lineWidthRand: {name: 'lineWidthRand', label: 'line width randomness', val: 0, triggerRebuild: true, group: \"line\"}\n      lineHeight: {name: 'lineHeight', label: 'line height', val: 1, triggerRebuild: true, group: \"line\"}\n      lineHeightRand: {name: 'lineHeightRand', label: 'line height randomness', val: 0, triggerRebuild: true, group: \"line\"}\n      materialRed: {name: 'materialRed', label: 'percent red', val: 0, min: 0, max: 1, triggerRebuild: true, group: \"material\"}\n      materialBlue: {name: 'materialBlue', label: 'percent blue', val: 0, min: 0, max: 1, triggerRebuild: true, group: \"material\"}\n      materialAnimated: {name: 'materialAnimated', label: 'percent animated', val: 0, triggerRebuild: true, group: \"material\"}\n\n    getDefaultProperties: () -> OrganizedChaos.properties\n\n    constructor: (@values = {}, time = 0) ->\n      # Set the default value of instance properties.\n      for key, prop of OrganizedChaos.properties\n        if !@values[key]?\n          @values[key] = prop.val\n\n      # Set values cache\n      super\n\n      @container = new THREE.Object3D()\n      @container.position.set(0, 0, 0)\n      @items = []\n      @build()\n\n    rebuild: (time) ->\n      @empty()\n      @build(time)\n\n    empty: () ->\n      if !@items || !@items.length then return\n\n      for item in @items\n        @container.remove(item)\n        #item.destroy()\n      @items = []\n\n    getItemType: (rng) ->\n      itemType = rng.random(0, 1000) / 1000\n\n      if itemType < @values.circles\n        return OrganizedChaos.TYPE_CIRCLE\n\n      if itemType < @values.circles + @values.squares\n        return OrganizedChaos.TYPE_SQUARE\n\n      return OrganizedChaos.TYPE_LINE\n\n    getItemColor: (rng) ->\n      itemColor = rng.random(0, 1000) / 1000\n\n      if itemColor < @values.materialBlue\n        return Shaders.COLOR_BLUE\n\n      if itemColor < @values.materialBlue + @values.materialRed\n        return Shaders.COLOR_RED\n\n      return Shaders.COLOR_WHITE\n\n    build: (time = 0) ->\n      rngX = new RNG(@values.seed + \"x\")\n      rngY = new RNG(@values.seed + \"y\")\n      rngRotationX = new RNG(@values.seed + \"rotationX\")\n      rngRotationY = new RNG(@values.seed + \"rotationY\")\n      rngRotationZ = new RNG(@values.seed + \"rotationZ\")\n      rngScale = new RNG(@values.seed + \"scale\")\n      rngScaleLine = new RNG(@values.seed + \"scaleLine\")\n      rngScaleSquare = new RNG(@values.seed + \"scaleSquare\")\n      rngScaleLineHeight = new RNG(@values.seed + \"scaleLineHeight\")\n      rngChilds = new RNG(@values.seed + \"childs\")\n      rngHorizontalSymmetry = new RNG(@values.seed + \"horizontalSymmetry\")\n      rngVerticalSymmetry = new RNG(@values.seed + \"verticalSymmetry\")\n      rngSpacing = new RNG(@values.seed + \"spacing\")\n      rngType = new RNG(@values.seed + \"type\")\n      rngColor = new RNG(@values.seed + \"color\")\n      rngShaderAnim = new RNG(@values.seed + \"shaderAnim\")\n\n      #material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0xffffff, shininess: 10, shading: THREE.FlatShading, side: THREE.DoubleSide })\n      #material = new THREE.MeshBasicMaterial({color: 0xdddddd, shading: THREE.FlatShading, side: THREE.DoubleSide})\n      #material.blending = THREE.AdditiveBlending\n\n      spread = @values.spread\n      spread_half = spread / 2\n\n      spreadY = @values.spreadY\n      spreadY_half = spreadY / 2\n\n      #material = @getMaterial(0xffffff)\n\n      for i in [0...@values.numItems]\n        animated = false\n        if rngShaderAnim.random(100) / 100 < @values.materialAnimated\n          animated = true\n\n        num_childs = 1\n        scale = rngScale.random(0, 100) / 100 + 0.2\n\n        posX = rngX.random(spread * 100) * 0.01 - spread_half\n        posY = rngY.random(spreadY * 100) * 0.01 - spreadY_half\n        position = new THREE.Vector3(posX, posY, i * -@values.depth)\n        rotationX = (rngRotationX.random(0, 1000) / 1000 * Math.PI) * @values.rotationRandX + @values.rotationX * Math.PI\n        rotationY = (rngRotationY.random(0, 1000) / 1000 * Math.PI) * @values.rotationRandY + @values.rotationY * Math.PI\n        rotationZ = (rngRotationZ.random(0, 1000) / 1000 * Math.PI) * @values.rotationRandZ + @values.rotationZ * Math.PI\n        rotation = new THREE.Vector3(rotationX, rotationY, rotationZ)\n        scale = new THREE.Vector3(scale, scale, scale)\n\n        horizontalSymmetry = false\n        verticalSymmetry = false\n        num_childs = parseInt(rngChilds.random(0, @values.maxChilds), 10)\n        itemType = @getItemType(rngType)\n        itemColor = @getItemColor(rngColor)\n\n        geom = OrganizedChaos.lineGeom\n        material = window.shaders.getMaterialLine(animated, itemColor)\n\n        if @values.horizontalSymmetry && rngHorizontalSymmetry.random(0, 100) / 100 <= @values.horizontalSymmetry\n          horizontalSymmetry = true\n\n\n        if @values.verticalSymmetry && rngVerticalSymmetry.random(0, 100) / 100 <= @values.verticalSymmetry\n          verticalSymmetry = true\n\n        if itemType == OrganizedChaos.TYPE_LINE\n          scale.y = (scale.y * @values.lineWidth) * (rngScaleLine.random(1, 100) / 100) * (@values.lineWidthRand + 1)\n          # Define a minimum scale to avoid invisible lines\n          scale.y = Math.max(0.5, scale.y)\n\n          scale.x = (scale.x * @values.lineHeight) * (rngScaleLineHeight.random(1, 100) / 100) * (@values.lineHeightRand + 1)\n          # Define a minimum scale to avoid invisible lines\n          scale.x = Math.max(0.01, scale.x)\n\n        if itemType == OrganizedChaos.TYPE_CIRCLE\n          geom = OrganizedChaos.ringGeom2\n\n        else if itemType == OrganizedChaos.TYPE_SQUARE\n          geom = OrganizedChaos.squareGeom\n          rnd = 0.5 + rngScaleSquare.random(0, 100) / 100\n          scale.multiplyScalar(rnd)\n\n\n        @addItem(geom, material, i, scale, position, rotation, horizontalSymmetry, verticalSymmetry)\n\n        if num_childs > 1\n          spacing = 30 + rngSpacing.random(0, 100) * 0.4\n          offset = position.clone().normalize().multiplyScalar(spacing)\n          offset.z = 0\n\n\n          for ii in [0..num_childs - 1]\n            pos2 = position.clone().add(offset.multiplyScalar(ii + 1))\n            @addItem(geom, material, i, scale, pos2, rotation, horizontalSymmetry, verticalSymmetry)\n\n    addItem: (geom, material, i, scale, position, rotation, horizontalSymmetry, verticalSymmetry) ->\n      quaternion = new THREE.Quaternion()\n      quaternion.setFromAxisAngle(new THREE.Vector3(rotation.x, rotation.y, rotation.z), Math.PI / 2)\n      item = new THREE.Mesh(geom , material)\n      item.position.x = position.x\n      item.position.y = position.y\n      item.position.z = position.z\n      item.rotation.setFromQuaternion(quaternion)\n      item.scale.copy(scale)\n      item.updateMatrix()\n      @container.add(item)\n      @items.push(item)\n\n      if horizontalSymmetry\n        # mirroring\n        item2Container = new THREE.Object3D()\n\n        @container.add(item2Container)\n        item2 = new THREE.Mesh(geom , material)\n        item2.position.x = position.x\n        item2.position.y = position.y\n        item2.position.z = position.z\n        # mirror rotation\n        item2.rotation.setFromQuaternion(quaternion)\n        item2.scale.copy(scale)\n        item2.updateMatrix()\n        item2Container.add(item2)\n        item2Container.scale.x = -1\n        @items.push(item2Container)\n\n        if verticalSymmetry\n          # mirroring\n          item2Container = new THREE.Object3D()\n\n          @container.add(item2Container)\n          item2 = new THREE.Mesh(geom , material)\n          item2.position.x = position.x\n          item2.position.y = position.y\n          item2.position.z = position.z\n          # mirror rotation\n          item2.rotation.setFromQuaternion(quaternion)\n          item2.scale.copy(scale)\n          item2.updateMatrix()\n          item2Container.add(item2)\n          item2Container.scale.x = -1\n          item2Container.scale.y = -1\n          @items.push(item2Container)\n\n      if verticalSymmetry\n        # mirroring\n        item2Container = new THREE.Object3D()\n\n        @container.add(item2Container)\n        item2 = new THREE.Mesh(geom , material)\n        item2.position.x = position.x\n        item2.position.y = position.y\n        item2.position.z = position.z\n        # mirror rotation\n        item2.rotation.setFromQuaternion(quaternion)\n        item2.scale.copy(scale)\n        item2.updateMatrix()\n        item2Container.add(item2)\n        item2Container.scale.y = -1\n        @items.push(item2Container)\n\n    getMaterial: (color) ->\n      uniforms = {\n        time: {\n          type: 'f',\n          value: 0.0\n        },\n        seed: {\n          type: 'f',\n          value: Math.random() * 1000\n        },\n        strength: {\n          type: 'f',\n          value: 0.2\n        },\n        color: {\n          type: 'c',\n          value: new THREE.Color(color)\n        },\n        fogColor:    { type: \"c\", value: new THREE.Color(0x111111) },\n        fogDensity:      { type: \"f\", 0.2045}\n      }\n      material = new THREE.ShaderMaterial({\n        vertexShader: ShaderVertex,\n        fragmentShader: ShaderFragement,\n        side: THREE.DoubleSide,\n        uniforms: uniforms,\n        transparent: true,\n        depthWrite: false,\n        depthTest: false,\n        fog: true\n        })\n\n      #material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0x009900, shininess: 30, shading: THREE.FlatShading })\n      material.blending = THREE.AdditiveBlending\n      return material\n\n    update: (seconds, values = false, force = false) ->\n      if values == false then values = @values\n      needs_rebuild = false\n\n      # Check if any of the invaldating property changed.\n      for key, prop of OrganizedChaos.properties\n        if prop.triggerRebuild && @valueChanged(key, values)\n          needs_rebuild = true\n\n      volume = Audio.instance.mid\n\n      if force || @valueChanged(\"x\", values) || @valueChanged(\"y\", values) || @valueChanged(\"z\", values)\n        @container.position.set(values.x, values.y, values.z)\n      #current = @el.scale.x\n      #if volume > 0.2 && Math.random() < 0.1\n      #  current += volume * 10\n\n      #current = current + (@scale - current) * 0.992\n      #@el.scale.set(current, current, current)\n\n\n      #for item in @items\n      #  item.update()\n      # save the new values\n      @values = _.merge(@values, values)\n\n      if needs_rebuild == true\n        @rebuild(seconds)\n      return\n\n    destroy: () ->\n      for child in @container.children\n        @container.remove(child)\n\n      @container = null\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/OrganizedChaos.coffee\n **/","module.exports = _;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"_\"\n ** module id = 16\n ** module chunks = 1\n **/","module.exports = \"{\\n  \\\"settings\\\": {\\n    \\\"time\\\": 0,\\n    \\\"duration\\\": 240,\\n    \\\"domain\\\": [\\n      0,\\n      48000\\n    ]\\n  },\\n  \\\"data\\\": [\\n    {\\n      \\\"id\\\": \\\"gloabl\\\",\\n      \\\"type\\\": \\\"Global\\\",\\n      \\\"label\\\": \\\"Global\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 240,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"bassSensibility\\\",\\n          \\\"label\\\": \\\"bassSensibility\\\",\\n          \\\"val\\\": 5,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 130.80899999999997,\\n              \\\"val\\\": 5,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 138.7439999999998,\\n              \\\"val\\\": 0.8,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 144.14699999999996,\\n              \\\"val\\\": 0.4,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 177.71099999999998,\\n              \\\"val\\\": 0.6,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"midSensibility\\\",\\n          \\\"label\\\": \\\"midSensibility\\\",\\n          \\\"val\\\": 0.8,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"highSensibility\\\",\\n          \\\"label\\\": \\\"highSensibility\\\",\\n          \\\"val\\\": 5,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"autoAnimate\\\",\\n          \\\"label\\\": \\\"autoAnimate\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 1.64,\\n              \\\"val\\\": 0.05,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 1.858,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 216.852,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 236.5629999999993,\\n              \\\"val\\\": 0.2,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 240,\\n              \\\"val\\\": 1,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            }\\n          ]\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"bassSensibility\\\": 5,\\n        \\\"midSensibility\\\": 0.8,\\n        \\\"highSensibility\\\": 5,\\n        \\\"autoAnimate\\\": 0.05\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"camera1\\\",\\n      \\\"type\\\": \\\"Camera\\\",\\n      \\\"label\\\": \\\"Camera 1\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 240,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 0,\\n              \\\"val\\\": 700,\\n              \\\"ease\\\": \\\"Quart.easeInOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 1.7860000000000016,\\n              \\\"val\\\": 290,\\n              \\\"ease\\\": \\\"Quart.easeInOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 9.538,\\n              \\\"val\\\": -80.93835187185027,\\n              \\\"ease\\\": \\\"Linear.easeNone\\\"\\n            },\\n            {\\n              \\\"time\\\": 240,\\n              \\\"val\\\": -3850,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            }\\n          ],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 600\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"fov\\\",\\n          \\\"label\\\": \\\"fov\\\",\\n          \\\"val\\\": 45,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"target_x\\\",\\n          \\\"label\\\": \\\"target x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"target_z\\\",\\n          \\\"label\\\": \\\"target z\\\",\\n          \\\"val\\\": -10000,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 700,\\n        \\\"target_x\\\": 0,\\n        \\\"target_y\\\": 0,\\n        \\\"target_z\\\": -10000,\\n        \\\"fov\\\": 45\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item2\\\",\\n      \\\"label\\\": \\\"Chaos 2\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 1.435,\\n      \\\"end\\\": 41.33200000000003,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 44,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 85,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 4.6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 302.7,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -318,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 8.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.199,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.7,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.522,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.04,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 44,\\n        \\\"seed\\\": 85,\\n        \\\"depth\\\": 4.6,\\n        \\\"spread\\\": 302.7,\\n        \\\"maxChilds\\\": 2,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -318,\\n        \\\"spreadY\\\": 8.5,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.199,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialAnimated\\\": 0.3,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.7,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 0.522,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0.04,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item3\\\",\\n      \\\"label\\\": \\\"Chaos 3\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": -0.035,\\n      \\\"end\\\": 37.43900000000004,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 81042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 22,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 20,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -80,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.42,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": -13.9,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 75.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 1,\\n        \\\"seed\\\": 81042,\\n        \\\"depth\\\": 22,\\n        \\\"spread\\\": 20,\\n        \\\"maxChilds\\\": 4,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -80,\\n        \\\"spreadY\\\": 0,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.42,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialAnimated\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": -13.9,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 75.3,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item4\\\",\\n      \\\"label\\\": \\\"Chaos 4\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 11.944,\\n      \\\"end\\\": 39.27300000000001,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 29,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 98042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 450,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -5,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -640,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.201,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.62,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 4.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 11.148,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 29,\\n        \\\"seed\\\": 98042,\\n        \\\"depth\\\": 12,\\n        \\\"spread\\\": 450,\\n        \\\"maxChilds\\\": 3,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": -5,\\n        \\\"z\\\": -640,\\n        \\\"spreadY\\\": 0,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.201,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialAnimated\\\": 0.4,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.62,\\n        \\\"lineWidthRand\\\": 4.3,\\n        \\\"lineHeight\\\": 11.148,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item5\\\",\\n      \\\"label\\\": \\\"Chaos 5\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 17.74,\\n      \\\"end\\\": 52.301,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 21,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 34042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 140,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1054,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.7,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.56,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 21,\\n        \\\"seed\\\": 34042,\\n        \\\"depth\\\": 8,\\n        \\\"spread\\\": 300,\\n        \\\"spreadY\\\": 140,\\n        \\\"maxChilds\\\": 8,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -1054,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.7,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0.56,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"lineHeight\\\": 1,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item6\\\",\\n      \\\"label\\\": \\\"Chaos 6\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 27.607,\\n      \\\"end\\\": 87.155,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 80,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 9142,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 3.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": -140,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 60,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1800,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.9,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 2.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.41,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 4.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 80,\\n        \\\"seed\\\": 9142,\\n        \\\"depth\\\": 3.5,\\n        \\\"spread\\\": -140,\\n        \\\"spreadY\\\": 60,\\n        \\\"maxChilds\\\": 4,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -1800,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0.3,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.9,\\n        \\\"lineWidthRand\\\": 2.5,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"lineHeight\\\": 0.41,\\n        \\\"lineHeightRand\\\": 4.1,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item7\\\",\\n      \\\"label\\\": \\\"Chaos 7\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 21.222,\\n      \\\"end\\\": 72.32999999999998,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 78,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 9642,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 10,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 170,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 158.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -17,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1010,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 1.4,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.56,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 78,\\n        \\\"seed\\\": 9642,\\n        \\\"depth\\\": 10,\\n        \\\"spread\\\": 170,\\n        \\\"spreadY\\\": 158.4,\\n        \\\"maxChilds\\\": 8,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": -17,\\n        \\\"z\\\": -1010,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0.1,\\n        \\\"rotationZ\\\": 1.4,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0.56,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.4,\\n        \\\"lineWidthRand\\\": 3,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"lineHeight\\\": 0.2,\\n        \\\"lineHeightRand\\\": 3,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item8\\\",\\n      \\\"label\\\": \\\"Chaos 8\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 60.202,\\n      \\\"end\\\": 107.71,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 64,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 3842,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": -291,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 167,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -2100,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -0.3,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.05,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.04,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.05,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 2.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 3.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 64,\\n        \\\"seed\\\": 3842,\\n        \\\"depth\\\": 12,\\n        \\\"spread\\\": -291,\\n        \\\"spreadY\\\": 167,\\n        \\\"maxChilds\\\": 12,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -2100,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": -0.3,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.05,\\n        \\\"rotationRandY\\\": 0.04,\\n        \\\"rotationRandZ\\\": 0.05,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0.4,\\n        \\\"lineWidth\\\": 0.5,\\n        \\\"lineWidthRand\\\": 2.3,\\n        \\\"lineHeight\\\": 3.3,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"materialAnimated\\\": 0.8,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item9\\\",\\n      \\\"label\\\": \\\"Chaos 9\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 73.107,\\n      \\\"end\\\": 130.643,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 50,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 32042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 6.7,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 235,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 96,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -2600,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -0.2,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0.6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.96,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.53,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 50,\\n        \\\"seed\\\": 32042,\\n        \\\"depth\\\": 6.7,\\n        \\\"spread\\\": 235,\\n        \\\"spreadY\\\": 96,\\n        \\\"maxChilds\\\": 0,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -2600,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": -0.2,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0.6,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 1,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"materialAnimated\\\": 0.96,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0.53\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item10\\\",\\n      \\\"label\\\": \\\"Chaos 10\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 102.377,\\n      \\\"end\\\": 141.892,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 75,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 15042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 260,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 100,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3000,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.8,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 3.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 75,\\n        \\\"seed\\\": 15042,\\n        \\\"depth\\\": 1,\\n        \\\"spread\\\": 260,\\n        \\\"spreadY\\\": 100,\\n        \\\"maxChilds\\\": 8.1,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3000,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0.8,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0,\\n        \\\"lineWidthRand\\\": 1,\\n        \\\"lineHeight\\\": 0.1,\\n        \\\"lineHeightRand\\\": 3.5,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0.2\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item11\\\",\\n      \\\"label\\\": \\\"Chaos 11\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 112.889,\\n      \\\"end\\\": 152.972,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 64,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 44402,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3000,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.225,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.368,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.75,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 64,\\n        \\\"seed\\\": 44402,\\n        \\\"depth\\\": 12,\\n        \\\"spread\\\": 300,\\n        \\\"spreadY\\\": 300,\\n        \\\"maxChilds\\\": 3,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3000,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.225,\\n        \\\"rotationRandY\\\": 0.368,\\n        \\\"rotationRandZ\\\": 0.75,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0.2,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 1,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0.3\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item12\\\",\\n      \\\"label\\\": \\\"Chaos 12\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 122.274,\\n      \\\"end\\\": 212.46800000000002,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 80,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 516,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 220,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 50,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 0.8,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.6,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3300,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.03,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.95,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 80,\\n        \\\"seed\\\": 516,\\n        \\\"depth\\\": 6,\\n        \\\"spread\\\": 220,\\n        \\\"spreadY\\\": 50,\\n        \\\"maxChilds\\\": 12,\\n        \\\"horizontalSymmetry\\\": 0.8,\\n        \\\"verticalSymmetry\\\": 0.6,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3300,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 1,\\n        \\\"rotationRandZ\\\": 0.03,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 0.5,\\n        \\\"lineHeightRand\\\": 1,\\n        \\\"materialAnimated\\\": 0.95,\\n        \\\"materialRed\\\": 0.2,\\n        \\\"materialBlue\\\": 0.3\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item13\\\",\\n      \\\"label\\\": \\\"Chaos 13\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 151.87,\\n      \\\"end\\\": 241.144,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 60,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 3914,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 4.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 121,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 27,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 16,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.6,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3900,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.76,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.6,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 1.62,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 1.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 60,\\n        \\\"seed\\\": 3914,\\n        \\\"depth\\\": 4.2,\\n        \\\"spread\\\": 121,\\n        \\\"spreadY\\\": 27,\\n        \\\"maxChilds\\\": 16,\\n        \\\"horizontalSymmetry\\\": 0.3,\\n        \\\"verticalSymmetry\\\": 0.6,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3900,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.76,\\n        \\\"rotationRandY\\\": 0.6,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0,\\n        \\\"lineWidthRand\\\": 1.62,\\n        \\\"lineHeight\\\": 0.2,\\n        \\\"lineHeightRand\\\": 1.2,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"materialRed\\\": 0.3,\\n        \\\"materialBlue\\\": 0.3\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item15\\\",\\n      \\\"label\\\": \\\"Chaos 15\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 2,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 120,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 8842,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 1.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 260,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 150,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 520,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.9,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 120,\\n        \\\"seed\\\": 8842,\\n        \\\"depth\\\": 1.5,\\n        \\\"spread\\\": 260,\\n        \\\"spreadY\\\": 150,\\n        \\\"maxChilds\\\": 12,\\n        \\\"horizontalSymmetry\\\": 0.4,\\n        \\\"verticalSymmetry\\\": 0.2,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 520,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.5,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 0.2,\\n        \\\"lineHeightRand\\\": 1,\\n        \\\"materialRed\\\": 0.3,\\n        \\\"materialBlue\\\": 0,\\n        \\\"materialAnimated\\\": 0.9\\n      },\\n      \\\"isDirtyObject\\\": false\\n    }\\n  ]\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/scripts/app/data.json\n ** module id = 17\n ** module chunks = 1\n **/","module.exports = undefined;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"signals\",\"commonjs\":\"./signals\",\"amd\":\"signals\"}\n ** module id = 18\n ** module chunks = 1\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  class Global\n    @properties:\n      bassSensibility: {name: 'bassSensibility', label: 'bassSensibility x', val: 5, min: 0, max: 5}\n      midSensibility: {name: 'midSensibility', label: 'midSensibility', val: 0.8, min: 0, max: 5}\n      highSensibility: {name: 'highSensibility', label: 'highSensibility', val: 5, min: 0, max: 5}\n      autoAnimate: {name: 'autoAnimate', label: 'autoAnimate', val: 0, min: 0, max: 1}\n\n    constructor: (@values = {}, time = 0) ->\n      window.global = this\n\n    update: (seconds, values = false, force = false) ->\n      if values == false then values = @values\n      @values = _.merge(@values, values)\n\n    destroy: () ->\n      return\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Global.coffee\n **/","THREE.GlitchPass2 = function ( dt_size ) {\n\n  if ( THREE.DigitalGlitch2 === undefined ) console.error( \"THREE.GlitchPass relies on THREE.DigitalGlitch\" );\n\n  var shader = THREE.DigitalGlitch2;\n  this.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n  if(dt_size==undefined) dt_size=64;\n\n  this.intensity = 1;\n  this.uniforms[\"tDisp\"].value=this.generateHeightmap(dt_size);\n\n\n  this.material = new THREE.ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader\n  });\n\n  this.enabled = true;\n  this.renderToScreen = false;\n  this.needsSwap = true;\n\n  this.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n  this.scene  = new THREE.Scene();\n\n  this.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n  this.scene.add( this.quad );\n\n  this.goWild=false;\n  this.curF=0;\n  this.generateTrigger();\n\n};\n\nTHREE.GlitchPass2.prototype = {\n\n  render: function ( renderer, writeBuffer, readBuffer, delta )\n  {\n    this.uniforms[ \"tDiffuse\" ].value = readBuffer;\n    this.uniforms[ 'seed' ].value=Math.random();//default seeding\n    //this.uniforms[ 'byp' ].value=0;\n\n    this.uniforms[ 'amount' ].value = (Math.random()/420) * this.intensity;\n    this.uniforms[ 'angle' ].value=THREE.Math.randFloat(-Math.PI,Math.PI);\n    this.uniforms[ 'seed_x' ].value=THREE.Math.randFloat(-1,1);\n    this.uniforms[ 'seed_y' ].value=THREE.Math.randFloat(-1,1);\n    this.uniforms[ 'seed_x' ].value *= 0.001;\n    this.uniforms[ 'seed_y' ].value *= 0.001;\n    this.uniforms[ 'distortion_x' ].value=THREE.Math.randFloat(0,0.001);\n    this.uniforms[ 'distortion_y' ].value=THREE.Math.randFloat(0,0.001);\n    //this.curF=0;\n    this.generateTrigger();\n\n    this.uniforms[ 'byp' ].value=0;\n    this.curF++;\n\n    this.quad.material = this.material;\n    if ( this.renderToScreen )\n    {\n      renderer.render( this.scene, this.camera );\n    }\n    else\n    {\n      renderer.render( this.scene, this.camera, writeBuffer, false );\n    }\n  },\n  generateTrigger:function()\n  {\n    this.randX=THREE.Math.randInt(120,240);\n  },\n  generateHeightmap:function(dt_size)\n  {\n    var data_arr = new Float32Array( dt_size*dt_size * 3 );\n    var length=dt_size*dt_size;\n\n    for ( var i = 0; i < length; i++)\n    {\n      var val=THREE.Math.randFloat(0,1);\n      data_arr[ i*3 + 0 ] = val;\n      data_arr[ i*3 + 1 ] = val;\n      data_arr[ i*3 + 2 ] = val;\n    }\n\n    var texture = new THREE.DataTexture( data_arr, dt_size, dt_size, THREE.RGBFormat, THREE.FloatType );\n    texture.minFilter = THREE.NearestFilter;\n    texture.magFilter = THREE.NearestFilter;\n    texture.needsUpdate = true;\n    texture.flipY = false;\n    return texture;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/postprocessing/GlitchPass2.js\n ** module id = 20\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar width = window.innerWidth || 1;\n\t\tvar height = window.innerHeight || 1;\n\t\tvar parameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\n\n\t\trenderTarget = new THREE.WebGLRenderTarget( width, height, parameters );\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.passes = [];\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.EffectComposer relies on THREE.CopyShader\" );\n\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\n};\n\nTHREE.EffectComposer.prototype = {\n\n\tswapBuffers: function() {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\trender: function ( delta ) {\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( !pass.enabled ) continue;\n\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\n\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\tmaskActive = true;\n\n\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\tmaskActive = false;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\n\t\t\trenderTarget.width = window.innerWidth;\n\t\t\trenderTarget.height = window.innerHeight;\n\n\t\t}\n\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar renderTarget = this.renderTarget1.clone();\n\n\t\trenderTarget.width = width;\n\t\trenderTarget.height = height;\n\n\t\tthis.reset( renderTarget );\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/EffectComposer.js\n ** module id = 21\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MaskPass = function ( scene, camera ) {\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.enabled = true;\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nTHREE.MaskPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tvar context = renderer.context;\n\n\t\t// don't update color or depth\n\n\t\tcontext.colorMask( false, false, false, false );\n\t\tcontext.depthMask( false );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tcontext.enable( context.STENCIL_TEST );\n\t\tcontext.stencilOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tcontext.stencilFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tcontext.clearStencil( clearValue );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t// re-enable update of color and depth\n\n\t\tcontext.colorMask( true, true, true, true );\n\t\tcontext.depthMask( true );\n\n\t\t// only render where stencil is set to 1\n\n\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );  // draw if == 1\n\t\tcontext.stencilOp( context.KEEP, context.KEEP, context.KEEP );\n\n\t}\n\n};\n\n\nTHREE.ClearMaskPass = function () {\n\n\tthis.enabled = true;\n\n};\n\nTHREE.ClearMaskPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tvar context = renderer.context;\n\n\t\tcontext.disable( context.STENCIL_TEST );\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/MaskPass.js\n ** module id = 22\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.BloomPass = function ( strength, kernelSize, sigma, resolution ) {\n\n\tstrength = ( strength !== undefined ) ? strength : 1;\n\tkernelSize = ( kernelSize !== undefined ) ? kernelSize : 25;\n\tsigma = ( sigma !== undefined ) ? sigma : 4.0;\n\tresolution = ( resolution !== undefined ) ? resolution : 256;\n\n\t// render targets\n\n\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\n\tthis.renderTargetX = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\tthis.renderTargetY = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\n\t// copy material\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.CopyShader\" );\n\n\tvar copyShader = THREE.CopyShader;\n\n\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\n\tthis.copyUniforms[ \"opacity\" ].value = strength;\n\n\tthis.materialCopy = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: THREE.AdditiveBlending,\n\t\ttransparent: true\n\n\t} );\n\n\t// convolution material\n\n\tif ( THREE.ConvolutionShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.ConvolutionShader\" );\n\n\tvar convolutionShader = THREE.ConvolutionShader;\n\n\tthis.convolutionUniforms = THREE.UniformsUtils.clone( convolutionShader.uniforms );\n\n\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurx;\n\tthis.convolutionUniforms[ \"cKernel\" ].value = THREE.ConvolutionShader.buildKernel( sigma );\n\n\tthis.materialConvolution = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.convolutionUniforms,\n\t\tvertexShader:  convolutionShader.vertexShader,\n\t\tfragmentShader: convolutionShader.fragmentShader,\n\t\tdefines: {\n\t\t\t\"KERNEL_SIZE_FLOAT\": kernelSize.toFixed( 1 ),\n\t\t\t\"KERNEL_SIZE_INT\": kernelSize.toFixed( 0 )\n\t\t}\n\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\tthis.clear = false;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.BloomPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\n\n\t\t// Render quad with blured scene into texture (convolution pass 1)\n\n\t\tthis.quad.material = this.materialConvolution;\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\n\t\trenderer.render( this.scene, this.camera, this.renderTargetX, true );\n\n\n\t\t// Render quad with blured scene into texture (convolution pass 2)\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = this.renderTargetX;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurY;\n\n\t\trenderer.render( this.scene, this.camera, this.renderTargetY, true );\n\n\t\t// Render original scene with superimposed blur to texture\n\n\t\tthis.quad.material = this.materialCopy;\n\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetY;\n\n\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t}\n\n};\n\nTHREE.BloomPass.blurX = new THREE.Vector2( 0.001953125, 0.0 );\nTHREE.BloomPass.blurY = new THREE.Vector2( 0.0, 0.001953125 );\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/BloomPass.js\n ** module id = 23\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShaderPass = function ( shader, textureID ) {\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\tthis.material = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\n\t} );\n\n\tthis.renderToScreen = false;\n\n\tthis.enabled = true;\n\tthis.needsSwap = true;\n\tthis.clear = false;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.ShaderPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer;\n\n\t\t}\n\n\t\tthis.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t} else {\n\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/ShaderPass.js\n ** module id = 24\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 1;\n\n\tthis.oldClearColor = new THREE.Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.enabled = true;\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n};\n\nTHREE.RenderPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/RenderPass.js\n ** module id = 25\n ** module chunks = 1\n **/","THREE.CustomPostShader = {\n  uniforms: {\n    \"tDiffuse\": {type: \"t\", value: null},\n    \"resolution\": {type: \"v2\", value: new THREE.Vector2(1 / 1024, 1 / 512)},\n    \"time\": {type: \"f\", value: 0},\n    \"nIntensity\": {type: \"f\", value: 0.05},\n  },\n  vertexShader: require('./CustomPostPass.vert'),\n  fragmentShader: require('./CustomPostPass.frag'),\n};\n\nTHREE.CustomPostPass = function (noiseIntensity, resolution) {\n  var shader = THREE.CustomPostShader;\n\n  this.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n  this.material = new THREE.ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader\n  });\n\n  this.uniforms.nIntensity.value = resolution;\n  if ( noiseIntensity !== undefined ) this.uniforms.nIntensity.value = noiseIntensity;\n\n  this.enabled = true;\n  this.renderToScreen = false;\n  this.needsSwap = true;\n\n  this.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n  this.scene  = new THREE.Scene();\n\n  this.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n  this.scene.add( this.quad );\n};\n\nTHREE.CustomPostPass.prototype = {\n  render: function (renderer, writeBuffer, readBuffer, delta) {\n    this.uniforms[ \"tDiffuse\" ].value = readBuffer;\n    this.uniforms[ \"time\" ].value += delta;\n\n    this.quad.material = this.material;\n\n    if ( this.renderToScreen ) {\n      renderer.render( this.scene, this.camera );\n    } else {\n      renderer.render( this.scene, this.camera, writeBuffer, false );\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/postprocessing/CustomPostPass.js\n ** module id = 26\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n * @author davidedc / http://www.sketchpatch.net/\n *\n * NVIDIA FXAA by Timothy Lottes\n * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\n * - WebGL port by @supereggbert\n * http://www.glge.org/demos/fxaa/\n */\n\nTHREE.FXAAShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\"resolution\": { type: \"v2\", value: new THREE.Vector2( 1 / 1024, 1 / 512 )  }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec2 resolution;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"#define FXAA_REDUCE_MIN   (1.0/128.0)\",\n\t\t\"#define FXAA_REDUCE_MUL   (1.0/8.0)\",\n\t\t\"#define FXAA_SPAN_MAX     8.0\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );\",\n\t\t\t\"vec3 rgbM  = rgbaM.xyz;\",\n\t\t\t\"float opacity  = rgbaM.w;\",\n\n\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\n\t\t\t\"float lumaNW = dot( rgbNW, luma );\",\n\t\t\t\"float lumaNE = dot( rgbNE, luma );\",\n\t\t\t\"float lumaSW = dot( rgbSW, luma );\",\n\t\t\t\"float lumaSE = dot( rgbSE, luma );\",\n\t\t\t\"float lumaM  = dot( rgbM,  luma );\",\n\t\t\t\"float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\",\n\t\t\t\"float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\",\n\n\t\t\t\"vec2 dir;\",\n\t\t\t\"dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\",\n\t\t\t\"dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\",\n\n\t\t\t\"float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\",\n\n\t\t\t\"float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\",\n\t\t\t\"dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\",\n\t\t\t\t  \"max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\",\n\t\t\t\t\t\t\"dir * rcpDirMin)) * resolution;\",\n\n\t\t\t\"vec3 rgbA = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\"rgbA += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\"rgbA *= 0.5;\",\n\n\t\t\t\"vec3 rgbB = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz;\",\n\t\t\t\"rgbB += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz;\",\n\t\t\t\"rgbB *= 0.25;\",\n\t\t\t\"rgbB += rgbA * 0.5;\",\n\n\t\t\t\"float lumaB = dot( rgbB, luma );\",\n\n\t\t\t\"if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\",\n\n\t\t\t\t\"gl_FragColor = vec4( rgbA, opacity );\",\n\n\t\t\t\"} else {\",\n\n\t\t\t\t\"gl_FragColor = vec4( rgbB, opacity );\",\n\n\t\t\t\"}\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/FXAAShader.js\n ** module id = 27\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Convolution shader\n * ported from o3d sample to WebGL / GLSL\n * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\n */\n\nTHREE.ConvolutionShader = {\n\n\tdefines: {\n\n\t\t\"KERNEL_SIZE_FLOAT\": \"25.0\",\n\t\t\"KERNEL_SIZE_INT\": \"25\",\n\n\t},\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":        { type: \"t\", value: null },\n\t\t\"uImageIncrement\": { type: \"v2\", value: new THREE.Vector2( 0.001953125, 0.0 ) },\n\t\t\"cKernel\":         { type: \"fv1\", value: [] }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float cKernel[ KERNEL_SIZE_INT ];\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec2 imageCoord = vUv;\",\n\t\t\t\"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\n\n\t\t\t\"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\n\n\t\t\t\t\"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\n\t\t\t\t\"imageCoord += uImageIncrement;\",\n\n\t\t\t\"}\",\n\n\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\n\t].join(\"\\n\"),\n\n\tbuildKernel: function ( sigma ) {\n\n\t\t// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\n\n\t\tfunction gauss( x, sigma ) {\n\n\t\t\treturn Math.exp( - ( x * x ) / ( 2.0 * sigma * sigma ) );\n\n\t\t}\n\n\t\tvar i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil( sigma * 3.0 ) + 1;\n\n\t\tif ( kernelSize > kMaxKernelSize ) kernelSize = kMaxKernelSize;\n\t\thalfWidth = ( kernelSize - 1 ) * 0.5;\n\n\t\tvalues = new Array( kernelSize );\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < kernelSize; ++i ) {\n\n\t\t\tvalues[ i ] = gauss( i - halfWidth, sigma );\n\t\t\tsum += values[ i ];\n\n\t\t}\n\n\t\t// normalize the kernel\n\n\t\tfor ( i = 0; i < kernelSize; ++i ) values[ i ] /= sum;\n\n\t\treturn values;\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/ConvolutionShader.js\n ** module id = 28\n ** module chunks = 1\n **/","/**\n * @author felixturner / http://airtight.cc/\n *\n * RGB Shift Shader\n * Shifts red and blue channels from center in opposite directions\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n * by Tom Butterworth / http://kriss.cx/tom/\n *\n * amount: shift distance (1 is width of input)\n * angle: shift angle in radians\n */\n\nTHREE.DigitalGlitch2 = {\n\n  uniforms: {\n\n    \"tDiffuse\":   { type: \"t\", value: null },//diffuse texture\n    \"tDisp\":    { type: \"t\", value: null },//displacement texture for digital glitch squares\n    \"tScratch\":   { type: \"t\", value: null },//scratch texture\n    \"byp\":      { type: \"i\", value: 0 },//apply the glitch ?\n    \"amount\":   { type: \"f\", value: 0.08 },\n    \"angle\":    { type: \"f\", value: 0.02 },\n    \"seed\":     { type: \"f\", value: 0.02 },\n    \"seed_x\":   { type: \"f\", value: 0.02 },//-1,1\n    \"seed_y\":   { type: \"f\", value: 0.02 },//-1,1\n    \"distortion_x\": { type: \"f\", value: 0.5 },\n    \"distortion_y\": { type: \"f\", value: 0.6 },\n    \"col_s\":    { type: \"f\", value: 0.05 }\n  },\n\n  vertexShader: [\n\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n      \"vUv = uv;\",\n      \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\"\n  ].join(\"\\n\"),\n\n  fragmentShader: [\n    \"uniform int byp;\",//should we apply the glitch ?\n\n    \"uniform sampler2D tDiffuse;\",\n    \"uniform sampler2D tDisp;\",\n    \"uniform sampler2D tScratch;\",\n\n    \"uniform float amount;\",\n    \"uniform float angle;\",\n    \"uniform float seed;\",\n    \"uniform float seed_x;\",\n    \"uniform float seed_y;\",\n    \"uniform float distortion_x;\",\n    \"uniform float distortion_y;\",\n    \"uniform float col_s;\",\n\n    \"varying vec2 vUv;\",\n\n\n    \"float rand(vec2 co){\",\n      \"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\n    \"}\",\n\n    \"float luma(vec3 color) {\",\n      \"return dot(color, vec3(0.299, 0.587, 0.114));\",\n    \"}\",\n\n    \"float luma(vec4 color) {\",\n      \"return dot(color.rgb, vec3(0.299, 0.587, 0.114));\",\n    \"}\",\n\n    \"void main() {\",\n      // ref for dust/scratch: https://gist.github.com/mattdesl/253aece2d3eaac505823\n      \"vec2 p = vUv;\",\n      \"vec4 scratches = texture2D(tScratch, p);\",\n\n\n      // https://github.com/mattdesl/lwjgl-basics/wiki/ShaderLesson3\n      \"if(byp<1) {\",\n        \"float xs = floor(gl_FragCoord.x / 0.5);\",\n        \"float ys = floor(gl_FragCoord.y / 0.5);\",\n        //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n        \"vec4 normal = texture2D (tDisp, p*seed*seed);\",\n        \"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\",\n          \"if(seed_x>0.){\",\n            \"p.y = 1. - (p.y + distortion_y);\",\n          \"}\",\n          \"else {\",\n            \"p.y = distortion_y;\",\n          \"}\",\n        \"}\",\n        \"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\",\n          \"if(seed_y>0.){\",\n            \"p.x=distortion_x;\",\n          \"}\",\n          \"else {\",\n            \"p.x = 1. - (p.x + distortion_x);\",\n          \"}\",\n        \"}\",\n        \"p.x+=normal.x*seed_x*(seed/5.);\",\n        \"p.y+=normal.y*seed_y*(seed/5.);\",\n        //base from RGB shift shader\n        \"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\n        \"vec4 cr = texture2D(tDiffuse, p + offset);\",\n        \"vec4 cga = texture2D(tDiffuse, p);\",\n        \"vec4 cb = texture2D(tDiffuse, p - offset);\",\n\n        \"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\n        //add noise\n        \"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\",\n        \"gl_FragColor = gl_FragColor+ snow;\",\n      \"}\",\n      \"else {\",\n        \"gl_FragColor=texture2D (tDiffuse, vUv);\",\n      \"}\",\n\n      \"vec3 scratchBlend = gl_FragColor.rgb + scratches.rgb;\",\n      // vignette scratch so that it affect only edges.\n      \"float center = smoothstep(0.0, 0.5, length(vUv-0.5));\",\n      \"float luminance = luma(gl_FragColor.rgb);\",\n      \"float brightnessMap = smoothstep(0.1, 0.4, luminance * center );\",\n      \"gl_FragColor.rgb = mix(gl_FragColor.rgb, scratchBlend, brightnessMap);\",\n    \"}\"\n\n  ].join(\"\\n\")\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/DigitalGlitch2.js\n ** module id = 29\n ** module chunks = 1\n **/","define (require) ->\n  AnimatedLine = require 'app/elements/AnimatedLine'\n  SpreadedObjects = require 'app/elements/SpreadedObjects'\n\n  class Lines extends SpreadedObjects\n    getItemClass: () -> return AnimatedLine\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Lines.coffee\n **/","define (require) ->\n  THREE = require 'Three'\n\n  class Camera\n    @properties:\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 700}\n      target_x: {name: 'target_x', label: 'target x', val: 0}\n      target_y: {name: 'target_y', label: 'target y', val: 0}\n      target_z: {name: 'target_z', label: 'target z', val: 0}\n      fov: {name: 'fov', label: 'fov', val: 45}\n\n    constructor: (@values = {}, time = 0) ->\n      @isCamera = true\n      @target = new THREE.Vector3(@values.target_x, @values.target_y, @values.target_z)\n      @container = new THREE.PerspectiveCamera( @values.fov, window.innerWidth / window.innerHeight, 1, 2000 )\n      @container.position.set(@values.x, @values.y, @values.z)\n\n    update: (seconds, values = false, force = false) ->\n      if values.fov? then @container.fov = values.fov\n      @container.position.set(values.x, values.y, values.z)\n      @target.set(values.target_x, values.target_y, values.target_z)\n      @container.lookAt( @target )\n\n    destroy: () ->\n      delete @container\n      delete @isCamera\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Camera.coffee\n **/","define (require) ->\n  AnimatedCircle = require 'app/elements/AnimatedCircle'\n  SpreadedObjects = require 'app/elements/SpreadedObjects'\n\n  class Circles extends SpreadedObjects\n    getItemClass: () -> return AnimatedCircle\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Circles.coffee\n **/","define (require) ->\n  AnimatedBox = require 'app/elements/AnimatedBox'\n  SpreadedObjects = require 'app/elements/SpreadedObjects'\n\n  class Boxes extends SpreadedObjects\n    getItemClass: () -> return AnimatedBox\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Boxes.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'rng'\n  ElementBase = require 'app/elements/ElementBase'\n  Colors = require 'app/components/Colors'\n\n  ShaderVertex = require 'app/shaders/BasicNoise.vert'\n  ShaderFragement = require 'app/shaders/BasicNoise.frag'\n\n  class SingleObject extends ElementBase\n    @properties:\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      rotX: {name: 'rotX', label: 'rotation x', val: 0}\n      rotY: {name: 'rotY', label: 'rotation y', val: 0}\n      rotZ: {name: 'rotZ', label: 'rotation z', val: 0}\n      scaleX: {name: 'scaleX', label: 'scale x', val: 1}\n      scaleY: {name: 'scaleY', label: 'scale y', val: 1}\n      scaleZ: {name: 'scaleZ', label: 'scale z', val: 1}\n      color: {name: 'color', label: 'color', 'type': 'color', val: \"#888888\"}\n      opacity: {name: 'opacity', label: 'opacity', val: 1, min: 0, max: 1}\n\n    constructor: (@values = {}, time = 0) ->\n      # Set the default value of instance properties.\n      for key, prop of @getDefaultProperties()\n        if !@values[key]?\n          @values[key] = prop.val\n\n      # Set values cache\n      super\n\n      @timeline = new TimelineMax()\n      #color = Colors.get(0)\n      color = new THREE.Color(values.color)\n      @material = @getMaterial(color)\n      @container = new THREE.Mesh(@getGeometry() , @material )\n\n    getDefaultProperties: () -> SingleObject.properties\n\n    getGeometry: () =>\n      return new THREE.PlaneGeometry( 100, 100)\n\n    destroy: () ->\n      super\n      # clean up...\n      if @container\n        if @container.parent then @container.parent.remove(@container)\n        delete @container\n\n      delete @geometry\n      delete @timeline\n\n    update: (seconds, values = false, force = false) ->\n      if values == false then values = @values\n\n      if force || @valueChanged(\"x\", values) || @valueChanged(\"y\", values) || @valueChanged(\"z\", values)\n        @container.position.set(values.x, values.y, values.z)\n\n      if force || @valueChanged(\"rotX\", values) || @valueChanged(\"rotY\", values) || @valueChanged(\"rotZ\", values)\n        @container.rotation.set(@degreeToRadian(values.rotX), @degreeToRadian(values.rotY), @degreeToRadian(values.rotZ))\n      if force || @valueChanged(\"scaleX\", values) || @valueChanged(\"scaleY\", values) || @valueChanged(\"scaleZ\", values)\n        # Don't allow scale by 0.\n        values.scaleX = values.scaleX || 0.000000001\n        values.scaleY = values.scaleY || 0.000000001\n        values.scaleZ = values.scaleZ || 0.000000001\n        @container.scale.set(values.scaleX, values.scaleY, values.scaleZ)\n\n      if force || @valueChanged(\"color\", values)\n        @material.color = new THREE.Color(values.color)\n      if force || @valueChanged(\"opacity\", values)\n        @material.opacity = values.opacity\n      return\n\n    getMaterial: (color) ->\n      material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0x888888, shininess: 30, shading: THREE.FlatShading })\n      material.transparent = true\n      material.depthWrite = false\n      material.depthTest = false\n      material.side = THREE.DoubleSide\n\n      material.blending = THREE.AdditiveBlending\n      return material\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/SingleObject.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'rng'\n  SingleObject = require 'app/elements/SingleObject'\n  Colors = require 'app/components/Colors'\n  RingGeometry2 = require 'app/geometries/RingGeometry2'\n\n  ShaderVertex = require 'app/shaders/BasicNoise.vert'\n  ShaderFragement = require 'app/shaders/BasicNoise.frag'\n\n  class Circle extends SingleObject\n    @properties:\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      rotX: {name: 'rotX', label: 'rotation x', val: 0}\n      rotY: {name: 'rotY', label: 'rotation y', val: 0}\n      rotZ: {name: 'rotZ', label: 'rotation z', val: 0}\n      scaleX: {name: 'scaleX', label: 'scale x', val: 1}\n      scaleY: {name: 'scaleY', label: 'scale y', val: 1}\n      scaleZ: {name: 'scaleZ', label: 'scale z', val: 1}\n      innerRadius: {name: 'innerRadius', label: 'innerRadius', val: 0.7, min: 0, max: 1}\n      angle: {name: 'angle', label: 'angle', val: 1, min: 0, max: 1}\n      color: {name: 'color', label: 'color', 'type': 'color', val: \"#888888\"}\n      opacity: {name: 'opacity', label: 'opacity', val: 1, min: 0, max: 1}\n\n    getDefaultProperties: () -> Circle.properties\n\n    getGeometry: () =>\n      # Don't allow 0 innerRadius\n      inner_radius = @values.innerRadius || 0.000000001\n      # And neither 1.\n      inner_radius = Math.min(0.999999999, inner_radius)\n      pi2 = Math.PI * 2\n      angle = @values.angle * pi2\n      return new RingGeometry2( 100 * inner_radius, 100, 30, 1, 0, angle )\n\n    update: (seconds, values = false, force = false) ->\n      super\n\n      if force || @valueChanged(\"innerRadius\", values) || @valueChanged(\"angle\", values)\n        geom = @getGeometry()\n        @container.geometry.dynamic = true\n        @container.geometry.vertices = geom.vertices\n        @container.geometry.verticesNeedUpdate = true\n\n        geom.dispose()\n      return\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Circle.coffee\n **/","#https://kuler.adobe.com/Tron-Legacy2-color-theme-1406713/edit/?copy=true&base=2&rule=Custom&selected=0&name=Copy%20of%20Tron%20Legacy2&mode=rgb&rgbvalues=0.008019047984151012,0.2173110006233171,0.3137254901960784,0.00784313725490196,0.5411764705882353,0.6196078431372549,0.05627426106529288,0.7490196078431373,0.6616535221392924,0.9490196078431372,0.7547155506500436,0.11287104291749415,0.8509803921568627,0.1894012485482237,0.1429403608472727&swatchOrder=0,1,2,3,4\ndefine (require) ->\n  THREE = require 'Three'\n\n  items = [\n    new THREE.Color(0xffffff),\n    new THREE.Color(0x86d1b8),\n    new THREE.Color(0x65c282),\n  ]\n\n  items2 = [\n    new THREE.Color(0xffffff),\n    new THREE.Color(0x023750),\n    new THREE.Color(0x028A9E),\n    new THREE.Color(0x0EBFA9),\n    new THREE.Color(0xF2C01D),\n    new THREE.Color(0xD93024),\n    #new THREE.Color(0x9ACCEF),\n  ]\n\n  length = items.length\n\n  class Colors\n    @get = (index) ->\n      index = Math.abs(parseInt(index, 10))\n      return items[index % length]\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/Colors.coffee\n **/","define (require) ->\n\n  class ElementBase\n    constructor: (@values = {}, time = 0) ->\n      @cache = @buildCache()\n\n    buildCache: () ->\n      cache = {}\n      for key, prop of @values\n        cache[key] = prop.val\n      return cache\n\n    valueChanged: (key, values) ->\n      # Value can't change if it is not even set.\n      if !values[key]? then return false\n      new_val = values[key]\n      has_changed = true\n      if @cache[key]? && @cache[key] == new_val then has_changed = false\n\n      # Directly set the new cache value to avoid setting it multiple time to true.\n      @cache[key] = new_val\n      return has_changed\n\n    degreeToRadian: (degree) -> Math.PI * degree / 180\n\n    destroy: () =>\n      delete @cache\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/ElementBase.coffee\n **/","// Modified to have uv on the edges.\n\ndefine(function(require) {\n  var THREE = require('Three');\n\nTHREE.CircleGeometry2 = function ( radius, segments, thetaStart, thetaLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'CircleGeometry2';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 50;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tvar i, uvs = [],\n\tcenter = new THREE.Vector3(),\n  centerUV = new THREE.Vector2( 0, 0 );\n  //centerUV = new THREE.Vector2( 0.5, 0.5 );\n\n\tthis.vertices.push(center);\n\tuvs.push( centerUV );\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar segment = thetaStart + i / segments * thetaLength;\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tthis.vertices.push( vertex );\n\t\t//uvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\n\n    uvs.push(new THREE.Vector2(1, i / segments));\n\t}\n\n\tvar n = new THREE.Vector3( 0, 0, 1 );\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t//this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\n    this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), new THREE.Vector2(0, i / segments) ] );\n\n\t}\n\n\tthis.computeFaceNormals();\n\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.CircleGeometry2.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.CircleGeometry2.prototype.constructor = THREE.CircleGeometry2;\n\nreturn THREE.CircleGeometry2;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/geometries/CircleGeometry2.js\n ** module id = 38\n ** module chunks = 1\n **/","/**\n * Seedable random number generator functions.\n * @version 1.0.0\n * @license Public Domain\n *\n * @example\n * var rng = new RNG('Example');\n * rng.random(40, 50);  // =>  42\n * rng.uniform();       // =>  0.7972798995050903\n * rng.normal();        // => -0.6698504543216376\n * rng.exponential();   // =>  1.0547367609131555\n * rng.poisson(4);      // =>  2\n * rng.gamma(4);        // =>  2.781724687386858\n */\n\n/**\n * @param {String} seed A string to seed the generator.\n * @constructor\n */\nfunction RC4(seed) {\n    this.s = new Array(256);\n    this.i = 0;\n    this.j = 0;\n    for (var i = 0; i < 256; i++) {\n        this.s[i] = i;\n    }\n    if (seed) {\n        this.mix(seed);\n    }\n}\n\n/**\n * Get the underlying bytes of a string.\n * @param {string} string\n * @returns {Array} An array of bytes\n */\nRC4.getStringBytes = function(string) {\n    var output = [];\n    for (var i = 0; i < string.length; i++) {\n        var c = string.charCodeAt(i);\n        var bytes = [];\n        do {\n            bytes.push(c & 0xFF);\n            c = c >> 8;\n        } while (c > 0);\n        output = output.concat(bytes.reverse());\n    }\n    return output;\n};\n\nRC4.prototype._swap = function(i, j) {\n    var tmp = this.s[i];\n    this.s[i] = this.s[j];\n    this.s[j] = tmp;\n};\n\n/**\n * Mix additional entropy into this generator.\n * @param {String} seed\n */\nRC4.prototype.mix = function(seed) {\n    var input = RC4.getStringBytes(seed);\n    var j = 0;\n    for (var i = 0; i < this.s.length; i++) {\n        j += this.s[i] + input[i % input.length];\n        j %= 256;\n        this._swap(i, j);\n    }\n};\n\n/**\n * @returns {number} The next byte of output from the generator.\n */\nRC4.prototype.next = function() {\n    this.i = (this.i + 1) % 256;\n    this.j = (this.j + this.s[this.i]) % 256;\n    this._swap(this.i, this.j);\n    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n};\n\n/**\n * Create a new random number generator with optional seed. If the\n * provided seed is a function (i.e. Math.random) it will be used as\n * the uniform number generator.\n * @param seed An arbitrary object used to seed the generator.\n * @constructor\n */\nfunction RNG(seed) {\n    if (seed == null) {\n        seed = (Math.random() + Date.now()).toString();\n    } else if (typeof seed === \"function\") {\n        // Use it as a uniform number generator\n        this.uniform = seed;\n        this.nextByte = function() {\n            return ~~(this.uniform() * 256);\n        };\n        seed = null;\n    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n        seed = JSON.stringify(seed);\n    }\n    this._normal = null;\n    if (seed) {\n        this._state = new RC4(seed);\n    } else {\n        this._state = null;\n    }\n}\n\n/**\n * @returns {number} Uniform random number between 0 and 255.\n */\nRNG.prototype.nextByte = function() {\n    return this._state.next();\n};\n\n/**\n * @returns {number} Uniform random number between 0 and 1.\n */\nRNG.prototype.uniform = function() {\n    var BYTES = 7; // 56 bits to make a 53-bit double\n    var output = 0;\n    for (var i = 0; i < BYTES; i++) {\n        output *= 256;\n        output += this.nextByte();\n    }\n    return output / (Math.pow(2, BYTES * 8) - 1);\n};\n\n/**\n * Produce a random integer within [n, m).\n * @param {number} [n=0]\n * @param {number} m\n *\n */\nRNG.prototype.random = function(n, m) {\n    if (n == null) {\n        return this.uniform();\n    } else if (m == null) {\n        m = n;\n        n = 0;\n    }\n    return n + Math.floor(this.uniform() * (m - n));\n};\n\n/**\n * Generates numbers using this.uniform() with the Box-Muller transform.\n * @returns {number} Normally-distributed random number of mean 0, variance 1.\n */\nRNG.prototype.normal = function() {\n    if (this._normal !== null) {\n        var n = this._normal;\n        this._normal = null;\n        return n;\n    } else {\n        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n        var y = this.uniform();\n        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n    }\n};\n\n/**\n * Generates numbers using this.uniform().\n * @returns {number} Number from the exponential distribution, lambda = 1.\n */\nRNG.prototype.exponential = function() {\n    return -Math.log(this.uniform() || Math.pow(2, -53));\n};\n\n/**\n * Generates numbers using this.uniform() and Knuth's method.\n * @param {number} [mean=1]\n * @returns {number} Number from the Poisson distribution.\n */\nRNG.prototype.poisson = function(mean) {\n    var L = Math.exp(-(mean || 1));\n    var k = 0, p = 1;\n    do {\n        k++;\n        p *= this.uniform();\n    } while (p > L);\n    return k - 1;\n};\n\n/**\n * Generates numbers using this.uniform(), this.normal(),\n * this.exponential(), and the Marsaglia-Tsang method.\n * @param {number} a\n * @returns {number} Number from the gamma distribution.\n */\nRNG.prototype.gamma = function(a) {\n    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n    var c = 1 / Math.sqrt(9 * d);\n    do {\n        do {\n            var x = this.normal();\n            var v = Math.pow(c * x + 1, 3);\n        } while (v <= 0);\n        var u = this.uniform();\n        var x2 = Math.pow(x, 2);\n    } while (u >= 1 - 0.0331 * x2 * x2 &&\n             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n    if (a < 1) {\n        return d * v * Math.exp(this.exponential() / -a);\n    } else {\n        return d * v;\n    }\n};\n\n/**\n * Accepts a dice rolling notation string and returns a generator\n * function for that distribution. The parser is quite flexible.\n * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n * @param {RNG} rng An optional RNG object.\n * @returns {Function}\n */\nRNG.roller = function(expr, rng) {\n    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n    var dice = parseFloat(parts[0]) || 1;\n    var sides = parseFloat(parts[1]);\n    var mod = parseFloat(parts[2]) || 0;\n    rng = rng || new RNG();\n    return function() {\n        var total = dice + mod;\n        for (var i = 0; i < dice; i++) {\n            total += rng.random(sides);\n        }\n        return total;\n    };\n};\n\n/* Provide a pre-made generator instance. */\nRNG.$ = new RNG();\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = RNG\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/exports-loader?RNG!./src/scripts/bower_components/rng-js/rng.js\n ** module id = 39\n ** module chunks = 1\n **/","/**\n * Seedable random number generator functions.\n * @version 1.0.0\n * @license Public Domain\n *\n * @example\n * var rng = new RNG('Example');\n * rng.random(40, 50);  // =>  42\n * rng.uniform();       // =>  0.7972798995050903\n * rng.normal();        // => -0.6698504543216376\n * rng.exponential();   // =>  1.0547367609131555\n * rng.poisson(4);      // =>  2\n * rng.gamma(4);        // =>  2.781724687386858\n */\n\n/**\n * @param {String} seed A string to seed the generator.\n * @constructor\n */\nfunction RC4(seed) {\n    this.s = new Array(256);\n    this.i = 0;\n    this.j = 0;\n    for (var i = 0; i < 256; i++) {\n        this.s[i] = i;\n    }\n    if (seed) {\n        this.mix(seed);\n    }\n}\n\n/**\n * Get the underlying bytes of a string.\n * @param {string} string\n * @returns {Array} An array of bytes\n */\nRC4.getStringBytes = function(string) {\n    var output = [];\n    for (var i = 0; i < string.length; i++) {\n        var c = string.charCodeAt(i);\n        var bytes = [];\n        do {\n            bytes.push(c & 0xFF);\n            c = c >> 8;\n        } while (c > 0);\n        output = output.concat(bytes.reverse());\n    }\n    return output;\n};\n\nRC4.prototype._swap = function(i, j) {\n    var tmp = this.s[i];\n    this.s[i] = this.s[j];\n    this.s[j] = tmp;\n};\n\n/**\n * Mix additional entropy into this generator.\n * @param {String} seed\n */\nRC4.prototype.mix = function(seed) {\n    var input = RC4.getStringBytes(seed);\n    var j = 0;\n    for (var i = 0; i < this.s.length; i++) {\n        j += this.s[i] + input[i % input.length];\n        j %= 256;\n        this._swap(i, j);\n    }\n};\n\n/**\n * @returns {number} The next byte of output from the generator.\n */\nRC4.prototype.next = function() {\n    this.i = (this.i + 1) % 256;\n    this.j = (this.j + this.s[this.i]) % 256;\n    this._swap(this.i, this.j);\n    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n};\n\n/**\n * Create a new random number generator with optional seed. If the\n * provided seed is a function (i.e. Math.random) it will be used as\n * the uniform number generator.\n * @param seed An arbitrary object used to seed the generator.\n * @constructor\n */\nfunction RNG(seed) {\n    if (seed == null) {\n        seed = (Math.random() + Date.now()).toString();\n    } else if (typeof seed === \"function\") {\n        // Use it as a uniform number generator\n        this.uniform = seed;\n        this.nextByte = function() {\n            return ~~(this.uniform() * 256);\n        };\n        seed = null;\n    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n        seed = JSON.stringify(seed);\n    }\n    this._normal = null;\n    if (seed) {\n        this._state = new RC4(seed);\n    } else {\n        this._state = null;\n    }\n}\n\n/**\n * @returns {number} Uniform random number between 0 and 255.\n */\nRNG.prototype.nextByte = function() {\n    return this._state.next();\n};\n\n/**\n * @returns {number} Uniform random number between 0 and 1.\n */\nRNG.prototype.uniform = function() {\n    var BYTES = 7; // 56 bits to make a 53-bit double\n    var output = 0;\n    for (var i = 0; i < BYTES; i++) {\n        output *= 256;\n        output += this.nextByte();\n    }\n    return output / (Math.pow(2, BYTES * 8) - 1);\n};\n\n/**\n * Produce a random integer within [n, m).\n * @param {number} [n=0]\n * @param {number} m\n *\n */\nRNG.prototype.random = function(n, m) {\n    if (n == null) {\n        return this.uniform();\n    } else if (m == null) {\n        m = n;\n        n = 0;\n    }\n    return n + Math.floor(this.uniform() * (m - n));\n};\n\n/**\n * Generates numbers using this.uniform() with the Box-Muller transform.\n * @returns {number} Normally-distributed random number of mean 0, variance 1.\n */\nRNG.prototype.normal = function() {\n    if (this._normal !== null) {\n        var n = this._normal;\n        this._normal = null;\n        return n;\n    } else {\n        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n        var y = this.uniform();\n        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n    }\n};\n\n/**\n * Generates numbers using this.uniform().\n * @returns {number} Number from the exponential distribution, lambda = 1.\n */\nRNG.prototype.exponential = function() {\n    return -Math.log(this.uniform() || Math.pow(2, -53));\n};\n\n/**\n * Generates numbers using this.uniform() and Knuth's method.\n * @param {number} [mean=1]\n * @returns {number} Number from the Poisson distribution.\n */\nRNG.prototype.poisson = function(mean) {\n    var L = Math.exp(-(mean || 1));\n    var k = 0, p = 1;\n    do {\n        k++;\n        p *= this.uniform();\n    } while (p > L);\n    return k - 1;\n};\n\n/**\n * Generates numbers using this.uniform(), this.normal(),\n * this.exponential(), and the Marsaglia-Tsang method.\n * @param {number} a\n * @returns {number} Number from the gamma distribution.\n */\nRNG.prototype.gamma = function(a) {\n    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n    var c = 1 / Math.sqrt(9 * d);\n    do {\n        do {\n            var x = this.normal();\n            var v = Math.pow(c * x + 1, 3);\n        } while (v <= 0);\n        var u = this.uniform();\n        var x2 = Math.pow(x, 2);\n    } while (u >= 1 - 0.0331 * x2 * x2 &&\n             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n    if (a < 1) {\n        return d * v * Math.exp(this.exponential() / -a);\n    } else {\n        return d * v;\n    }\n};\n\n/**\n * Accepts a dice rolling notation string and returns a generator\n * function for that distribution. The parser is quite flexible.\n * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n * @param {RNG} rng An optional RNG object.\n * @returns {Function}\n */\nRNG.roller = function(expr, rng) {\n    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n    var dice = parseFloat(parts[0]) || 1;\n    var sides = parseFloat(parts[1]);\n    var mod = parseFloat(parts[2]) || 0;\n    rng = rng || new RNG();\n    return function() {\n        var total = dice + mod;\n        for (var i = 0; i < dice; i++) {\n            total += rng.random(sides);\n        }\n        return total;\n    };\n};\n\n/* Provide a pre-made generator instance. */\nRNG.$ = new RNG();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/bower_components/rng-js/rng.js\n ** module id = 40\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/Basic.vert\n ** module id = 41\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nprecision highp float;\\n\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nfloat aastep_1_0(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\n\\n\\nvarying vec2 vUv;\\nuniform vec3 color;\\n// 0 hidden, 1 full, 2 hidden\\nuniform float percent;\\n\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\n\\n// Common\\n#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\n\\nfloat quadraticInOut(float t) {\\n  float p = 2.0 * t * t;\\n  return t < 0.5 ? p : -p + (4.0 * t) - 1.0;\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n  return a;\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n  return a;\\n}\\n\\nvoid main() {\\n  // For fog\\n  vec3 outgoingLight = vec3( 0.0 );\\t// outgoing light does not have an alpha, the surface does\\n  vec4 diffuseColor = vec4( color, 1.0 );\\n\\n  float alpha = 0.0;\\n\\n  float percentInOut = quadraticInOut(percent / 2.0) * 2.0;\\n\\n  if (vUv.x < percentInOut && vUv.x >= percentInOut - 1.0) {\\n    alpha = 1.0;\\n  }\\n\\n\\n  outgoingLight = diffuseColor.rgb;\\n\\n  float depth = gl_FragCoord.z / gl_FragCoord.w;\\n  float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n  fogFactor = whiteCompliment( fogFactor );\\n\\n  outgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n  gl_FragColor = vec4(outgoingLight, alpha);\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/Line.frag\n ** module id = 42\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\nvarying float noise;\\nuniform float time;\\nuniform float strength;\\nuniform float seed;\\n\\n//\\n// GLSL textureless classic 3D noise \\\"cnoise\\\",\\n// with an RSL-style periodic variant \\\"pnoise\\\".\\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\\n// Version: 2011-10-11\\n//\\n// Many thanks to Ian McEwan of Ashima Arts for the\\n// ideas for permutation and gradient selection.\\n//\\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\\n// Distributed under the MIT license. See LICENSE file.\\n// https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_1_0(vec3 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_1_0(vec4 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_1_1(vec4 x)\\n{\\n  return mod289_1_0(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_1_2(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nvec3 fade_1_3(vec3 t) {\\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\\n}\\n\\n// Classic Perlin noise, periodic variant\\nfloat pnoise_1_4(vec3 P, vec3 rep)\\n{\\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\\n  Pi0 = mod289_1_0(Pi0);\\n  Pi1 = mod289_1_0(Pi1);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute_1_1(permute_1_1(ix) + iy);\\n  vec4 ixy0 = permute_1_1(ixy + iz0);\\n  vec4 ixy1 = permute_1_1(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt_1_2(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt_1_2(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade_1_3(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n  return 2.2 * n_xyz;\\n}\\n\\n\\n\\n\\nfloat turbulence( vec3 p ) {\\n    float w = 100.0;\\n    float t = -.5;\\n    for (float f = 1.0 ; f <= 10.0 ; f++ ){\\n        float power = pow( 2.0, f );\\n        t += abs( pnoise_1_4( vec3( power * p ), vec3( 10.0, 10.0, 10.0 ) ) / power );\\n    }\\n    return t;\\n}\\n\\nvoid main() {\\n    vUv = uv;\\n\\n\\n    float time2 = time + seed;\\n\\n    // add time to the noise parameters so it's animated\\n    noise = 10.0 *  -.10 * turbulence( 10.5 * normal + time2 );\\n    float b = 5.0 * pnoise_1_4( 0.2 * position + vec3( 2.0 * time2 ), vec3( 100.0 ) );\\n    float displacement = - noise + b;\\n\\n    // Less displacement on center.\\n    displacement = displacement * vUv.x;\\n\\n    //vec3 newPosition = position + normal * displacement * strength * 30.0;\\n    //vec2 normal2 = normalize(uv - 0.5);\\n    vec3 normal2 = normalize(position - 0.5);\\n    float strengthMultiplier = 15.0;\\n    vec3 newPosition = position + vec3(normal2.x, normal2.y, 0.0) * displacement * strength * strengthMultiplier;\\n    //gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/BasicNoise.vert\n ** module id = 43\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nprecision highp float;\\n\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nfloat aastep_1_0(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\n\\n\\nvarying vec2 vUv;\\nuniform vec3 color;\\n\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\n\\n// Common\\n#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\n\\nvec3 inputToLinear( in vec3 a ) {\\n  return a;\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n  return a;\\n}\\n\\nvoid main() {\\n  // For fog\\n  vec3 outgoingLight = vec3( 0.0 );\\t// outgoing light does not have an alpha, the surface does\\n  vec4 diffuseColor = vec4( color, 1.0 );\\n\\n  float alpha = 0.0;\\n  float wireframe_size = 0.01;\\n  float min_x = 0.0;\\n  float max_x = 1.0;\\n\\n  // If max is 1 then wireframe is is only half size.\\n  //max_x = max_x * 0.98;\\n\\n  // Get distance from edges.\\n  vec2 edgeX = abs(vec2(vUv.x - min_x, vUv.x - max_x));\\n  // Add the wireframe.\\n  edgeX = max(vec2(0.0, 0.0), edgeX - wireframe_size);\\n\\n  // Get the smallest distance from edges.\\n  float distance_x = min(edgeX.x, edgeX.y);\\n\\n\\n  alpha = aastep_1_0(distance_x, 0.01);\\n\\n\\n  // Add the fill alpha.\\n  if (vUv.x > min_x && vUv.x < max_x) {\\n    alpha = max(0.1, alpha);\\n  }\\n\\n  outgoingLight = diffuseColor.rgb;\\n\\n  float depth = gl_FragCoord.z / gl_FragCoord.w;\\n  float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n  fogFactor = whiteCompliment( fogFactor );\\n\\n  outgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n  gl_FragColor = vec4(outgoingLight, alpha);\\n  //vec3 k = vec3(1.0, 1.0, 1.0);\\n  //gl_FragColor = vec4( vec3( vUv, 0. ), 1. );\\n  //gl_FragColor = vec4( color, 1.0 );\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/BasicNoise.frag\n ** module id = 44\n ** module chunks = 1\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  AnimatedObject = require 'app/elements/AnimatedObject'\n  class AnimatedLine extends AnimatedObject\n    @circleGeom = new THREE.PlaneBufferGeometry( 100, 1)\n    @ringGeom = false\n    @ringGeom2 = false\n    @noOutline = true\n\n    constructor: () ->\n      super\n\n    getGeometry: () -> return AnimatedLine.circleGeom\n\n    getGeometryOutline: (outlineWidth) -> return false\n\n    update: (seconds, progression) ->\n      #if Audio.instance.high > 0.002\n      #  @speed += Audio.instance.high\n      #console.log Audio.instance.high\n\n      #if Math.random() > 0.9 && Audio.instance.high > 0.09\n      #  @velocity.add(@direction.clone().multiplyScalar(Audio.instance.high * 12 * @weight))\n      @container.position.add(@velocity)\n\n      @velocity = @velocity.multiplyScalar(0.94)\n\n      timeDiff = Date.now() - @start\n      for material in @materials\n        material.uniforms['time'].value = 0.00025 * ( timeDiff )\n\n      scale = @animatedProperties.scale * @values.size * 0.1\n      @container.scale.set(1, scale, 1)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedLine.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'exports?RNG!rng'\n  TweenMax = require 'TweenMax'\n  ElementBase = require 'app/elements/ElementBase'\n  Colors = require 'app/components/Colors'\n\n\n  class SpreadedObjects extends ElementBase\n    @properties:\n      numItems: {name: 'numItems', label: 'num items', val: 20, triggerRebuild: true}\n      seed: {name: 'seed', label: 'seed', val: 12002, triggerRebuild: true}\n      randX: {name: 'randX', label: 'random x', val: 80, triggerRebuild: true}\n      randY: {name: 'randY', label: 'random y', val: 80, triggerRebuild: true}\n      randZ: {name: 'randZ', label: 'random z', val: 0, triggerRebuild: true}\n      randRotZ: {name: 'randRotZ', label: 'random rotation z', val: 0, triggerRebuild: true}\n      randScaleX: {name: 'randScaleX', label: 'random scale x', val: 0, triggerRebuild: true}\n      randScaleY: {name: 'randScaleY', label: 'random scale y', val: 0, triggerRebuild: true}\n      circleRadius: {name: 'circleRadius', label: 'circle radius', val: 20}\n      circleRadiusMax: {name: 'circleRadiusMax', label: 'circle radius max', val: 20}\n      progression: {name: 'progression', label: 'progression', val: 1, min: 0, max: 2}\n      depth: {name: 'depth', label: 'depth', val: 0}\n      percent_color: {name: 'percent_color', label: 'percent color', val: 0.4, triggerRebuild: true}\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      rotX: {name: 'rotX', label: 'rotation x', val: 0}\n      rotY: {name: 'rotY', label: 'rotation y', val: 0}\n      rotZ: {name: 'rotZ', label: 'rotation z', val: 0}\n\n    constructor: (@values = {}, time = 0) ->\n      # Set the default value of instance properties.\n      for key, prop of SpreadedObjects.properties\n        if !@values[key]?\n          @values[key] = prop.val\n\n      # Set values cache\n      super\n\n      @timeline = new TimelineMax()\n      @container = new THREE.Object3D()\n      @totalDuration = 0\n      @items = []\n      @items_position = []\n      @build(time)\n\n    getItemClass: () -> return AnimatedCircle\n\n    rebuild: (time) ->\n      @empty()\n      @build(time)\n\n    empty: () ->\n      if !@items || !@items.length then return\n      @timeline.clear()\n      @items_position = []\n\n      for item in @items\n        @container.remove(item.container)\n        item.destroy()\n      @items = []\n\n    build: (time = 0) ->\n      @rng = new RNG(@values.seed)\n      @rngAnimation = new RNG(@values.seed + \"lorem\")\n      @rngOutline = new RNG(@values.seed)\n\n      for i in [0..@values.numItems - 1]\n        itemClass = @getItemClass()\n        rndtype = @rng.random(0, 1000) / 1000\n        draw_outline = if rndtype < 0.8 then true else false\n        draw_circle = if rndtype > 0.5 then true else false\n\n        if itemClass.noOutline\n          draw_outline = false\n          draw_circle = true\n\n        color = Colors.get(@rng.random(0, 1000))\n        if @rng.random(0, 1000) > @values.percent_color * 1000\n          color = Colors.get(0)\n\n        fillColor = color.clone()\n        if draw_outline\n          fillColor.multiplyScalar(@rng.random(0.1, 0.5))\n\n        size = @rng.random(@values.circleRadius, @values.circleRadiusMax)\n        x = @getRandomPosition(@values.randX)\n        y = @getRandomPosition(@values.randY)\n        z = @getRandomPosition(@values.randZ)\n        randRotZ = @rng.random(0, 1000) / 1000 * Math.PI * @values.randRotZ\n        randScaleX = @rng.random(0, 1000) / 1000 * @values.randScaleX\n        randScaleY = @rng.random(0, 1000) / 1000 * @values.randScaleY\n        pos = {x: x, y: y, z: z}\n\n        delay = @rngAnimation.random(0, 2400) / 1000\n        duration = @rngAnimation.random(600, 800) / 1000\n        duration *= 4\n        border_radius = @rngOutline.random(1, 400) / 100\n\n\n        if draw_outline == false\n          # more fill opacity if no outline\n          fillColor.multiplyScalar(3)\n\n        item = new itemClass({\n          size: size,\n          outlineWidth: border_radius,\n          drawOutline: draw_outline,\n          drawCircle: draw_circle,\n          color: color,\n          fillColor: fillColor,\n          delay: delay,\n          duration: duration,\n          depth: @values.depth,\n          x: pos.x,\n          y: pos.y,\n          z: pos.z,\n          randRotZ: randRotZ,\n          randScaleX: randScaleX,\n          randScaleY: randScaleY\n        })\n        @container.add(item.container)\n        @timeline.add(item.timeline, 0)\n        @items.push(item)\n        @items_position.push(pos)\n\n      @totalDuration = @timeline.duration()\n\n      # Set initial properties\n      @update(time, @values, true)\n\n    update: (seconds, values = false, force = false) ->\n      if values == false then values = @values\n      needs_rebuild = false\n\n      # Check if any of the invaldating property changed.\n      for key, prop of SpreadedObjects.properties\n        if prop.triggerRebuild && @valueChanged(key, values)\n          needs_rebuild = true\n\n      if force || @valueChanged(\"x\", values) || @valueChanged(\"y\", values) || @valueChanged(\"z\", values)\n        @container.position.set(values.x, values.y, values.z)\n\n      if force || @valueChanged(\"rotX\", values) || @valueChanged(\"rotY\", values) || @valueChanged(\"rotZ\", values)\n        @container.rotation.set(@degreeToRadian(values.rotX), @degreeToRadian(values.rotY), @degreeToRadian(values.rotZ))\n\n      #if force || @valueChanged(\"progression\", values)\n      progression = values.progression / 2\n      @timeline.seek(@totalDuration * progression)\n      for item in @items\n        item.update(seconds, {progression: values.progression})\n\n      if force || @valueChanged(\"depth\", values)\n        for item, key in @items\n          pos = @items_position[key]\n          item.container.position.set(pos.x, pos.y, pos.z * values.depth)\n\n      # save the new values\n      @values = _.merge(@values, values)\n\n      if needs_rebuild == true\n        @rebuild(seconds)\n\n    getRandomPosition: (scale = 1) ->\n      return @rng.random(-scale, scale)\n\n    destroy: () ->\n      super\n      # clean up...\n      if @container\n        if @container.parent then @container.parent.remove(@container)\n        delete @container\n      delete @rng\n      delete @rngOutline\n      delete @cache\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/SpreadedObjects.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  AnimatedObject = require 'app/elements/AnimatedObject'\n  class AnimatedBox extends AnimatedObject\n    @circleGeom = new THREE.CircleGeometry( 10, 4, 0, Math.PI * 2 )\n    @ringGeom = new THREE.RingGeometry( 10 - 1, 10 + 1, 4, 1, 0, Math.PI * 2 )\n    @ringGeom2 = new THREE.RingGeometry( 10 - 1, 10, 4, 1, 0, Math.PI * 2 )\n\n    constructor: () ->\n      super\n\n    getGeometry: () ->\n      return AnimatedBox.circleGeom\n\n    getGeometryOutline: (outlineWidth) ->\n      if outlineWidth < 1 then return AnimatedBox.ringGeom\n      return AnimatedBox.ringGeom2\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedBox.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  AnimatedObject = require 'app/elements/AnimatedObject'\n  CircleGeometry2 = require 'app/geometries/CircleGeometry2'\n  RingGeometry2 = require 'app/geometries/RingGeometry2'\n\n  class AnimatedCircle extends AnimatedObject\n    @circleGeom = new CircleGeometry2( 10, 30, 0, Math.PI * 2 )\n    @ringGeom = new RingGeometry2( 10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2 )\n    @ringGeom2 = new RingGeometry2( 10 - 1, 10, 30, 1, 0, Math.PI * 2 )\n\n    constructor: () ->\n      super\n\n    getGeometry: () ->\n      return AnimatedCircle.circleGeom\n\n    getGeometryOutline: (outlineWidth) ->\n      if outlineWidth < 1 then return AnimatedCircle.ringGeom\n      return AnimatedCircle.ringGeom2\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedCircle.coffee\n **/","// Modified to have uv on the edges.\n\ndefine(function(require) {\n  var THREE = require('Three');\n\nTHREE.RingGeometry2 = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'RingGeometry2';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0;\n\touterRadius = outerRadius || 50;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\n\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) { // concentric circles inside ring\n\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) { // number of segments per circle\n\n\t\t\tvar vertex = new THREE.Vector3();\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tthis.vertices.push( vertex );\n\t\t\t//uvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\n\t\t  var uv = {\n        x: (i / phiSegments),\n        y: (o / thetaSegments)\n      };\n      uvs.push(new THREE.Vector2(uv.x, uv.y));\n    }\n\n\t\tradius += radiusStep;\n\n\t}\n\n\tvar n = new THREE.Vector3( 0, 0, 1 );\n\n\tfor ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring\n\n\t\tvar thetaSegment = i * (thetaSegments + 1);\n\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) { // number of segments per circle\n\n\t\t\tvar segment = o + thetaSegment;\n\n\t\t\tvar v1 = segment;\n\t\t\tvar v2 = segment + thetaSegments + 1;\n\t\t\tvar v3 = segment + thetaSegments + 2;\n\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\n\t\t\tv1 = segment;\n\t\t\tv2 = segment + thetaSegments + 2;\n\t\t\tv3 = segment + 1;\n\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\n\t\t}\n\t}\n\n\tthis.computeFaceNormals();\n\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.RingGeometry2.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.RingGeometry2.prototype.constructor = THREE.RingGeometry2;\n\nreturn THREE.RingGeometry2;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/geometries/RingGeometry2.js\n ** module id = 49\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\n\\n// Precompute coords for FXAA\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nuniform vec2 resolution;\\n\\n//To save 9 dependent texture reads, you can compute\\n//these in the vertex shader and use the optimized\\n//frag.glsl function in your frag shader. \\n\\n//This is best suited for mobile devices, like iOS.\\n\\nvoid texcoords_1_0(vec2 fragCoord, vec2 resolution,\\n\\t\\t\\tout vec2 v_rgbNW, out vec2 v_rgbNE,\\n\\t\\t\\tout vec2 v_rgbSW, out vec2 v_rgbSE,\\n\\t\\t\\tout vec2 v_rgbM) {\\n\\tvec2 inverseVP = 1.0 / resolution.xy;\\n\\tv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\\n\\tv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\\n\\tv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\\n\\tv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\\n\\tv_rgbM = vec2(fragCoord * inverseVP);\\n}\\n\\n\\n\\nvoid main() {\\n  vUv = uv;\\n\\n  // FXAA\\n  vec2 fragCoord = uv * resolution;\\n\\ttexcoords_1_0(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/postprocessing/CustomPostPass.vert\n ** module id = 50\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\n/**\\nBasic FXAA implementation based on the code on geeks3d.com with the\\nmodification that the texture2DLod stuff was removed since it's\\nunsupported by WebGL.\\n\\n--\\n\\nFrom:\\nhttps://github.com/mitsuhiko/webgl-meincraft\\n\\nCopyright (c) 2011 by Armin Ronacher.\\n\\nSome rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are\\nmet:\\n\\n    * Redistributions of source code must retain the above copyright\\n      notice, this list of conditions and the following disclaimer.\\n\\n    * Redistributions in binary form must reproduce the above\\n      copyright notice, this list of conditions and the following\\n      disclaimer in the documentation and/or other materials provided\\n      with the distribution.\\n\\n    * The names of the contributors may not be used to endorse or\\n      promote products derived from this software without specific\\n      prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n\\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n*/\\n\\n#ifndef FXAA_REDUCE_MIN\\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\\n#endif\\n#ifndef FXAA_REDUCE_MUL\\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\\n#endif\\n#ifndef FXAA_SPAN_MAX\\n    #define FXAA_SPAN_MAX     8.0\\n#endif\\n\\n//optimized version for mobile, where dependent \\n//texture reads can be a bottleneck\\nvec4 fxaa_1_0(sampler2D tex, vec2 fragCoord, vec2 resolution,\\n            vec2 v_rgbNW, vec2 v_rgbNE, \\n            vec2 v_rgbSW, vec2 v_rgbSE, \\n            vec2 v_rgbM) {\\n    vec4 color;\\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\\n    vec4 texColor = texture2D(tex, v_rgbM);\\n    vec3 rgbM  = texColor.xyz;\\n    vec3 luma = vec3(0.299, 0.587, 0.114);\\n    float lumaNW = dot(rgbNW, luma);\\n    float lumaNE = dot(rgbNE, luma);\\n    float lumaSW = dot(rgbSW, luma);\\n    float lumaSE = dot(rgbSE, luma);\\n    float lumaM  = dot(rgbM,  luma);\\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\\n    \\n    mediump vec2 dir;\\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n    \\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\\n    \\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n              dir * rcpDirMin)) * inverseVP;\\n    \\n    vec3 rgbA = 0.5 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\\n\\n    float lumaB = dot(rgbB, luma);\\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\\n        color = vec4(rgbA, texColor.a);\\n    else\\n        color = vec4(rgbB, texColor.a);\\n    return color;\\n}\\n\\n\\n\\n\\n//texcoords computed in vertex step\\n//to avoid dependent texture reads\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nhighp float random_2_1(vec2 co)\\n{\\n    highp float a = 12.9898;\\n    highp float b = 78.233;\\n    highp float c = 43758.5453;\\n    highp float dt= dot(co.xy ,vec2(a,b));\\n    highp float sn= mod(dt,3.14);\\n    return fract(sin(sn) * c);\\n}\\n\\n\\n\\nvec3 blendSoftLight_3_2(vec3 base, vec3 blend) {\\n    return mix(\\n        sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend), \\n        2.0 * base * blend + base * base * (1.0 - 2.0 * blend), \\n        step(base, vec3(0.5))\\n    );\\n}\\n\\n// Using conditionals\\n// vec3 blendSoftLight(vec3 base, vec3 blend) {\\n//     return vec3(\\n//         ((blend.r < 0.5) ? (2.0 * base.r * blend.r + base.r * base.r * (1.0 - 2.0 * blend.r)) : (sqrt(base.r) * (2.0 * blend.r - 1.0) + 2.0 * base.r * (1.0 - blend.r))),\\n//         ((blend.g < 0.5) ? (2.0 * base.g * blend.g + base.g * base.g * (1.0 - 2.0 * blend.g)) : (sqrt(base.g) * (2.0 * blend.g - 1.0) + 2.0 * base.g * (1.0 - blend.g))),\\n//         ((blend.b < 0.5) ? (2.0 * base.b * blend.b + base.b * base.b * (1.0 - 2.0 * blend.b)) : (sqrt(base.b) * (2.0 * blend.b - 1.0) + 2.0 * base.b * (1.0 - blend.b)))\\n//     );\\n// }\\n\\n\\nfloat luma_4_3(vec3 color) {\\n  return dot(color, vec3(0.299, 0.587, 0.114));\\n}\\n\\nfloat luma_4_3(vec4 color) {\\n  return dot(color.rgb, vec3(0.299, 0.587, 0.114));\\n}\\n\\n\\n\\n\\nuniform sampler2D tDiffuse;\\nuniform vec2 resolution;\\nuniform float nIntensity;\\nuniform float time;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vec2 p = vUv;\\n  vec2 fragCoord = vUv * resolution;\\n\\n  // FXAA\\n  gl_FragColor = fxaa_1_0(tDiffuse, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n\\n  float center = smoothstep(0.0, 1.0, length(vUv-0.5));\\n\\n  // Add vignetting.\\n  gl_FragColor.rgb = mix(gl_FragColor.rgb, vec3(0.0, 0.0, 0.0), center * 0.5);\\n\\n  // Add film grain.\\n  vec3 g = vec3( random_2_1( (gl_FragCoord.xy / resolution.xy) * time )) * nIntensity;\\n\\n  vec3 color = blendSoftLight_3_2(gl_FragColor.rgb, g);\\n  float luminance = luma_4_3(gl_FragColor.rgb);\\n  //reduce the noise based on some\\n  //threshold of the background luminance\\n  float response = smoothstep(0.05, 0.5, luminance);\\n  color = mix(color, gl_FragColor.rgb, pow(response, 2.0));\\n\\n  gl_FragColor = vec4(color, 1.0);\\n\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/postprocessing/CustomPostPass.frag\n ** module id = 51\n ** module chunks = 1\n **/","module.exports = TweenMax;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"TweenMax\"\n ** module id = 52\n ** module chunks = 1\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'rng'\n  TweenMax = require 'TweenMax'\n\n  Colors = require 'app/components/Colors'\n\n  # should not be a dependency.\n  Audio = require 'app/components/Audio'\n\n  ShaderVertex = require 'app/shaders/BasicNoise.vert'\n  ShaderFragement = require 'app/shaders/BasicNoise.frag'\n\n  class AnimatedObject\n    @circleGeom = new THREE.CircleGeometry( 10, 30, 0, Math.PI * 2 )\n    @ringGeom = new THREE.RingGeometry( 10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2 )\n    @ringGeom2 = new THREE.RingGeometry( 10 - 1, 10, 30, 1, 0, Math.PI * 2 )\n\n    @properties:\n      size: {name: 'size', label: 'size', val: 80}\n      outlineWidth: {name: 'outlineWidth', label: 'outline width', val: 2}\n      drawOutline: {name: 'drawOutline', label: 'draw outline', val: true}\n      drawCircle: {name: 'drawCircle', label: 'draw circle', val: false}\n      color: {name: 'color', label: 'color', val: false}\n      fillColor: {name: 'fillColor', label: 'fill color', val: false}\n      delay: {name: 'delay', label: 'delay', val: 0}\n      duration: {name: 'duration', label: 'duration', val: 0.5}\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      randRotZ: {name: 'randRotZ', label: 'random rotation z', val: 0}\n      randScaleX: {name: 'randScaleX', label: 'random scale x', val: 0}\n      randScaleY: {name: 'randScaleY', label: 'random scale y', val: 0}\n\n    constructor: (@values = {}, time = 0) ->\n      for key, prop of AnimatedObject.properties\n        if !@values[key]?\n          @values[key] = prop.val\n\n      @container = new THREE.Object3D()\n      @container.scale.set(0.001,0.001,0.001)\n      @container.position.set(@values.x, @values.y, @values.z)\n      @container.rotation.set(0, 0, @values.randRotZ)\n      @materials = []\n      @start = Date.now()\n\n      @offset = new THREE.Vector3()\n      @velocity = new THREE.Vector3()\n      @weight = Math.random() * 0.5 + 0.5\n      @direction = new THREE.Vector3(Math.random() * 2 - 1, Math.random() * 2 - 1, 0)\n      @speed = 0\n      @animatedProperties =\n        scale: 0.001\n      @timeline = new TimelineMax()\n      # First value\n      tween = TweenLite.to(@animatedProperties, 0, {scale: 0.00001, ease: Linear.easeNone})\n      @timeline.add(tween, 0)\n      # Middle\n      tween = TweenLite.to(@animatedProperties, @values.duration, {scale: 1, delay: @values.delay, ease: Cubic.easeOut})\n      @timeline.add(tween)\n\n      # Stay for a while\n      tween = TweenLite.to(@animatedProperties, @values.duration * 0.5, {scale: 1, ease: Cubic.easeOut})\n      @timeline.add(tween)\n\n      # End\n      tween = TweenLite.to(@animatedProperties, @values.duration, {scale: 0.00001, ease: Cubic.easeIn})\n      @timeline.add(tween)\n\n      #if @values.drawOutline then @renderOutline(@values.size, @values.color, @values.outlineWidth)\n      #if @values.drawCircle then @renderCircle(@values.size, @values.fillColor)\n      @renderCircle(@values.size, @values.fillColor)\n\n    getGeometry: () ->\n      return AnimatedObject.circleGeom\n\n    getGeometryOutline: (outlineWidth) ->\n      if outlineWidth < 1 then return AnimatedObject.ringGeom\n      return AnimatedObject.ringGeom2\n\n    destroy: () ->\n      @timeline.clear()\n\n      for child in @container.children\n        @container.remove(child)\n\n      @container = null\n\n    getMaterial: (color) ->\n      uniforms = {\n        time: {\n          type: 'f',\n          value: 0.0\n        },\n        seed: {\n          type: 'f',\n          value: Math.random() * 1000\n        },\n        strength: {\n          type: 'f',\n          value: 0.2\n        },\n        color: {\n          type: 'c',\n          value: color\n        }\n      }\n      material = new THREE.ShaderMaterial({\n        vertexShader: ShaderVertex,\n        fragmentShader: ShaderFragement,\n        uniforms: uniforms,\n        transparent: true,\n        depthWrite: false,\n        depthTest: false\n        })\n\n      #material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0x009900, shininess: 30, shading: THREE.FlatShading })\n      material.blending = THREE.AdditiveBlending\n      return material\n\n    update: (seconds, progression) ->\n      #if Audio.instance.high > 0.002\n      #  @speed += Audio.instance.high\n      #console.log Audio.instance.high\n\n      #if Math.random() > 0.9 && Audio.instance.high > 0.09\n      #  @velocity.add(@direction.clone().multiplyScalar(Audio.instance.high * 12 * @weight))\n      @container.position.add(@velocity)\n\n      @velocity = @velocity.multiplyScalar(0.94)\n\n      timeDiff = Date.now() - @start\n      for material in @materials\n        material.uniforms['time'].value = 0.00025 * ( timeDiff )\n        material.uniforms['strength'].value = window.audio.mid\n\n      scale = @animatedProperties.scale * @values.size * 0.1\n      @container.scale.set(scale * (1 + @values.randScaleX), scale * (1 + @values.randScaleY), scale)\n\n    renderCircle: (size, color) =>\n      material = @getMaterial(color)\n      @materials.push(material)\n\n      object = new THREE.Mesh(@getGeometry() , material )\n      @container.add( object )\n\n    renderOutline: (size, color, outlineWidth) =>\n      geom = @getGeometryOutline(outlineWidth)\n\n      material = @getMaterial(color)\n      @materials.push(material)\n      object = new THREE.Mesh( geom, material )\n      @container.add( object )\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedObject.coffee\n **/"],"sourceRoot":""}