{"version":3,"sources":["webpack:///App.js","webpack:///webpack/bootstrap 929848ddacda38fa6939?0a35","webpack:///./src/scripts/app/App.coffee","webpack:///./src/scripts/vendors/three.js-extras/shaders/CopyShader.js","webpack:///external \"THREE\"","webpack:///external \"TweenTime.Core\"","webpack:///./src/scripts/app/components/SceneManager.coffee","webpack:///./src/scripts/app/components/Shaders.coffee","webpack:///./src/scripts/app/components/Background.coffee","webpack:///./src/scripts/app/components/PostFX.coffee","webpack:///./src/scripts/app/components/ElementFactory.coffee","webpack:///./src/scripts/app/components/DataNormalizer.coffee","webpack:///./src/scripts/app/elements/Particles.coffee","webpack:///./src/scripts/app/elements/OrganizedChaos.coffee","webpack:///external \"_\"","webpack:///external {\"root\":\"signals\",\"commonjs\":\"./signals\",\"amd\":\"signals\"}","webpack:///./src/scripts/app/data.json","webpack:///./src/scripts/bower_components/acoustic.js/dist/acoustic.min.js","webpack:///./src/scripts/app/elements/Global.coffee","webpack:///./src/scripts/app/postprocessing/GlitchPass2.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/EffectComposer.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/MaskPass.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/BloomPass.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/ShaderPass.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/RenderPass.js","webpack:///./src/scripts/app/postprocessing/CustomPostPass.js","webpack:///./src/scripts/vendors/three.js-extras/shaders/FXAAShader.js","webpack:///./src/scripts/vendors/three.js-extras/shaders/ConvolutionShader.js","webpack:///./src/scripts/app/shaders/DigitalGlitch2.js","webpack:///./src/scripts/app/elements/Lines.coffee","webpack:///./src/scripts/app/elements/Camera.coffee","webpack:///./src/scripts/app/elements/Circles.coffee","webpack:///./src/scripts/app/elements/Boxes.coffee","webpack:///./src/scripts/app/elements/SingleObject.coffee","webpack:///./src/scripts/app/elements/Circle.coffee","webpack:///./src/scripts/app/elements/ElementBase.coffee","webpack:///./src/scripts/app/components/Colors.coffee","webpack:///./src/scripts/app/geometries/CircleGeometry2.js","webpack:///./src/scripts/bower_components/rng-js/rng.js?2b54","webpack:///./src/scripts/bower_components/rng-js/rng.js","webpack:///./src/scripts/app/shaders/Basic.vert","webpack:///./src/scripts/app/shaders/Line.frag","webpack:///./src/scripts/app/shaders/BasicNoise.vert","webpack:///./src/scripts/app/shaders/BasicNoise.frag","webpack:///./src/scripts/app/elements/AnimatedLine.coffee","webpack:///./src/scripts/app/elements/SpreadedObjects.coffee","webpack:///./src/scripts/app/elements/AnimatedCircle.coffee","webpack:///./src/scripts/app/elements/AnimatedBox.coffee","webpack:///./src/scripts/app/geometries/RingGeometry2.js","webpack:///./src/scripts/app/postprocessing/CustomPostPass.vert","webpack:///./src/scripts/app/postprocessing/CustomPostPass.frag","webpack:///external \"TweenMax\"","webpack:///./src/scripts/app/elements/AnimatedObject.coffee"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","bind","fn","me","apply","arguments","require","Acoustic","App","Background","DataNormalizer","ElementFactory","OrganizedChaos","Particles","PostFX","SceneManager","Shaders","THREE","TweenTime","dataJson","window","options","$container","audio_url","conf","container","light1","size","this","animate","onWindowResize","updateCameraAspect","onAudioLoaded","play","onTimerSeeked","onTimerStatusChanged","autoplay","shaders","audio","onCanPlay","factory","JSON","parse","settings","data","normalizeData","tweenTime","timer","statusChanged","add","seeked","time","seek","getScreenSize","camera","PerspectiveCamera","width","height","position","z","activeCamera","scene","Scene","fog","FogExp2","sceneManager","Date","now","$","get","containerWebgl","append","renderer","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","setClearColor","DirectionalLight","set","appendChild","domElement","addEventListener","postfx","prototype","is_playing","toggleClass","pause","addClass","console","log","SCREEN_HEIGHT","SCREEN_WIDTH","propertieswidth","timelineheight","innerWidth","innerHeight","editorEnabled","hasClass","aspect","updateProjectionMatrix","resize","requestAnimationFrame","update","render","delta","newTime","particles","chaos","lookAt","undefined","CopyShader","uniforms","tDiffuse","type","value","opacity","vertexShader","join","fragmentShader","Core","Signals","_","defaultCamera","updated","timestamp","el","i","item","len","ref","seconds","should_exist","length","start","end","object","create","values","_data","isDirtyObject","parent","remove","classObject","getTypeClass","isCamera","renderModel","Global","LineFragement","ShaderVertex","blue","j","mat","num_shaders","red","shadersWhite","shadersRed","shadersBlue","simpleMaterial","MeshBasicMaterial","color","shading","FlatShading","side","DoubleSide","simpleMaterialRed","simpleMaterialBlue","createMaterialLine","push","COLOR_WHITE","COLOR_RED","COLOR_BLUE","force","audioData","bassSensibility","globalValues","highSensibility","midSensibility","results","shader","percent","Math","max","speed","random","global","filters","bass","timeDomainRMS","mid","high","autoAnimate","getMaterialLine","animated","floor","material","Color","fogColor","fogDensity",0.2045,"ShaderMaterial","transparent","depthWrite","depthTest","blending","AdditiveBlending","bg","bgMat","texture","ImageUtils","loadTexture","wrapS","wrapT","RepeatWrapping","repeat","map","Mesh","PlaneGeometry","dpr","resolution","autoClear","RenderPass","renderTargetParameters","minFilter","LinearFilter","magFilter","format","RGBFormat","stencilBufer","renderTarget","WebGLRenderTarget","effectFXAA","ShaderPass","FXAAShader","bloom","BloomPass","glitchPass","GlitchPass2","intensity","tScratch","Vector2","customPass","CustomPostPass","renderToScreen","composer","EffectComposer","addPass","reset","clear","Boxes","Camera","Circle","Circles","Lines","SingleObject","extend","properties","key","val","elements","Chaos","Box","itemType","getTypeProperties","itemName","element_class","prop","prop_definition","keys","warn","normalizeItem","data_item","existing_prop","key2","new_prop","static_prop","static_properties","value2","find","name","group","Colors","values1","index","geom","num_childs","ref1","Object3D","items","scale","MeshPhongMaterial","ambient","specular","shininess","circleGeom","ringGeom","x","y","numItems","parseInt","CircleGeometry","PI","RingGeometry","label","triggerRebuild","current","volume","child","ctor","constructor","hasProp","__super__","hasOwnProperty","CircleGeometry2","ElementBase","RNG","ShaderFragement","superClass","build","lineGeom","ringGeom2","triGeom","squareGeom","TYPE_LINE","TYPE_SQUARE","TYPE_CIRCLE","TYPE_TRI","seed","depth","spread","spreadY","maxChilds","horizontalSymmetry","min","verticalSymmetry","rotationX","rotationY","rotationZ","rotationRandX","rotationRandY","rotationRandZ","circles","squares","tri","lineWidth","lineWidthRand","lineHeight","lineHeightRand","materialRed","materialBlue","materialAnimated","getDefaultProperties","rebuild","empty","getItemType","rng","getItemColor","itemColor","geomMerge","ii","itemMesh","k","offset","pos2","posX","posY","rnd","rngChilds","rngColor","rngHorizontalSymmetry","rngRotationX","rngRotationY","rngRotationZ","rngScale","rngScaleLine","rngScaleLineHeight","rngScaleSquare","rngShaderAnim","rngSpacing","rngType","rngVerticalSymmetry","rngX","rngY","rotation","spacing","spreadY_half","spread_half","Vector3","Geometry","multiplyScalar","addItem","clone","normalize","matrixAutoUpdate","item2","item2Container","quaternion","Quaternion","setFromAxisAngle","setFromQuaternion","copy","updateMatrix","merge","matrix","multiply","getMaterial","strength","needs_rebuild","valueChanged","destroy","children","t","e","n","a","r","s","u","o","f","Error","code",1,"TypeError","fftSize","getDefaultFilters","initAudio","currentTime","playing","context","AudioContext","webkitAudioContext","source","createMediaElementSource","analyser","createAnalyser","samples","frequencyBinCount","delay","createDelay","createDelayNode","delayTime","sampleRate","timeDomainData","Uint8Array","connect","destination","initFilters","Audio","smoothingTimeConstant","getByteTimeDomainData","rms","Object","forEach","analyserNode","abs","sqrt","paused","getValue","biquadFilter","createBiquadFilter","frequency","Q","gainNode","createGain","createGainNode","gain","dt_size","DigitalGlitch2","error","UniformsUtils","generateHeightmap","enabled","needsSwap","OrthographicCamera","quad","goWild","curF","generateTrigger","writeBuffer","readBuffer","randFloat","randX","randInt","data_arr","Float32Array","DataTexture","FloatType","NearestFilter","needsUpdate","flipY","parameters","stencilBuffer","renderTarget1","renderTarget2","passes","copyPass","swapBuffers","tmp","pass","insertPass","splice","maskActive","il","stencilFunc","NOTEQUAL","EQUAL","MaskPass","ClearMaskPass","inverse","colorMask","depthMask","writeValue","clearValue","enable","STENCIL_TEST","stencilOp","REPLACE","ALWAYS","clearStencil","KEEP","disable","kernelSize","sigma","pars","renderTargetX","renderTargetY","copyShader","copyUniforms","materialCopy","ConvolutionShader","convolutionShader","convolutionUniforms","blurx","buildKernel","materialConvolution","defines","KERNEL_SIZE_FLOAT","toFixed","KERNEL_SIZE_INT","blurX","blurY","textureID","overrideMaterial","clearColor","clearAlpha","oldClearColor","oldClearAlpha","getClearColor","getClearAlpha","CustomPostShader","nIntensity","noiseIntensity","uImageIncrement","cKernel","gauss","exp","sum","halfWidth","kMaxKernelSize","ceil","Array","tDisp","byp","amount","angle","seed_x","seed_y","distortion_x","distortion_y","col_s","AnimatedLine","SpreadedObjects","getItemClass","target","target_x","target_y","target_z","fov","AnimatedCircle","AnimatedBox","getGeometry","timeline","TimelineMax","rotX","rotY","rotZ","scaleX","scaleY","scaleZ","geometry","degreeToRadian","RingGeometry2","innerRadius","inner_radius","pi2","dynamic","vertices","verticesNeedUpdate","dispose","cache","buildCache","has_changed","new_val","degree","items2","radius","segments","thetaStart","thetaLength","uvs","center","centerUV","vertex","segment","cos","sin","faces","Face3","faceVertexUvs","computeFaceNormals","boundingSphere","Sphere","RC4","mix","toString","uniform","nextByte","stringify","_normal","_state","getStringBytes","string","output","charCodeAt","bytes","concat","reverse","_swap","input","next","BYTES","pow","normal","exponential","poisson","mean","L","gamma","d","v","x2","roller","expr","parts","split","slice","dice","parseFloat","sides","mod","total","AnimatedObject","PlaneBufferGeometry","noOutline","getGeometryOutline","outlineWidth","progression","timeDiff","velocity","materials","animatedProperties","TweenMax","totalDuration","items_position","randY","randZ","randRotZ","randScaleX","randScaleY","circleRadius","circleRadiusMax","percent_color","border_radius","draw_circle","draw_outline","duration","fillColor","itemClass","pos","rndtype","rngAnimation","rngOutline","getRandomPosition","drawOutline","drawCircle","len1","ref2","outerRadius","thetaSegments","phiSegments","radiusStep","uv","thetaSegment","v1","v2","v3","tween","renderOutline","renderCircle","weight","direction","TweenLite","to","ease","Linear","easeNone","Cubic","easeOut","easeIn"],"mappings":"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","file":"App.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Acoustic, App, Background, DataNormalizer, ElementFactory, OrganizedChaos, Particles, PostFX, SceneManager, Shaders, THREE, TweenTime, dataJson;\n\t  THREE = __webpack_require__(2);\n\t  TweenTime = __webpack_require__(3);\n\t  Acoustic = __webpack_require__(18);\n\t  Shaders = __webpack_require__(7);\n\t  Background = __webpack_require__(8);\n\t  PostFX = __webpack_require__(9);\n\t  SceneManager = __webpack_require__(6);\n\t  ElementFactory = __webpack_require__(10);\n\t  DataNormalizer = __webpack_require__(11);\n\t  dataJson = __webpack_require__(17);\n\t  Particles = __webpack_require__(12);\n\t  OrganizedChaos = __webpack_require__(13);\n\t  return window.App = App = (function() {\n\t    function App(options) {\n\t      var $container, audio_url, conf, container, light1, size;\n\t      if (options == null) {\n\t        options = {};\n\t      }\n\t      this.animate = bind(this.animate, this);\n\t      this.onWindowResize = bind(this.onWindowResize, this);\n\t      this.updateCameraAspect = bind(this.updateCameraAspect, this);\n\t      this.onAudioLoaded = bind(this.onAudioLoaded, this);\n\t      this.play = bind(this.play, this);\n\t      this.onTimerSeeked = bind(this.onTimerSeeked, this);\n\t      this.onTimerStatusChanged = bind(this.onTimerStatusChanged, this);\n\t      window.updateCameraAspect = this.updateCameraAspect;\n\t      this.autoplay = false;\n\t      if (options.autoplay != null) {\n\t        this.autoplay = options.autoplay;\n\t      }\n\t      this.shaders = new Shaders();\n\t      audio_url = 'assets/08 - Space Tron On The Grid.mp3';\n\t      this.audio = new Acoustic(audio_url, {\n\t        onCanPlay: this.onAudioLoaded\n\t      });\n\t      window.audio = this.audio;\n\t      this.factory = new ElementFactory();\n\t      conf = JSON.parse(dataJson);\n\t      this.settings = conf.settings;\n\t      this.data = DataNormalizer.normalizeData(conf.data, this.factory);\n\t      this.tweenTime = new TweenTime(this.data);\n\t      this.tweenTime.timer.statusChanged.add(this.onTimerStatusChanged);\n\t      this.tweenTime.timer.seeked.add(this.onTimerSeeked);\n\t      if (options.time != null) {\n\t        this.tweenTime.timer.seek([options.time]);\n\t      } else if (this.settings.time) {\n\t        this.tweenTime.timer.seek([this.settings.time]);\n\t      }\n\t      size = this.getScreenSize();\n\t      this.camera = new THREE.PerspectiveCamera(45, size.width / size.height, 1, 2000);\n\t      this.camera.position.z = 600;\n\t      window.activeCamera = this.camera;\n\t      this.scene = new THREE.Scene();\n\t      this.scene.fog = new THREE.FogExp2(0x111111, 0.0045);\n\t      this.sceneManager = new SceneManager(this.tweenTime, this.data, this.scene, this.camera, this.factory);\n\t      this.time = Date.now() * 0.0001;\n\t      $container = $('<div class=\"experiment\"></div>');\n\t      container = $container.get(0);\n\t      this.containerWebgl = container;\n\t      $('body').append($container);\n\t      this.renderer = new THREE.WebGLRenderer({\n\t        antialias: false,\n\t        alpha: false\n\t      });\n\t      this.renderer.setPixelRatio(window.devicePixelRatio);\n\t      this.renderer.setSize(size.width, size.height);\n\t      this.renderer.setClearColor(0x111111, 1);\n\t      light1 = new THREE.DirectionalLight(0xffffff, 0.4);\n\t      light1.position.set(100, 300, 700);\n\t      this.scene.add(light1);\n\t      container.appendChild(this.renderer.domElement);\n\t      window.addEventListener('resize', this.onWindowResize, false);\n\t      this.postfx = new PostFX(this.scene, this.camera, this.renderer, size);\n\t      this.onWindowResize();\n\t      this.animate();\n\t    }\n\t\n\t    App.prototype.onTimerStatusChanged = function(is_playing) {\n\t      $('body').toggleClass('is-stopped', !is_playing);\n\t      if (is_playing) {\n\t        return this.audio.play();\n\t      } else {\n\t        return this.audio.pause();\n\t      }\n\t    };\n\t\n\t    App.prototype.onTimerSeeked = function(time) {\n\t      return this.audio.seek(time / 1000);\n\t    };\n\t\n\t    App.prototype.play = function() {\n\t      this.tweenTime.timer.play();\n\t      return $('body').addClass('is-playing');\n\t    };\n\t\n\t    App.prototype.onAudioLoaded = function() {\n\t      console.log(\"audio loaded\");\n\t      $('body').addClass('is-audio-loaded');\n\t      if (this.autoplay) {\n\t        return this.play();\n\t      }\n\t    };\n\t\n\t    App.prototype.getScreenSize = function() {\n\t      var SCREEN_HEIGHT, SCREEN_WIDTH, propertieswidth, timelineheight;\n\t      SCREEN_WIDTH = window.innerWidth;\n\t      SCREEN_HEIGHT = window.innerHeight;\n\t      if (window.editorEnabled) {\n\t        timelineheight = 295;\n\t        if ($('body').hasClass('timeline-is-closed')) {\n\t          timelineheight = 95;\n\t        }\n\t        propertieswidth = 279;\n\t        if ($('body').hasClass('properties-is-closed')) {\n\t          propertieswidth = 0;\n\t        }\n\t        SCREEN_HEIGHT -= timelineheight;\n\t        SCREEN_WIDTH -= propertieswidth;\n\t      }\n\t      return {\n\t        width: SCREEN_WIDTH,\n\t        height: SCREEN_HEIGHT\n\t      };\n\t    };\n\t\n\t    App.prototype.updateCameraAspect = function(camera, size) {\n\t      if (size == null) {\n\t        size = false;\n\t      }\n\t      if (size === false) {\n\t        size = this.getScreenSize();\n\t      }\n\t      camera.aspect = size.width / size.height;\n\t      return camera.updateProjectionMatrix();\n\t    };\n\t\n\t    App.prototype.onWindowResize = function() {\n\t      var size;\n\t      size = this.getScreenSize();\n\t      this.updateCameraAspect(this.camera, size);\n\t      this.updateCameraAspect(window.activeCamera, size);\n\t      this.renderer.setSize(size.width, size.height);\n\t      return this.postfx.resize(size.width, size.height);\n\t    };\n\t\n\t    App.prototype.animate = function() {\n\t      requestAnimationFrame(this.animate);\n\t      this.audio.update();\n\t      this.shaders.update();\n\t      return this.render();\n\t    };\n\t\n\t    App.prototype.render = function() {\n\t      var delta, newTime;\n\t      newTime = Date.now() * 0.0001;\n\t      delta = newTime - this.time;\n\t      if (this.particles) {\n\t        this.particles.update();\n\t      }\n\t      if (this.chaos) {\n\t        this.chaos.update();\n\t      }\n\t      this.camera.lookAt(this.scene.position);\n\t      this.postfx.render(delta);\n\t      return this.time = newTime;\n\t    };\n\t\n\t    return App;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Full-screen textured quad shader\n\t */\n\t\n\tTHREE.CopyShader = {\n\t\n\t\tuniforms: {\n\t\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\t\n\t\t},\n\t\n\t\tvertexShader: [\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tfragmentShader: [\n\t\n\t\t\t\"uniform float opacity;\",\n\t\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\t\"gl_FragColor = opacity * texel;\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\")\n\t\n\t};\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = THREE;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = TweenTime.Core;\n\n/***/ },\n/* 4 */,\n/* 5 */,\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var SceneManager, Signals, _;\n\t  _ = __webpack_require__(15);\n\t  Signals = __webpack_require__(16);\n\t  return SceneManager = (function() {\n\t    function SceneManager(tweenTime, data, scene, defaultCamera, factory) {\n\t      this.tweenTime = tweenTime;\n\t      this.data = data;\n\t      this.scene = scene;\n\t      this.defaultCamera = defaultCamera;\n\t      this.factory = factory;\n\t      this.update = bind(this.update, this);\n\t      this.timer = this.tweenTime.timer;\n\t      this.timer.updated.add(this.update);\n\t      this.update(0);\n\t    }\n\t\n\t    SceneManager.prototype.update = function(timestamp) {\n\t      var activeCamera, el, i, item, len, ref, seconds, should_exist, type;\n\t      activeCamera = this.defaultCamera;\n\t      seconds = timestamp / 1000;\n\t      ref = this.data;\n\t      for (i = 0, len = ref.length; i < len; i++) {\n\t        item = ref[i];\n\t        should_exist = seconds >= item.start && seconds <= item.end ? true : false;\n\t        if (!item.object) {\n\t          type = item.type;\n\t          el = this.factory.create(type, item.values, seconds - item.start);\n\t          item.object = el;\n\t          if (el.container) {\n\t            el.container._data = item;\n\t          }\n\t        }\n\t        if ((item.object && should_exist === false) || item.isDirtyObject) {\n\t          item.isDirtyObject = false;\n\t          if (item.object && item.object.container && item.object.container.parent) {\n\t            this.scene.remove(item.object.container);\n\t          }\n\t        }\n\t        if (!item.classObject) {\n\t          item.classObject = this.factory.getTypeClass(item.type);\n\t        }\n\t        if (should_exist && item.object.container && !item.object.container.parent) {\n\t          this.scene.add(item.object.container);\n\t        }\n\t        if (item.object && item.object.isCamera) {\n\t          activeCamera = item.object.container;\n\t          window.updateCameraAspect(activeCamera);\n\t        }\n\t        if (item.object) {\n\t          item.object.update(seconds - item.start, item.values);\n\t        }\n\t      }\n\t      window.activeCamera = activeCamera;\n\t      if (window.renderModel) {\n\t        return window.renderModel.camera = activeCamera;\n\t      }\n\t    };\n\t\n\t    return SceneManager;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Global, LineFragement, ShaderVertex, Shaders, THREE;\n\t  THREE = __webpack_require__(2);\n\t  Global = __webpack_require__(19);\n\t  ShaderVertex = __webpack_require__(41);\n\t  LineFragement = __webpack_require__(42);\n\t  return Shaders = (function() {\n\t    Shaders.COLOR_WHITE = 0;\n\t\n\t    Shaders.COLOR_RED = 1;\n\t\n\t    Shaders.COLOR_BLUE = 2;\n\t\n\t    function Shaders() {\n\t      var blue, i, j, mat, num_shaders, red, ref;\n\t      window.shaders = this;\n\t      this.shaders = [];\n\t      this.shadersWhite = [];\n\t      this.shadersRed = [];\n\t      this.shadersBlue = [];\n\t      red = 0xe66c00;\n\t      blue = 0x27acef;\n\t      num_shaders = 50;\n\t      this.simpleMaterial = new THREE.MeshBasicMaterial({\n\t        color: 0xdddddd,\n\t        shading: THREE.FlatShading,\n\t        side: THREE.DoubleSide\n\t      });\n\t      this.simpleMaterialRed = new THREE.MeshBasicMaterial({\n\t        color: red,\n\t        shading: THREE.FlatShading,\n\t        side: THREE.DoubleSide\n\t      });\n\t      this.simpleMaterialBlue = new THREE.MeshBasicMaterial({\n\t        color: blue,\n\t        shading: THREE.FlatShading,\n\t        side: THREE.DoubleSide\n\t      });\n\t      for (i = j = 0, ref = num_shaders; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n\t        mat = this.createMaterialLine(0xdddddd);\n\t        this.shaders.push(mat);\n\t        this.shadersWhite.push(mat);\n\t        mat = this.createMaterialLine(red);\n\t        this.shaders.push(mat);\n\t        this.shadersRed.push(mat);\n\t        mat = this.createMaterialLine(blue);\n\t        this.shaders.push(mat);\n\t        this.shadersBlue.push(mat);\n\t      }\n\t    }\n\t\n\t    Shaders.prototype.update = function(force) {\n\t      var audioData, bassSensibility, globalValues, highSensibility, j, len, midSensibility, ref, results, shader;\n\t      if (force == null) {\n\t        force = 0;\n\t      }\n\t      ref = this.shaders;\n\t      results = [];\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        shader = ref[j];\n\t        shader.uniforms.percent.value = Math.max(0, shader.uniforms.percent.value - shader.speed * 0.03);\n\t        if (shader.uniforms.percent.value < 0.02) {\n\t          if (force && Math.random() < force) {\n\t            results.push(shader.uniforms.percent.value = 2);\n\t          } else if (Math.random() < 0.02) {\n\t            bassSensibility = 0;\n\t            midSensibility = 0;\n\t            highSensibility = 0;\n\t            globalValues = false;\n\t            if (window.global && window.global.values) {\n\t              globalValues = window.global.values;\n\t              bassSensibility = globalValues.bassSensibility;\n\t              midSensibility = globalValues.midSensibility;\n\t              highSensibility = globalValues.highSensibility;\n\t            }\n\t            audioData = window.audio.data.filters;\n\t            if (audioData.bass.timeDomainRMS > bassSensibility || audioData.mid.timeDomainRMS > midSensibility || audioData.high.timeDomainRMS > highSensibility) {\n\t              shader.uniforms.percent.value = 2;\n\t            }\n\t            if (globalValues && Math.random() < globalValues.autoAnimate) {\n\t              results.push(shader.uniforms.percent.value = 2);\n\t            } else {\n\t              results.push(void 0);\n\t            }\n\t          } else {\n\t            results.push(void 0);\n\t          }\n\t        } else {\n\t          results.push(void 0);\n\t        }\n\t      }\n\t      return results;\n\t    };\n\t\n\t    Shaders.prototype.getMaterialLine = function(animated, color) {\n\t      var shaders;\n\t      if (animated === false) {\n\t        switch (color) {\n\t          case Shaders.COLOR_RED:\n\t            return this.simpleMaterialRed;\n\t          case Shaders.COLOR_BLUE:\n\t            return this.simpleMaterialBlue;\n\t        }\n\t        return this.simpleMaterial;\n\t      }\n\t      shaders = this.shadersWhite;\n\t      if (color === Shaders.COLOR_RED) {\n\t        shaders = this.shadersRed;\n\t      }\n\t      if (color === Shaders.COLOR_BLUE) {\n\t        shaders = this.shadersBlue;\n\t      }\n\t      return shaders[Math.floor(Math.random() * shaders.length)];\n\t    };\n\t\n\t    Shaders.prototype.createMaterialLine = function(color) {\n\t      var material, uniforms;\n\t      uniforms = {\n\t        percent: {\n\t          type: 'f',\n\t          value: 1.0\n\t        },\n\t        color: {\n\t          type: 'c',\n\t          value: new THREE.Color(color)\n\t        },\n\t        fogColor: {\n\t          type: \"c\",\n\t          value: new THREE.Color(0x111111)\n\t        },\n\t        fogDensity: {\n\t          type: \"f\",\n\t          0.2045: 0.2045\n\t        }\n\t      };\n\t      material = new THREE.ShaderMaterial({\n\t        vertexShader: ShaderVertex,\n\t        fragmentShader: LineFragement,\n\t        side: THREE.DoubleSide,\n\t        shading: THREE.FlatShading,\n\t        uniforms: uniforms,\n\t        transparent: true,\n\t        depthWrite: false,\n\t        depthTest: false,\n\t        fog: true\n\t      });\n\t      material.speed = Math.random() + 0.5;\n\t      material.blending = THREE.AdditiveBlending;\n\t      return material;\n\t    };\n\t\n\t    return Shaders;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Background, THREE;\n\t  THREE = __webpack_require__(2);\n\t  return Background = (function() {\n\t    function Background(scene) {\n\t      var bg, bgMat, texture;\n\t      this.scene = scene;\n\t      texture = THREE.ImageUtils.loadTexture('src/images/background.jpg');\n\t      texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n\t      texture.repeat.set(2, 2);\n\t      bgMat = new THREE.MeshBasicMaterial({\n\t        map: texture\n\t      });\n\t      bg = new THREE.Mesh(new THREE.PlaneGeometry(1600, 1600, 4, 4), bgMat);\n\t      bg.material.depthTest = false;\n\t      bg.material.depthWrite = false;\n\t      bg.position.set(0, 0, -10);\n\t      this.scene.add(bg);\n\t    }\n\t\n\t    return Background;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var PostFX, THREE;\n\t  THREE = __webpack_require__(2);\n\t  __webpack_require__(21);\n\t  __webpack_require__(22);\n\t  __webpack_require__(23);\n\t  __webpack_require__(24);\n\t  __webpack_require__(25);\n\t  __webpack_require__(20);\n\t  __webpack_require__(26);\n\t  __webpack_require__(1);\n\t  __webpack_require__(27);\n\t  __webpack_require__(28);\n\t  __webpack_require__(29);\n\t  return PostFX = (function() {\n\t    function PostFX(scene, camera, renderer, size) {\n\t      var dpr, renderModel, resolution;\n\t      this.scene = scene;\n\t      this.camera = camera;\n\t      this.renderer = renderer;\n\t      this.renderer.autoClear = false;\n\t      renderModel = new THREE.RenderPass(this.scene, this.camera);\n\t      window.renderModel = renderModel;\n\t      dpr = window.devicePixelRatio != null ? window.devicePixelRatio : 1;\n\t      this.renderTargetParameters = {\n\t        minFilter: THREE.LinearFilter,\n\t        magFilter: THREE.LinearFilter,\n\t        format: THREE.RGBFormat,\n\t        stencilBufer: false\n\t      };\n\t      this.renderTarget = new THREE.WebGLRenderTarget(size.width * dpr, size.height * dpr, this.renderTargetParameters);\n\t      this.effectFXAA = new THREE.ShaderPass(THREE.FXAAShader);\n\t      this.effectFXAA.uniforms['resolution'].value.set(1 / (size.width * dpr), 1 / (size.height * dpr));\n\t      this.bloom = new THREE.BloomPass(0.9, 25, 4);\n\t      this.glitchPass = new THREE.GlitchPass2();\n\t      this.glitchPass.intensity = 0.3;\n\t      this.glitchPass.uniforms.tScratch.value = THREE.ImageUtils.loadTexture(\"src/images/lensflare_dirt.jpg\");\n\t      resolution = new THREE.Vector2(size.width * dpr, size.height * dpr);\n\t      this.customPass = new THREE.CustomPostPass(0.55, resolution);\n\t      this.customPass.renderToScreen = true;\n\t      this.composer = new THREE.EffectComposer(this.renderer, this.renderTarget);\n\t      this.composer.setSize(size.width * dpr, size.height * dpr);\n\t      this.composer.addPass(renderModel);\n\t      this.composer.addPass(this.bloom);\n\t      this.composer.addPass(this.customPass);\n\t    }\n\t\n\t    PostFX.prototype.resize = function(SCREEN_WIDTH, SCREEN_HEIGHT) {\n\t      var dpr;\n\t      dpr = window.devicePixelRatio != null ? window.devicePixelRatio : 1;\n\t      this.renderTarget = new THREE.WebGLRenderTarget(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr, this.renderTargetParameters);\n\t      this.composer.reset(this.renderTarget);\n\t      this.effectFXAA.uniforms['resolution'].value.set(1 / (SCREEN_WIDTH * dpr), 1 / (SCREEN_HEIGHT * dpr));\n\t      return this.customPass.uniforms['resolution'].value.set(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr);\n\t    };\n\t\n\t    PostFX.prototype.render = function(delta) {\n\t      this.renderer.clear();\n\t      return this.composer.render(delta);\n\t    };\n\t\n\t    return PostFX;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Boxes, Camera, Circle, Circles, ElementFactory, Global, Lines, OrganizedChaos, SingleObject, extend;\n\t  Camera = __webpack_require__(31);\n\t  Global = __webpack_require__(19);\n\t  Circles = __webpack_require__(32);\n\t  Boxes = __webpack_require__(33);\n\t  Lines = __webpack_require__(30);\n\t  SingleObject = __webpack_require__(34);\n\t  Circle = __webpack_require__(35);\n\t  OrganizedChaos = __webpack_require__(13);\n\t  extend = function(object, properties) {\n\t    var key, val;\n\t    for (key in properties) {\n\t      val = properties[key];\n\t      if (typeof object[key] === 'object' && object[key] !== null) {\n\t        object[key] = extend({}, val);\n\t      } else {\n\t        object[key] = val;\n\t      }\n\t    }\n\t    return object;\n\t  };\n\t  ElementFactory = (function() {\n\t    function ElementFactory() {\n\t      this.getTypeClass = bind(this.getTypeClass, this);\n\t    }\n\t\n\t    ElementFactory.elements = {\n\t      Chaos: {\n\t        classObject: OrganizedChaos\n\t      },\n\t      Circles: {\n\t        classObject: Circles\n\t      },\n\t      Boxes: {\n\t        classObject: Boxes\n\t      },\n\t      Lines: {\n\t        classObject: Lines\n\t      },\n\t      Camera: {\n\t        classObject: Camera\n\t      },\n\t      Global: {\n\t        classObject: Global\n\t      },\n\t      Box: {\n\t        classObject: SingleObject\n\t      },\n\t      Circle: {\n\t        classObject: Circle\n\t      }\n\t    };\n\t\n\t    ElementFactory.prototype.getTypeClass = function(itemType) {\n\t      return ElementFactory.elements[itemType].classObject;\n\t    };\n\t\n\t    ElementFactory.getTypeProperties = function(itemName) {\n\t      var element_class, item, key, prop, prop_definition, properties, ref;\n\t      item = ElementFactory.elements[itemName];\n\t      if (item) {\n\t        element_class = item.classObject;\n\t        if (element_class) {\n\t          properties = [];\n\t          ref = item.classObject.properties;\n\t          for (key in ref) {\n\t            prop_definition = ref[key];\n\t            prop = extend({}, prop_definition);\n\t            prop.keys = [];\n\t            properties.push(prop);\n\t          }\n\t          console.log(properties);\n\t          return properties;\n\t        }\n\t      }\n\t    };\n\t\n\t    ElementFactory.prototype.create = function(itemName, values, time) {\n\t      var item;\n\t      item = ElementFactory.elements[itemName];\n\t      if (!item) {\n\t        console.warn(\"Can't create item: \" + itemName);\n\t        return false;\n\t      }\n\t      return new item.classObject(values);\n\t    };\n\t\n\t    return ElementFactory;\n\t\n\t  })();\n\t  return window.ElementFactory = ElementFactory;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var DataNormalizer, ElementFactory, _;\n\t  _ = __webpack_require__(15);\n\t  ElementFactory = __webpack_require__(10);\n\t  return DataNormalizer = (function() {\n\t    function DataNormalizer() {}\n\t\n\t    DataNormalizer.normalizeItem = function(data_item, factory) {\n\t      var existing_prop, key, key2, new_prop, static_prop, static_properties, value2;\n\t      if (!data_item.classObject) {\n\t        data_item.classObject = factory.getTypeClass(data_item.type);\n\t      }\n\t      static_properties = data_item.classObject.properties;\n\t      if (!static_properties) {\n\t        return;\n\t      }\n\t      for (key in static_properties) {\n\t        static_prop = static_properties[key];\n\t        existing_prop = _.find(data_item.properties, function(prop) {\n\t          return prop.name === static_prop.name;\n\t        });\n\t        if (!existing_prop) {\n\t          new_prop = {};\n\t          for (key2 in static_prop) {\n\t            value2 = static_prop[key2];\n\t            new_prop[key2] = value2;\n\t          }\n\t          new_prop.keys = [];\n\t          data_item.properties.push(new_prop);\n\t        }\n\t        if (existing_prop && !existing_prop.group && static_prop.group) {\n\t          existing_prop.group = static_prop.group;\n\t        }\n\t      }\n\t      return data_item;\n\t    };\n\t\n\t    DataNormalizer.normalizeData = function(data, factory) {\n\t      data = _.map(data, function(item) {\n\t        return DataNormalizer.normalizeItem(item, factory);\n\t      });\n\t      return data;\n\t    };\n\t\n\t    return DataNormalizer;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Colors, Particles, THREE, _;\n\t  _ = __webpack_require__(15);\n\t  THREE = __webpack_require__(2);\n\t  Colors = __webpack_require__(37);\n\t  return Particles = (function() {\n\t    Particles.circleGeom = new THREE.CircleGeometry(10, 30, 0, Math.PI * 2);\n\t\n\t    Particles.ringGeom = new THREE.RingGeometry(10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2);\n\t\n\t    Particles.properties = {\n\t      numItems: {\n\t        name: 'numItems',\n\t        label: 'num items',\n\t        val: 5,\n\t        triggerRebuild: true\n\t      }\n\t    };\n\t\n\t    function Particles(values1, time, index) {\n\t      var geom, i, item, j, key, material, num_childs, prop, ref, ref1;\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      if (index == null) {\n\t        index = 0;\n\t      }\n\t      ref = Particles.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      this.container = new THREE.Object3D();\n\t      if (index === 0) {\n\t        this.container.position.set(0, 0, 100);\n\t      }\n\t      this.items = [];\n\t      this.speed = Math.random() * 2 - 1;\n\t      this.scale = Math.random() * 2 + 0.1;\n\t      material = new THREE.MeshPhongMaterial({\n\t        ambient: 0x030303,\n\t        color: 0xdddddd,\n\t        specular: 0xffffff,\n\t        shininess: 10,\n\t        shading: THREE.FlatShading\n\t      });\n\t      material.blending = THREE.AdditiveBlending;\n\t      geom = Particles.circleGeom;\n\t      if (Math.random() < 0.7) {\n\t        geom = Particles.ringGeom;\n\t      }\n\t      this.el = new THREE.Mesh(geom, material);\n\t      if (index > 0) {\n\t        this.el.position.x = Math.random() * 60 + 10;\n\t        this.el.position.y = Math.random() * 60 + 10;\n\t        this.el.position.z = Math.random() * 60 + 10;\n\t      }\n\t      this.el.scale.set(this.scale, this.scale, this.scale);\n\t      this.container.add(this.el);\n\t      if (index < 5) {\n\t        for (i = j = 0, ref1 = this.values.numItems - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {\n\t          num_childs = 1;\n\t          if (Math.random() > 0.7) {\n\t            num_childs = parseInt(Math.random * 3, 10) + 1;\n\t          }\n\t          item = new Particles({\n\t            numItems: num_childs\n\t          }, 0, index + 1);\n\t          this.el.add(item.container);\n\t          this.items.push(item);\n\t        }\n\t      }\n\t    }\n\t\n\t    Particles.prototype.update = function(seconds, values, force) {\n\t      var current, item, j, len, ref, results, volume;\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      volume = window.audio.data.filters.mid.timeDomainRMS;\n\t      current = this.el.scale.x;\n\t      if (volume > 0.2 && Math.random() < 0.1) {\n\t        current += volume * 10;\n\t      }\n\t      current = current + (this.scale - current) * 0.992;\n\t      this.el.scale.set(current, current, current);\n\t      ref = this.items;\n\t      results = [];\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        item = ref[j];\n\t        results.push(item.update());\n\t      }\n\t      return results;\n\t    };\n\t\n\t    return Particles;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var CircleGeometry2, Colors, ElementBase, OrganizedChaos, RNG, ShaderFragement, ShaderVertex, Shaders, THREE, _;\n\t  _ = __webpack_require__(15);\n\t  THREE = __webpack_require__(2);\n\t  RNG = __webpack_require__(39);\n\t  ElementBase = __webpack_require__(36);\n\t  Colors = __webpack_require__(37);\n\t  Shaders = __webpack_require__(7);\n\t  CircleGeometry2 = __webpack_require__(38);\n\t  ShaderVertex = __webpack_require__(43);\n\t  ShaderFragement = __webpack_require__(44);\n\t  return OrganizedChaos = (function(superClass) {\n\t    extend(OrganizedChaos, superClass);\n\t\n\t    OrganizedChaos.lineGeom = new THREE.PlaneGeometry(100, 1);\n\t\n\t    OrganizedChaos.circleGeom = new THREE.CircleGeometry(10, 30, 0, Math.PI * 2);\n\t\n\t    OrganizedChaos.ringGeom2 = new CircleGeometry2(10, 30, 0, Math.PI * 2);\n\t\n\t    OrganizedChaos.triGeom = new CircleGeometry2(10, 3, 0, Math.PI * 2);\n\t\n\t    OrganizedChaos.squareGeom = new CircleGeometry2(10, 4, 0, Math.PI * 2);\n\t\n\t    OrganizedChaos.TYPE_LINE = 0;\n\t\n\t    OrganizedChaos.TYPE_SQUARE = 1;\n\t\n\t    OrganizedChaos.TYPE_CIRCLE = 2;\n\t\n\t    OrganizedChaos.TYPE_TRI = 3;\n\t\n\t    OrganizedChaos.properties = {\n\t      numItems: {\n\t        name: 'numItems',\n\t        label: 'num items',\n\t        val: 10,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      seed: {\n\t        name: 'seed',\n\t        label: 'seed',\n\t        val: 10042,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      depth: {\n\t        name: 'depth',\n\t        label: 'depth',\n\t        val: 20,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      spread: {\n\t        name: 'spread',\n\t        label: 'spread',\n\t        val: 300,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      spreadY: {\n\t        name: 'spreadY',\n\t        label: 'spreadY',\n\t        val: 300,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      maxChilds: {\n\t        name: 'maxChilds',\n\t        label: 'maxChilds',\n\t        val: 8,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      horizontalSymmetry: {\n\t        name: 'horizontalSymmetry',\n\t        label: 'horizontalSymmetry',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      verticalSymmetry: {\n\t        name: 'verticalSymmetry',\n\t        label: 'verticalSymmetry',\n\t        val: 0,\n\t        min: 0,\n\t        max: 1,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0,\n\t        group: \"position\"\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0,\n\t        group: \"position\"\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0,\n\t        group: \"position\"\n\t      },\n\t      rotationX: {\n\t        name: 'rotationX',\n\t        label: 'x',\n\t        val: 0,\n\t        min: -2,\n\t        max: 2,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      rotationY: {\n\t        name: 'rotationY',\n\t        label: 'y',\n\t        val: 0,\n\t        min: -2,\n\t        max: 2,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      rotationZ: {\n\t        name: 'rotationZ',\n\t        label: 'z',\n\t        val: 0,\n\t        min: -2,\n\t        max: 2,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      rotationRandX: {\n\t        name: 'rotationRandX',\n\t        label: 'rand x',\n\t        val: 0,\n\t        min: 0,\n\t        max: 1,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      rotationRandY: {\n\t        name: 'rotationRandY',\n\t        label: 'rand y',\n\t        val: 0,\n\t        min: 0,\n\t        max: 1,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      rotationRandZ: {\n\t        name: 'rotationRandZ',\n\t        label: 'rand z',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      circles: {\n\t        name: 'circles',\n\t        label: 'circles',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"geometry\"\n\t      },\n\t      squares: {\n\t        name: 'squares',\n\t        label: 'squares',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"geometry\"\n\t      },\n\t      tri: {\n\t        name: 'tri',\n\t        label: 'tri',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"geometry\"\n\t      },\n\t      lineWidth: {\n\t        name: 'lineWidth',\n\t        label: 'line width',\n\t        val: 1,\n\t        triggerRebuild: true,\n\t        group: \"line\"\n\t      },\n\t      lineWidthRand: {\n\t        name: 'lineWidthRand',\n\t        label: 'line width randomness',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"line\"\n\t      },\n\t      lineHeight: {\n\t        name: 'lineHeight',\n\t        label: 'line height',\n\t        val: 1,\n\t        triggerRebuild: true,\n\t        group: \"line\"\n\t      },\n\t      lineHeightRand: {\n\t        name: 'lineHeightRand',\n\t        label: 'line height randomness',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"line\"\n\t      },\n\t      materialRed: {\n\t        name: 'materialRed',\n\t        label: 'percent red',\n\t        val: 0,\n\t        min: 0,\n\t        max: 1,\n\t        triggerRebuild: true,\n\t        group: \"material\"\n\t      },\n\t      materialBlue: {\n\t        name: 'materialBlue',\n\t        label: 'percent blue',\n\t        val: 0,\n\t        min: 0,\n\t        max: 1,\n\t        triggerRebuild: true,\n\t        group: \"material\"\n\t      },\n\t      materialAnimated: {\n\t        name: 'materialAnimated',\n\t        label: 'percent animated',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"material\"\n\t      }\n\t    };\n\t\n\t    OrganizedChaos.prototype.getDefaultProperties = function() {\n\t      return OrganizedChaos.properties;\n\t    };\n\t\n\t    function OrganizedChaos(values1, time) {\n\t      var key, prop, ref;\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      ref = OrganizedChaos.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      OrganizedChaos.__super__.constructor.apply(this, arguments);\n\t      this.container = new THREE.Object3D();\n\t      this.container.position.set(0, 0, 0);\n\t      this.items = [];\n\t      this.build();\n\t    }\n\t\n\t    OrganizedChaos.prototype.rebuild = function(time) {\n\t      this.empty();\n\t      return this.build(time);\n\t    };\n\t\n\t    OrganizedChaos.prototype.empty = function() {\n\t      var item, j, len, ref;\n\t      if (!this.items || !this.items.length) {\n\t        return;\n\t      }\n\t      ref = this.items;\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        item = ref[j];\n\t        this.container.remove(item);\n\t      }\n\t      return this.items = [];\n\t    };\n\t\n\t    OrganizedChaos.prototype.getItemType = function(rng) {\n\t      var itemType;\n\t      itemType = rng.random(0, 1000) / 1000;\n\t      if (itemType < this.values.circles) {\n\t        return OrganizedChaos.TYPE_CIRCLE;\n\t      }\n\t      if (itemType < this.values.circles + this.values.squares) {\n\t        return OrganizedChaos.TYPE_SQUARE;\n\t      }\n\t      if (itemType < this.values.circles + this.values.squares + this.values.tri) {\n\t        return OrganizedChaos.TYPE_TRI;\n\t      }\n\t      return OrganizedChaos.TYPE_LINE;\n\t    };\n\t\n\t    OrganizedChaos.prototype.getItemColor = function(rng) {\n\t      var itemColor;\n\t      itemColor = rng.random(0, 1000) / 1000;\n\t      if (itemColor < this.values.materialBlue) {\n\t        return Shaders.COLOR_BLUE;\n\t      }\n\t      if (itemColor < this.values.materialBlue + this.values.materialRed) {\n\t        return Shaders.COLOR_RED;\n\t      }\n\t      return Shaders.COLOR_WHITE;\n\t    };\n\t\n\t    OrganizedChaos.prototype.build = function(time) {\n\t      var animated, geom, geomMerge, horizontalSymmetry, i, ii, itemColor, itemMesh, itemType, j, k, material, num_childs, offset, pos2, posX, posY, position, ref, ref1, results, rnd, rngChilds, rngColor, rngHorizontalSymmetry, rngRotationX, rngRotationY, rngRotationZ, rngScale, rngScaleLine, rngScaleLineHeight, rngScaleSquare, rngShaderAnim, rngSpacing, rngType, rngVerticalSymmetry, rngX, rngY, rotation, rotationX, rotationY, rotationZ, scale, spacing, spread, spreadY, spreadY_half, spread_half, verticalSymmetry;\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      rngX = new RNG(this.values.seed + \"x\");\n\t      rngY = new RNG(this.values.seed + \"y\");\n\t      rngRotationX = new RNG(this.values.seed + \"rotationX\");\n\t      rngRotationY = new RNG(this.values.seed + \"rotationY\");\n\t      rngRotationZ = new RNG(this.values.seed + \"rotationZ\");\n\t      rngScale = new RNG(this.values.seed + \"scale\");\n\t      rngScaleLine = new RNG(this.values.seed + \"scaleLine\");\n\t      rngScaleSquare = new RNG(this.values.seed + \"scaleSquare\");\n\t      rngScaleLineHeight = new RNG(this.values.seed + \"scaleLineHeight\");\n\t      rngChilds = new RNG(this.values.seed + \"childs\");\n\t      rngHorizontalSymmetry = new RNG(this.values.seed + \"horizontalSymmetry\");\n\t      rngVerticalSymmetry = new RNG(this.values.seed + \"verticalSymmetry\");\n\t      rngSpacing = new RNG(this.values.seed + \"spacing\");\n\t      rngType = new RNG(this.values.seed + \"type\");\n\t      rngColor = new RNG(this.values.seed + \"color\");\n\t      rngShaderAnim = new RNG(this.values.seed + \"shaderAnim\");\n\t      spread = this.values.spread;\n\t      spread_half = spread / 2;\n\t      spreadY = this.values.spreadY;\n\t      spreadY_half = spreadY / 2;\n\t      results = [];\n\t      for (i = j = 0, ref = this.values.numItems; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n\t        animated = false;\n\t        if (rngShaderAnim.random(100) / 100 < this.values.materialAnimated) {\n\t          animated = true;\n\t        }\n\t        num_childs = 1;\n\t        scale = rngScale.random(0, 100) / 100 + 0.2;\n\t        posX = rngX.random(spread * 100) * 0.01 - spread_half;\n\t        posY = rngY.random(spreadY * 100) * 0.01 - spreadY_half;\n\t        position = new THREE.Vector3(posX, posY, i * -this.values.depth);\n\t        rotationX = (rngRotationX.random(0, 1000) / 1000 * Math.PI) * this.values.rotationRandX + this.values.rotationX * Math.PI;\n\t        rotationY = (rngRotationY.random(0, 1000) / 1000 * Math.PI) * this.values.rotationRandY + this.values.rotationY * Math.PI;\n\t        rotationZ = (rngRotationZ.random(0, 1000) / 1000 * Math.PI) * this.values.rotationRandZ + this.values.rotationZ * Math.PI;\n\t        rotation = new THREE.Vector3(rotationX, rotationY, rotationZ);\n\t        scale = new THREE.Vector3(scale, scale, scale);\n\t        geomMerge = new THREE.Geometry();\n\t        horizontalSymmetry = false;\n\t        verticalSymmetry = false;\n\t        num_childs = parseInt(rngChilds.random(0, this.values.maxChilds), 10);\n\t        itemType = this.getItemType(rngType);\n\t        itemColor = this.getItemColor(rngColor);\n\t        geom = OrganizedChaos.lineGeom;\n\t        material = window.shaders.getMaterialLine(animated, itemColor);\n\t        if (this.values.horizontalSymmetry && rngHorizontalSymmetry.random(0, 100) / 100 <= this.values.horizontalSymmetry) {\n\t          horizontalSymmetry = true;\n\t        }\n\t        if (this.values.verticalSymmetry && rngVerticalSymmetry.random(0, 100) / 100 <= this.values.verticalSymmetry) {\n\t          verticalSymmetry = true;\n\t        }\n\t        if (itemType === OrganizedChaos.TYPE_LINE) {\n\t          scale.y = (scale.y * this.values.lineWidth) * (rngScaleLine.random(1, 100) / 100) * (this.values.lineWidthRand + 1);\n\t          scale.y = Math.max(0.5, scale.y);\n\t          scale.x = (scale.x * this.values.lineHeight) * (rngScaleLineHeight.random(1, 100) / 100) * (this.values.lineHeightRand + 1);\n\t          scale.x = Math.max(0.01, scale.x);\n\t        }\n\t        if (itemType === OrganizedChaos.TYPE_CIRCLE) {\n\t          geom = OrganizedChaos.ringGeom2;\n\t        }\n\t        if (itemType === OrganizedChaos.TYPE_TRI) {\n\t          geom = OrganizedChaos.triGeom;\n\t        } else if (itemType === OrganizedChaos.TYPE_SQUARE) {\n\t          geom = OrganizedChaos.squareGeom;\n\t          rnd = 0.5 + rngScaleSquare.random(0, 100) / 100;\n\t          scale.multiplyScalar(rnd);\n\t        }\n\t        this.addItem(geomMerge, geom, material, i, scale, position, rotation, horizontalSymmetry, verticalSymmetry);\n\t        if (num_childs > 1) {\n\t          spacing = 30 + rngSpacing.random(0, 100) * 0.4;\n\t          offset = position.clone().normalize().multiplyScalar(spacing);\n\t          offset.z = 0;\n\t          for (ii = k = 0, ref1 = num_childs - 1; 0 <= ref1 ? k <= ref1 : k >= ref1; ii = 0 <= ref1 ? ++k : --k) {\n\t            pos2 = position.clone().add(offset.multiplyScalar(ii + 1));\n\t            this.addItem(geomMerge, geom, material, i, scale, pos2, rotation, horizontalSymmetry, verticalSymmetry);\n\t          }\n\t        }\n\t        itemMesh = new THREE.Mesh(geomMerge, material);\n\t        itemMesh.matrixAutoUpdate = false;\n\t        this.container.add(itemMesh);\n\t        results.push(this.items.push(itemMesh));\n\t      }\n\t      return results;\n\t    };\n\t\n\t    OrganizedChaos.prototype.addItem = function(geomMerge, geom, material, i, scale, position, rotation, horizontalSymmetry, verticalSymmetry) {\n\t      var item, item2, item2Container, quaternion;\n\t      quaternion = new THREE.Quaternion();\n\t      quaternion.setFromAxisAngle(new THREE.Vector3(rotation.x, rotation.y, rotation.z), Math.PI / 2);\n\t      item = new THREE.Object3D();\n\t      item.position.x = position.x;\n\t      item.position.y = position.y;\n\t      item.position.z = position.z;\n\t      item.rotation.setFromQuaternion(quaternion);\n\t      item.scale.copy(scale);\n\t      item.updateMatrix();\n\t      geomMerge.merge(geom, item.matrix);\n\t      if (horizontalSymmetry) {\n\t        item2Container = new THREE.Object3D();\n\t        item2 = new THREE.Object3D();\n\t        item2.position.x = position.x;\n\t        item2.position.y = position.y;\n\t        item2.position.z = position.z;\n\t        item2.rotation.setFromQuaternion(quaternion);\n\t        item2.scale.copy(scale);\n\t        item2Container.add(item2);\n\t        item2Container.scale.x = -1;\n\t        item2Container.updateMatrix();\n\t        item2.updateMatrix();\n\t        geomMerge.merge(geom, item2Container.matrix.multiply(item2.matrix));\n\t        if (verticalSymmetry) {\n\t          item2Container = new THREE.Object3D();\n\t          item2 = new THREE.Object3D();\n\t          item2.position.x = position.x;\n\t          item2.position.y = position.y;\n\t          item2.position.z = position.z;\n\t          item2.rotation.setFromQuaternion(quaternion);\n\t          item2.scale.copy(scale);\n\t          item2Container.add(item2);\n\t          item2Container.scale.x = -1;\n\t          item2Container.scale.y = -1;\n\t          item2Container.updateMatrix();\n\t          item2.updateMatrix();\n\t          geomMerge.merge(geom, item2Container.matrix.multiply(item2.matrix));\n\t        }\n\t      }\n\t      if (verticalSymmetry) {\n\t        item2Container = new THREE.Object3D();\n\t        this.container.add(item2Container);\n\t        item2 = new THREE.Object3D();\n\t        item2.position.x = position.x;\n\t        item2.position.y = position.y;\n\t        item2.position.z = position.z;\n\t        item2.rotation.setFromQuaternion(quaternion);\n\t        item2.scale.copy(scale);\n\t        item2Container.add(item2);\n\t        item2Container.scale.y = -1;\n\t        item2Container.updateMatrix();\n\t        item2.updateMatrix();\n\t        geomMerge.merge(geom, item2Container.matrix.multiply(item2.matrix));\n\t      }\n\t      return geomMerge;\n\t    };\n\t\n\t    OrganizedChaos.prototype.getMaterial = function(color) {\n\t      var material, uniforms;\n\t      uniforms = {\n\t        time: {\n\t          type: 'f',\n\t          value: 0.0\n\t        },\n\t        seed: {\n\t          type: 'f',\n\t          value: Math.random() * 1000\n\t        },\n\t        strength: {\n\t          type: 'f',\n\t          value: 0.2\n\t        },\n\t        color: {\n\t          type: 'c',\n\t          value: new THREE.Color(color)\n\t        },\n\t        fogColor: {\n\t          type: \"c\",\n\t          value: new THREE.Color(0x111111)\n\t        },\n\t        fogDensity: {\n\t          type: \"f\",\n\t          0.2045: 0.2045\n\t        }\n\t      };\n\t      material = new THREE.ShaderMaterial({\n\t        vertexShader: ShaderVertex,\n\t        fragmentShader: ShaderFragement,\n\t        side: THREE.DoubleSide,\n\t        uniforms: uniforms,\n\t        transparent: true,\n\t        depthWrite: false,\n\t        depthTest: false,\n\t        fog: true\n\t      });\n\t      material.blending = THREE.AdditiveBlending;\n\t      return material;\n\t    };\n\t\n\t    OrganizedChaos.prototype.update = function(seconds, values, force) {\n\t      var key, needs_rebuild, prop, ref, volume;\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values === false) {\n\t        values = this.values;\n\t      }\n\t      needs_rebuild = false;\n\t      ref = OrganizedChaos.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (prop.triggerRebuild && this.valueChanged(key, values)) {\n\t          needs_rebuild = true;\n\t        }\n\t      }\n\t      volume = window.audio.data.filters.mid.timeDomainRMS;\n\t      if (force || this.valueChanged(\"x\", values) || this.valueChanged(\"y\", values) || this.valueChanged(\"z\", values)) {\n\t        this.container.position.set(values.x, values.y, values.z);\n\t      }\n\t      this.values = _.merge(this.values, values);\n\t      if (needs_rebuild === true) {\n\t        this.rebuild(seconds);\n\t      }\n\t    };\n\t\n\t    OrganizedChaos.prototype.destroy = function() {\n\t      var child, j, len, ref;\n\t      ref = this.container.children;\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        child = ref[j];\n\t        this.container.remove(child);\n\t      }\n\t      return this.container = null;\n\t    };\n\t\n\t    return OrganizedChaos;\n\t\n\t  })(ElementBase);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 14 */,\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = _;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = undefined;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"{\\n  \\\"settings\\\": {\\n    \\\"time\\\": 231826.4140000241,\\n    \\\"duration\\\": 240,\\n    \\\"domain\\\": [\\n      34285,\\n      239999\\n    ]\\n  },\\n  \\\"data\\\": [\\n    {\\n      \\\"id\\\": \\\"gloabl\\\",\\n      \\\"type\\\": \\\"Global\\\",\\n      \\\"label\\\": \\\"Global\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 240,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"bassSensibility\\\",\\n          \\\"label\\\": \\\"bassSensibility\\\",\\n          \\\"val\\\": 5,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 130.80899999999997,\\n              \\\"val\\\": 130,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 138.7439999999998,\\n              \\\"val\\\": 100,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 144.14699999999996,\\n              \\\"val\\\": 80,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 177.71099999999998,\\n              \\\"val\\\": 120,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"midSensibility\\\",\\n          \\\"label\\\": \\\"midSensibility\\\",\\n          \\\"val\\\": 100,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"highSensibility\\\",\\n          \\\"label\\\": \\\"highSensibility\\\",\\n          \\\"val\\\": 120,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"autoAnimate\\\",\\n          \\\"label\\\": \\\"autoAnimate\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 1.64,\\n              \\\"val\\\": 0.05,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 1.858,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 216.852,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 236.5629999999993,\\n              \\\"val\\\": 0.2,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 240,\\n              \\\"val\\\": 1,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            }\\n          ]\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"bassSensibility\\\": 120,\\n        \\\"midSensibility\\\": 100,\\n        \\\"highSensibility\\\": 120,\\n        \\\"autoAnimate\\\": 0.18845102253916685\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"camera1\\\",\\n      \\\"type\\\": \\\"Camera\\\",\\n      \\\"label\\\": \\\"Camera 1\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 240,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 0,\\n              \\\"val\\\": 700,\\n              \\\"ease\\\": \\\"Quart.easeInOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 1.1000000000000016,\\n              \\\"val\\\": 370,\\n              \\\"ease\\\": \\\"Quart.easeInOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 9.538,\\n              \\\"val\\\": -80.93835187185027,\\n              \\\"ease\\\": \\\"Linear.easeNone\\\"\\n            },\\n            {\\n              \\\"time\\\": 240,\\n              \\\"val\\\": -3850,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            }\\n          ],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 600\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"fov\\\",\\n          \\\"label\\\": \\\"fov\\\",\\n          \\\"val\\\": 45,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"target_x\\\",\\n          \\\"label\\\": \\\"target x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"target_z\\\",\\n          \\\"label\\\": \\\"target z\\\",\\n          \\\"val\\\": -10000,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3845.259110193444,\\n        \\\"target_x\\\": 0,\\n        \\\"target_y\\\": 0,\\n        \\\"target_z\\\": -10000,\\n        \\\"fov\\\": 45\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item2\\\",\\n      \\\"label\\\": \\\"Chaos 2\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 12.588,\\n      \\\"end\\\": 55.836,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 57,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 85,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 4.6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 302.7,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -908,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 177.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.199,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.31,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.7,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.642,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.04,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 57,\\n        \\\"seed\\\": 85,\\n        \\\"depth\\\": 4.6,\\n        \\\"spread\\\": 302.7,\\n        \\\"maxChilds\\\": 2,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -908,\\n        \\\"spreadY\\\": 177.5,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.199,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialAnimated\\\": 0.31,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.7,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 0.642,\\n        \\\"lineHeightRand\\\": 1,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0.04,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item3\\\",\\n      \\\"label\\\": \\\"Chaos 3\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": -0.035,\\n      \\\"end\\\": 37.43900000000004,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 93042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 22,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 210,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 10.1,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -105,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -80,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.201,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": -13.9,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 305.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 4,\\n        \\\"seed\\\": 93042,\\n        \\\"depth\\\": 22,\\n        \\\"spread\\\": 210,\\n        \\\"maxChilds\\\": 5,\\n        \\\"x\\\": 10.1,\\n        \\\"y\\\": -105,\\n        \\\"z\\\": -80,\\n        \\\"spreadY\\\": 0,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.201,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialAnimated\\\": 0.5,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": -13.9,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 305.3,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"horizontalSymmetry\\\": 0,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item4\\\",\\n      \\\"label\\\": \\\"Chaos 4\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 0.983,\\n      \\\"end\\\": 32.432,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 29,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 98042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 450,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -5,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -390,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.201,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.62,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 4.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 11.148,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 29,\\n        \\\"seed\\\": 98042,\\n        \\\"depth\\\": 12,\\n        \\\"spread\\\": 450,\\n        \\\"maxChilds\\\": 3,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": -5,\\n        \\\"z\\\": -390,\\n        \\\"spreadY\\\": 0,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.201,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialAnimated\\\": 0.4,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.62,\\n        \\\"lineWidthRand\\\": 4.3,\\n        \\\"lineHeight\\\": 11.148,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item5\\\",\\n      \\\"label\\\": \\\"Chaos 5\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 17.118,\\n      \\\"end\\\": 52.301,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 21,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 34042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 140,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1054,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.7,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.56,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 21,\\n        \\\"seed\\\": 34042,\\n        \\\"depth\\\": 8,\\n        \\\"spread\\\": 300,\\n        \\\"spreadY\\\": 140,\\n        \\\"maxChilds\\\": 8,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -1054,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.7,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0.56,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"lineHeight\\\": 1,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item6\\\",\\n      \\\"label\\\": \\\"Chaos 6\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 26.024,\\n      \\\"end\\\": 87.155,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 80,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 9142,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 3.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": -140,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 60,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1800,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.9,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 2.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.41,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 4.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 80,\\n        \\\"seed\\\": 9142,\\n        \\\"depth\\\": 3.5,\\n        \\\"spread\\\": -140,\\n        \\\"spreadY\\\": 60,\\n        \\\"maxChilds\\\": 4,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -1800,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0.3,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.9,\\n        \\\"lineWidthRand\\\": 2.5,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"lineHeight\\\": 0.41,\\n        \\\"lineHeightRand\\\": 4.1,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item7\\\",\\n      \\\"label\\\": \\\"Chaos 7\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 20.035,\\n      \\\"end\\\": 72.32999999999998,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 78,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 9642,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 10,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 170,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 158.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -17,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1150,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 1.4,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.56,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 78,\\n        \\\"seed\\\": 9642,\\n        \\\"depth\\\": 10,\\n        \\\"spread\\\": 170,\\n        \\\"spreadY\\\": 158.4,\\n        \\\"maxChilds\\\": 8,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": -17,\\n        \\\"z\\\": -1150,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0.1,\\n        \\\"rotationZ\\\": 1.4,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0.56,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.4,\\n        \\\"lineWidthRand\\\": 3,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"lineHeight\\\": 0.2,\\n        \\\"lineHeightRand\\\": 3,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item8\\\",\\n      \\\"label\\\": \\\"Chaos 8\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 60.202,\\n      \\\"end\\\": 107.71,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 64,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 3842,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": -291,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 167,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -2100,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -0.3,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.05,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.04,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.05,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 2.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 3.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 64,\\n        \\\"seed\\\": 3842,\\n        \\\"depth\\\": 12,\\n        \\\"spread\\\": -291,\\n        \\\"spreadY\\\": 167,\\n        \\\"maxChilds\\\": 12,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -2100,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": -0.3,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.05,\\n        \\\"rotationRandY\\\": 0.04,\\n        \\\"rotationRandZ\\\": 0.05,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0.4,\\n        \\\"lineWidth\\\": 0.5,\\n        \\\"lineWidthRand\\\": 2.3,\\n        \\\"lineHeight\\\": 3.3,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"materialAnimated\\\": 0.8,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item9\\\",\\n      \\\"label\\\": \\\"Chaos 9\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 73.495,\\n      \\\"end\\\": 130.643,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 50,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 32042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 6.7,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 235,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 96,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -2600,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -0.2,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0.6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.96,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.53,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 50,\\n        \\\"seed\\\": 32042,\\n        \\\"depth\\\": 6.7,\\n        \\\"spread\\\": 235,\\n        \\\"spreadY\\\": 96,\\n        \\\"maxChilds\\\": 0,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -2600,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": -0.2,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0.6,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 1,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"materialAnimated\\\": 0.96,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0.1,\\n        \\\"materialBlue\\\": 0.53,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item10\\\",\\n      \\\"label\\\": \\\"Chaos 10\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 102.377,\\n      \\\"end\\\": 141.892,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 75,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 15042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 260,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 100,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3000,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.8,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 3.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 75,\\n        \\\"seed\\\": 15042,\\n        \\\"depth\\\": 1,\\n        \\\"spread\\\": 260,\\n        \\\"spreadY\\\": 100,\\n        \\\"maxChilds\\\": 8.1,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3000,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0.8,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0,\\n        \\\"lineWidthRand\\\": 1,\\n        \\\"lineHeight\\\": 0.1,\\n        \\\"lineHeightRand\\\": 3.5,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0.2,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item11\\\",\\n      \\\"label\\\": \\\"Chaos 11\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 112.889,\\n      \\\"end\\\": 152.972,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 64,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 44402,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3000,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.225,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.368,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.75,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 64,\\n        \\\"seed\\\": 44402,\\n        \\\"depth\\\": 12,\\n        \\\"spread\\\": 300,\\n        \\\"spreadY\\\": 300,\\n        \\\"maxChilds\\\": 3,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3000,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.225,\\n        \\\"rotationRandY\\\": 0.368,\\n        \\\"rotationRandZ\\\": 0.75,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0.2,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 1,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0.3,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item12\\\",\\n      \\\"label\\\": \\\"Chaos 12\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 120.719,\\n      \\\"end\\\": 212.46800000000002,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 80,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 656,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 220,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 108,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 0.793,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3300,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.9,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.95,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 80,\\n        \\\"seed\\\": 656,\\n        \\\"depth\\\": 6,\\n        \\\"spread\\\": 220,\\n        \\\"spreadY\\\": 108,\\n        \\\"maxChilds\\\": 8,\\n        \\\"horizontalSymmetry\\\": 0.793,\\n        \\\"verticalSymmetry\\\": 0.3,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3300,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0.9,\\n        \\\"rotationRandZ\\\": 0.2,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 0.5,\\n        \\\"lineHeightRand\\\": 1,\\n        \\\"materialAnimated\\\": 0.95,\\n        \\\"materialRed\\\": 0.2,\\n        \\\"materialBlue\\\": 0.3,\\n        \\\"tri\\\": 0.2\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item13\\\",\\n      \\\"label\\\": \\\"Chaos 13\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 151.87,\\n      \\\"end\\\": 241.144,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 63,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 6614,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 3.8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 121,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 167,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 16,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.8,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3900,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -0.1,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 1.62,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 1.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 63,\\n        \\\"seed\\\": 6614,\\n        \\\"depth\\\": 3.8,\\n        \\\"spread\\\": 121,\\n        \\\"spreadY\\\": 167,\\n        \\\"maxChilds\\\": 16,\\n        \\\"horizontalSymmetry\\\": 0.3,\\n        \\\"verticalSymmetry\\\": 0.8,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3900,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": -0.1,\\n        \\\"rotationZ\\\": 0.5,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0.2,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0,\\n        \\\"lineWidthRand\\\": 1.62,\\n        \\\"lineHeight\\\": 0.2,\\n        \\\"lineHeightRand\\\": 1.2,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"materialRed\\\": 0.3,\\n        \\\"materialBlue\\\": 0.3,\\n        \\\"tri\\\": 0.1\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item15\\\",\\n      \\\"label\\\": \\\"Chaos 15\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 2,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 120,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 8842,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 1.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 260,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 150,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 520,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.9,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 120,\\n        \\\"seed\\\": 8842,\\n        \\\"depth\\\": 1.5,\\n        \\\"spread\\\": 260,\\n        \\\"spreadY\\\": 150,\\n        \\\"maxChilds\\\": 12,\\n        \\\"horizontalSymmetry\\\": 0.4,\\n        \\\"verticalSymmetry\\\": 0.2,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 520,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.5,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 0.2,\\n        \\\"lineHeightRand\\\": 1,\\n        \\\"materialRed\\\": 0.3,\\n        \\\"materialBlue\\\": 0,\\n        \\\"materialAnimated\\\": 0.9,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    }\\n  ]\\n}\\n\"\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;var require;!function(t){if(true)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var e;e=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,e.Acoustic=t()}}(function(){return function t(e,i,n){function a(r,s){if(!i[r]){if(!e[r]){var u=\"function\"==typeof require&&require;if(!s&&u)return require(r,!0);if(o)return o(r,!0);var f=new Error(\"Cannot find module '\"+r+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var c=i[r]={exports:{}};e[r][0].call(c.exports,function(t){var i=e[r][1][t];return a(i?i:t)},c,c.exports,t,e,i,n)}return i[r].exports}for(var o=\"function\"==typeof require&&require,r=0;r<n.length;r++)a(n[r]);return a}({1:[function(t,e,i){\"use strict\";function n(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var a=function(){function t(e){var i=void 0===arguments[1]?{}:arguments[1];n(this,t),this.options=i,this.fftSize=i.fftSize||512,this.filters=i.filters||this.getDefaultFilters(),this.audio=this.initAudio(e),this.currentTime=0,this.playing=!1,this.context=new(window.AudioContext||window.webkitAudioContext),this.source=this.context.createMediaElementSource(this.audio),this.analyser=this.context.createAnalyser(),this.analyser.fftSize=this.fftSize,this.samples=this.analyser.frequencyBinCount,this.delay=this.context.createDelay?this.context.createDelay():this.context.createDelayNode(),this.delay.delayTime.value=2*this.fftSize/this.context.sampleRate,this.data={timeDomainData:new Uint8Array(this.samples),timeDomainRMS:0,filters:{}},this.source.connect(this.analyser),this.analyser.connect(this.delay),this.delay.connect(this.context.destination),this.filters=this.initFilters(this.filters,this.data)}return t.prototype.initAudio=function(t){var e=this,i=!1;return i=\"string\"==typeof t?new Audio(t):t,i.addEventListener(\"canplay\",function(){e.options.onCanPlay&&e.options.onCanPlay(e)}),i},t.prototype.update=function(){if(this.playing){var t=this;this.analyser.smoothingTimeConstant=!1,this.analyser.getByteTimeDomainData(this.data.timeDomainData),this.data.timeDomainRMS=this.rms(this.data.timeDomainData),Object.keys(this.filters).forEach(function(e){var i=t.filters[e],n=t.data.filters[e];i.analyserNode.fftSize=t.fftSize,i.analyserNode.getByteTimeDomainData(n.timeDomainData),n.timeDomainRMS+=.4*(t.rms(n.timeDomainData)-n.timeDomainRMS)})}},t.prototype.rms=function(t){for(var e=t.length,i=0,n=0;e>n;n++){var a=Math.abs(t[n]-128);i+=a*a}return Math.sqrt(i/e)},t.prototype.play=function(){this.audio&&(this.playing=!0,this.audio.play(),this.audio.currentTime=this.currentTime)},t.prototype.pause=function(){this.audio&&(this.playing=!1,this.audio.pause())},t.prototype.seek=function(t){this.currentTime=t,this.audio&&this.audio.paused===!1&&(this.audio.currentTime=this.currentTime)},t.prototype.getValue=function(t){var e=void 0;return t?void 0!==this.data.filters[t]&&(e=this.data.filters[t].timeDomainRMS):e=this.data.timeDomainRMS,e},t.prototype.initFilters=function(t,e){var i=this;return Object.keys(t).forEach(function(n){var a=t[n];a.biquadFilter=i.context.createBiquadFilter(),a.biquadFilter.type=a.type,a.biquadFilter.frequency.value=a.frequency,a.biquadFilter.Q.value=a.Q,a.analyserNode=i.context.createAnalyser(),a.analyserNode.fftSize=i.fftSize,a.gainNode=i.context.createGain?i.context.createGain():i.context.createGainNode(),a.gainNode.gain.value=a.gain,i.source.connect(a.gainNode),a.gainNode.connect(a.biquadFilter),a.biquadFilter.connect(a.analyserNode),e.filters[n]={timeDomainData:new Uint8Array(i.samples),timeDomainRMS:0}}),t},t.prototype.getDefaultFilters=function(){return{bass:{type:\"lowpass\",frequency:120,Q:1.2,gain:12},mid:{type:\"bandpass\",frequency:400,Q:1.2,gain:12},high:{type:\"highpass\",frequency:2e3,Q:1.2,gain:12}}},t}();e.exports=a},{}]},{},[1])(1)});\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Global, THREE, _;\n\t  _ = __webpack_require__(15);\n\t  THREE = __webpack_require__(2);\n\t  return Global = (function() {\n\t    Global.properties = {\n\t      bassSensibility: {\n\t        name: 'bassSensibility',\n\t        label: 'bassSensibility x',\n\t        val: 120,\n\t        min: 0,\n\t        max: 200\n\t      },\n\t      midSensibility: {\n\t        name: 'midSensibility',\n\t        label: 'midSensibility',\n\t        val: 100,\n\t        min: 0,\n\t        max: 200\n\t      },\n\t      highSensibility: {\n\t        name: 'highSensibility',\n\t        label: 'highSensibility',\n\t        val: 120,\n\t        min: 0,\n\t        max: 200\n\t      },\n\t      autoAnimate: {\n\t        name: 'autoAnimate',\n\t        label: 'autoAnimate',\n\t        val: 0,\n\t        min: 0,\n\t        max: 1\n\t      }\n\t    };\n\t\n\t    function Global(values1, time) {\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      window.global = this;\n\t    }\n\t\n\t    Global.prototype.update = function(seconds, values, force) {\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values === false) {\n\t        values = this.values;\n\t      }\n\t      return this.values = _.merge(this.values, values);\n\t    };\n\t\n\t    Global.prototype.destroy = function() {};\n\t\n\t    return Global;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tTHREE.GlitchPass2 = function ( dt_size ) {\n\t\n\t  if ( THREE.DigitalGlitch2 === undefined ) console.error( \"THREE.GlitchPass relies on THREE.DigitalGlitch\" );\n\t\n\t  var shader = THREE.DigitalGlitch2;\n\t  this.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\t\n\t  if(dt_size==undefined) dt_size=64;\n\t\n\t  this.intensity = 1;\n\t  this.uniforms[\"tDisp\"].value=this.generateHeightmap(dt_size);\n\t\n\t\n\t  this.material = new THREE.ShaderMaterial({\n\t    uniforms: this.uniforms,\n\t    vertexShader: shader.vertexShader,\n\t    fragmentShader: shader.fragmentShader\n\t  });\n\t\n\t  this.enabled = true;\n\t  this.renderToScreen = false;\n\t  this.needsSwap = true;\n\t\n\t  this.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t  this.scene  = new THREE.Scene();\n\t\n\t  this.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t  this.scene.add( this.quad );\n\t\n\t  this.goWild=false;\n\t  this.curF=0;\n\t  this.generateTrigger();\n\t\n\t};\n\t\n\tTHREE.GlitchPass2.prototype = {\n\t\n\t  render: function ( renderer, writeBuffer, readBuffer, delta )\n\t  {\n\t    this.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t    this.uniforms[ 'seed' ].value=Math.random();//default seeding\n\t    //this.uniforms[ 'byp' ].value=0;\n\t\n\t    this.uniforms[ 'amount' ].value = (Math.random()/420) * this.intensity;\n\t    this.uniforms[ 'angle' ].value=THREE.Math.randFloat(-Math.PI,Math.PI);\n\t    this.uniforms[ 'seed_x' ].value=THREE.Math.randFloat(-1,1);\n\t    this.uniforms[ 'seed_y' ].value=THREE.Math.randFloat(-1,1);\n\t    this.uniforms[ 'seed_x' ].value *= 0.001;\n\t    this.uniforms[ 'seed_y' ].value *= 0.001;\n\t    this.uniforms[ 'distortion_x' ].value=THREE.Math.randFloat(0,0.001);\n\t    this.uniforms[ 'distortion_y' ].value=THREE.Math.randFloat(0,0.001);\n\t    //this.curF=0;\n\t    this.generateTrigger();\n\t\n\t    this.uniforms[ 'byp' ].value=0;\n\t    this.curF++;\n\t\n\t    this.quad.material = this.material;\n\t    if ( this.renderToScreen )\n\t    {\n\t      renderer.render( this.scene, this.camera );\n\t    }\n\t    else\n\t    {\n\t      renderer.render( this.scene, this.camera, writeBuffer, false );\n\t    }\n\t  },\n\t  generateTrigger:function()\n\t  {\n\t    this.randX=THREE.Math.randInt(120,240);\n\t  },\n\t  generateHeightmap:function(dt_size)\n\t  {\n\t    var data_arr = new Float32Array( dt_size*dt_size * 3 );\n\t    var length=dt_size*dt_size;\n\t\n\t    for ( var i = 0; i < length; i++)\n\t    {\n\t      var val=THREE.Math.randFloat(0,1);\n\t      data_arr[ i*3 + 0 ] = val;\n\t      data_arr[ i*3 + 1 ] = val;\n\t      data_arr[ i*3 + 2 ] = val;\n\t    }\n\t\n\t    var texture = new THREE.DataTexture( data_arr, dt_size, dt_size, THREE.RGBFormat, THREE.FloatType );\n\t    texture.minFilter = THREE.NearestFilter;\n\t    texture.magFilter = THREE.NearestFilter;\n\t    texture.needsUpdate = true;\n\t    texture.flipY = false;\n\t    return texture;\n\t  }\n\t};\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\t\n\t\tthis.renderer = renderer;\n\t\n\t\tif ( renderTarget === undefined ) {\n\t\n\t\t\tvar width = window.innerWidth || 1;\n\t\t\tvar height = window.innerHeight || 1;\n\t\t\tvar parameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\n\t\n\t\t\trenderTarget = new THREE.WebGLRenderTarget( width, height, parameters );\n\t\n\t\t}\n\t\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\t\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\t\n\t\tthis.passes = [];\n\t\n\t\tif ( THREE.CopyShader === undefined )\n\t\t\tconsole.error( \"THREE.EffectComposer relies on THREE.CopyShader\" );\n\t\n\t\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\t\n\t};\n\t\n\tTHREE.EffectComposer.prototype = {\n\t\n\t\tswapBuffers: function() {\n\t\n\t\t\tvar tmp = this.readBuffer;\n\t\t\tthis.readBuffer = this.writeBuffer;\n\t\t\tthis.writeBuffer = tmp;\n\t\n\t\t},\n\t\n\t\taddPass: function ( pass ) {\n\t\n\t\t\tthis.passes.push( pass );\n\t\n\t\t},\n\t\n\t\tinsertPass: function ( pass, index ) {\n\t\n\t\t\tthis.passes.splice( index, 0, pass );\n\t\n\t\t},\n\t\n\t\trender: function ( delta ) {\n\t\n\t\t\tthis.writeBuffer = this.renderTarget1;\n\t\t\tthis.readBuffer = this.renderTarget2;\n\t\n\t\t\tvar maskActive = false;\n\t\n\t\t\tvar pass, i, il = this.passes.length;\n\t\n\t\t\tfor ( i = 0; i < il; i ++ ) {\n\t\n\t\t\t\tpass = this.passes[ i ];\n\t\n\t\t\t\tif ( !pass.enabled ) continue;\n\t\n\t\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\n\t\n\t\t\t\tif ( pass.needsSwap ) {\n\t\n\t\t\t\t\tif ( maskActive ) {\n\t\n\t\t\t\t\t\tvar context = this.renderer.context;\n\t\n\t\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\t\n\t\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\n\t\n\t\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.swapBuffers();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\t\n\t\t\t\t\tmaskActive = true;\n\t\n\t\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\t\n\t\t\t\t\tmaskActive = false;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t},\n\t\n\t\treset: function ( renderTarget ) {\n\t\n\t\t\tif ( renderTarget === undefined ) {\n\t\n\t\t\t\trenderTarget = this.renderTarget1.clone();\n\t\n\t\t\t\trenderTarget.width = window.innerWidth;\n\t\t\t\trenderTarget.height = window.innerHeight;\n\t\n\t\t\t}\n\t\n\t\t\tthis.renderTarget1 = renderTarget;\n\t\t\tthis.renderTarget2 = renderTarget.clone();\n\t\n\t\t\tthis.writeBuffer = this.renderTarget1;\n\t\t\tthis.readBuffer = this.renderTarget2;\n\t\n\t\t},\n\t\n\t\tsetSize: function ( width, height ) {\n\t\n\t\t\tvar renderTarget = this.renderTarget1.clone();\n\t\n\t\t\trenderTarget.width = width;\n\t\t\trenderTarget.height = height;\n\t\n\t\t\tthis.reset( renderTarget );\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.MaskPass = function ( scene, camera ) {\n\t\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\t\n\t\tthis.enabled = true;\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\t\n\t\tthis.inverse = false;\n\t\n\t};\n\t\n\tTHREE.MaskPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tvar context = renderer.context;\n\t\n\t\t\t// don't update color or depth\n\t\n\t\t\tcontext.colorMask( false, false, false, false );\n\t\t\tcontext.depthMask( false );\n\t\n\t\t\t// set up stencil\n\t\n\t\t\tvar writeValue, clearValue;\n\t\n\t\t\tif ( this.inverse ) {\n\t\n\t\t\t\twriteValue = 0;\n\t\t\t\tclearValue = 1;\n\t\n\t\t\t} else {\n\t\n\t\t\t\twriteValue = 1;\n\t\t\t\tclearValue = 0;\n\t\n\t\t\t}\n\t\n\t\t\tcontext.enable( context.STENCIL_TEST );\n\t\t\tcontext.stencilOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\t\tcontext.stencilFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\t\tcontext.clearStencil( clearValue );\n\t\n\t\t\t// draw into the stencil buffer\n\t\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\t\n\t\t\t// re-enable update of color and depth\n\t\n\t\t\tcontext.colorMask( true, true, true, true );\n\t\t\tcontext.depthMask( true );\n\t\n\t\t\t// only render where stencil is set to 1\n\t\n\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );  // draw if == 1\n\t\t\tcontext.stencilOp( context.KEEP, context.KEEP, context.KEEP );\n\t\n\t\t}\n\t\n\t};\n\t\n\t\n\tTHREE.ClearMaskPass = function () {\n\t\n\t\tthis.enabled = true;\n\t\n\t};\n\t\n\tTHREE.ClearMaskPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tvar context = renderer.context;\n\t\n\t\t\tcontext.disable( context.STENCIL_TEST );\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.BloomPass = function ( strength, kernelSize, sigma, resolution ) {\n\t\n\t\tstrength = ( strength !== undefined ) ? strength : 1;\n\t\tkernelSize = ( kernelSize !== undefined ) ? kernelSize : 25;\n\t\tsigma = ( sigma !== undefined ) ? sigma : 4.0;\n\t\tresolution = ( resolution !== undefined ) ? resolution : 256;\n\t\n\t\t// render targets\n\t\n\t\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\t\n\t\tthis.renderTargetX = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\t\tthis.renderTargetY = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\t\n\t\t// copy material\n\t\n\t\tif ( THREE.CopyShader === undefined )\n\t\t\tconsole.error( \"THREE.BloomPass relies on THREE.CopyShader\" );\n\t\n\t\tvar copyShader = THREE.CopyShader;\n\t\n\t\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\t\n\t\tthis.copyUniforms[ \"opacity\" ].value = strength;\n\t\n\t\tthis.materialCopy = new THREE.ShaderMaterial( {\n\t\n\t\t\tuniforms: this.copyUniforms,\n\t\t\tvertexShader: copyShader.vertexShader,\n\t\t\tfragmentShader: copyShader.fragmentShader,\n\t\t\tblending: THREE.AdditiveBlending,\n\t\t\ttransparent: true\n\t\n\t\t} );\n\t\n\t\t// convolution material\n\t\n\t\tif ( THREE.ConvolutionShader === undefined )\n\t\t\tconsole.error( \"THREE.BloomPass relies on THREE.ConvolutionShader\" );\n\t\n\t\tvar convolutionShader = THREE.ConvolutionShader;\n\t\n\t\tthis.convolutionUniforms = THREE.UniformsUtils.clone( convolutionShader.uniforms );\n\t\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurx;\n\t\tthis.convolutionUniforms[ \"cKernel\" ].value = THREE.ConvolutionShader.buildKernel( sigma );\n\t\n\t\tthis.materialConvolution = new THREE.ShaderMaterial( {\n\t\n\t\t\tuniforms: this.convolutionUniforms,\n\t\t\tvertexShader:  convolutionShader.vertexShader,\n\t\t\tfragmentShader: convolutionShader.fragmentShader,\n\t\t\tdefines: {\n\t\t\t\t\"KERNEL_SIZE_FLOAT\": kernelSize.toFixed( 1 ),\n\t\t\t\t\"KERNEL_SIZE_INT\": kernelSize.toFixed( 0 )\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = false;\n\t\tthis.clear = false;\n\t\n\t\n\t\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\t\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\t\n\t};\n\t\n\tTHREE.BloomPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\t\n\t\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\n\t\n\t\t\t// Render quad with blured scene into texture (convolution pass 1)\n\t\n\t\t\tthis.quad.material = this.materialConvolution;\n\t\n\t\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\t\n\t\t\trenderer.render( this.scene, this.camera, this.renderTargetX, true );\n\t\n\t\n\t\t\t// Render quad with blured scene into texture (convolution pass 2)\n\t\n\t\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = this.renderTargetX;\n\t\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurY;\n\t\n\t\t\trenderer.render( this.scene, this.camera, this.renderTargetY, true );\n\t\n\t\t\t// Render original scene with superimposed blur to texture\n\t\n\t\t\tthis.quad.material = this.materialCopy;\n\t\n\t\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetY;\n\t\n\t\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\n\t\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\n\t\t}\n\t\n\t};\n\t\n\tTHREE.BloomPass.blurX = new THREE.Vector2( 0.001953125, 0.0 );\n\tTHREE.BloomPass.blurY = new THREE.Vector2( 0.0, 0.001953125 );\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.ShaderPass = function ( shader, textureID ) {\n\t\n\t\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\t\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\t\n\t\tthis.material = new THREE.ShaderMaterial( {\n\t\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\t\n\t\t} );\n\t\n\t\tthis.renderToScreen = false;\n\t\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = true;\n\t\tthis.clear = false;\n\t\n\t\n\t\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\t\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\t\n\t};\n\t\n\tTHREE.ShaderPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tif ( this.uniforms[ this.textureID ] ) {\n\t\n\t\t\t\tthis.uniforms[ this.textureID ].value = readBuffer;\n\t\n\t\t\t}\n\t\n\t\t\tthis.quad.material = this.material;\n\t\n\t\t\tif ( this.renderToScreen ) {\n\t\n\t\t\t\trenderer.render( this.scene, this.camera );\n\t\n\t\t\t} else {\n\t\n\t\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\t\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\t\n\t\tthis.overrideMaterial = overrideMaterial;\n\t\n\t\tthis.clearColor = clearColor;\n\t\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 1;\n\t\n\t\tthis.oldClearColor = new THREE.Color();\n\t\tthis.oldClearAlpha = 1;\n\t\n\t\tthis.enabled = true;\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\t\n\t};\n\t\n\tTHREE.RenderPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\t\n\t\t\tif ( this.clearColor ) {\n\t\n\t\t\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\t\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\n\t\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\t\n\t\t\t}\n\t\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\n\t\t\tif ( this.clearColor ) {\n\t\n\t\t\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\t\n\t\t\t}\n\t\n\t\t\tthis.scene.overrideMaterial = null;\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tTHREE.CustomPostShader = {\n\t  uniforms: {\n\t    \"tDiffuse\": {type: \"t\", value: null},\n\t    \"resolution\": {type: \"v2\", value: new THREE.Vector2(1 / 1024, 1 / 512)},\n\t    \"time\": {type: \"f\", value: 0},\n\t    \"nIntensity\": {type: \"f\", value: 0.05},\n\t  },\n\t  vertexShader: __webpack_require__(50),\n\t  fragmentShader: __webpack_require__(51),\n\t};\n\t\n\tTHREE.CustomPostPass = function (noiseIntensity, resolution) {\n\t  var shader = THREE.CustomPostShader;\n\t\n\t  this.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\t\n\t  this.material = new THREE.ShaderMaterial({\n\t    uniforms: this.uniforms,\n\t    vertexShader: shader.vertexShader,\n\t    fragmentShader: shader.fragmentShader\n\t  });\n\t\n\t  this.uniforms.nIntensity.value = resolution;\n\t  if ( noiseIntensity !== undefined ) this.uniforms.nIntensity.value = noiseIntensity;\n\t\n\t  this.enabled = true;\n\t  this.renderToScreen = false;\n\t  this.needsSwap = true;\n\t\n\t  this.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t  this.scene  = new THREE.Scene();\n\t\n\t  this.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t  this.scene.add( this.quad );\n\t};\n\t\n\tTHREE.CustomPostPass.prototype = {\n\t  render: function (renderer, writeBuffer, readBuffer, delta) {\n\t    this.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t    this.uniforms[ \"time\" ].value += delta;\n\t\n\t    this.quad.material = this.material;\n\t\n\t    if ( this.renderToScreen ) {\n\t      renderer.render( this.scene, this.camera );\n\t    } else {\n\t      renderer.render( this.scene, this.camera, writeBuffer, false );\n\t    }\n\t  }\n\t};\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author davidedc / http://www.sketchpatch.net/\n\t *\n\t * NVIDIA FXAA by Timothy Lottes\n\t * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\n\t * - WebGL port by @supereggbert\n\t * http://www.glge.org/demos/fxaa/\n\t */\n\t\n\tTHREE.FXAAShader = {\n\t\n\t\tuniforms: {\n\t\n\t\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\t\"resolution\": { type: \"v2\", value: new THREE.Vector2( 1 / 1024, 1 / 512 )  }\n\t\n\t\t},\n\t\n\t\tvertexShader: [\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tfragmentShader: [\n\t\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform vec2 resolution;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"#define FXAA_REDUCE_MIN   (1.0/128.0)\",\n\t\t\t\"#define FXAA_REDUCE_MUL   (1.0/8.0)\",\n\t\t\t\"#define FXAA_SPAN_MAX     8.0\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );\",\n\t\t\t\t\"vec3 rgbM  = rgbaM.xyz;\",\n\t\t\t\t\"float opacity  = rgbaM.w;\",\n\t\n\t\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\t\n\t\t\t\t\"float lumaNW = dot( rgbNW, luma );\",\n\t\t\t\t\"float lumaNE = dot( rgbNE, luma );\",\n\t\t\t\t\"float lumaSW = dot( rgbSW, luma );\",\n\t\t\t\t\"float lumaSE = dot( rgbSE, luma );\",\n\t\t\t\t\"float lumaM  = dot( rgbM,  luma );\",\n\t\t\t\t\"float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\",\n\t\t\t\t\"float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\",\n\t\n\t\t\t\t\"vec2 dir;\",\n\t\t\t\t\"dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\",\n\t\t\t\t\"dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\",\n\t\n\t\t\t\t\"float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\",\n\t\n\t\t\t\t\"float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\",\n\t\t\t\t\"dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\",\n\t\t\t\t\t  \"max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\",\n\t\t\t\t\t\t\t\"dir * rcpDirMin)) * resolution;\",\n\t\n\t\t\t\t\"vec3 rgbA = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\t\"rgbA += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\t\"rgbA *= 0.5;\",\n\t\n\t\t\t\t\"vec3 rgbB = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz;\",\n\t\t\t\t\"rgbB += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz;\",\n\t\t\t\t\"rgbB *= 0.25;\",\n\t\t\t\t\"rgbB += rgbA * 0.5;\",\n\t\n\t\t\t\t\"float lumaB = dot( rgbB, luma );\",\n\t\n\t\t\t\t\"if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\",\n\t\n\t\t\t\t\t\"gl_FragColor = vec4( rgbA, opacity );\",\n\t\n\t\t\t\t\"} else {\",\n\t\n\t\t\t\t\t\"gl_FragColor = vec4( rgbB, opacity );\",\n\t\n\t\t\t\t\"}\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\")\n\t\n\t};\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Convolution shader\n\t * ported from o3d sample to WebGL / GLSL\n\t * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\n\t */\n\t\n\tTHREE.ConvolutionShader = {\n\t\n\t\tdefines: {\n\t\n\t\t\t\"KERNEL_SIZE_FLOAT\": \"25.0\",\n\t\t\t\"KERNEL_SIZE_INT\": \"25\",\n\t\n\t\t},\n\t\n\t\tuniforms: {\n\t\n\t\t\t\"tDiffuse\":        { type: \"t\", value: null },\n\t\t\t\"uImageIncrement\": { type: \"v2\", value: new THREE.Vector2( 0.001953125, 0.0 ) },\n\t\t\t\"cKernel\":         { type: \"fv1\", value: [] }\n\t\n\t\t},\n\t\n\t\tvertexShader: [\n\t\n\t\t\t\"uniform vec2 uImageIncrement;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tfragmentShader: [\n\t\n\t\t\t\"uniform float cKernel[ KERNEL_SIZE_INT ];\",\n\t\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform vec2 uImageIncrement;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vec2 imageCoord = vUv;\",\n\t\t\t\t\"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\n\t\n\t\t\t\t\"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\n\t\n\t\t\t\t\t\"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\n\t\t\t\t\t\"imageCoord += uImageIncrement;\",\n\t\n\t\t\t\t\"}\",\n\t\n\t\t\t\t\"gl_FragColor = sum;\",\n\t\n\t\t\t\"}\"\n\t\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tbuildKernel: function ( sigma ) {\n\t\n\t\t\t// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\n\t\n\t\t\tfunction gauss( x, sigma ) {\n\t\n\t\t\t\treturn Math.exp( - ( x * x ) / ( 2.0 * sigma * sigma ) );\n\t\n\t\t\t}\n\t\n\t\t\tvar i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil( sigma * 3.0 ) + 1;\n\t\n\t\t\tif ( kernelSize > kMaxKernelSize ) kernelSize = kMaxKernelSize;\n\t\t\thalfWidth = ( kernelSize - 1 ) * 0.5;\n\t\n\t\t\tvalues = new Array( kernelSize );\n\t\t\tsum = 0.0;\n\t\t\tfor ( i = 0; i < kernelSize; ++i ) {\n\t\n\t\t\t\tvalues[ i ] = gauss( i - halfWidth, sigma );\n\t\t\t\tsum += values[ i ];\n\t\n\t\t\t}\n\t\n\t\t\t// normalize the kernel\n\t\n\t\t\tfor ( i = 0; i < kernelSize; ++i ) values[ i ] /= sum;\n\t\n\t\t\treturn values;\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author felixturner / http://airtight.cc/\n\t *\n\t * RGB Shift Shader\n\t * Shifts red and blue channels from center in opposite directions\n\t * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n\t * by Tom Butterworth / http://kriss.cx/tom/\n\t *\n\t * amount: shift distance (1 is width of input)\n\t * angle: shift angle in radians\n\t */\n\t\n\tTHREE.DigitalGlitch2 = {\n\t\n\t  uniforms: {\n\t\n\t    \"tDiffuse\":   { type: \"t\", value: null },//diffuse texture\n\t    \"tDisp\":    { type: \"t\", value: null },//displacement texture for digital glitch squares\n\t    \"tScratch\":   { type: \"t\", value: null },//scratch texture\n\t    \"byp\":      { type: \"i\", value: 0 },//apply the glitch ?\n\t    \"amount\":   { type: \"f\", value: 0.08 },\n\t    \"angle\":    { type: \"f\", value: 0.02 },\n\t    \"seed\":     { type: \"f\", value: 0.02 },\n\t    \"seed_x\":   { type: \"f\", value: 0.02 },//-1,1\n\t    \"seed_y\":   { type: \"f\", value: 0.02 },//-1,1\n\t    \"distortion_x\": { type: \"f\", value: 0.5 },\n\t    \"distortion_y\": { type: \"f\", value: 0.6 },\n\t    \"col_s\":    { type: \"f\", value: 0.05 }\n\t  },\n\t\n\t  vertexShader: [\n\t\n\t    \"varying vec2 vUv;\",\n\t    \"void main() {\",\n\t      \"vUv = uv;\",\n\t      \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t    \"}\"\n\t  ].join(\"\\n\"),\n\t\n\t  fragmentShader: [\n\t    \"uniform int byp;\",//should we apply the glitch ?\n\t\n\t    \"uniform sampler2D tDiffuse;\",\n\t    \"uniform sampler2D tDisp;\",\n\t    \"uniform sampler2D tScratch;\",\n\t\n\t    \"uniform float amount;\",\n\t    \"uniform float angle;\",\n\t    \"uniform float seed;\",\n\t    \"uniform float seed_x;\",\n\t    \"uniform float seed_y;\",\n\t    \"uniform float distortion_x;\",\n\t    \"uniform float distortion_y;\",\n\t    \"uniform float col_s;\",\n\t\n\t    \"varying vec2 vUv;\",\n\t\n\t\n\t    \"float rand(vec2 co){\",\n\t      \"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\n\t    \"}\",\n\t\n\t    \"float luma(vec3 color) {\",\n\t      \"return dot(color, vec3(0.299, 0.587, 0.114));\",\n\t    \"}\",\n\t\n\t    \"float luma(vec4 color) {\",\n\t      \"return dot(color.rgb, vec3(0.299, 0.587, 0.114));\",\n\t    \"}\",\n\t\n\t    \"void main() {\",\n\t      // ref for dust/scratch: https://gist.github.com/mattdesl/253aece2d3eaac505823\n\t      \"vec2 p = vUv;\",\n\t      \"vec4 scratches = texture2D(tScratch, p);\",\n\t\n\t\n\t      // https://github.com/mattdesl/lwjgl-basics/wiki/ShaderLesson3\n\t      \"if(byp<1) {\",\n\t        \"float xs = floor(gl_FragCoord.x / 0.5);\",\n\t        \"float ys = floor(gl_FragCoord.y / 0.5);\",\n\t        //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n\t        \"vec4 normal = texture2D (tDisp, p*seed*seed);\",\n\t        \"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\",\n\t          \"if(seed_x>0.){\",\n\t            \"p.y = 1. - (p.y + distortion_y);\",\n\t          \"}\",\n\t          \"else {\",\n\t            \"p.y = distortion_y;\",\n\t          \"}\",\n\t        \"}\",\n\t        \"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\",\n\t          \"if(seed_y>0.){\",\n\t            \"p.x=distortion_x;\",\n\t          \"}\",\n\t          \"else {\",\n\t            \"p.x = 1. - (p.x + distortion_x);\",\n\t          \"}\",\n\t        \"}\",\n\t        \"p.x+=normal.x*seed_x*(seed/5.);\",\n\t        \"p.y+=normal.y*seed_y*(seed/5.);\",\n\t        //base from RGB shift shader\n\t        \"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\n\t        \"vec4 cr = texture2D(tDiffuse, p + offset);\",\n\t        \"vec4 cga = texture2D(tDiffuse, p);\",\n\t        \"vec4 cb = texture2D(tDiffuse, p - offset);\",\n\t\n\t        \"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\n\t        //add noise\n\t        \"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\",\n\t        \"gl_FragColor = gl_FragColor+ snow;\",\n\t      \"}\",\n\t      \"else {\",\n\t        \"gl_FragColor=texture2D (tDiffuse, vUv);\",\n\t      \"}\",\n\t\n\t      \"vec3 scratchBlend = gl_FragColor.rgb + scratches.rgb;\",\n\t      // vignette scratch so that it affect only edges.\n\t      \"float center = smoothstep(0.0, 0.5, length(vUv-0.5));\",\n\t      \"float luminance = luma(gl_FragColor.rgb);\",\n\t      \"float brightnessMap = smoothstep(0.1, 0.4, luminance * center );\",\n\t      \"gl_FragColor.rgb = mix(gl_FragColor.rgb, scratchBlend, brightnessMap);\",\n\t    \"}\"\n\t\n\t  ].join(\"\\n\")\n\t\n\t};\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedLine, Lines, SpreadedObjects;\n\t  AnimatedLine = __webpack_require__(45);\n\t  SpreadedObjects = __webpack_require__(46);\n\t  return Lines = (function(superClass) {\n\t    extend(Lines, superClass);\n\t\n\t    function Lines() {\n\t      return Lines.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Lines.prototype.getItemClass = function() {\n\t      return AnimatedLine;\n\t    };\n\t\n\t    return Lines;\n\t\n\t  })(SpreadedObjects);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Camera, THREE;\n\t  THREE = __webpack_require__(2);\n\t  return Camera = (function() {\n\t    Camera.properties = {\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 700\n\t      },\n\t      target_x: {\n\t        name: 'target_x',\n\t        label: 'target x',\n\t        val: 0\n\t      },\n\t      target_y: {\n\t        name: 'target_y',\n\t        label: 'target y',\n\t        val: 0\n\t      },\n\t      target_z: {\n\t        name: 'target_z',\n\t        label: 'target z',\n\t        val: 0\n\t      },\n\t      fov: {\n\t        name: 'fov',\n\t        label: 'fov',\n\t        val: 45\n\t      }\n\t    };\n\t\n\t    function Camera(values1, time) {\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.isCamera = true;\n\t      this.target = new THREE.Vector3(this.values.target_x, this.values.target_y, this.values.target_z);\n\t      this.container = new THREE.PerspectiveCamera(this.values.fov, window.innerWidth / window.innerHeight, 1, 2000);\n\t      this.container.position.set(this.values.x, this.values.y, this.values.z);\n\t    }\n\t\n\t    Camera.prototype.update = function(seconds, values, force) {\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values.fov != null) {\n\t        this.container.fov = values.fov;\n\t      }\n\t      this.container.position.set(values.x, values.y, values.z);\n\t      this.target.set(values.target_x, values.target_y, values.target_z);\n\t      return this.container.lookAt(this.target);\n\t    };\n\t\n\t    Camera.prototype.destroy = function() {\n\t      delete this.container;\n\t      return delete this.isCamera;\n\t    };\n\t\n\t    return Camera;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedCircle, Circles, SpreadedObjects;\n\t  AnimatedCircle = __webpack_require__(47);\n\t  SpreadedObjects = __webpack_require__(46);\n\t  return Circles = (function(superClass) {\n\t    extend(Circles, superClass);\n\t\n\t    function Circles() {\n\t      return Circles.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Circles.prototype.getItemClass = function() {\n\t      return AnimatedCircle;\n\t    };\n\t\n\t    return Circles;\n\t\n\t  })(SpreadedObjects);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedBox, Boxes, SpreadedObjects;\n\t  AnimatedBox = __webpack_require__(48);\n\t  SpreadedObjects = __webpack_require__(46);\n\t  return Boxes = (function(superClass) {\n\t    extend(Boxes, superClass);\n\t\n\t    function Boxes() {\n\t      return Boxes.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Boxes.prototype.getItemClass = function() {\n\t      return AnimatedBox;\n\t    };\n\t\n\t    return Boxes;\n\t\n\t  })(SpreadedObjects);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Colors, ElementBase, RNG, ShaderFragement, ShaderVertex, SingleObject, THREE, _;\n\t  _ = __webpack_require__(15);\n\t  THREE = __webpack_require__(2);\n\t  RNG = __webpack_require__(40);\n\t  ElementBase = __webpack_require__(36);\n\t  Colors = __webpack_require__(37);\n\t  ShaderVertex = __webpack_require__(43);\n\t  ShaderFragement = __webpack_require__(44);\n\t  return SingleObject = (function(superClass) {\n\t    extend(SingleObject, superClass);\n\t\n\t    SingleObject.properties = {\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      rotX: {\n\t        name: 'rotX',\n\t        label: 'rotation x',\n\t        val: 0\n\t      },\n\t      rotY: {\n\t        name: 'rotY',\n\t        label: 'rotation y',\n\t        val: 0\n\t      },\n\t      rotZ: {\n\t        name: 'rotZ',\n\t        label: 'rotation z',\n\t        val: 0\n\t      },\n\t      scaleX: {\n\t        name: 'scaleX',\n\t        label: 'scale x',\n\t        val: 1\n\t      },\n\t      scaleY: {\n\t        name: 'scaleY',\n\t        label: 'scale y',\n\t        val: 1\n\t      },\n\t      scaleZ: {\n\t        name: 'scaleZ',\n\t        label: 'scale z',\n\t        val: 1\n\t      },\n\t      color: {\n\t        name: 'color',\n\t        label: 'color',\n\t        'type': 'color',\n\t        val: \"#888888\"\n\t      },\n\t      opacity: {\n\t        name: 'opacity',\n\t        label: 'opacity',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1\n\t      }\n\t    };\n\t\n\t    function SingleObject(values1, time) {\n\t      var color, key, prop, ref;\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.getGeometry = bind(this.getGeometry, this);\n\t      ref = this.getDefaultProperties();\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      SingleObject.__super__.constructor.apply(this, arguments);\n\t      this.timeline = new TimelineMax();\n\t      color = new THREE.Color(values.color);\n\t      this.material = this.getMaterial(color);\n\t      this.container = new THREE.Mesh(this.getGeometry(), this.material);\n\t    }\n\t\n\t    SingleObject.prototype.getDefaultProperties = function() {\n\t      return SingleObject.properties;\n\t    };\n\t\n\t    SingleObject.prototype.getGeometry = function() {\n\t      return new THREE.PlaneGeometry(100, 100);\n\t    };\n\t\n\t    SingleObject.prototype.destroy = function() {\n\t      SingleObject.__super__.destroy.apply(this, arguments);\n\t      if (this.container) {\n\t        if (this.container.parent) {\n\t          this.container.parent.remove(this.container);\n\t        }\n\t        delete this.container;\n\t      }\n\t      delete this.geometry;\n\t      return delete this.timeline;\n\t    };\n\t\n\t    SingleObject.prototype.update = function(seconds, values, force) {\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values === false) {\n\t        values = this.values;\n\t      }\n\t      if (force || this.valueChanged(\"x\", values) || this.valueChanged(\"y\", values) || this.valueChanged(\"z\", values)) {\n\t        this.container.position.set(values.x, values.y, values.z);\n\t      }\n\t      if (force || this.valueChanged(\"rotX\", values) || this.valueChanged(\"rotY\", values) || this.valueChanged(\"rotZ\", values)) {\n\t        this.container.rotation.set(this.degreeToRadian(values.rotX), this.degreeToRadian(values.rotY), this.degreeToRadian(values.rotZ));\n\t      }\n\t      if (force || this.valueChanged(\"scaleX\", values) || this.valueChanged(\"scaleY\", values) || this.valueChanged(\"scaleZ\", values)) {\n\t        values.scaleX = values.scaleX || 0.000000001;\n\t        values.scaleY = values.scaleY || 0.000000001;\n\t        values.scaleZ = values.scaleZ || 0.000000001;\n\t        this.container.scale.set(values.scaleX, values.scaleY, values.scaleZ);\n\t      }\n\t      if (force || this.valueChanged(\"color\", values)) {\n\t        this.material.color = new THREE.Color(values.color);\n\t      }\n\t      if (force || this.valueChanged(\"opacity\", values)) {\n\t        this.material.opacity = values.opacity;\n\t      }\n\t    };\n\t\n\t    SingleObject.prototype.getMaterial = function(color) {\n\t      var material;\n\t      material = new THREE.MeshPhongMaterial({\n\t        ambient: 0x030303,\n\t        color: 0xdddddd,\n\t        specular: 0x888888,\n\t        shininess: 30,\n\t        shading: THREE.FlatShading\n\t      });\n\t      material.transparent = true;\n\t      material.depthWrite = false;\n\t      material.depthTest = false;\n\t      material.side = THREE.DoubleSide;\n\t      material.blending = THREE.AdditiveBlending;\n\t      return material;\n\t    };\n\t\n\t    return SingleObject;\n\t\n\t  })(ElementBase);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Circle, Colors, RNG, RingGeometry2, ShaderFragement, ShaderVertex, SingleObject, THREE, _;\n\t  _ = __webpack_require__(15);\n\t  THREE = __webpack_require__(2);\n\t  RNG = __webpack_require__(40);\n\t  SingleObject = __webpack_require__(34);\n\t  Colors = __webpack_require__(37);\n\t  RingGeometry2 = __webpack_require__(49);\n\t  ShaderVertex = __webpack_require__(43);\n\t  ShaderFragement = __webpack_require__(44);\n\t  return Circle = (function(superClass) {\n\t    extend(Circle, superClass);\n\t\n\t    function Circle() {\n\t      this.getGeometry = bind(this.getGeometry, this);\n\t      return Circle.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Circle.properties = {\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      rotX: {\n\t        name: 'rotX',\n\t        label: 'rotation x',\n\t        val: 0\n\t      },\n\t      rotY: {\n\t        name: 'rotY',\n\t        label: 'rotation y',\n\t        val: 0\n\t      },\n\t      rotZ: {\n\t        name: 'rotZ',\n\t        label: 'rotation z',\n\t        val: 0\n\t      },\n\t      scaleX: {\n\t        name: 'scaleX',\n\t        label: 'scale x',\n\t        val: 1\n\t      },\n\t      scaleY: {\n\t        name: 'scaleY',\n\t        label: 'scale y',\n\t        val: 1\n\t      },\n\t      scaleZ: {\n\t        name: 'scaleZ',\n\t        label: 'scale z',\n\t        val: 1\n\t      },\n\t      innerRadius: {\n\t        name: 'innerRadius',\n\t        label: 'innerRadius',\n\t        val: 0.7,\n\t        min: 0,\n\t        max: 1\n\t      },\n\t      angle: {\n\t        name: 'angle',\n\t        label: 'angle',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1\n\t      },\n\t      color: {\n\t        name: 'color',\n\t        label: 'color',\n\t        'type': 'color',\n\t        val: \"#888888\"\n\t      },\n\t      opacity: {\n\t        name: 'opacity',\n\t        label: 'opacity',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1\n\t      }\n\t    };\n\t\n\t    Circle.prototype.getDefaultProperties = function() {\n\t      return Circle.properties;\n\t    };\n\t\n\t    Circle.prototype.getGeometry = function() {\n\t      var angle, inner_radius, pi2;\n\t      inner_radius = this.values.innerRadius || 0.000000001;\n\t      inner_radius = Math.min(0.999999999, inner_radius);\n\t      pi2 = Math.PI * 2;\n\t      angle = this.values.angle * pi2;\n\t      return new RingGeometry2(100 * inner_radius, 100, 30, 1, 0, angle);\n\t    };\n\t\n\t    Circle.prototype.update = function(seconds, values, force) {\n\t      var geom;\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      Circle.__super__.update.apply(this, arguments);\n\t      if (force || this.valueChanged(\"innerRadius\", values) || this.valueChanged(\"angle\", values)) {\n\t        geom = this.getGeometry();\n\t        this.container.geometry.dynamic = true;\n\t        this.container.geometry.vertices = geom.vertices;\n\t        this.container.geometry.verticesNeedUpdate = true;\n\t        geom.dispose();\n\t      }\n\t    };\n\t\n\t    return Circle;\n\t\n\t  })(SingleObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var ElementBase;\n\t  return ElementBase = (function() {\n\t    function ElementBase(values1, time) {\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.destroy = bind(this.destroy, this);\n\t      this.cache = this.buildCache();\n\t    }\n\t\n\t    ElementBase.prototype.buildCache = function() {\n\t      var cache, key, prop, ref;\n\t      cache = {};\n\t      ref = this.values;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        cache[key] = prop.val;\n\t      }\n\t      return cache;\n\t    };\n\t\n\t    ElementBase.prototype.valueChanged = function(key, values) {\n\t      var has_changed, new_val;\n\t      if (values[key] == null) {\n\t        return false;\n\t      }\n\t      new_val = values[key];\n\t      has_changed = true;\n\t      if ((this.cache[key] != null) && this.cache[key] === new_val) {\n\t        has_changed = false;\n\t      }\n\t      this.cache[key] = new_val;\n\t      return has_changed;\n\t    };\n\t\n\t    ElementBase.prototype.degreeToRadian = function(degree) {\n\t      return Math.PI * degree / 180;\n\t    };\n\t\n\t    ElementBase.prototype.destroy = function() {\n\t      return delete this.cache;\n\t    };\n\t\n\t    return ElementBase;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Colors, THREE, items, items2, length;\n\t  THREE = __webpack_require__(2);\n\t  items = [new THREE.Color(0xffffff), new THREE.Color(0x86d1b8), new THREE.Color(0x65c282)];\n\t  items2 = [new THREE.Color(0xffffff), new THREE.Color(0x023750), new THREE.Color(0x028A9E), new THREE.Color(0x0EBFA9), new THREE.Color(0xF2C01D), new THREE.Color(0xD93024)];\n\t  length = items.length;\n\t  return Colors = (function() {\n\t    function Colors() {}\n\t\n\t    Colors.get = function(index) {\n\t      index = Math.abs(parseInt(index, 10));\n\t      return items[index % length];\n\t    };\n\t\n\t    return Colors;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;// Modified to have uv on the edges.\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var THREE = __webpack_require__(2);\n\t\n\tTHREE.CircleGeometry2 = function ( radius, segments, thetaStart, thetaLength ) {\n\t\n\t\tTHREE.Geometry.call( this );\n\t\n\t\tthis.type = 'CircleGeometry2';\n\t\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\t\n\t\tradius = radius || 50;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\t\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\t\n\t\tvar i, uvs = [],\n\t\tcenter = new THREE.Vector3(),\n\t  centerUV = new THREE.Vector2( 0, 0 );\n\t  //centerUV = new THREE.Vector2( 0.5, 0.5 );\n\t\n\t\tthis.vertices.push(center);\n\t\tuvs.push( centerUV );\n\t\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\t\n\t\t\tvar vertex = new THREE.Vector3();\n\t\t\tvar segment = thetaStart + i / segments * thetaLength;\n\t\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\t\n\t\t\tthis.vertices.push( vertex );\n\t\t\t//uvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\n\t\n\t    uvs.push(new THREE.Vector2(1, i / segments));\n\t\t}\n\t\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\n\t\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\t\n\t\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\t//this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\n\t    this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), new THREE.Vector2(0, i / segments) ] );\n\t\n\t\t}\n\t\n\t\tthis.computeFaceNormals();\n\t\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\t\n\t};\n\t\n\tTHREE.CircleGeometry2.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.CircleGeometry2.prototype.constructor = THREE.CircleGeometry2;\n\t\n\treturn THREE.CircleGeometry2;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Seedable random number generator functions.\n\t * @version 1.0.0\n\t * @license Public Domain\n\t *\n\t * @example\n\t * var rng = new RNG('Example');\n\t * rng.random(40, 50);  // =>  42\n\t * rng.uniform();       // =>  0.7972798995050903\n\t * rng.normal();        // => -0.6698504543216376\n\t * rng.exponential();   // =>  1.0547367609131555\n\t * rng.poisson(4);      // =>  2\n\t * rng.gamma(4);        // =>  2.781724687386858\n\t */\n\t\n\t/**\n\t * @param {String} seed A string to seed the generator.\n\t * @constructor\n\t */\n\tfunction RC4(seed) {\n\t    this.s = new Array(256);\n\t    this.i = 0;\n\t    this.j = 0;\n\t    for (var i = 0; i < 256; i++) {\n\t        this.s[i] = i;\n\t    }\n\t    if (seed) {\n\t        this.mix(seed);\n\t    }\n\t}\n\t\n\t/**\n\t * Get the underlying bytes of a string.\n\t * @param {string} string\n\t * @returns {Array} An array of bytes\n\t */\n\tRC4.getStringBytes = function(string) {\n\t    var output = [];\n\t    for (var i = 0; i < string.length; i++) {\n\t        var c = string.charCodeAt(i);\n\t        var bytes = [];\n\t        do {\n\t            bytes.push(c & 0xFF);\n\t            c = c >> 8;\n\t        } while (c > 0);\n\t        output = output.concat(bytes.reverse());\n\t    }\n\t    return output;\n\t};\n\t\n\tRC4.prototype._swap = function(i, j) {\n\t    var tmp = this.s[i];\n\t    this.s[i] = this.s[j];\n\t    this.s[j] = tmp;\n\t};\n\t\n\t/**\n\t * Mix additional entropy into this generator.\n\t * @param {String} seed\n\t */\n\tRC4.prototype.mix = function(seed) {\n\t    var input = RC4.getStringBytes(seed);\n\t    var j = 0;\n\t    for (var i = 0; i < this.s.length; i++) {\n\t        j += this.s[i] + input[i % input.length];\n\t        j %= 256;\n\t        this._swap(i, j);\n\t    }\n\t};\n\t\n\t/**\n\t * @returns {number} The next byte of output from the generator.\n\t */\n\tRC4.prototype.next = function() {\n\t    this.i = (this.i + 1) % 256;\n\t    this.j = (this.j + this.s[this.i]) % 256;\n\t    this._swap(this.i, this.j);\n\t    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n\t};\n\t\n\t/**\n\t * Create a new random number generator with optional seed. If the\n\t * provided seed is a function (i.e. Math.random) it will be used as\n\t * the uniform number generator.\n\t * @param seed An arbitrary object used to seed the generator.\n\t * @constructor\n\t */\n\tfunction RNG(seed) {\n\t    if (seed == null) {\n\t        seed = (Math.random() + Date.now()).toString();\n\t    } else if (typeof seed === \"function\") {\n\t        // Use it as a uniform number generator\n\t        this.uniform = seed;\n\t        this.nextByte = function() {\n\t            return ~~(this.uniform() * 256);\n\t        };\n\t        seed = null;\n\t    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n\t        seed = JSON.stringify(seed);\n\t    }\n\t    this._normal = null;\n\t    if (seed) {\n\t        this._state = new RC4(seed);\n\t    } else {\n\t        this._state = null;\n\t    }\n\t}\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 255.\n\t */\n\tRNG.prototype.nextByte = function() {\n\t    return this._state.next();\n\t};\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 1.\n\t */\n\tRNG.prototype.uniform = function() {\n\t    var BYTES = 7; // 56 bits to make a 53-bit double\n\t    var output = 0;\n\t    for (var i = 0; i < BYTES; i++) {\n\t        output *= 256;\n\t        output += this.nextByte();\n\t    }\n\t    return output / (Math.pow(2, BYTES * 8) - 1);\n\t};\n\t\n\t/**\n\t * Produce a random integer within [n, m).\n\t * @param {number} [n=0]\n\t * @param {number} m\n\t *\n\t */\n\tRNG.prototype.random = function(n, m) {\n\t    if (n == null) {\n\t        return this.uniform();\n\t    } else if (m == null) {\n\t        m = n;\n\t        n = 0;\n\t    }\n\t    return n + Math.floor(this.uniform() * (m - n));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() with the Box-Muller transform.\n\t * @returns {number} Normally-distributed random number of mean 0, variance 1.\n\t */\n\tRNG.prototype.normal = function() {\n\t    if (this._normal !== null) {\n\t        var n = this._normal;\n\t        this._normal = null;\n\t        return n;\n\t    } else {\n\t        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n\t        var y = this.uniform();\n\t        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n\t        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n\t    }\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform().\n\t * @returns {number} Number from the exponential distribution, lambda = 1.\n\t */\n\tRNG.prototype.exponential = function() {\n\t    return -Math.log(this.uniform() || Math.pow(2, -53));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() and Knuth's method.\n\t * @param {number} [mean=1]\n\t * @returns {number} Number from the Poisson distribution.\n\t */\n\tRNG.prototype.poisson = function(mean) {\n\t    var L = Math.exp(-(mean || 1));\n\t    var k = 0, p = 1;\n\t    do {\n\t        k++;\n\t        p *= this.uniform();\n\t    } while (p > L);\n\t    return k - 1;\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform(), this.normal(),\n\t * this.exponential(), and the Marsaglia-Tsang method.\n\t * @param {number} a\n\t * @returns {number} Number from the gamma distribution.\n\t */\n\tRNG.prototype.gamma = function(a) {\n\t    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n\t    var c = 1 / Math.sqrt(9 * d);\n\t    do {\n\t        do {\n\t            var x = this.normal();\n\t            var v = Math.pow(c * x + 1, 3);\n\t        } while (v <= 0);\n\t        var u = this.uniform();\n\t        var x2 = Math.pow(x, 2);\n\t    } while (u >= 1 - 0.0331 * x2 * x2 &&\n\t             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n\t    if (a < 1) {\n\t        return d * v * Math.exp(this.exponential() / -a);\n\t    } else {\n\t        return d * v;\n\t    }\n\t};\n\t\n\t/**\n\t * Accepts a dice rolling notation string and returns a generator\n\t * function for that distribution. The parser is quite flexible.\n\t * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n\t * @param {RNG} rng An optional RNG object.\n\t * @returns {Function}\n\t */\n\tRNG.roller = function(expr, rng) {\n\t    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n\t    var dice = parseFloat(parts[0]) || 1;\n\t    var sides = parseFloat(parts[1]);\n\t    var mod = parseFloat(parts[2]) || 0;\n\t    rng = rng || new RNG();\n\t    return function() {\n\t        var total = dice + mod;\n\t        for (var i = 0; i < dice; i++) {\n\t            total += rng.random(sides);\n\t        }\n\t        return total;\n\t    };\n\t};\n\t\n\t/* Provide a pre-made generator instance. */\n\tRNG.$ = new RNG();\n\t\n\t\n\t/*** EXPORTS FROM exports-loader ***/\n\tmodule.exports = RNG\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Seedable random number generator functions.\n\t * @version 1.0.0\n\t * @license Public Domain\n\t *\n\t * @example\n\t * var rng = new RNG('Example');\n\t * rng.random(40, 50);  // =>  42\n\t * rng.uniform();       // =>  0.7972798995050903\n\t * rng.normal();        // => -0.6698504543216376\n\t * rng.exponential();   // =>  1.0547367609131555\n\t * rng.poisson(4);      // =>  2\n\t * rng.gamma(4);        // =>  2.781724687386858\n\t */\n\t\n\t/**\n\t * @param {String} seed A string to seed the generator.\n\t * @constructor\n\t */\n\tfunction RC4(seed) {\n\t    this.s = new Array(256);\n\t    this.i = 0;\n\t    this.j = 0;\n\t    for (var i = 0; i < 256; i++) {\n\t        this.s[i] = i;\n\t    }\n\t    if (seed) {\n\t        this.mix(seed);\n\t    }\n\t}\n\t\n\t/**\n\t * Get the underlying bytes of a string.\n\t * @param {string} string\n\t * @returns {Array} An array of bytes\n\t */\n\tRC4.getStringBytes = function(string) {\n\t    var output = [];\n\t    for (var i = 0; i < string.length; i++) {\n\t        var c = string.charCodeAt(i);\n\t        var bytes = [];\n\t        do {\n\t            bytes.push(c & 0xFF);\n\t            c = c >> 8;\n\t        } while (c > 0);\n\t        output = output.concat(bytes.reverse());\n\t    }\n\t    return output;\n\t};\n\t\n\tRC4.prototype._swap = function(i, j) {\n\t    var tmp = this.s[i];\n\t    this.s[i] = this.s[j];\n\t    this.s[j] = tmp;\n\t};\n\t\n\t/**\n\t * Mix additional entropy into this generator.\n\t * @param {String} seed\n\t */\n\tRC4.prototype.mix = function(seed) {\n\t    var input = RC4.getStringBytes(seed);\n\t    var j = 0;\n\t    for (var i = 0; i < this.s.length; i++) {\n\t        j += this.s[i] + input[i % input.length];\n\t        j %= 256;\n\t        this._swap(i, j);\n\t    }\n\t};\n\t\n\t/**\n\t * @returns {number} The next byte of output from the generator.\n\t */\n\tRC4.prototype.next = function() {\n\t    this.i = (this.i + 1) % 256;\n\t    this.j = (this.j + this.s[this.i]) % 256;\n\t    this._swap(this.i, this.j);\n\t    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n\t};\n\t\n\t/**\n\t * Create a new random number generator with optional seed. If the\n\t * provided seed is a function (i.e. Math.random) it will be used as\n\t * the uniform number generator.\n\t * @param seed An arbitrary object used to seed the generator.\n\t * @constructor\n\t */\n\tfunction RNG(seed) {\n\t    if (seed == null) {\n\t        seed = (Math.random() + Date.now()).toString();\n\t    } else if (typeof seed === \"function\") {\n\t        // Use it as a uniform number generator\n\t        this.uniform = seed;\n\t        this.nextByte = function() {\n\t            return ~~(this.uniform() * 256);\n\t        };\n\t        seed = null;\n\t    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n\t        seed = JSON.stringify(seed);\n\t    }\n\t    this._normal = null;\n\t    if (seed) {\n\t        this._state = new RC4(seed);\n\t    } else {\n\t        this._state = null;\n\t    }\n\t}\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 255.\n\t */\n\tRNG.prototype.nextByte = function() {\n\t    return this._state.next();\n\t};\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 1.\n\t */\n\tRNG.prototype.uniform = function() {\n\t    var BYTES = 7; // 56 bits to make a 53-bit double\n\t    var output = 0;\n\t    for (var i = 0; i < BYTES; i++) {\n\t        output *= 256;\n\t        output += this.nextByte();\n\t    }\n\t    return output / (Math.pow(2, BYTES * 8) - 1);\n\t};\n\t\n\t/**\n\t * Produce a random integer within [n, m).\n\t * @param {number} [n=0]\n\t * @param {number} m\n\t *\n\t */\n\tRNG.prototype.random = function(n, m) {\n\t    if (n == null) {\n\t        return this.uniform();\n\t    } else if (m == null) {\n\t        m = n;\n\t        n = 0;\n\t    }\n\t    return n + Math.floor(this.uniform() * (m - n));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() with the Box-Muller transform.\n\t * @returns {number} Normally-distributed random number of mean 0, variance 1.\n\t */\n\tRNG.prototype.normal = function() {\n\t    if (this._normal !== null) {\n\t        var n = this._normal;\n\t        this._normal = null;\n\t        return n;\n\t    } else {\n\t        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n\t        var y = this.uniform();\n\t        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n\t        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n\t    }\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform().\n\t * @returns {number} Number from the exponential distribution, lambda = 1.\n\t */\n\tRNG.prototype.exponential = function() {\n\t    return -Math.log(this.uniform() || Math.pow(2, -53));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() and Knuth's method.\n\t * @param {number} [mean=1]\n\t * @returns {number} Number from the Poisson distribution.\n\t */\n\tRNG.prototype.poisson = function(mean) {\n\t    var L = Math.exp(-(mean || 1));\n\t    var k = 0, p = 1;\n\t    do {\n\t        k++;\n\t        p *= this.uniform();\n\t    } while (p > L);\n\t    return k - 1;\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform(), this.normal(),\n\t * this.exponential(), and the Marsaglia-Tsang method.\n\t * @param {number} a\n\t * @returns {number} Number from the gamma distribution.\n\t */\n\tRNG.prototype.gamma = function(a) {\n\t    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n\t    var c = 1 / Math.sqrt(9 * d);\n\t    do {\n\t        do {\n\t            var x = this.normal();\n\t            var v = Math.pow(c * x + 1, 3);\n\t        } while (v <= 0);\n\t        var u = this.uniform();\n\t        var x2 = Math.pow(x, 2);\n\t    } while (u >= 1 - 0.0331 * x2 * x2 &&\n\t             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n\t    if (a < 1) {\n\t        return d * v * Math.exp(this.exponential() / -a);\n\t    } else {\n\t        return d * v;\n\t    }\n\t};\n\t\n\t/**\n\t * Accepts a dice rolling notation string and returns a generator\n\t * function for that distribution. The parser is quite flexible.\n\t * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n\t * @param {RNG} rng An optional RNG object.\n\t * @returns {Function}\n\t */\n\tRNG.roller = function(expr, rng) {\n\t    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n\t    var dice = parseFloat(parts[0]) || 1;\n\t    var sides = parseFloat(parts[1]);\n\t    var mod = parseFloat(parts[2]) || 0;\n\t    rng = rng || new RNG();\n\t    return function() {\n\t        var total = dice + mod;\n\t        for (var i = 0; i < dice; i++) {\n\t            total += rng.random(sides);\n\t        }\n\t        return total;\n\t    };\n\t};\n\t\n\t/* Provide a pre-made generator instance. */\n\tRNG.$ = new RNG();\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nprecision highp float;\\n\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nfloat aastep_1_0(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\n\\n\\nvarying vec2 vUv;\\nuniform vec3 color;\\n// 0 hidden, 1 full, 2 hidden\\nuniform float percent;\\n\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\n\\n// Common\\n#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\n\\nfloat quadraticInOut(float t) {\\n  float p = 2.0 * t * t;\\n  return t < 0.5 ? p : -p + (4.0 * t) - 1.0;\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n  return a;\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n  return a;\\n}\\n\\nvoid main() {\\n  // For fog\\n  vec3 outgoingLight = vec3( 0.0 );\\t// outgoing light does not have an alpha, the surface does\\n  vec4 diffuseColor = vec4( color, 1.0 );\\n\\n  float alpha = 0.0;\\n\\n  float percentInOut = quadraticInOut(percent / 2.0) * 2.0;\\n\\n  if (vUv.x < percentInOut && vUv.x >= percentInOut - 1.0) {\\n    alpha = 1.0;\\n  }\\n\\n\\n  outgoingLight = diffuseColor.rgb;\\n\\n  float depth = gl_FragCoord.z / gl_FragCoord.w;\\n  float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n  fogFactor = whiteCompliment( fogFactor );\\n\\n  outgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n  gl_FragColor = vec4(outgoingLight, alpha);\\n}\\n\"\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\nvarying float noise;\\nuniform float time;\\nuniform float strength;\\nuniform float seed;\\n\\n//\\n// GLSL textureless classic 3D noise \\\"cnoise\\\",\\n// with an RSL-style periodic variant \\\"pnoise\\\".\\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\\n// Version: 2011-10-11\\n//\\n// Many thanks to Ian McEwan of Ashima Arts for the\\n// ideas for permutation and gradient selection.\\n//\\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\\n// Distributed under the MIT license. See LICENSE file.\\n// https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_1_0(vec3 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_1_0(vec4 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_1_1(vec4 x)\\n{\\n  return mod289_1_0(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_1_2(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nvec3 fade_1_3(vec3 t) {\\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\\n}\\n\\n// Classic Perlin noise, periodic variant\\nfloat pnoise_1_4(vec3 P, vec3 rep)\\n{\\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\\n  Pi0 = mod289_1_0(Pi0);\\n  Pi1 = mod289_1_0(Pi1);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute_1_1(permute_1_1(ix) + iy);\\n  vec4 ixy0 = permute_1_1(ixy + iz0);\\n  vec4 ixy1 = permute_1_1(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt_1_2(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt_1_2(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade_1_3(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n  return 2.2 * n_xyz;\\n}\\n\\n\\n\\n\\nfloat turbulence( vec3 p ) {\\n    float w = 100.0;\\n    float t = -.5;\\n    for (float f = 1.0 ; f <= 10.0 ; f++ ){\\n        float power = pow( 2.0, f );\\n        t += abs( pnoise_1_4( vec3( power * p ), vec3( 10.0, 10.0, 10.0 ) ) / power );\\n    }\\n    return t;\\n}\\n\\nvoid main() {\\n    vUv = uv;\\n\\n\\n    float time2 = time + seed;\\n\\n    // add time to the noise parameters so it's animated\\n    noise = 10.0 *  -.10 * turbulence( 10.5 * normal + time2 );\\n    float b = 5.0 * pnoise_1_4( 0.2 * position + vec3( 2.0 * time2 ), vec3( 100.0 ) );\\n    float displacement = - noise + b;\\n\\n    // Less displacement on center.\\n    displacement = displacement * vUv.x;\\n\\n    //vec3 newPosition = position + normal * displacement * strength * 30.0;\\n    //vec2 normal2 = normalize(uv - 0.5);\\n    vec3 normal2 = normalize(position - 0.5);\\n    float strengthMultiplier = 15.0;\\n    vec3 newPosition = position + vec3(normal2.x, normal2.y, 0.0) * displacement * strength * strengthMultiplier;\\n    //gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nprecision highp float;\\n\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nfloat aastep_1_0(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\n\\n\\nvarying vec2 vUv;\\nuniform vec3 color;\\n\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\n\\n// Common\\n#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\n\\nvec3 inputToLinear( in vec3 a ) {\\n  return a;\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n  return a;\\n}\\n\\nvoid main() {\\n  // For fog\\n  vec3 outgoingLight = vec3( 0.0 );\\t// outgoing light does not have an alpha, the surface does\\n  vec4 diffuseColor = vec4( color, 1.0 );\\n\\n  float alpha = 0.0;\\n  float wireframe_size = 0.01;\\n  float min_x = 0.0;\\n  float max_x = 1.0;\\n\\n  // If max is 1 then wireframe is is only half size.\\n  //max_x = max_x * 0.98;\\n\\n  // Get distance from edges.\\n  vec2 edgeX = abs(vec2(vUv.x - min_x, vUv.x - max_x));\\n  // Add the wireframe.\\n  edgeX = max(vec2(0.0, 0.0), edgeX - wireframe_size);\\n\\n  // Get the smallest distance from edges.\\n  float distance_x = min(edgeX.x, edgeX.y);\\n\\n\\n  alpha = aastep_1_0(distance_x, 0.01);\\n\\n\\n  // Add the fill alpha.\\n  if (vUv.x > min_x && vUv.x < max_x) {\\n    alpha = max(0.1, alpha);\\n  }\\n\\n  outgoingLight = diffuseColor.rgb;\\n\\n  float depth = gl_FragCoord.z / gl_FragCoord.w;\\n  float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n  fogFactor = whiteCompliment( fogFactor );\\n\\n  outgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n  gl_FragColor = vec4(outgoingLight, alpha);\\n  //vec3 k = vec3(1.0, 1.0, 1.0);\\n  //gl_FragColor = vec4( vec3( vUv, 0. ), 1. );\\n  //gl_FragColor = vec4( color, 1.0 );\\n}\\n\"\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedLine, AnimatedObject, THREE, _;\n\t  _ = __webpack_require__(15);\n\t  THREE = __webpack_require__(2);\n\t  AnimatedObject = __webpack_require__(53);\n\t  return AnimatedLine = (function(superClass) {\n\t    extend(AnimatedLine, superClass);\n\t\n\t    AnimatedLine.circleGeom = new THREE.PlaneBufferGeometry(100, 1);\n\t\n\t    AnimatedLine.ringGeom = false;\n\t\n\t    AnimatedLine.ringGeom2 = false;\n\t\n\t    AnimatedLine.noOutline = true;\n\t\n\t    function AnimatedLine() {\n\t      AnimatedLine.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    AnimatedLine.prototype.getGeometry = function() {\n\t      return AnimatedLine.circleGeom;\n\t    };\n\t\n\t    AnimatedLine.prototype.getGeometryOutline = function(outlineWidth) {\n\t      return false;\n\t    };\n\t\n\t    AnimatedLine.prototype.update = function(seconds, progression) {\n\t      var i, len, material, ref, scale, timeDiff;\n\t      this.container.position.add(this.velocity);\n\t      this.velocity = this.velocity.multiplyScalar(0.94);\n\t      timeDiff = Date.now() - this.start;\n\t      ref = this.materials;\n\t      for (i = 0, len = ref.length; i < len; i++) {\n\t        material = ref[i];\n\t        material.uniforms['time'].value = 0.00025 * timeDiff;\n\t      }\n\t      scale = this.animatedProperties.scale * this.values.size * 0.1;\n\t      return this.container.scale.set(1, scale, 1);\n\t    };\n\t\n\t    return AnimatedLine;\n\t\n\t  })(AnimatedObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Colors, ElementBase, RNG, SpreadedObjects, THREE, TweenMax, _;\n\t  _ = __webpack_require__(15);\n\t  THREE = __webpack_require__(2);\n\t  RNG = __webpack_require__(39);\n\t  TweenMax = __webpack_require__(52);\n\t  ElementBase = __webpack_require__(36);\n\t  Colors = __webpack_require__(37);\n\t  return SpreadedObjects = (function(superClass) {\n\t    extend(SpreadedObjects, superClass);\n\t\n\t    SpreadedObjects.properties = {\n\t      numItems: {\n\t        name: 'numItems',\n\t        label: 'num items',\n\t        val: 20,\n\t        triggerRebuild: true\n\t      },\n\t      seed: {\n\t        name: 'seed',\n\t        label: 'seed',\n\t        val: 12002,\n\t        triggerRebuild: true\n\t      },\n\t      randX: {\n\t        name: 'randX',\n\t        label: 'random x',\n\t        val: 80,\n\t        triggerRebuild: true\n\t      },\n\t      randY: {\n\t        name: 'randY',\n\t        label: 'random y',\n\t        val: 80,\n\t        triggerRebuild: true\n\t      },\n\t      randZ: {\n\t        name: 'randZ',\n\t        label: 'random z',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      randRotZ: {\n\t        name: 'randRotZ',\n\t        label: 'random rotation z',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      randScaleX: {\n\t        name: 'randScaleX',\n\t        label: 'random scale x',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      randScaleY: {\n\t        name: 'randScaleY',\n\t        label: 'random scale y',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      circleRadius: {\n\t        name: 'circleRadius',\n\t        label: 'circle radius',\n\t        val: 20\n\t      },\n\t      circleRadiusMax: {\n\t        name: 'circleRadiusMax',\n\t        label: 'circle radius max',\n\t        val: 20\n\t      },\n\t      progression: {\n\t        name: 'progression',\n\t        label: 'progression',\n\t        val: 1,\n\t        min: 0,\n\t        max: 2\n\t      },\n\t      depth: {\n\t        name: 'depth',\n\t        label: 'depth',\n\t        val: 0\n\t      },\n\t      percent_color: {\n\t        name: 'percent_color',\n\t        label: 'percent color',\n\t        val: 0.4,\n\t        triggerRebuild: true\n\t      },\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      rotX: {\n\t        name: 'rotX',\n\t        label: 'rotation x',\n\t        val: 0\n\t      },\n\t      rotY: {\n\t        name: 'rotY',\n\t        label: 'rotation y',\n\t        val: 0\n\t      },\n\t      rotZ: {\n\t        name: 'rotZ',\n\t        label: 'rotation z',\n\t        val: 0\n\t      }\n\t    };\n\t\n\t    function SpreadedObjects(values1, time) {\n\t      var key, prop, ref;\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      ref = SpreadedObjects.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      SpreadedObjects.__super__.constructor.apply(this, arguments);\n\t      this.timeline = new TimelineMax();\n\t      this.container = new THREE.Object3D();\n\t      this.totalDuration = 0;\n\t      this.items = [];\n\t      this.items_position = [];\n\t      this.build(time);\n\t    }\n\t\n\t    SpreadedObjects.prototype.getItemClass = function() {\n\t      return AnimatedCircle;\n\t    };\n\t\n\t    SpreadedObjects.prototype.rebuild = function(time) {\n\t      this.empty();\n\t      return this.build(time);\n\t    };\n\t\n\t    SpreadedObjects.prototype.empty = function() {\n\t      var item, j, len, ref;\n\t      if (!this.items || !this.items.length) {\n\t        return;\n\t      }\n\t      this.timeline.clear();\n\t      this.items_position = [];\n\t      ref = this.items;\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        item = ref[j];\n\t        this.container.remove(item.container);\n\t        item.destroy();\n\t      }\n\t      return this.items = [];\n\t    };\n\t\n\t    SpreadedObjects.prototype.build = function(time) {\n\t      var border_radius, color, delay, draw_circle, draw_outline, duration, fillColor, i, item, itemClass, j, pos, randRotZ, randScaleX, randScaleY, ref, rndtype, size, x, y, z;\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.rng = new RNG(this.values.seed);\n\t      this.rngAnimation = new RNG(this.values.seed + \"lorem\");\n\t      this.rngOutline = new RNG(this.values.seed);\n\t      for (i = j = 0, ref = this.values.numItems - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {\n\t        itemClass = this.getItemClass();\n\t        rndtype = this.rng.random(0, 1000) / 1000;\n\t        draw_outline = rndtype < 0.8 ? true : false;\n\t        draw_circle = rndtype > 0.5 ? true : false;\n\t        if (itemClass.noOutline) {\n\t          draw_outline = false;\n\t          draw_circle = true;\n\t        }\n\t        color = Colors.get(this.rng.random(0, 1000));\n\t        if (this.rng.random(0, 1000) > this.values.percent_color * 1000) {\n\t          color = Colors.get(0);\n\t        }\n\t        fillColor = color.clone();\n\t        if (draw_outline) {\n\t          fillColor.multiplyScalar(this.rng.random(0.1, 0.5));\n\t        }\n\t        size = this.rng.random(this.values.circleRadius, this.values.circleRadiusMax);\n\t        x = this.getRandomPosition(this.values.randX);\n\t        y = this.getRandomPosition(this.values.randY);\n\t        z = this.getRandomPosition(this.values.randZ);\n\t        randRotZ = this.rng.random(0, 1000) / 1000 * Math.PI * this.values.randRotZ;\n\t        randScaleX = this.rng.random(0, 1000) / 1000 * this.values.randScaleX;\n\t        randScaleY = this.rng.random(0, 1000) / 1000 * this.values.randScaleY;\n\t        pos = {\n\t          x: x,\n\t          y: y,\n\t          z: z\n\t        };\n\t        delay = this.rngAnimation.random(0, 2400) / 1000;\n\t        duration = this.rngAnimation.random(600, 800) / 1000;\n\t        duration *= 4;\n\t        border_radius = this.rngOutline.random(1, 400) / 100;\n\t        if (draw_outline === false) {\n\t          fillColor.multiplyScalar(3);\n\t        }\n\t        item = new itemClass({\n\t          size: size,\n\t          outlineWidth: border_radius,\n\t          drawOutline: draw_outline,\n\t          drawCircle: draw_circle,\n\t          color: color,\n\t          fillColor: fillColor,\n\t          delay: delay,\n\t          duration: duration,\n\t          depth: this.values.depth,\n\t          x: pos.x,\n\t          y: pos.y,\n\t          z: pos.z,\n\t          randRotZ: randRotZ,\n\t          randScaleX: randScaleX,\n\t          randScaleY: randScaleY\n\t        });\n\t        this.container.add(item.container);\n\t        this.timeline.add(item.timeline, 0);\n\t        this.items.push(item);\n\t        this.items_position.push(pos);\n\t      }\n\t      this.totalDuration = this.timeline.duration();\n\t      return this.update(time, this.values, true);\n\t    };\n\t\n\t    SpreadedObjects.prototype.update = function(seconds, values, force) {\n\t      var item, j, k, key, len, len1, needs_rebuild, pos, progression, prop, ref, ref1, ref2;\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values === false) {\n\t        values = this.values;\n\t      }\n\t      needs_rebuild = false;\n\t      ref = SpreadedObjects.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (prop.triggerRebuild && this.valueChanged(key, values)) {\n\t          needs_rebuild = true;\n\t        }\n\t      }\n\t      if (force || this.valueChanged(\"x\", values) || this.valueChanged(\"y\", values) || this.valueChanged(\"z\", values)) {\n\t        this.container.position.set(values.x, values.y, values.z);\n\t      }\n\t      if (force || this.valueChanged(\"rotX\", values) || this.valueChanged(\"rotY\", values) || this.valueChanged(\"rotZ\", values)) {\n\t        this.container.rotation.set(this.degreeToRadian(values.rotX), this.degreeToRadian(values.rotY), this.degreeToRadian(values.rotZ));\n\t      }\n\t      progression = values.progression / 2;\n\t      this.timeline.seek(this.totalDuration * progression);\n\t      ref1 = this.items;\n\t      for (j = 0, len = ref1.length; j < len; j++) {\n\t        item = ref1[j];\n\t        item.update(seconds, {\n\t          progression: values.progression\n\t        });\n\t      }\n\t      if (force || this.valueChanged(\"depth\", values)) {\n\t        ref2 = this.items;\n\t        for (key = k = 0, len1 = ref2.length; k < len1; key = ++k) {\n\t          item = ref2[key];\n\t          pos = this.items_position[key];\n\t          item.container.position.set(pos.x, pos.y, pos.z * values.depth);\n\t        }\n\t      }\n\t      this.values = _.merge(this.values, values);\n\t      if (needs_rebuild === true) {\n\t        return this.rebuild(seconds);\n\t      }\n\t    };\n\t\n\t    SpreadedObjects.prototype.getRandomPosition = function(scale) {\n\t      if (scale == null) {\n\t        scale = 1;\n\t      }\n\t      return this.rng.random(-scale, scale);\n\t    };\n\t\n\t    SpreadedObjects.prototype.destroy = function() {\n\t      SpreadedObjects.__super__.destroy.apply(this, arguments);\n\t      if (this.container) {\n\t        if (this.container.parent) {\n\t          this.container.parent.remove(this.container);\n\t        }\n\t        delete this.container;\n\t      }\n\t      delete this.rng;\n\t      delete this.rngOutline;\n\t      return delete this.cache;\n\t    };\n\t\n\t    return SpreadedObjects;\n\t\n\t  })(ElementBase);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedCircle, AnimatedObject, CircleGeometry2, RingGeometry2, THREE, _;\n\t  _ = __webpack_require__(15);\n\t  THREE = __webpack_require__(2);\n\t  AnimatedObject = __webpack_require__(53);\n\t  CircleGeometry2 = __webpack_require__(38);\n\t  RingGeometry2 = __webpack_require__(49);\n\t  return AnimatedCircle = (function(superClass) {\n\t    extend(AnimatedCircle, superClass);\n\t\n\t    AnimatedCircle.circleGeom = new CircleGeometry2(10, 30, 0, Math.PI * 2);\n\t\n\t    AnimatedCircle.ringGeom = new RingGeometry2(10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedCircle.ringGeom2 = new RingGeometry2(10 - 1, 10, 30, 1, 0, Math.PI * 2);\n\t\n\t    function AnimatedCircle() {\n\t      AnimatedCircle.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    AnimatedCircle.prototype.getGeometry = function() {\n\t      return AnimatedCircle.circleGeom;\n\t    };\n\t\n\t    AnimatedCircle.prototype.getGeometryOutline = function(outlineWidth) {\n\t      if (outlineWidth < 1) {\n\t        return AnimatedCircle.ringGeom;\n\t      }\n\t      return AnimatedCircle.ringGeom2;\n\t    };\n\t\n\t    return AnimatedCircle;\n\t\n\t  })(AnimatedObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedBox, AnimatedObject, THREE, _;\n\t  _ = __webpack_require__(15);\n\t  THREE = __webpack_require__(2);\n\t  AnimatedObject = __webpack_require__(53);\n\t  return AnimatedBox = (function(superClass) {\n\t    extend(AnimatedBox, superClass);\n\t\n\t    AnimatedBox.circleGeom = new THREE.CircleGeometry(10, 4, 0, Math.PI * 2);\n\t\n\t    AnimatedBox.ringGeom = new THREE.RingGeometry(10 - 1, 10 + 1, 4, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedBox.ringGeom2 = new THREE.RingGeometry(10 - 1, 10, 4, 1, 0, Math.PI * 2);\n\t\n\t    function AnimatedBox() {\n\t      AnimatedBox.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    AnimatedBox.prototype.getGeometry = function() {\n\t      return AnimatedBox.circleGeom;\n\t    };\n\t\n\t    AnimatedBox.prototype.getGeometryOutline = function(outlineWidth) {\n\t      if (outlineWidth < 1) {\n\t        return AnimatedBox.ringGeom;\n\t      }\n\t      return AnimatedBox.ringGeom2;\n\t    };\n\t\n\t    return AnimatedBox;\n\t\n\t  })(AnimatedObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;// Modified to have uv on the edges.\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var THREE = __webpack_require__(2);\n\t\n\tTHREE.RingGeometry2 = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\t\n\t\tTHREE.Geometry.call( this );\n\t\n\t\tthis.type = 'RingGeometry2';\n\t\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\t\n\t\tinnerRadius = innerRadius || 0;\n\t\touterRadius = outerRadius || 50;\n\t\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\t\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\n\t\n\t\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\n\t\tfor ( i = 0; i < phiSegments + 1; i ++ ) { // concentric circles inside ring\n\t\n\t\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) { // number of segments per circle\n\t\n\t\t\t\tvar vertex = new THREE.Vector3();\n\t\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\t\n\t\t\t\tthis.vertices.push( vertex );\n\t\t\t\t//uvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\n\t\t\t  var uv = {\n\t        x: (i / phiSegments),\n\t        y: (o / thetaSegments)\n\t      };\n\t      uvs.push(new THREE.Vector2(uv.x, uv.y));\n\t    }\n\t\n\t\t\tradius += radiusStep;\n\t\n\t\t}\n\t\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\n\t\n\t\tfor ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring\n\t\n\t\t\tvar thetaSegment = i * (thetaSegments + 1);\n\t\n\t\t\tfor ( o = 0; o < thetaSegments ; o ++ ) { // number of segments per circle\n\t\n\t\t\t\tvar segment = o + thetaSegment;\n\t\n\t\t\t\tvar v1 = segment;\n\t\t\t\tvar v2 = segment + thetaSegments + 1;\n\t\t\t\tvar v3 = segment + thetaSegments + 2;\n\t\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\t\n\t\t\t\tv1 = segment;\n\t\t\t\tv2 = segment + thetaSegments + 2;\n\t\t\t\tv3 = segment + 1;\n\t\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\t\n\t\t\t}\n\t\t}\n\t\n\t\tthis.computeFaceNormals();\n\t\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\t\n\t};\n\t\n\tTHREE.RingGeometry2.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.RingGeometry2.prototype.constructor = THREE.RingGeometry2;\n\t\n\treturn THREE.RingGeometry2;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\n\\n// Precompute coords for FXAA\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nuniform vec2 resolution;\\n\\n//To save 9 dependent texture reads, you can compute\\n//these in the vertex shader and use the optimized\\n//frag.glsl function in your frag shader. \\n\\n//This is best suited for mobile devices, like iOS.\\n\\nvoid texcoords_1_0(vec2 fragCoord, vec2 resolution,\\n\\t\\t\\tout vec2 v_rgbNW, out vec2 v_rgbNE,\\n\\t\\t\\tout vec2 v_rgbSW, out vec2 v_rgbSE,\\n\\t\\t\\tout vec2 v_rgbM) {\\n\\tvec2 inverseVP = 1.0 / resolution.xy;\\n\\tv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\\n\\tv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\\n\\tv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\\n\\tv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\\n\\tv_rgbM = vec2(fragCoord * inverseVP);\\n}\\n\\n\\n\\nvoid main() {\\n  vUv = uv;\\n\\n  // FXAA\\n  vec2 fragCoord = uv * resolution;\\n\\ttexcoords_1_0(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\n/**\\nBasic FXAA implementation based on the code on geeks3d.com with the\\nmodification that the texture2DLod stuff was removed since it's\\nunsupported by WebGL.\\n\\n--\\n\\nFrom:\\nhttps://github.com/mitsuhiko/webgl-meincraft\\n\\nCopyright (c) 2011 by Armin Ronacher.\\n\\nSome rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are\\nmet:\\n\\n    * Redistributions of source code must retain the above copyright\\n      notice, this list of conditions and the following disclaimer.\\n\\n    * Redistributions in binary form must reproduce the above\\n      copyright notice, this list of conditions and the following\\n      disclaimer in the documentation and/or other materials provided\\n      with the distribution.\\n\\n    * The names of the contributors may not be used to endorse or\\n      promote products derived from this software without specific\\n      prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n\\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n*/\\n\\n#ifndef FXAA_REDUCE_MIN\\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\\n#endif\\n#ifndef FXAA_REDUCE_MUL\\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\\n#endif\\n#ifndef FXAA_SPAN_MAX\\n    #define FXAA_SPAN_MAX     8.0\\n#endif\\n\\n//optimized version for mobile, where dependent \\n//texture reads can be a bottleneck\\nvec4 fxaa_1_0(sampler2D tex, vec2 fragCoord, vec2 resolution,\\n            vec2 v_rgbNW, vec2 v_rgbNE, \\n            vec2 v_rgbSW, vec2 v_rgbSE, \\n            vec2 v_rgbM) {\\n    vec4 color;\\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\\n    vec4 texColor = texture2D(tex, v_rgbM);\\n    vec3 rgbM  = texColor.xyz;\\n    vec3 luma = vec3(0.299, 0.587, 0.114);\\n    float lumaNW = dot(rgbNW, luma);\\n    float lumaNE = dot(rgbNE, luma);\\n    float lumaSW = dot(rgbSW, luma);\\n    float lumaSE = dot(rgbSE, luma);\\n    float lumaM  = dot(rgbM,  luma);\\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\\n    \\n    mediump vec2 dir;\\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n    \\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\\n    \\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n              dir * rcpDirMin)) * inverseVP;\\n    \\n    vec3 rgbA = 0.5 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\\n\\n    float lumaB = dot(rgbB, luma);\\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\\n        color = vec4(rgbA, texColor.a);\\n    else\\n        color = vec4(rgbB, texColor.a);\\n    return color;\\n}\\n\\n\\n\\n\\n//texcoords computed in vertex step\\n//to avoid dependent texture reads\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nhighp float random_2_1(vec2 co)\\n{\\n    highp float a = 12.9898;\\n    highp float b = 78.233;\\n    highp float c = 43758.5453;\\n    highp float dt= dot(co.xy ,vec2(a,b));\\n    highp float sn= mod(dt,3.14);\\n    return fract(sin(sn) * c);\\n}\\n\\n\\n\\nvec3 blendSoftLight_4_2(vec3 base, vec3 blend) {\\n    return mix(\\n        sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend), \\n        2.0 * base * blend + base * base * (1.0 - 2.0 * blend), \\n        step(base, vec3(0.5))\\n    );\\n}\\n\\n// Using conditionals\\n// vec3 blendSoftLight(vec3 base, vec3 blend) {\\n//     return vec3(\\n//         ((blend.r < 0.5) ? (2.0 * base.r * blend.r + base.r * base.r * (1.0 - 2.0 * blend.r)) : (sqrt(base.r) * (2.0 * blend.r - 1.0) + 2.0 * base.r * (1.0 - blend.r))),\\n//         ((blend.g < 0.5) ? (2.0 * base.g * blend.g + base.g * base.g * (1.0 - 2.0 * blend.g)) : (sqrt(base.g) * (2.0 * blend.g - 1.0) + 2.0 * base.g * (1.0 - blend.g))),\\n//         ((blend.b < 0.5) ? (2.0 * base.b * blend.b + base.b * base.b * (1.0 - 2.0 * blend.b)) : (sqrt(base.b) * (2.0 * blend.b - 1.0) + 2.0 * base.b * (1.0 - blend.b)))\\n//     );\\n// }\\n\\n\\nfloat luma_3_3(vec3 color) {\\n  return dot(color, vec3(0.299, 0.587, 0.114));\\n}\\n\\nfloat luma_3_3(vec4 color) {\\n  return dot(color.rgb, vec3(0.299, 0.587, 0.114));\\n}\\n\\n\\n\\n\\nuniform sampler2D tDiffuse;\\nuniform vec2 resolution;\\nuniform float nIntensity;\\nuniform float time;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vec2 p = vUv;\\n  vec2 fragCoord = vUv * resolution;\\n\\n  // FXAA\\n  gl_FragColor = fxaa_1_0(tDiffuse, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n\\n  float center = smoothstep(0.0, 1.0, length(vUv-0.5));\\n\\n  // Add vignetting.\\n  gl_FragColor.rgb = mix(gl_FragColor.rgb, vec3(0.0, 0.0, 0.0), center * 0.5);\\n\\n  // Add film grain.\\n  vec3 g = vec3( random_2_1( (gl_FragCoord.xy / resolution.xy) * time )) * nIntensity;\\n\\n  vec3 color = blendSoftLight_4_2(gl_FragColor.rgb, g);\\n  float luminance = luma_3_3(gl_FragColor.rgb);\\n  //reduce the noise based on some\\n  //threshold of the background luminance\\n  float response = smoothstep(0.05, 0.5, luminance);\\n  color = mix(color, gl_FragColor.rgb, pow(response, 2.0));\\n\\n  gl_FragColor = vec4(color, 1.0);\\n\\n}\\n\"\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = TweenMax;\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedObject, Colors, RNG, ShaderFragement, ShaderVertex, THREE, TweenMax, _;\n\t  _ = __webpack_require__(15);\n\t  THREE = __webpack_require__(2);\n\t  RNG = __webpack_require__(40);\n\t  TweenMax = __webpack_require__(52);\n\t  Colors = __webpack_require__(37);\n\t  ShaderVertex = __webpack_require__(43);\n\t  ShaderFragement = __webpack_require__(44);\n\t  return AnimatedObject = (function() {\n\t    AnimatedObject.circleGeom = new THREE.CircleGeometry(10, 30, 0, Math.PI * 2);\n\t\n\t    AnimatedObject.ringGeom = new THREE.RingGeometry(10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedObject.ringGeom2 = new THREE.RingGeometry(10 - 1, 10, 30, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedObject.properties = {\n\t      size: {\n\t        name: 'size',\n\t        label: 'size',\n\t        val: 80\n\t      },\n\t      outlineWidth: {\n\t        name: 'outlineWidth',\n\t        label: 'outline width',\n\t        val: 2\n\t      },\n\t      drawOutline: {\n\t        name: 'drawOutline',\n\t        label: 'draw outline',\n\t        val: true\n\t      },\n\t      drawCircle: {\n\t        name: 'drawCircle',\n\t        label: 'draw circle',\n\t        val: false\n\t      },\n\t      color: {\n\t        name: 'color',\n\t        label: 'color',\n\t        val: false\n\t      },\n\t      fillColor: {\n\t        name: 'fillColor',\n\t        label: 'fill color',\n\t        val: false\n\t      },\n\t      delay: {\n\t        name: 'delay',\n\t        label: 'delay',\n\t        val: 0\n\t      },\n\t      duration: {\n\t        name: 'duration',\n\t        label: 'duration',\n\t        val: 0.5\n\t      },\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      randRotZ: {\n\t        name: 'randRotZ',\n\t        label: 'random rotation z',\n\t        val: 0\n\t      },\n\t      randScaleX: {\n\t        name: 'randScaleX',\n\t        label: 'random scale x',\n\t        val: 0\n\t      },\n\t      randScaleY: {\n\t        name: 'randScaleY',\n\t        label: 'random scale y',\n\t        val: 0\n\t      }\n\t    };\n\t\n\t    function AnimatedObject(values, time) {\n\t      var key, prop, ref, tween;\n\t      this.values = values != null ? values : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.renderOutline = bind(this.renderOutline, this);\n\t      this.renderCircle = bind(this.renderCircle, this);\n\t      ref = AnimatedObject.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      this.container = new THREE.Object3D();\n\t      this.container.scale.set(0.001, 0.001, 0.001);\n\t      this.container.position.set(this.values.x, this.values.y, this.values.z);\n\t      this.container.rotation.set(0, 0, this.values.randRotZ);\n\t      this.materials = [];\n\t      this.start = Date.now();\n\t      this.offset = new THREE.Vector3();\n\t      this.velocity = new THREE.Vector3();\n\t      this.weight = Math.random() * 0.5 + 0.5;\n\t      this.direction = new THREE.Vector3(Math.random() * 2 - 1, Math.random() * 2 - 1, 0);\n\t      this.speed = 0;\n\t      this.animatedProperties = {\n\t        scale: 0.001\n\t      };\n\t      this.timeline = new TimelineMax();\n\t      tween = TweenLite.to(this.animatedProperties, 0, {\n\t        scale: 0.00001,\n\t        ease: Linear.easeNone\n\t      });\n\t      this.timeline.add(tween, 0);\n\t      tween = TweenLite.to(this.animatedProperties, this.values.duration, {\n\t        scale: 1,\n\t        delay: this.values.delay,\n\t        ease: Cubic.easeOut\n\t      });\n\t      this.timeline.add(tween);\n\t      tween = TweenLite.to(this.animatedProperties, this.values.duration * 0.5, {\n\t        scale: 1,\n\t        ease: Cubic.easeOut\n\t      });\n\t      this.timeline.add(tween);\n\t      tween = TweenLite.to(this.animatedProperties, this.values.duration, {\n\t        scale: 0.00001,\n\t        ease: Cubic.easeIn\n\t      });\n\t      this.timeline.add(tween);\n\t      this.renderCircle(this.values.size, this.values.fillColor);\n\t    }\n\t\n\t    AnimatedObject.prototype.getGeometry = function() {\n\t      return AnimatedObject.circleGeom;\n\t    };\n\t\n\t    AnimatedObject.prototype.getGeometryOutline = function(outlineWidth) {\n\t      if (outlineWidth < 1) {\n\t        return AnimatedObject.ringGeom;\n\t      }\n\t      return AnimatedObject.ringGeom2;\n\t    };\n\t\n\t    AnimatedObject.prototype.destroy = function() {\n\t      var child, i, len, ref;\n\t      this.timeline.clear();\n\t      ref = this.container.children;\n\t      for (i = 0, len = ref.length; i < len; i++) {\n\t        child = ref[i];\n\t        this.container.remove(child);\n\t      }\n\t      return this.container = null;\n\t    };\n\t\n\t    AnimatedObject.prototype.getMaterial = function(color) {\n\t      var material, uniforms;\n\t      uniforms = {\n\t        time: {\n\t          type: 'f',\n\t          value: 0.0\n\t        },\n\t        seed: {\n\t          type: 'f',\n\t          value: Math.random() * 1000\n\t        },\n\t        strength: {\n\t          type: 'f',\n\t          value: 0.2\n\t        },\n\t        color: {\n\t          type: 'c',\n\t          value: color\n\t        }\n\t      };\n\t      material = new THREE.ShaderMaterial({\n\t        vertexShader: ShaderVertex,\n\t        fragmentShader: ShaderFragement,\n\t        uniforms: uniforms,\n\t        transparent: true,\n\t        depthWrite: false,\n\t        depthTest: false\n\t      });\n\t      material.blending = THREE.AdditiveBlending;\n\t      return material;\n\t    };\n\t\n\t    AnimatedObject.prototype.update = function(seconds, progression) {\n\t      var i, len, material, ref, scale, timeDiff;\n\t      this.container.position.add(this.velocity);\n\t      this.velocity = this.velocity.multiplyScalar(0.94);\n\t      timeDiff = Date.now() - this.start;\n\t      ref = this.materials;\n\t      for (i = 0, len = ref.length; i < len; i++) {\n\t        material = ref[i];\n\t        material.uniforms['time'].value = 0.00025 * timeDiff;\n\t        material.uniforms['strength'].value = window.audio.data.filters.mid.timeDomainRMS;\n\t      }\n\t      scale = this.animatedProperties.scale * this.values.size * 0.1;\n\t      return this.container.scale.set(scale * (1 + this.values.randScaleX), scale * (1 + this.values.randScaleY), scale);\n\t    };\n\t\n\t    AnimatedObject.prototype.renderCircle = function(size, color) {\n\t      var material, object;\n\t      material = this.getMaterial(color);\n\t      this.materials.push(material);\n\t      object = new THREE.Mesh(this.getGeometry(), material);\n\t      return this.container.add(object);\n\t    };\n\t\n\t    AnimatedObject.prototype.renderOutline = function(size, color, outlineWidth) {\n\t      var geom, material, object;\n\t      geom = this.getGeometryOutline(outlineWidth);\n\t      material = this.getMaterial(color);\n\t      this.materials.push(material);\n\t      object = new THREE.Mesh(geom, material);\n\t      return this.container.add(object);\n\t    };\n\t\n\t    return AnimatedObject;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** App.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 929848ddacda38fa6939\n **/","# green: 567c6d\n# yellow: e2cb7b\n# brownish: cbad7b\n# red: af1925\n# pink: ddb3b4\n# purple: 715160\n# blue: 406872\n\n\ndefine (require) ->\n  THREE = require 'Three'\n\n  TweenTime = require 'TweenTime'\n  Acoustic = require 'bower_components/acoustic.js/dist/acoustic.min.js'\n\n\n  Shaders = require 'app/components/Shaders'\n  Background = require 'app/components/Background'\n  PostFX = require 'app/components/PostFX'\n  SceneManager = require 'app/components/SceneManager'\n  ElementFactory = require 'app/components/ElementFactory'\n  DataNormalizer = require 'app/components/DataNormalizer'\n\n  dataJson = require 'raw!app/data.json'\n\n  #Circles = require 'app/elements/Circles'\n\n  Particles = require 'app/elements/Particles'\n  OrganizedChaos = require 'app/elements/OrganizedChaos'\n\n  window.App = class App\n    constructor: (options = {}) ->\n      window.updateCameraAspect = @updateCameraAspect\n\n      @autoplay = false\n      if options.autoplay?\n        @autoplay = options.autoplay\n\n      @shaders = new Shaders()\n\n      audio_url = 'assets/08 - Space Tron On The Grid.mp3'\n      #@audio = new Audio(audio_url, @onAudioLoaded)\n      @audio = new Acoustic(audio_url, {\n        onCanPlay: @onAudioLoaded\n      })\n      window.audio = @audio\n      @factory = new ElementFactory()\n\n      # Convert loaded data\n      conf = JSON.parse(dataJson)\n      @settings = conf.settings\n      @data = DataNormalizer.normalizeData(conf.data, @factory)\n\n      @tweenTime = new TweenTime(@data)\n      @tweenTime.timer.statusChanged.add(@onTimerStatusChanged)\n      @tweenTime.timer.seeked.add(@onTimerSeeked)\n\n      if options.time?\n        @tweenTime.timer.seek([options.time])\n      else if @settings.time\n        @tweenTime.timer.seek([@settings.time])\n\n      size = @getScreenSize()\n      @camera = new THREE.PerspectiveCamera( 45, size.width / size.height, 1, 2000 )\n      @camera.position.z = 600\n      window.activeCamera = @camera\n\n      @scene = new THREE.Scene()\n      @scene.fog = new THREE.FogExp2( 0x111111, 0.0045 )\n      #@orchestrator = new Orchestrator(@timer, @data, @scene, @camera)\n      @sceneManager = new SceneManager(@tweenTime, @data, @scene, @camera, @factory)\n\n      @time = Date.now() * 0.0001\n      $container = $('<div class=\"experiment\"></div>')\n      container = $container.get(0)\n      @containerWebgl = container # Save for use in EditorUI for object picking.\n      $('body').append($container)\n\n      @renderer = new THREE.WebGLRenderer( { antialias: false, alpha: false } )\n      @renderer.setPixelRatio( window.devicePixelRatio )\n      @renderer.setSize(size.width, size.height)\n\n      @renderer.setClearColor( 0x111111, 1)\n\n      light1 = new THREE.DirectionalLight( 0xffffff, 0.4 )\n      light1.position.set(100, 300, 700)\n      @scene.add(light1)\n\n      container.appendChild( @renderer.domElement )\n\n      window.addEventListener('resize', @onWindowResize, false)\n\n      @postfx = new PostFX(@scene, @camera, @renderer, size)\n\n      @onWindowResize()\n      @animate()\n\n    onTimerStatusChanged: (is_playing) =>\n      $('body').toggleClass('is-stopped', !is_playing)\n      if is_playing\n        @audio.play()\n      else\n        @audio.pause()\n\n    onTimerSeeked: (time) =>\n      @audio.seek(time / 1000)\n\n    play: () =>\n      @tweenTime.timer.play()\n      $('body').addClass('is-playing')\n\n    onAudioLoaded: () =>\n      console.log \"audio loaded\"\n      $('body').addClass('is-audio-loaded')\n      if @autoplay\n        @play()\n\n    getScreenSize: () ->\n      SCREEN_WIDTH = window.innerWidth\n      SCREEN_HEIGHT = window.innerHeight\n      if window.editorEnabled\n        timelineheight = 295\n        if $('body').hasClass('timeline-is-closed') then timelineheight = 95\n        propertieswidth = 279\n        if $('body').hasClass('properties-is-closed') then propertieswidth = 0\n        SCREEN_HEIGHT -= timelineheight\n        SCREEN_WIDTH -= propertieswidth\n\n      return {width: SCREEN_WIDTH, height: SCREEN_HEIGHT}\n\n    updateCameraAspect: (camera, size = false) =>\n      if size == false\n        size = @getScreenSize()\n      camera.aspect = size.width / size.height\n      camera.updateProjectionMatrix()\n\n    onWindowResize: () =>\n      size = @getScreenSize()\n\n      @updateCameraAspect(@camera, size)\n      @updateCameraAspect(window.activeCamera, size)\n\n      @renderer.setSize(size.width, size.height)\n      @postfx.resize(size.width, size.height)\n\n    animate: () =>\n      requestAnimationFrame(@animate)\n      @audio.update()\n      @shaders.update()\n      @render()\n\n    render: () ->\n      newTime = Date.now() * 0.0001\n      delta = newTime - @time\n\n      if @particles then @particles.update()\n      if @chaos then @chaos.update()\n      @camera.lookAt( @scene.position )\n      @postfx.render(delta)\n\n      @time = newTime\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/App.coffee\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nTHREE.CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/CopyShader.js\n ** module id = 1\n ** module chunks = 1\n **/","module.exports = THREE;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"THREE\"\n ** module id = 2\n ** module chunks = 1\n **/","module.exports = TweenTime.Core;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"TweenTime.Core\"\n ** module id = 3\n ** module chunks = 1\n **/","define (require) ->\n  _ = require 'lodash'\n  Signals = require 'js-signals'\n\n  class SceneManager\n    constructor: (@tweenTime, @data, @scene, @defaultCamera, @factory) ->\n      @timer = @tweenTime.timer\n      @timer.updated.add(@update)\n      @update(0)\n\n    update: (timestamp) =>\n      activeCamera = @defaultCamera\n      seconds = timestamp / 1000\n\n      for item in @data\n        should_exist = if seconds >= item.start && seconds <= item.end then true else false\n\n        # Create the item\n        if !item.object\n          type = item.type\n          el = @factory.create(type, item.values, seconds - item.start)\n          # Save reference to the custom object class in data\n          item.object = el\n          # And a reference to the data from the 3d container\n          if el.container\n            el.container._data = item\n\n        # Remove the item from the scene\n        if (item.object && should_exist == false) || item.isDirtyObject\n          item.isDirtyObject = false\n          if item.object && item.object.container && item.object.container.parent\n            @scene.remove(item.object.container)\n            #item.object.destroy()\n            #delete item.object\n\n        # Assign the object class to be able to access all object properties in propertiesEditor\n        if !item.classObject then item.classObject = @factory.getTypeClass(item.type)\n\n        # If object doesn't exist skip the update.\n        #if should_exist == false then continue\n\n\n        # Add item to scene if it exists.\n        if should_exist && item.object.container && !item.object.container.parent\n          @scene.add(item.object.container)\n\n        # If this is a camera set it as the active camera.\n        if item.object && item.object.isCamera\n          activeCamera = item.object.container\n          window.updateCameraAspect(activeCamera)\n\n        # Update the item\n        if item.object then item.object.update(seconds - item.start, item.values)\n\n      # Set correct camera\n      window.activeCamera = activeCamera\n      if window.renderModel\n        window.renderModel.camera = activeCamera\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/SceneManager.coffee\n **/","define (require) ->\n  THREE = require 'Three'\n  Global = require 'app/elements/Global'\n\n  ShaderVertex = require 'app/shaders/Basic.vert'\n  LineFragement = require 'app/shaders/Line.frag'\n\n  class Shaders\n    @COLOR_WHITE = 0\n    @COLOR_RED = 1\n    @COLOR_BLUE = 2\n\n    constructor: () ->\n      window.shaders = this\n      @shaders = []\n      @shadersWhite = []\n      @shadersRed = []\n      @shadersBlue = []\n\n      red = 0xe66c00\n      blue = 0x27acef\n\n      num_shaders = 50\n      # A non dynamic shader, can be used for all geometries\n      @simpleMaterial = new THREE.MeshBasicMaterial({color: 0xdddddd, shading: THREE.FlatShading, side: THREE.DoubleSide})\n      @simpleMaterialRed = new THREE.MeshBasicMaterial({color: red, shading: THREE.FlatShading, side: THREE.DoubleSide})\n      @simpleMaterialBlue = new THREE.MeshBasicMaterial({color: blue, shading: THREE.FlatShading, side: THREE.DoubleSide})\n\n      for i in [0...num_shaders]\n        mat = @createMaterialLine(0xdddddd)\n        @shaders.push(mat)\n        @shadersWhite.push(mat )\n\n        mat = @createMaterialLine(red)\n        @shaders.push(mat)\n        @shadersRed.push(mat)\n\n        mat = @createMaterialLine(blue)\n        @shaders.push(mat)\n        @shadersBlue.push(mat)\n\n    update: (force = 0) ->\n      for shader in @shaders\n        shader.uniforms.percent.value = Math.max(0, shader.uniforms.percent.value - shader.speed * 0.03)\n\n\n        # Only bump value if it is not already animating.\n        if shader.uniforms.percent.value < 0.02\n          # Can force from intro (hover button)\n          if force && Math.random() < force\n            shader.uniforms.percent.value = 2\n          # only bump values once in a while. Without this\n          # every shaders would animate on the first boum.\n          else if Math.random() < 0.02\n            bassSensibility = 0\n            midSensibility = 0\n            highSensibility = 0\n\n            globalValues = false\n            if window.global && window.global.values\n              globalValues = window.global.values\n              bassSensibility = globalValues.bassSensibility\n              midSensibility = globalValues.midSensibility\n              highSensibility = globalValues.highSensibility\n\n            audioData = window.audio.data.filters\n\n            if audioData.bass.timeDomainRMS > bassSensibility || audioData.mid.timeDomainRMS > midSensibility || audioData.high.timeDomainRMS > highSensibility\n              shader.uniforms.percent.value = 2\n            if globalValues && Math.random() < globalValues.autoAnimate\n              shader.uniforms.percent.value = 2\n\n\n      #console.log @lineMaterial1.uniforms.percent.value\n\n    getMaterialLine: (animated, color) ->\n      if animated == false\n        switch color\n          when Shaders.COLOR_RED then return @simpleMaterialRed\n          when Shaders.COLOR_BLUE then return @simpleMaterialBlue\n        return @simpleMaterial\n\n      shaders = @shadersWhite\n      if color == Shaders.COLOR_RED then shaders = @shadersRed\n      if color == Shaders.COLOR_BLUE then shaders = @shadersBlue\n\n      return shaders[Math.floor(Math.random() * shaders.length)]\n\n    createMaterialLine: (color) ->\n      uniforms = {\n        percent: {\n          type: 'f',\n          value: 1.0\n        },\n        color: {\n          type: 'c',\n          value: new THREE.Color(color)\n        },\n        fogColor: {type: \"c\", value: new THREE.Color(0x111111)},\n        fogDensity: {type: \"f\", 0.2045}\n      }\n      material = new THREE.ShaderMaterial({\n        vertexShader: ShaderVertex,\n        fragmentShader: LineFragement,\n        side: THREE.DoubleSide,\n        shading: THREE.FlatShading,\n        uniforms: uniforms,\n        transparent: true,\n        depthWrite: false,\n        depthTest: false,\n        fog: true\n        })\n\n      material.speed = Math.random() + 0.5 # custom property for per shader transition speed\n      material.blending = THREE.AdditiveBlending\n      return material\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/Shaders.coffee\n **/","define (require) ->\n  THREE = require 'Three'\n\n  class Background\n    constructor: (@scene) ->\n      texture = THREE.ImageUtils.loadTexture('src/images/background.jpg')\n      texture.wrapS = texture.wrapT = THREE.RepeatWrapping\n      texture.repeat.set( 2, 2 )\n      bgMat = new THREE.MeshBasicMaterial({map: texture})\n      bg = new THREE.Mesh(new THREE.PlaneGeometry(1600, 1600, 4, 4), bgMat)\n      bg.material.depthTest = false\n      bg.material.depthWrite = false\n      bg.position.set(0, 0, -10)\n      @scene.add(bg)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/Background.coffee\n **/","define (require) ->\n  THREE = require 'Three'\n\n  require 'vendors/three.js-extras/postprocessing/EffectComposer'\n  require 'vendors/three.js-extras/postprocessing/MaskPass'\n  require 'vendors/three.js-extras/postprocessing/BloomPass'\n  require 'vendors/three.js-extras/postprocessing/ShaderPass'\n  require 'vendors/three.js-extras/postprocessing/RenderPass'\n  require 'app/postprocessing/GlitchPass2'\n\n  require 'app/postprocessing/CustomPostPass'\n\n  require 'vendors/three.js-extras/shaders/CopyShader'\n  require 'vendors/three.js-extras/shaders/FXAAShader'\n  require 'vendors/three.js-extras/shaders/ConvolutionShader'\n  require 'app/shaders/DigitalGlitch2'\n\n  class PostFX\n    constructor: (@scene, @camera, @renderer, size) ->\n      @renderer.autoClear = false\n\n      renderModel = new THREE.RenderPass( @scene, @camera )\n      # There will only be 1 rendermodel and we need to be able\n      # to swith camera from the orchestrator.\n      window.renderModel = renderModel\n\n      dpr = if window.devicePixelRatio? then window.devicePixelRatio else 1\n\n      @renderTargetParameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBufer: false }\n      @renderTarget = new THREE.WebGLRenderTarget(size.width * dpr, size.height * dpr, @renderTargetParameters)\n\n      @effectFXAA = new THREE.ShaderPass( THREE.FXAAShader )\n      @effectFXAA.uniforms[ 'resolution' ].value.set(1 / (size.width * dpr), 1 / (size.height * dpr))\n\n      @bloom = new THREE.BloomPass(0.9, 25, 4)\n\n      @glitchPass = new THREE.GlitchPass2()\n      @glitchPass.intensity = 0.3;\n      @glitchPass.uniforms.tScratch.value = THREE.ImageUtils.loadTexture( \"src/images/lensflare_dirt.jpg\" )\n\n\n      resolution = new THREE.Vector2(size.width * dpr, size.height * dpr)\n      @customPass = new THREE.CustomPostPass(0.55, resolution)\n      @customPass.renderToScreen = true\n\n      @composer = new THREE.EffectComposer( @renderer, @renderTarget )\n      @composer.setSize(size.width * dpr, size.height * dpr)\n      @composer.addPass( renderModel )\n      #@composer.addPass( @effectFXAA )\n      @composer.addPass( @bloom )\n      #@composer.addPass( @glitchPass )\n      @composer.addPass(@customPass)\n\n    resize: (SCREEN_WIDTH, SCREEN_HEIGHT) ->\n      dpr = if window.devicePixelRatio? then window.devicePixelRatio else 1\n      #@composer.setSize(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr)\n      @renderTarget = new THREE.WebGLRenderTarget(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr, @renderTargetParameters)\n      @composer.reset(@renderTarget)\n      @effectFXAA.uniforms['resolution'].value.set(1 / (SCREEN_WIDTH * dpr), 1 / (SCREEN_HEIGHT * dpr))\n      @customPass.uniforms['resolution'].value.set(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr)\n\n    render: (delta) ->\n      @renderer.clear()\n      @composer.render(delta)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/PostFX.coffee\n **/","define (require) ->\n  Camera = require 'app/elements/Camera'\n  Global = require 'app/elements/Global'\n  Circles = require 'app/elements/Circles'\n  Boxes = require 'app/elements/Boxes'\n  Lines = require 'app/elements/Lines'\n\n  SingleObject = require 'app/elements/SingleObject'\n  Circle = require 'app/elements/Circle'\n  OrganizedChaos = require 'app/elements/OrganizedChaos'\n\n  extend = (object, properties) ->\n    for key, val of properties\n      if typeof(object[key]) == 'object' && object[key] != null\n        object[key] = extend({}, val)\n      else\n        object[key] = val\n    object\n\n  class ElementFactory\n    @elements:\n      Chaos:\n        classObject: OrganizedChaos\n      Circles:\n        classObject: Circles\n      Boxes:\n        classObject: Boxes\n      Lines:\n        classObject: Lines\n      Camera:\n        classObject: Camera\n      Global:\n        classObject: Global\n      Box:\n        classObject: SingleObject\n      Circle:\n        classObject: Circle\n\n    getTypeClass: (itemType) =>\n      ElementFactory.elements[itemType].classObject\n\n    @getTypeProperties: (itemName) =>\n      item = ElementFactory.elements[itemName]\n      if item\n        element_class = item.classObject\n        if element_class\n          properties = []\n          for key, prop_definition of item.classObject.properties\n            prop = extend({}, prop_definition)\n            prop.keys = []\n            properties.push(prop)\n          console.log properties\n          return properties\n      return\n\n    create: (itemName, values, time) ->\n      item = ElementFactory.elements[itemName]\n      if !item\n        console.warn(\"Can't create item: \" + itemName)\n        return false\n\n      return new item.classObject(values)\n\n  window.ElementFactory = ElementFactory\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/ElementFactory.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  ElementFactory = require 'app/components/ElementFactory'\n\n  class DataNormalizer\n    @normalizeItem = (data_item, factory) ->\n      if !data_item.classObject\n        data_item.classObject = factory.getTypeClass(data_item.type)\n      static_properties = data_item.classObject.properties\n\n      if !static_properties then return\n      for key, static_prop of static_properties\n        existing_prop = _.find(data_item.properties, (prop) -> prop.name == static_prop.name)\n        # Create the property with default values if it doesn't exist in given data.\n        if !existing_prop\n          new_prop = {}\n          # clone static prop in new_prop\n          for key2, value2 of static_prop\n            new_prop[key2] = value2\n\n          new_prop.keys = []\n          data_item.properties.push(new_prop)\n        # Add the group information.\n        if existing_prop && !existing_prop.group && static_prop.group\n          existing_prop.group = static_prop.group\n      return data_item\n\n    @normalizeData = (data, factory) ->\n      data = _.map(data, (item) ->\n        DataNormalizer.normalizeItem(item, factory)\n      )\n      return data\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/DataNormalizer.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  Colors = require 'app/components/Colors'\n\n  class Particles\n    @circleGeom = new THREE.CircleGeometry( 10, 30, 0, Math.PI * 2 )\n    @ringGeom = new THREE.RingGeometry( 10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2 )\n\n    @properties:\n      numItems: {name: 'numItems', label: 'num items', val: 5, triggerRebuild: true}\n\n    constructor: (@values = {}, time = 0, index = 0) ->\n      # Set the default value of instance properties.\n      for key, prop of Particles.properties\n        if !@values[key]?\n          @values[key] = prop.val\n\n      @container = new THREE.Object3D()\n      if index == 0\n        @container.position.set(0, 0, 100)\n      @items = []\n\n      @speed = Math.random() * 2 - 1\n      @scale = Math.random() * 2 + 0.1\n\n      material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0xffffff, shininess: 10, shading: THREE.FlatShading })\n      material.blending = THREE.AdditiveBlending\n\n      geom = Particles.circleGeom\n      if Math.random() < 0.7\n        geom = Particles.ringGeom\n\n      @el = new THREE.Mesh(geom , material )\n      #@el.position.x = index * (Math.random() * 20 + 20)\n      if index > 0\n        @el.position.x = Math.random() * 60 + 10\n        @el.position.y = Math.random() * 60 + 10\n        @el.position.z = Math.random() * 60 + 10\n\n      #@el.rotation.x = Math.random() * 0.4 - 0.2\n\n      @el.scale.set(@scale, @scale, @scale)\n      @container.add(@el)\n\n      if index < 5\n        for i in [0..@values.numItems - 1]\n          num_childs = 1\n          if Math.random() > 0.7\n            num_childs = parseInt(Math.random * 3, 10) + 1\n          item = new Particles({numItems: num_childs}, 0, index + 1)\n\n          @el.add( item.container )\n          @items.push(item)\n\n\n    update: (seconds, values = false, force = false) ->\n      #@container.rotation.z += @speed / 100\n\n      volume = window.audio.data.filters.mid.timeDomainRMS\n      current = @el.scale.x\n      if volume > 0.2 && Math.random() < 0.1\n        current += volume * 10\n\n      current = current + (@scale - current) * 0.992\n      @el.scale.set(current, current, current)\n\n\n      for item in @items\n        item.update()\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Particles.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'exports?RNG!rng'\n  ElementBase = require 'app/elements/ElementBase'\n\n  Colors = require 'app/components/Colors'\n  Shaders = require 'app/components/Shaders'\n\n  CircleGeometry2 = require 'app/geometries/CircleGeometry2'\n  ShaderVertex = require 'app/shaders/BasicNoise.vert'\n  ShaderFragement = require 'app/shaders/BasicNoise.frag'\n\n\n  class OrganizedChaos extends ElementBase\n    @lineGeom = new THREE.PlaneGeometry( 100, 1)\n    @circleGeom = new THREE.CircleGeometry( 10, 30, 0, Math.PI * 2 )\n    @ringGeom2 = new CircleGeometry2( 10, 30, 0, Math.PI * 2 )\n\n    @triGeom = new CircleGeometry2( 10, 3, 0, Math.PI * 2 )\n\n    @squareGeom = new CircleGeometry2( 10, 4, 0, Math.PI * 2 )\n\n    @TYPE_LINE = 0\n    @TYPE_SQUARE = 1\n    @TYPE_CIRCLE = 2\n    @TYPE_TRI = 3\n\n    @properties:\n      numItems: {name: 'numItems', label: 'num items', val: 10, triggerRebuild: true, group: \"global\"}\n      seed: {name: 'seed', label: 'seed', val: 10042, triggerRebuild: true, group: \"global\"}\n      depth: {name: 'depth', label: 'depth', val: 20, triggerRebuild: true, group: \"global\"}\n      spread: {name: 'spread', label: 'spread', val: 300, triggerRebuild: true, group: \"global\"}\n      spreadY: {name: 'spreadY', label: 'spreadY', val: 300, triggerRebuild: true, group: \"global\"}\n      maxChilds: {name: 'maxChilds', label: 'maxChilds', val: 8, triggerRebuild: true, group: \"global\"}\n      horizontalSymmetry: {name: 'horizontalSymmetry', label: 'horizontalSymmetry', val: 1, min: 0, max: 1, triggerRebuild: true, group: \"global\"}\n      verticalSymmetry: {name: 'verticalSymmetry', label: 'verticalSymmetry', val: 0, min: 0, max: 1, triggerRebuild: true, group: \"global\"}\n      x: {name: 'x', label: 'x', val: 0, group: \"position\"}\n      y: {name: 'y', label: 'y', val: 0, group: \"position\"}\n      z: {name: 'z', label: 'z', val: 0, group: \"position\"}\n      rotationX: {name: 'rotationX', label: 'x', val: 0, min: -2, max: 2, group: \"rotation\", triggerRebuild: true}\n      rotationY: {name: 'rotationY', label: 'y', val: 0, min: -2, max: 2, group: \"rotation\", triggerRebuild: true}\n      rotationZ: {name: 'rotationZ', label: 'z', val: 0, min: -2, max: 2, group: \"rotation\", triggerRebuild: true}\n      rotationRandX: {name: 'rotationRandX', label: 'rand x', val: 0, min: 0, max: 1, group: \"rotation\", triggerRebuild: true}\n      rotationRandY: {name: 'rotationRandY', label: 'rand y', val: 0, min: 0, max: 1, group: \"rotation\", triggerRebuild: true}\n      rotationRandZ: {name: 'rotationRandZ', label: 'rand z', val: 1, min: 0, max: 1, group: \"rotation\", triggerRebuild: true}\n      circles: {name: 'circles', label: 'circles', val: 0, triggerRebuild: true, group: \"geometry\"}\n      squares: {name: 'squares', label: 'squares', val: 0, triggerRebuild: true, group: \"geometry\"}\n      tri: {name: 'tri', label: 'tri', val: 0, triggerRebuild: true, group: \"geometry\"}\n      lineWidth: {name: 'lineWidth', label: 'line width', val: 1, triggerRebuild: true, group: \"line\"}\n      lineWidthRand: {name: 'lineWidthRand', label: 'line width randomness', val: 0, triggerRebuild: true, group: \"line\"}\n      lineHeight: {name: 'lineHeight', label: 'line height', val: 1, triggerRebuild: true, group: \"line\"}\n      lineHeightRand: {name: 'lineHeightRand', label: 'line height randomness', val: 0, triggerRebuild: true, group: \"line\"}\n      materialRed: {name: 'materialRed', label: 'percent red', val: 0, min: 0, max: 1, triggerRebuild: true, group: \"material\"}\n      materialBlue: {name: 'materialBlue', label: 'percent blue', val: 0, min: 0, max: 1, triggerRebuild: true, group: \"material\"}\n      materialAnimated: {name: 'materialAnimated', label: 'percent animated', val: 0, triggerRebuild: true, group: \"material\"}\n\n    getDefaultProperties: () -> OrganizedChaos.properties\n\n    constructor: (@values = {}, time = 0) ->\n      # Set the default value of instance properties.\n      for key, prop of OrganizedChaos.properties\n        if !@values[key]?\n          @values[key] = prop.val\n\n      # Set values cache\n      super\n\n      @container = new THREE.Object3D()\n      @container.position.set(0, 0, 0)\n      @items = []\n      @build()\n\n    rebuild: (time) ->\n      @empty()\n      @build(time)\n\n    empty: () ->\n      if !@items || !@items.length then return\n\n      for item in @items\n        @container.remove(item)\n        #item.destroy()\n      @items = []\n\n    getItemType: (rng) ->\n      itemType = rng.random(0, 1000) / 1000\n\n      if itemType < @values.circles\n        return OrganizedChaos.TYPE_CIRCLE\n\n      if itemType < @values.circles + @values.squares\n        return OrganizedChaos.TYPE_SQUARE\n\n      if itemType < @values.circles + @values.squares + @values.tri\n        return OrganizedChaos.TYPE_TRI\n\n      return OrganizedChaos.TYPE_LINE\n\n    getItemColor: (rng) ->\n      itemColor = rng.random(0, 1000) / 1000\n\n      if itemColor < @values.materialBlue\n        return Shaders.COLOR_BLUE\n\n      if itemColor < @values.materialBlue + @values.materialRed\n        return Shaders.COLOR_RED\n\n      return Shaders.COLOR_WHITE\n\n    build: (time = 0) ->\n      rngX = new RNG(@values.seed + \"x\")\n      rngY = new RNG(@values.seed + \"y\")\n      rngRotationX = new RNG(@values.seed + \"rotationX\")\n      rngRotationY = new RNG(@values.seed + \"rotationY\")\n      rngRotationZ = new RNG(@values.seed + \"rotationZ\")\n      rngScale = new RNG(@values.seed + \"scale\")\n      rngScaleLine = new RNG(@values.seed + \"scaleLine\")\n      rngScaleSquare = new RNG(@values.seed + \"scaleSquare\")\n      rngScaleLineHeight = new RNG(@values.seed + \"scaleLineHeight\")\n      rngChilds = new RNG(@values.seed + \"childs\")\n      rngHorizontalSymmetry = new RNG(@values.seed + \"horizontalSymmetry\")\n      rngVerticalSymmetry = new RNG(@values.seed + \"verticalSymmetry\")\n      rngSpacing = new RNG(@values.seed + \"spacing\")\n      rngType = new RNG(@values.seed + \"type\")\n      rngColor = new RNG(@values.seed + \"color\")\n      rngShaderAnim = new RNG(@values.seed + \"shaderAnim\")\n\n      spread = @values.spread\n      spread_half = spread / 2\n\n      spreadY = @values.spreadY\n      spreadY_half = spreadY / 2\n\n      #material = @getMaterial(0xffffff)\n\n      for i in [0...@values.numItems]\n        animated = false\n        if rngShaderAnim.random(100) / 100 < @values.materialAnimated\n          animated = true\n\n        num_childs = 1\n        scale = rngScale.random(0, 100) / 100 + 0.2\n\n        posX = rngX.random(spread * 100) * 0.01 - spread_half\n        posY = rngY.random(spreadY * 100) * 0.01 - spreadY_half\n        position = new THREE.Vector3(posX, posY, i * -@values.depth)\n        rotationX = (rngRotationX.random(0, 1000) / 1000 * Math.PI) * @values.rotationRandX + @values.rotationX * Math.PI\n        rotationY = (rngRotationY.random(0, 1000) / 1000 * Math.PI) * @values.rotationRandY + @values.rotationY * Math.PI\n        rotationZ = (rngRotationZ.random(0, 1000) / 1000 * Math.PI) * @values.rotationRandZ + @values.rotationZ * Math.PI\n        rotation = new THREE.Vector3(rotationX, rotationY, rotationZ)\n        scale = new THREE.Vector3(scale, scale, scale)\n\n        geomMerge = new THREE.Geometry()\n\n        horizontalSymmetry = false\n        verticalSymmetry = false\n        num_childs = parseInt(rngChilds.random(0, @values.maxChilds), 10)\n        itemType = @getItemType(rngType)\n        itemColor = @getItemColor(rngColor)\n\n        geom = OrganizedChaos.lineGeom\n        material = window.shaders.getMaterialLine(animated, itemColor)\n\n        if @values.horizontalSymmetry && rngHorizontalSymmetry.random(0, 100) / 100 <= @values.horizontalSymmetry\n          horizontalSymmetry = true\n\n\n        if @values.verticalSymmetry && rngVerticalSymmetry.random(0, 100) / 100 <= @values.verticalSymmetry\n          verticalSymmetry = true\n\n        if itemType == OrganizedChaos.TYPE_LINE\n          scale.y = (scale.y * @values.lineWidth) * (rngScaleLine.random(1, 100) / 100) * (@values.lineWidthRand + 1)\n          # Define a minimum scale to avoid invisible lines\n          scale.y = Math.max(0.5, scale.y)\n\n          scale.x = (scale.x * @values.lineHeight) * (rngScaleLineHeight.random(1, 100) / 100) * (@values.lineHeightRand + 1)\n          # Define a minimum scale to avoid invisible lines\n          scale.x = Math.max(0.01, scale.x)\n\n        if itemType == OrganizedChaos.TYPE_CIRCLE\n          geom = OrganizedChaos.ringGeom2\n\n        if itemType == OrganizedChaos.TYPE_TRI\n          geom = OrganizedChaos.triGeom\n\n        else if itemType == OrganizedChaos.TYPE_SQUARE\n          geom = OrganizedChaos.squareGeom\n          rnd = 0.5 + rngScaleSquare.random(0, 100) / 100\n          scale.multiplyScalar(rnd)\n\n\n        @addItem(geomMerge, geom, material, i, scale, position, rotation, horizontalSymmetry, verticalSymmetry)\n\n        if num_childs > 1\n          spacing = 30 + rngSpacing.random(0, 100) * 0.4\n          offset = position.clone().normalize().multiplyScalar(spacing)\n          offset.z = 0\n\n          for ii in [0..num_childs - 1]\n            pos2 = position.clone().add(offset.multiplyScalar(ii + 1))\n            @addItem(geomMerge, geom, material, i, scale, pos2, rotation, horizontalSymmetry, verticalSymmetry)\n\n        itemMesh = new THREE.Mesh(geomMerge , material)\n        itemMesh.matrixAutoUpdate = false\n        @container.add(itemMesh)\n        @items.push(itemMesh)\n\n\n    addItem: (geomMerge, geom, material, i, scale, position, rotation, horizontalSymmetry, verticalSymmetry) ->\n      quaternion = new THREE.Quaternion()\n      quaternion.setFromAxisAngle(new THREE.Vector3(rotation.x, rotation.y, rotation.z), Math.PI / 2)\n      item = new THREE.Object3D()\n      item.position.x = position.x\n      item.position.y = position.y\n      item.position.z = position.z\n      item.rotation.setFromQuaternion(quaternion)\n      item.scale.copy(scale)\n\n      item.updateMatrix()\n      geomMerge.merge( geom, item.matrix )\n\n      if horizontalSymmetry\n        # mirroring\n        item2Container = new THREE.Object3D()\n\n        item2 = new THREE.Object3D()\n        item2.position.x = position.x\n        item2.position.y = position.y\n        item2.position.z = position.z\n        # mirror rotation\n        item2.rotation.setFromQuaternion(quaternion)\n        item2.scale.copy(scale)\n\n        item2Container.add(item2)\n        item2Container.scale.x = -1\n        item2Container.updateMatrix()\n\n        item2.updateMatrix()\n        geomMerge.merge(geom, item2Container.matrix.multiply(item2.matrix))\n\n        if verticalSymmetry\n          # mirroring\n          item2Container = new THREE.Object3D()\n\n          item2 = new THREE.Object3D()\n          item2.position.x = position.x\n          item2.position.y = position.y\n          item2.position.z = position.z\n          # mirror rotation\n          item2.rotation.setFromQuaternion(quaternion)\n          item2.scale.copy(scale)\n          item2Container.add(item2)\n          item2Container.scale.x = -1\n          item2Container.scale.y = -1\n\n          item2Container.updateMatrix()\n          item2.updateMatrix()\n          geomMerge.merge(geom, item2Container.matrix.multiply(item2.matrix))\n\n      if verticalSymmetry\n        # mirroring\n        item2Container = new THREE.Object3D()\n\n        @container.add(item2Container)\n        item2 = new THREE.Object3D()\n        item2.position.x = position.x\n        item2.position.y = position.y\n        item2.position.z = position.z\n        # mirror rotation\n        item2.rotation.setFromQuaternion(quaternion)\n        item2.scale.copy(scale)\n        item2Container.add(item2)\n        item2Container.scale.y = -1\n\n        item2Container.updateMatrix()\n        item2.updateMatrix()\n        geomMerge.merge(geom, item2Container.matrix.multiply(item2.matrix))\n\n      return geomMerge\n\n    getMaterial: (color) ->\n      uniforms = {\n        time: {\n          type: 'f',\n          value: 0.0\n        },\n        seed: {\n          type: 'f',\n          value: Math.random() * 1000\n        },\n        strength: {\n          type: 'f',\n          value: 0.2\n        },\n        color: {\n          type: 'c',\n          value: new THREE.Color(color)\n        },\n        fogColor:    { type: \"c\", value: new THREE.Color(0x111111) },\n        fogDensity:      { type: \"f\", 0.2045}\n      }\n      material = new THREE.ShaderMaterial({\n        vertexShader: ShaderVertex,\n        fragmentShader: ShaderFragement,\n        side: THREE.DoubleSide,\n        uniforms: uniforms,\n        transparent: true,\n        depthWrite: false,\n        depthTest: false,\n        fog: true\n        })\n\n      #material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0x009900, shininess: 30, shading: THREE.FlatShading })\n      material.blending = THREE.AdditiveBlending\n      return material\n\n    update: (seconds, values = false, force = false) ->\n      if values == false then values = @values\n      needs_rebuild = false\n\n      # Check if any of the invaldating property changed.\n      for key, prop of OrganizedChaos.properties\n        if prop.triggerRebuild && @valueChanged(key, values)\n          needs_rebuild = true\n\n      volume = window.audio.data.filters.mid.timeDomainRMS\n\n      if force || @valueChanged(\"x\", values) || @valueChanged(\"y\", values) || @valueChanged(\"z\", values)\n        @container.position.set(values.x, values.y, values.z)\n      #current = @el.scale.x\n      #if volume > 0.2 && Math.random() < 0.1\n      #  current += volume * 10\n\n      #current = current + (@scale - current) * 0.992\n      #@el.scale.set(current, current, current)\n\n\n      #for item in @items\n      #  item.update()\n      # save the new values\n      @values = _.merge(@values, values)\n\n      if needs_rebuild == true\n        @rebuild(seconds)\n      return\n\n    destroy: () ->\n      for child in @container.children\n        @container.remove(child)\n\n      @container = null\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/OrganizedChaos.coffee\n **/","module.exports = _;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"_\"\n ** module id = 15\n ** module chunks = 1\n **/","module.exports = undefined;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"signals\",\"commonjs\":\"./signals\",\"amd\":\"signals\"}\n ** module id = 16\n ** module chunks = 1\n **/","module.exports = \"{\\n  \\\"settings\\\": {\\n    \\\"time\\\": 231826.4140000241,\\n    \\\"duration\\\": 240,\\n    \\\"domain\\\": [\\n      34285,\\n      239999\\n    ]\\n  },\\n  \\\"data\\\": [\\n    {\\n      \\\"id\\\": \\\"gloabl\\\",\\n      \\\"type\\\": \\\"Global\\\",\\n      \\\"label\\\": \\\"Global\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 240,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"bassSensibility\\\",\\n          \\\"label\\\": \\\"bassSensibility\\\",\\n          \\\"val\\\": 5,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 130.80899999999997,\\n              \\\"val\\\": 130,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 138.7439999999998,\\n              \\\"val\\\": 100,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 144.14699999999996,\\n              \\\"val\\\": 80,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 177.71099999999998,\\n              \\\"val\\\": 120,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"midSensibility\\\",\\n          \\\"label\\\": \\\"midSensibility\\\",\\n          \\\"val\\\": 100,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"highSensibility\\\",\\n          \\\"label\\\": \\\"highSensibility\\\",\\n          \\\"val\\\": 120,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"autoAnimate\\\",\\n          \\\"label\\\": \\\"autoAnimate\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 1.64,\\n              \\\"val\\\": 0.05,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 1.858,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 216.852,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 236.5629999999993,\\n              \\\"val\\\": 0.2,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 240,\\n              \\\"val\\\": 1,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            }\\n          ]\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"bassSensibility\\\": 120,\\n        \\\"midSensibility\\\": 100,\\n        \\\"highSensibility\\\": 120,\\n        \\\"autoAnimate\\\": 0.18845102253916685\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"camera1\\\",\\n      \\\"type\\\": \\\"Camera\\\",\\n      \\\"label\\\": \\\"Camera 1\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 240,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 0,\\n              \\\"val\\\": 700,\\n              \\\"ease\\\": \\\"Quart.easeInOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 1.1000000000000016,\\n              \\\"val\\\": 370,\\n              \\\"ease\\\": \\\"Quart.easeInOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 9.538,\\n              \\\"val\\\": -80.93835187185027,\\n              \\\"ease\\\": \\\"Linear.easeNone\\\"\\n            },\\n            {\\n              \\\"time\\\": 240,\\n              \\\"val\\\": -3850,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            }\\n          ],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 600\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"fov\\\",\\n          \\\"label\\\": \\\"fov\\\",\\n          \\\"val\\\": 45,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"target_x\\\",\\n          \\\"label\\\": \\\"target x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"target_z\\\",\\n          \\\"label\\\": \\\"target z\\\",\\n          \\\"val\\\": -10000,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3845.259110193444,\\n        \\\"target_x\\\": 0,\\n        \\\"target_y\\\": 0,\\n        \\\"target_z\\\": -10000,\\n        \\\"fov\\\": 45\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item2\\\",\\n      \\\"label\\\": \\\"Chaos 2\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 12.588,\\n      \\\"end\\\": 55.836,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 57,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 85,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 4.6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 302.7,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -908,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 177.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.199,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.31,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.7,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.642,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.04,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 57,\\n        \\\"seed\\\": 85,\\n        \\\"depth\\\": 4.6,\\n        \\\"spread\\\": 302.7,\\n        \\\"maxChilds\\\": 2,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -908,\\n        \\\"spreadY\\\": 177.5,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.199,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialAnimated\\\": 0.31,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.7,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 0.642,\\n        \\\"lineHeightRand\\\": 1,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0.04,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item3\\\",\\n      \\\"label\\\": \\\"Chaos 3\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": -0.035,\\n      \\\"end\\\": 37.43900000000004,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 93042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 22,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 210,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 10.1,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -105,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -80,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.201,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": -13.9,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 305.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 4,\\n        \\\"seed\\\": 93042,\\n        \\\"depth\\\": 22,\\n        \\\"spread\\\": 210,\\n        \\\"maxChilds\\\": 5,\\n        \\\"x\\\": 10.1,\\n        \\\"y\\\": -105,\\n        \\\"z\\\": -80,\\n        \\\"spreadY\\\": 0,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.201,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialAnimated\\\": 0.5,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": -13.9,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 305.3,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"horizontalSymmetry\\\": 0,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item4\\\",\\n      \\\"label\\\": \\\"Chaos 4\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 0.983,\\n      \\\"end\\\": 32.432,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 29,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 98042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 450,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -5,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -390,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.201,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.62,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 4.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 11.148,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 29,\\n        \\\"seed\\\": 98042,\\n        \\\"depth\\\": 12,\\n        \\\"spread\\\": 450,\\n        \\\"maxChilds\\\": 3,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": -5,\\n        \\\"z\\\": -390,\\n        \\\"spreadY\\\": 0,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.201,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialAnimated\\\": 0.4,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.62,\\n        \\\"lineWidthRand\\\": 4.3,\\n        \\\"lineHeight\\\": 11.148,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item5\\\",\\n      \\\"label\\\": \\\"Chaos 5\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 17.118,\\n      \\\"end\\\": 52.301,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 21,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 34042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 140,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1054,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.7,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.56,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 21,\\n        \\\"seed\\\": 34042,\\n        \\\"depth\\\": 8,\\n        \\\"spread\\\": 300,\\n        \\\"spreadY\\\": 140,\\n        \\\"maxChilds\\\": 8,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -1054,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.7,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0.56,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"lineHeight\\\": 1,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item6\\\",\\n      \\\"label\\\": \\\"Chaos 6\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 26.024,\\n      \\\"end\\\": 87.155,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 80,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 9142,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 3.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": -140,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 60,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1800,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.9,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 2.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.41,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 4.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 80,\\n        \\\"seed\\\": 9142,\\n        \\\"depth\\\": 3.5,\\n        \\\"spread\\\": -140,\\n        \\\"spreadY\\\": 60,\\n        \\\"maxChilds\\\": 4,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -1800,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0.3,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.9,\\n        \\\"lineWidthRand\\\": 2.5,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"lineHeight\\\": 0.41,\\n        \\\"lineHeightRand\\\": 4.1,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item7\\\",\\n      \\\"label\\\": \\\"Chaos 7\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 20.035,\\n      \\\"end\\\": 72.32999999999998,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 78,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 9642,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 10,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 170,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 158.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -17,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1150,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 1.4,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.56,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 78,\\n        \\\"seed\\\": 9642,\\n        \\\"depth\\\": 10,\\n        \\\"spread\\\": 170,\\n        \\\"spreadY\\\": 158.4,\\n        \\\"maxChilds\\\": 8,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": -17,\\n        \\\"z\\\": -1150,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0.1,\\n        \\\"rotationZ\\\": 1.4,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0.56,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.4,\\n        \\\"lineWidthRand\\\": 3,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"lineHeight\\\": 0.2,\\n        \\\"lineHeightRand\\\": 3,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item8\\\",\\n      \\\"label\\\": \\\"Chaos 8\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 60.202,\\n      \\\"end\\\": 107.71,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 64,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 3842,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": -291,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 167,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -2100,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -0.3,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.05,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.04,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.05,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 2.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 3.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 64,\\n        \\\"seed\\\": 3842,\\n        \\\"depth\\\": 12,\\n        \\\"spread\\\": -291,\\n        \\\"spreadY\\\": 167,\\n        \\\"maxChilds\\\": 12,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -2100,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": -0.3,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.05,\\n        \\\"rotationRandY\\\": 0.04,\\n        \\\"rotationRandZ\\\": 0.05,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0.4,\\n        \\\"lineWidth\\\": 0.5,\\n        \\\"lineWidthRand\\\": 2.3,\\n        \\\"lineHeight\\\": 3.3,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"materialAnimated\\\": 0.8,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item9\\\",\\n      \\\"label\\\": \\\"Chaos 9\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 73.495,\\n      \\\"end\\\": 130.643,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 50,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 32042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 6.7,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 235,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 96,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -2600,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -0.2,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0.6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.96,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.53,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 50,\\n        \\\"seed\\\": 32042,\\n        \\\"depth\\\": 6.7,\\n        \\\"spread\\\": 235,\\n        \\\"spreadY\\\": 96,\\n        \\\"maxChilds\\\": 0,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -2600,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": -0.2,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0.6,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 1,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"materialAnimated\\\": 0.96,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0.1,\\n        \\\"materialBlue\\\": 0.53,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item10\\\",\\n      \\\"label\\\": \\\"Chaos 10\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 102.377,\\n      \\\"end\\\": 141.892,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 75,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 15042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 260,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 100,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3000,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.8,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 3.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 75,\\n        \\\"seed\\\": 15042,\\n        \\\"depth\\\": 1,\\n        \\\"spread\\\": 260,\\n        \\\"spreadY\\\": 100,\\n        \\\"maxChilds\\\": 8.1,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3000,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0.8,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0,\\n        \\\"lineWidthRand\\\": 1,\\n        \\\"lineHeight\\\": 0.1,\\n        \\\"lineHeightRand\\\": 3.5,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0.2,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item11\\\",\\n      \\\"label\\\": \\\"Chaos 11\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 112.889,\\n      \\\"end\\\": 152.972,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 64,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 44402,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3000,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.225,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.368,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.75,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 64,\\n        \\\"seed\\\": 44402,\\n        \\\"depth\\\": 12,\\n        \\\"spread\\\": 300,\\n        \\\"spreadY\\\": 300,\\n        \\\"maxChilds\\\": 3,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3000,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.225,\\n        \\\"rotationRandY\\\": 0.368,\\n        \\\"rotationRandZ\\\": 0.75,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0.2,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 1,\\n        \\\"lineHeightRand\\\": 0,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"horizontalSymmetry\\\": 1,\\n        \\\"verticalSymmetry\\\": 0,\\n        \\\"materialRed\\\": 0,\\n        \\\"materialBlue\\\": 0.3,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item12\\\",\\n      \\\"label\\\": \\\"Chaos 12\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 120.719,\\n      \\\"end\\\": 212.46800000000002,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 80,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 656,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 220,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 108,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 0.793,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3300,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.9,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.95,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 80,\\n        \\\"seed\\\": 656,\\n        \\\"depth\\\": 6,\\n        \\\"spread\\\": 220,\\n        \\\"spreadY\\\": 108,\\n        \\\"maxChilds\\\": 8,\\n        \\\"horizontalSymmetry\\\": 0.793,\\n        \\\"verticalSymmetry\\\": 0.3,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3300,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0.9,\\n        \\\"rotationRandZ\\\": 0.2,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 0.5,\\n        \\\"lineHeightRand\\\": 1,\\n        \\\"materialAnimated\\\": 0.95,\\n        \\\"materialRed\\\": 0.2,\\n        \\\"materialBlue\\\": 0.3,\\n        \\\"tri\\\": 0.2\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item13\\\",\\n      \\\"label\\\": \\\"Chaos 13\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 151.87,\\n      \\\"end\\\": 241.144,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 63,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 6614,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 3.8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 121,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 167,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 16,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.8,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -3900,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": -0.1,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 1.62,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 1.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 63,\\n        \\\"seed\\\": 6614,\\n        \\\"depth\\\": 3.8,\\n        \\\"spread\\\": 121,\\n        \\\"spreadY\\\": 167,\\n        \\\"maxChilds\\\": 16,\\n        \\\"horizontalSymmetry\\\": 0.3,\\n        \\\"verticalSymmetry\\\": 0.8,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -3900,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": -0.1,\\n        \\\"rotationZ\\\": 0.5,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0.2,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0,\\n        \\\"lineWidthRand\\\": 1.62,\\n        \\\"lineHeight\\\": 0.2,\\n        \\\"lineHeightRand\\\": 1.2,\\n        \\\"materialAnimated\\\": 1,\\n        \\\"materialRed\\\": 0.3,\\n        \\\"materialBlue\\\": 0.3,\\n        \\\"tri\\\": 0.1\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item15\\\",\\n      \\\"label\\\": \\\"Chaos 15\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 2,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 120,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 8842,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 1.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 260,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 150,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"horizontalSymmetry\\\",\\n          \\\"label\\\": \\\"horizontalSymmetry\\\",\\n          \\\"val\\\": 0.4,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"verticalSymmetry\\\",\\n          \\\"label\\\": \\\"verticalSymmetry\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 520,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"min\\\": -2,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeight\\\",\\n          \\\"label\\\": \\\"line height\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineHeightRand\\\",\\n          \\\"label\\\": \\\"line height randomness\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialRed\\\",\\n          \\\"label\\\": \\\"percent red\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialBlue\\\",\\n          \\\"label\\\": \\\"percent blue\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.9,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"tri\\\",\\n          \\\"label\\\": \\\"tri\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 120,\\n        \\\"seed\\\": 8842,\\n        \\\"depth\\\": 1.5,\\n        \\\"spread\\\": 260,\\n        \\\"spreadY\\\": 150,\\n        \\\"maxChilds\\\": 12,\\n        \\\"horizontalSymmetry\\\": 0.4,\\n        \\\"verticalSymmetry\\\": 0.2,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 520,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.5,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"lineHeight\\\": 0.2,\\n        \\\"lineHeightRand\\\": 1,\\n        \\\"materialRed\\\": 0.3,\\n        \\\"materialBlue\\\": 0,\\n        \\\"materialAnimated\\\": 0.9,\\n        \\\"tri\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    }\\n  ]\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/scripts/app/data.json\n ** module id = 17\n ** module chunks = 1\n **/","!function(t){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var e;e=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,e.Acoustic=t()}}(function(){return function t(e,i,n){function a(r,s){if(!i[r]){if(!e[r]){var u=\"function\"==typeof require&&require;if(!s&&u)return u(r,!0);if(o)return o(r,!0);var f=new Error(\"Cannot find module '\"+r+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var c=i[r]={exports:{}};e[r][0].call(c.exports,function(t){var i=e[r][1][t];return a(i?i:t)},c,c.exports,t,e,i,n)}return i[r].exports}for(var o=\"function\"==typeof require&&require,r=0;r<n.length;r++)a(n[r]);return a}({1:[function(t,e,i){\"use strict\";function n(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var a=function(){function t(e){var i=void 0===arguments[1]?{}:arguments[1];n(this,t),this.options=i,this.fftSize=i.fftSize||512,this.filters=i.filters||this.getDefaultFilters(),this.audio=this.initAudio(e),this.currentTime=0,this.playing=!1,this.context=new(window.AudioContext||window.webkitAudioContext),this.source=this.context.createMediaElementSource(this.audio),this.analyser=this.context.createAnalyser(),this.analyser.fftSize=this.fftSize,this.samples=this.analyser.frequencyBinCount,this.delay=this.context.createDelay?this.context.createDelay():this.context.createDelayNode(),this.delay.delayTime.value=2*this.fftSize/this.context.sampleRate,this.data={timeDomainData:new Uint8Array(this.samples),timeDomainRMS:0,filters:{}},this.source.connect(this.analyser),this.analyser.connect(this.delay),this.delay.connect(this.context.destination),this.filters=this.initFilters(this.filters,this.data)}return t.prototype.initAudio=function(t){var e=this,i=!1;return i=\"string\"==typeof t?new Audio(t):t,i.addEventListener(\"canplay\",function(){e.options.onCanPlay&&e.options.onCanPlay(e)}),i},t.prototype.update=function(){if(this.playing){var t=this;this.analyser.smoothingTimeConstant=!1,this.analyser.getByteTimeDomainData(this.data.timeDomainData),this.data.timeDomainRMS=this.rms(this.data.timeDomainData),Object.keys(this.filters).forEach(function(e){var i=t.filters[e],n=t.data.filters[e];i.analyserNode.fftSize=t.fftSize,i.analyserNode.getByteTimeDomainData(n.timeDomainData),n.timeDomainRMS+=.4*(t.rms(n.timeDomainData)-n.timeDomainRMS)})}},t.prototype.rms=function(t){for(var e=t.length,i=0,n=0;e>n;n++){var a=Math.abs(t[n]-128);i+=a*a}return Math.sqrt(i/e)},t.prototype.play=function(){this.audio&&(this.playing=!0,this.audio.play(),this.audio.currentTime=this.currentTime)},t.prototype.pause=function(){this.audio&&(this.playing=!1,this.audio.pause())},t.prototype.seek=function(t){this.currentTime=t,this.audio&&this.audio.paused===!1&&(this.audio.currentTime=this.currentTime)},t.prototype.getValue=function(t){var e=void 0;return t?void 0!==this.data.filters[t]&&(e=this.data.filters[t].timeDomainRMS):e=this.data.timeDomainRMS,e},t.prototype.initFilters=function(t,e){var i=this;return Object.keys(t).forEach(function(n){var a=t[n];a.biquadFilter=i.context.createBiquadFilter(),a.biquadFilter.type=a.type,a.biquadFilter.frequency.value=a.frequency,a.biquadFilter.Q.value=a.Q,a.analyserNode=i.context.createAnalyser(),a.analyserNode.fftSize=i.fftSize,a.gainNode=i.context.createGain?i.context.createGain():i.context.createGainNode(),a.gainNode.gain.value=a.gain,i.source.connect(a.gainNode),a.gainNode.connect(a.biquadFilter),a.biquadFilter.connect(a.analyserNode),e.filters[n]={timeDomainData:new Uint8Array(i.samples),timeDomainRMS:0}}),t},t.prototype.getDefaultFilters=function(){return{bass:{type:\"lowpass\",frequency:120,Q:1.2,gain:12},mid:{type:\"bandpass\",frequency:400,Q:1.2,gain:12},high:{type:\"highpass\",frequency:2e3,Q:1.2,gain:12}}},t}();e.exports=a},{}]},{},[1])(1)});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/bower_components/acoustic.js/dist/acoustic.min.js\n ** module id = 18\n ** module chunks = 1\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  class Global\n    @properties:\n      bassSensibility: {name: 'bassSensibility', label: 'bassSensibility x', val: 120, min: 0, max: 200}\n      midSensibility: {name: 'midSensibility', label: 'midSensibility', val: 100, min: 0, max: 200}\n      highSensibility: {name: 'highSensibility', label: 'highSensibility', val: 120, min: 0, max: 200}\n      autoAnimate: {name: 'autoAnimate', label: 'autoAnimate', val: 0, min: 0, max: 1}\n\n    constructor: (@values = {}, time = 0) ->\n      window.global = this\n\n    update: (seconds, values = false, force = false) ->\n      if values == false then values = @values\n      @values = _.merge(@values, values)\n\n    destroy: () ->\n      return\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Global.coffee\n **/","THREE.GlitchPass2 = function ( dt_size ) {\n\n  if ( THREE.DigitalGlitch2 === undefined ) console.error( \"THREE.GlitchPass relies on THREE.DigitalGlitch\" );\n\n  var shader = THREE.DigitalGlitch2;\n  this.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n  if(dt_size==undefined) dt_size=64;\n\n  this.intensity = 1;\n  this.uniforms[\"tDisp\"].value=this.generateHeightmap(dt_size);\n\n\n  this.material = new THREE.ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader\n  });\n\n  this.enabled = true;\n  this.renderToScreen = false;\n  this.needsSwap = true;\n\n  this.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n  this.scene  = new THREE.Scene();\n\n  this.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n  this.scene.add( this.quad );\n\n  this.goWild=false;\n  this.curF=0;\n  this.generateTrigger();\n\n};\n\nTHREE.GlitchPass2.prototype = {\n\n  render: function ( renderer, writeBuffer, readBuffer, delta )\n  {\n    this.uniforms[ \"tDiffuse\" ].value = readBuffer;\n    this.uniforms[ 'seed' ].value=Math.random();//default seeding\n    //this.uniforms[ 'byp' ].value=0;\n\n    this.uniforms[ 'amount' ].value = (Math.random()/420) * this.intensity;\n    this.uniforms[ 'angle' ].value=THREE.Math.randFloat(-Math.PI,Math.PI);\n    this.uniforms[ 'seed_x' ].value=THREE.Math.randFloat(-1,1);\n    this.uniforms[ 'seed_y' ].value=THREE.Math.randFloat(-1,1);\n    this.uniforms[ 'seed_x' ].value *= 0.001;\n    this.uniforms[ 'seed_y' ].value *= 0.001;\n    this.uniforms[ 'distortion_x' ].value=THREE.Math.randFloat(0,0.001);\n    this.uniforms[ 'distortion_y' ].value=THREE.Math.randFloat(0,0.001);\n    //this.curF=0;\n    this.generateTrigger();\n\n    this.uniforms[ 'byp' ].value=0;\n    this.curF++;\n\n    this.quad.material = this.material;\n    if ( this.renderToScreen )\n    {\n      renderer.render( this.scene, this.camera );\n    }\n    else\n    {\n      renderer.render( this.scene, this.camera, writeBuffer, false );\n    }\n  },\n  generateTrigger:function()\n  {\n    this.randX=THREE.Math.randInt(120,240);\n  },\n  generateHeightmap:function(dt_size)\n  {\n    var data_arr = new Float32Array( dt_size*dt_size * 3 );\n    var length=dt_size*dt_size;\n\n    for ( var i = 0; i < length; i++)\n    {\n      var val=THREE.Math.randFloat(0,1);\n      data_arr[ i*3 + 0 ] = val;\n      data_arr[ i*3 + 1 ] = val;\n      data_arr[ i*3 + 2 ] = val;\n    }\n\n    var texture = new THREE.DataTexture( data_arr, dt_size, dt_size, THREE.RGBFormat, THREE.FloatType );\n    texture.minFilter = THREE.NearestFilter;\n    texture.magFilter = THREE.NearestFilter;\n    texture.needsUpdate = true;\n    texture.flipY = false;\n    return texture;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/postprocessing/GlitchPass2.js\n ** module id = 20\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar width = window.innerWidth || 1;\n\t\tvar height = window.innerHeight || 1;\n\t\tvar parameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\n\n\t\trenderTarget = new THREE.WebGLRenderTarget( width, height, parameters );\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.passes = [];\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.EffectComposer relies on THREE.CopyShader\" );\n\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\n};\n\nTHREE.EffectComposer.prototype = {\n\n\tswapBuffers: function() {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\trender: function ( delta ) {\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( !pass.enabled ) continue;\n\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\n\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\tmaskActive = true;\n\n\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\tmaskActive = false;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\n\t\t\trenderTarget.width = window.innerWidth;\n\t\t\trenderTarget.height = window.innerHeight;\n\n\t\t}\n\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar renderTarget = this.renderTarget1.clone();\n\n\t\trenderTarget.width = width;\n\t\trenderTarget.height = height;\n\n\t\tthis.reset( renderTarget );\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/EffectComposer.js\n ** module id = 21\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MaskPass = function ( scene, camera ) {\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.enabled = true;\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nTHREE.MaskPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tvar context = renderer.context;\n\n\t\t// don't update color or depth\n\n\t\tcontext.colorMask( false, false, false, false );\n\t\tcontext.depthMask( false );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tcontext.enable( context.STENCIL_TEST );\n\t\tcontext.stencilOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tcontext.stencilFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tcontext.clearStencil( clearValue );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t// re-enable update of color and depth\n\n\t\tcontext.colorMask( true, true, true, true );\n\t\tcontext.depthMask( true );\n\n\t\t// only render where stencil is set to 1\n\n\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );  // draw if == 1\n\t\tcontext.stencilOp( context.KEEP, context.KEEP, context.KEEP );\n\n\t}\n\n};\n\n\nTHREE.ClearMaskPass = function () {\n\n\tthis.enabled = true;\n\n};\n\nTHREE.ClearMaskPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tvar context = renderer.context;\n\n\t\tcontext.disable( context.STENCIL_TEST );\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/MaskPass.js\n ** module id = 22\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.BloomPass = function ( strength, kernelSize, sigma, resolution ) {\n\n\tstrength = ( strength !== undefined ) ? strength : 1;\n\tkernelSize = ( kernelSize !== undefined ) ? kernelSize : 25;\n\tsigma = ( sigma !== undefined ) ? sigma : 4.0;\n\tresolution = ( resolution !== undefined ) ? resolution : 256;\n\n\t// render targets\n\n\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\n\tthis.renderTargetX = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\tthis.renderTargetY = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\n\t// copy material\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.CopyShader\" );\n\n\tvar copyShader = THREE.CopyShader;\n\n\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\n\tthis.copyUniforms[ \"opacity\" ].value = strength;\n\n\tthis.materialCopy = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: THREE.AdditiveBlending,\n\t\ttransparent: true\n\n\t} );\n\n\t// convolution material\n\n\tif ( THREE.ConvolutionShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.ConvolutionShader\" );\n\n\tvar convolutionShader = THREE.ConvolutionShader;\n\n\tthis.convolutionUniforms = THREE.UniformsUtils.clone( convolutionShader.uniforms );\n\n\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurx;\n\tthis.convolutionUniforms[ \"cKernel\" ].value = THREE.ConvolutionShader.buildKernel( sigma );\n\n\tthis.materialConvolution = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.convolutionUniforms,\n\t\tvertexShader:  convolutionShader.vertexShader,\n\t\tfragmentShader: convolutionShader.fragmentShader,\n\t\tdefines: {\n\t\t\t\"KERNEL_SIZE_FLOAT\": kernelSize.toFixed( 1 ),\n\t\t\t\"KERNEL_SIZE_INT\": kernelSize.toFixed( 0 )\n\t\t}\n\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\tthis.clear = false;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.BloomPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\n\n\t\t// Render quad with blured scene into texture (convolution pass 1)\n\n\t\tthis.quad.material = this.materialConvolution;\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\n\t\trenderer.render( this.scene, this.camera, this.renderTargetX, true );\n\n\n\t\t// Render quad with blured scene into texture (convolution pass 2)\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = this.renderTargetX;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurY;\n\n\t\trenderer.render( this.scene, this.camera, this.renderTargetY, true );\n\n\t\t// Render original scene with superimposed blur to texture\n\n\t\tthis.quad.material = this.materialCopy;\n\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetY;\n\n\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t}\n\n};\n\nTHREE.BloomPass.blurX = new THREE.Vector2( 0.001953125, 0.0 );\nTHREE.BloomPass.blurY = new THREE.Vector2( 0.0, 0.001953125 );\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/BloomPass.js\n ** module id = 23\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShaderPass = function ( shader, textureID ) {\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\tthis.material = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\n\t} );\n\n\tthis.renderToScreen = false;\n\n\tthis.enabled = true;\n\tthis.needsSwap = true;\n\tthis.clear = false;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.ShaderPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer;\n\n\t\t}\n\n\t\tthis.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t} else {\n\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/ShaderPass.js\n ** module id = 24\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 1;\n\n\tthis.oldClearColor = new THREE.Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.enabled = true;\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n};\n\nTHREE.RenderPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/RenderPass.js\n ** module id = 25\n ** module chunks = 1\n **/","THREE.CustomPostShader = {\n  uniforms: {\n    \"tDiffuse\": {type: \"t\", value: null},\n    \"resolution\": {type: \"v2\", value: new THREE.Vector2(1 / 1024, 1 / 512)},\n    \"time\": {type: \"f\", value: 0},\n    \"nIntensity\": {type: \"f\", value: 0.05},\n  },\n  vertexShader: require('./CustomPostPass.vert'),\n  fragmentShader: require('./CustomPostPass.frag'),\n};\n\nTHREE.CustomPostPass = function (noiseIntensity, resolution) {\n  var shader = THREE.CustomPostShader;\n\n  this.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n  this.material = new THREE.ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader\n  });\n\n  this.uniforms.nIntensity.value = resolution;\n  if ( noiseIntensity !== undefined ) this.uniforms.nIntensity.value = noiseIntensity;\n\n  this.enabled = true;\n  this.renderToScreen = false;\n  this.needsSwap = true;\n\n  this.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n  this.scene  = new THREE.Scene();\n\n  this.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n  this.scene.add( this.quad );\n};\n\nTHREE.CustomPostPass.prototype = {\n  render: function (renderer, writeBuffer, readBuffer, delta) {\n    this.uniforms[ \"tDiffuse\" ].value = readBuffer;\n    this.uniforms[ \"time\" ].value += delta;\n\n    this.quad.material = this.material;\n\n    if ( this.renderToScreen ) {\n      renderer.render( this.scene, this.camera );\n    } else {\n      renderer.render( this.scene, this.camera, writeBuffer, false );\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/postprocessing/CustomPostPass.js\n ** module id = 26\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n * @author davidedc / http://www.sketchpatch.net/\n *\n * NVIDIA FXAA by Timothy Lottes\n * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\n * - WebGL port by @supereggbert\n * http://www.glge.org/demos/fxaa/\n */\n\nTHREE.FXAAShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\"resolution\": { type: \"v2\", value: new THREE.Vector2( 1 / 1024, 1 / 512 )  }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec2 resolution;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"#define FXAA_REDUCE_MIN   (1.0/128.0)\",\n\t\t\"#define FXAA_REDUCE_MUL   (1.0/8.0)\",\n\t\t\"#define FXAA_SPAN_MAX     8.0\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );\",\n\t\t\t\"vec3 rgbM  = rgbaM.xyz;\",\n\t\t\t\"float opacity  = rgbaM.w;\",\n\n\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\n\t\t\t\"float lumaNW = dot( rgbNW, luma );\",\n\t\t\t\"float lumaNE = dot( rgbNE, luma );\",\n\t\t\t\"float lumaSW = dot( rgbSW, luma );\",\n\t\t\t\"float lumaSE = dot( rgbSE, luma );\",\n\t\t\t\"float lumaM  = dot( rgbM,  luma );\",\n\t\t\t\"float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\",\n\t\t\t\"float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\",\n\n\t\t\t\"vec2 dir;\",\n\t\t\t\"dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\",\n\t\t\t\"dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\",\n\n\t\t\t\"float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\",\n\n\t\t\t\"float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\",\n\t\t\t\"dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\",\n\t\t\t\t  \"max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\",\n\t\t\t\t\t\t\"dir * rcpDirMin)) * resolution;\",\n\n\t\t\t\"vec3 rgbA = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\"rgbA += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\"rgbA *= 0.5;\",\n\n\t\t\t\"vec3 rgbB = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz;\",\n\t\t\t\"rgbB += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz;\",\n\t\t\t\"rgbB *= 0.25;\",\n\t\t\t\"rgbB += rgbA * 0.5;\",\n\n\t\t\t\"float lumaB = dot( rgbB, luma );\",\n\n\t\t\t\"if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\",\n\n\t\t\t\t\"gl_FragColor = vec4( rgbA, opacity );\",\n\n\t\t\t\"} else {\",\n\n\t\t\t\t\"gl_FragColor = vec4( rgbB, opacity );\",\n\n\t\t\t\"}\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/FXAAShader.js\n ** module id = 27\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Convolution shader\n * ported from o3d sample to WebGL / GLSL\n * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\n */\n\nTHREE.ConvolutionShader = {\n\n\tdefines: {\n\n\t\t\"KERNEL_SIZE_FLOAT\": \"25.0\",\n\t\t\"KERNEL_SIZE_INT\": \"25\",\n\n\t},\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":        { type: \"t\", value: null },\n\t\t\"uImageIncrement\": { type: \"v2\", value: new THREE.Vector2( 0.001953125, 0.0 ) },\n\t\t\"cKernel\":         { type: \"fv1\", value: [] }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float cKernel[ KERNEL_SIZE_INT ];\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec2 imageCoord = vUv;\",\n\t\t\t\"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\n\n\t\t\t\"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\n\n\t\t\t\t\"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\n\t\t\t\t\"imageCoord += uImageIncrement;\",\n\n\t\t\t\"}\",\n\n\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\n\t].join(\"\\n\"),\n\n\tbuildKernel: function ( sigma ) {\n\n\t\t// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\n\n\t\tfunction gauss( x, sigma ) {\n\n\t\t\treturn Math.exp( - ( x * x ) / ( 2.0 * sigma * sigma ) );\n\n\t\t}\n\n\t\tvar i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil( sigma * 3.0 ) + 1;\n\n\t\tif ( kernelSize > kMaxKernelSize ) kernelSize = kMaxKernelSize;\n\t\thalfWidth = ( kernelSize - 1 ) * 0.5;\n\n\t\tvalues = new Array( kernelSize );\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < kernelSize; ++i ) {\n\n\t\t\tvalues[ i ] = gauss( i - halfWidth, sigma );\n\t\t\tsum += values[ i ];\n\n\t\t}\n\n\t\t// normalize the kernel\n\n\t\tfor ( i = 0; i < kernelSize; ++i ) values[ i ] /= sum;\n\n\t\treturn values;\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/ConvolutionShader.js\n ** module id = 28\n ** module chunks = 1\n **/","/**\n * @author felixturner / http://airtight.cc/\n *\n * RGB Shift Shader\n * Shifts red and blue channels from center in opposite directions\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n * by Tom Butterworth / http://kriss.cx/tom/\n *\n * amount: shift distance (1 is width of input)\n * angle: shift angle in radians\n */\n\nTHREE.DigitalGlitch2 = {\n\n  uniforms: {\n\n    \"tDiffuse\":   { type: \"t\", value: null },//diffuse texture\n    \"tDisp\":    { type: \"t\", value: null },//displacement texture for digital glitch squares\n    \"tScratch\":   { type: \"t\", value: null },//scratch texture\n    \"byp\":      { type: \"i\", value: 0 },//apply the glitch ?\n    \"amount\":   { type: \"f\", value: 0.08 },\n    \"angle\":    { type: \"f\", value: 0.02 },\n    \"seed\":     { type: \"f\", value: 0.02 },\n    \"seed_x\":   { type: \"f\", value: 0.02 },//-1,1\n    \"seed_y\":   { type: \"f\", value: 0.02 },//-1,1\n    \"distortion_x\": { type: \"f\", value: 0.5 },\n    \"distortion_y\": { type: \"f\", value: 0.6 },\n    \"col_s\":    { type: \"f\", value: 0.05 }\n  },\n\n  vertexShader: [\n\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n      \"vUv = uv;\",\n      \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\"\n  ].join(\"\\n\"),\n\n  fragmentShader: [\n    \"uniform int byp;\",//should we apply the glitch ?\n\n    \"uniform sampler2D tDiffuse;\",\n    \"uniform sampler2D tDisp;\",\n    \"uniform sampler2D tScratch;\",\n\n    \"uniform float amount;\",\n    \"uniform float angle;\",\n    \"uniform float seed;\",\n    \"uniform float seed_x;\",\n    \"uniform float seed_y;\",\n    \"uniform float distortion_x;\",\n    \"uniform float distortion_y;\",\n    \"uniform float col_s;\",\n\n    \"varying vec2 vUv;\",\n\n\n    \"float rand(vec2 co){\",\n      \"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\n    \"}\",\n\n    \"float luma(vec3 color) {\",\n      \"return dot(color, vec3(0.299, 0.587, 0.114));\",\n    \"}\",\n\n    \"float luma(vec4 color) {\",\n      \"return dot(color.rgb, vec3(0.299, 0.587, 0.114));\",\n    \"}\",\n\n    \"void main() {\",\n      // ref for dust/scratch: https://gist.github.com/mattdesl/253aece2d3eaac505823\n      \"vec2 p = vUv;\",\n      \"vec4 scratches = texture2D(tScratch, p);\",\n\n\n      // https://github.com/mattdesl/lwjgl-basics/wiki/ShaderLesson3\n      \"if(byp<1) {\",\n        \"float xs = floor(gl_FragCoord.x / 0.5);\",\n        \"float ys = floor(gl_FragCoord.y / 0.5);\",\n        //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n        \"vec4 normal = texture2D (tDisp, p*seed*seed);\",\n        \"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\",\n          \"if(seed_x>0.){\",\n            \"p.y = 1. - (p.y + distortion_y);\",\n          \"}\",\n          \"else {\",\n            \"p.y = distortion_y;\",\n          \"}\",\n        \"}\",\n        \"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\",\n          \"if(seed_y>0.){\",\n            \"p.x=distortion_x;\",\n          \"}\",\n          \"else {\",\n            \"p.x = 1. - (p.x + distortion_x);\",\n          \"}\",\n        \"}\",\n        \"p.x+=normal.x*seed_x*(seed/5.);\",\n        \"p.y+=normal.y*seed_y*(seed/5.);\",\n        //base from RGB shift shader\n        \"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\n        \"vec4 cr = texture2D(tDiffuse, p + offset);\",\n        \"vec4 cga = texture2D(tDiffuse, p);\",\n        \"vec4 cb = texture2D(tDiffuse, p - offset);\",\n\n        \"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\n        //add noise\n        \"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\",\n        \"gl_FragColor = gl_FragColor+ snow;\",\n      \"}\",\n      \"else {\",\n        \"gl_FragColor=texture2D (tDiffuse, vUv);\",\n      \"}\",\n\n      \"vec3 scratchBlend = gl_FragColor.rgb + scratches.rgb;\",\n      // vignette scratch so that it affect only edges.\n      \"float center = smoothstep(0.0, 0.5, length(vUv-0.5));\",\n      \"float luminance = luma(gl_FragColor.rgb);\",\n      \"float brightnessMap = smoothstep(0.1, 0.4, luminance * center );\",\n      \"gl_FragColor.rgb = mix(gl_FragColor.rgb, scratchBlend, brightnessMap);\",\n    \"}\"\n\n  ].join(\"\\n\")\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/DigitalGlitch2.js\n ** module id = 29\n ** module chunks = 1\n **/","define (require) ->\n  AnimatedLine = require 'app/elements/AnimatedLine'\n  SpreadedObjects = require 'app/elements/SpreadedObjects'\n\n  class Lines extends SpreadedObjects\n    getItemClass: () -> return AnimatedLine\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Lines.coffee\n **/","define (require) ->\n  THREE = require 'Three'\n\n  class Camera\n    @properties:\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 700}\n      target_x: {name: 'target_x', label: 'target x', val: 0}\n      target_y: {name: 'target_y', label: 'target y', val: 0}\n      target_z: {name: 'target_z', label: 'target z', val: 0}\n      fov: {name: 'fov', label: 'fov', val: 45}\n\n    constructor: (@values = {}, time = 0) ->\n      @isCamera = true\n      @target = new THREE.Vector3(@values.target_x, @values.target_y, @values.target_z)\n      @container = new THREE.PerspectiveCamera( @values.fov, window.innerWidth / window.innerHeight, 1, 2000 )\n      @container.position.set(@values.x, @values.y, @values.z)\n\n    update: (seconds, values = false, force = false) ->\n      if values.fov? then @container.fov = values.fov\n      @container.position.set(values.x, values.y, values.z)\n      @target.set(values.target_x, values.target_y, values.target_z)\n      @container.lookAt( @target )\n\n    destroy: () ->\n      delete @container\n      delete @isCamera\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Camera.coffee\n **/","define (require) ->\n  AnimatedCircle = require 'app/elements/AnimatedCircle'\n  SpreadedObjects = require 'app/elements/SpreadedObjects'\n\n  class Circles extends SpreadedObjects\n    getItemClass: () -> return AnimatedCircle\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Circles.coffee\n **/","define (require) ->\n  AnimatedBox = require 'app/elements/AnimatedBox'\n  SpreadedObjects = require 'app/elements/SpreadedObjects'\n\n  class Boxes extends SpreadedObjects\n    getItemClass: () -> return AnimatedBox\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Boxes.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'rng'\n  ElementBase = require 'app/elements/ElementBase'\n  Colors = require 'app/components/Colors'\n\n  ShaderVertex = require 'app/shaders/BasicNoise.vert'\n  ShaderFragement = require 'app/shaders/BasicNoise.frag'\n\n  class SingleObject extends ElementBase\n    @properties:\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      rotX: {name: 'rotX', label: 'rotation x', val: 0}\n      rotY: {name: 'rotY', label: 'rotation y', val: 0}\n      rotZ: {name: 'rotZ', label: 'rotation z', val: 0}\n      scaleX: {name: 'scaleX', label: 'scale x', val: 1}\n      scaleY: {name: 'scaleY', label: 'scale y', val: 1}\n      scaleZ: {name: 'scaleZ', label: 'scale z', val: 1}\n      color: {name: 'color', label: 'color', 'type': 'color', val: \"#888888\"}\n      opacity: {name: 'opacity', label: 'opacity', val: 1, min: 0, max: 1}\n\n    constructor: (@values = {}, time = 0) ->\n      # Set the default value of instance properties.\n      for key, prop of @getDefaultProperties()\n        if !@values[key]?\n          @values[key] = prop.val\n\n      # Set values cache\n      super\n\n      @timeline = new TimelineMax()\n      #color = Colors.get(0)\n      color = new THREE.Color(values.color)\n      @material = @getMaterial(color)\n      @container = new THREE.Mesh(@getGeometry() , @material )\n\n    getDefaultProperties: () -> SingleObject.properties\n\n    getGeometry: () =>\n      return new THREE.PlaneGeometry( 100, 100)\n\n    destroy: () ->\n      super\n      # clean up...\n      if @container\n        if @container.parent then @container.parent.remove(@container)\n        delete @container\n\n      delete @geometry\n      delete @timeline\n\n    update: (seconds, values = false, force = false) ->\n      if values == false then values = @values\n\n      if force || @valueChanged(\"x\", values) || @valueChanged(\"y\", values) || @valueChanged(\"z\", values)\n        @container.position.set(values.x, values.y, values.z)\n\n      if force || @valueChanged(\"rotX\", values) || @valueChanged(\"rotY\", values) || @valueChanged(\"rotZ\", values)\n        @container.rotation.set(@degreeToRadian(values.rotX), @degreeToRadian(values.rotY), @degreeToRadian(values.rotZ))\n      if force || @valueChanged(\"scaleX\", values) || @valueChanged(\"scaleY\", values) || @valueChanged(\"scaleZ\", values)\n        # Don't allow scale by 0.\n        values.scaleX = values.scaleX || 0.000000001\n        values.scaleY = values.scaleY || 0.000000001\n        values.scaleZ = values.scaleZ || 0.000000001\n        @container.scale.set(values.scaleX, values.scaleY, values.scaleZ)\n\n      if force || @valueChanged(\"color\", values)\n        @material.color = new THREE.Color(values.color)\n      if force || @valueChanged(\"opacity\", values)\n        @material.opacity = values.opacity\n      return\n\n    getMaterial: (color) ->\n      material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0x888888, shininess: 30, shading: THREE.FlatShading })\n      material.transparent = true\n      material.depthWrite = false\n      material.depthTest = false\n      material.side = THREE.DoubleSide\n\n      material.blending = THREE.AdditiveBlending\n      return material\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/SingleObject.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'rng'\n  SingleObject = require 'app/elements/SingleObject'\n  Colors = require 'app/components/Colors'\n  RingGeometry2 = require 'app/geometries/RingGeometry2'\n\n  ShaderVertex = require 'app/shaders/BasicNoise.vert'\n  ShaderFragement = require 'app/shaders/BasicNoise.frag'\n\n  class Circle extends SingleObject\n    @properties:\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      rotX: {name: 'rotX', label: 'rotation x', val: 0}\n      rotY: {name: 'rotY', label: 'rotation y', val: 0}\n      rotZ: {name: 'rotZ', label: 'rotation z', val: 0}\n      scaleX: {name: 'scaleX', label: 'scale x', val: 1}\n      scaleY: {name: 'scaleY', label: 'scale y', val: 1}\n      scaleZ: {name: 'scaleZ', label: 'scale z', val: 1}\n      innerRadius: {name: 'innerRadius', label: 'innerRadius', val: 0.7, min: 0, max: 1}\n      angle: {name: 'angle', label: 'angle', val: 1, min: 0, max: 1}\n      color: {name: 'color', label: 'color', 'type': 'color', val: \"#888888\"}\n      opacity: {name: 'opacity', label: 'opacity', val: 1, min: 0, max: 1}\n\n    getDefaultProperties: () -> Circle.properties\n\n    getGeometry: () =>\n      # Don't allow 0 innerRadius\n      inner_radius = @values.innerRadius || 0.000000001\n      # And neither 1.\n      inner_radius = Math.min(0.999999999, inner_radius)\n      pi2 = Math.PI * 2\n      angle = @values.angle * pi2\n      return new RingGeometry2( 100 * inner_radius, 100, 30, 1, 0, angle )\n\n    update: (seconds, values = false, force = false) ->\n      super\n\n      if force || @valueChanged(\"innerRadius\", values) || @valueChanged(\"angle\", values)\n        geom = @getGeometry()\n        @container.geometry.dynamic = true\n        @container.geometry.vertices = geom.vertices\n        @container.geometry.verticesNeedUpdate = true\n\n        geom.dispose()\n      return\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Circle.coffee\n **/","define (require) ->\n\n  class ElementBase\n    constructor: (@values = {}, time = 0) ->\n      @cache = @buildCache()\n\n    buildCache: () ->\n      cache = {}\n      for key, prop of @values\n        cache[key] = prop.val\n      return cache\n\n    valueChanged: (key, values) ->\n      # Value can't change if it is not even set.\n      if !values[key]? then return false\n      new_val = values[key]\n      has_changed = true\n      if @cache[key]? && @cache[key] == new_val then has_changed = false\n\n      # Directly set the new cache value to avoid setting it multiple time to true.\n      @cache[key] = new_val\n      return has_changed\n\n    degreeToRadian: (degree) -> Math.PI * degree / 180\n\n    destroy: () =>\n      delete @cache\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/ElementBase.coffee\n **/","#https://kuler.adobe.com/Tron-Legacy2-color-theme-1406713/edit/?copy=true&base=2&rule=Custom&selected=0&name=Copy%20of%20Tron%20Legacy2&mode=rgb&rgbvalues=0.008019047984151012,0.2173110006233171,0.3137254901960784,0.00784313725490196,0.5411764705882353,0.6196078431372549,0.05627426106529288,0.7490196078431373,0.6616535221392924,0.9490196078431372,0.7547155506500436,0.11287104291749415,0.8509803921568627,0.1894012485482237,0.1429403608472727&swatchOrder=0,1,2,3,4\ndefine (require) ->\n  THREE = require 'Three'\n\n  items = [\n    new THREE.Color(0xffffff),\n    new THREE.Color(0x86d1b8),\n    new THREE.Color(0x65c282),\n  ]\n\n  items2 = [\n    new THREE.Color(0xffffff),\n    new THREE.Color(0x023750),\n    new THREE.Color(0x028A9E),\n    new THREE.Color(0x0EBFA9),\n    new THREE.Color(0xF2C01D),\n    new THREE.Color(0xD93024),\n    #new THREE.Color(0x9ACCEF),\n  ]\n\n  length = items.length\n\n  class Colors\n    @get = (index) ->\n      index = Math.abs(parseInt(index, 10))\n      return items[index % length]\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/Colors.coffee\n **/","// Modified to have uv on the edges.\n\ndefine(function(require) {\n  var THREE = require('Three');\n\nTHREE.CircleGeometry2 = function ( radius, segments, thetaStart, thetaLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'CircleGeometry2';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 50;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tvar i, uvs = [],\n\tcenter = new THREE.Vector3(),\n  centerUV = new THREE.Vector2( 0, 0 );\n  //centerUV = new THREE.Vector2( 0.5, 0.5 );\n\n\tthis.vertices.push(center);\n\tuvs.push( centerUV );\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar segment = thetaStart + i / segments * thetaLength;\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tthis.vertices.push( vertex );\n\t\t//uvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\n\n    uvs.push(new THREE.Vector2(1, i / segments));\n\t}\n\n\tvar n = new THREE.Vector3( 0, 0, 1 );\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t//this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\n    this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), new THREE.Vector2(0, i / segments) ] );\n\n\t}\n\n\tthis.computeFaceNormals();\n\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.CircleGeometry2.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.CircleGeometry2.prototype.constructor = THREE.CircleGeometry2;\n\nreturn THREE.CircleGeometry2;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/geometries/CircleGeometry2.js\n ** module id = 38\n ** module chunks = 1\n **/","/**\n * Seedable random number generator functions.\n * @version 1.0.0\n * @license Public Domain\n *\n * @example\n * var rng = new RNG('Example');\n * rng.random(40, 50);  // =>  42\n * rng.uniform();       // =>  0.7972798995050903\n * rng.normal();        // => -0.6698504543216376\n * rng.exponential();   // =>  1.0547367609131555\n * rng.poisson(4);      // =>  2\n * rng.gamma(4);        // =>  2.781724687386858\n */\n\n/**\n * @param {String} seed A string to seed the generator.\n * @constructor\n */\nfunction RC4(seed) {\n    this.s = new Array(256);\n    this.i = 0;\n    this.j = 0;\n    for (var i = 0; i < 256; i++) {\n        this.s[i] = i;\n    }\n    if (seed) {\n        this.mix(seed);\n    }\n}\n\n/**\n * Get the underlying bytes of a string.\n * @param {string} string\n * @returns {Array} An array of bytes\n */\nRC4.getStringBytes = function(string) {\n    var output = [];\n    for (var i = 0; i < string.length; i++) {\n        var c = string.charCodeAt(i);\n        var bytes = [];\n        do {\n            bytes.push(c & 0xFF);\n            c = c >> 8;\n        } while (c > 0);\n        output = output.concat(bytes.reverse());\n    }\n    return output;\n};\n\nRC4.prototype._swap = function(i, j) {\n    var tmp = this.s[i];\n    this.s[i] = this.s[j];\n    this.s[j] = tmp;\n};\n\n/**\n * Mix additional entropy into this generator.\n * @param {String} seed\n */\nRC4.prototype.mix = function(seed) {\n    var input = RC4.getStringBytes(seed);\n    var j = 0;\n    for (var i = 0; i < this.s.length; i++) {\n        j += this.s[i] + input[i % input.length];\n        j %= 256;\n        this._swap(i, j);\n    }\n};\n\n/**\n * @returns {number} The next byte of output from the generator.\n */\nRC4.prototype.next = function() {\n    this.i = (this.i + 1) % 256;\n    this.j = (this.j + this.s[this.i]) % 256;\n    this._swap(this.i, this.j);\n    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n};\n\n/**\n * Create a new random number generator with optional seed. If the\n * provided seed is a function (i.e. Math.random) it will be used as\n * the uniform number generator.\n * @param seed An arbitrary object used to seed the generator.\n * @constructor\n */\nfunction RNG(seed) {\n    if (seed == null) {\n        seed = (Math.random() + Date.now()).toString();\n    } else if (typeof seed === \"function\") {\n        // Use it as a uniform number generator\n        this.uniform = seed;\n        this.nextByte = function() {\n            return ~~(this.uniform() * 256);\n        };\n        seed = null;\n    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n        seed = JSON.stringify(seed);\n    }\n    this._normal = null;\n    if (seed) {\n        this._state = new RC4(seed);\n    } else {\n        this._state = null;\n    }\n}\n\n/**\n * @returns {number} Uniform random number between 0 and 255.\n */\nRNG.prototype.nextByte = function() {\n    return this._state.next();\n};\n\n/**\n * @returns {number} Uniform random number between 0 and 1.\n */\nRNG.prototype.uniform = function() {\n    var BYTES = 7; // 56 bits to make a 53-bit double\n    var output = 0;\n    for (var i = 0; i < BYTES; i++) {\n        output *= 256;\n        output += this.nextByte();\n    }\n    return output / (Math.pow(2, BYTES * 8) - 1);\n};\n\n/**\n * Produce a random integer within [n, m).\n * @param {number} [n=0]\n * @param {number} m\n *\n */\nRNG.prototype.random = function(n, m) {\n    if (n == null) {\n        return this.uniform();\n    } else if (m == null) {\n        m = n;\n        n = 0;\n    }\n    return n + Math.floor(this.uniform() * (m - n));\n};\n\n/**\n * Generates numbers using this.uniform() with the Box-Muller transform.\n * @returns {number} Normally-distributed random number of mean 0, variance 1.\n */\nRNG.prototype.normal = function() {\n    if (this._normal !== null) {\n        var n = this._normal;\n        this._normal = null;\n        return n;\n    } else {\n        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n        var y = this.uniform();\n        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n    }\n};\n\n/**\n * Generates numbers using this.uniform().\n * @returns {number} Number from the exponential distribution, lambda = 1.\n */\nRNG.prototype.exponential = function() {\n    return -Math.log(this.uniform() || Math.pow(2, -53));\n};\n\n/**\n * Generates numbers using this.uniform() and Knuth's method.\n * @param {number} [mean=1]\n * @returns {number} Number from the Poisson distribution.\n */\nRNG.prototype.poisson = function(mean) {\n    var L = Math.exp(-(mean || 1));\n    var k = 0, p = 1;\n    do {\n        k++;\n        p *= this.uniform();\n    } while (p > L);\n    return k - 1;\n};\n\n/**\n * Generates numbers using this.uniform(), this.normal(),\n * this.exponential(), and the Marsaglia-Tsang method.\n * @param {number} a\n * @returns {number} Number from the gamma distribution.\n */\nRNG.prototype.gamma = function(a) {\n    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n    var c = 1 / Math.sqrt(9 * d);\n    do {\n        do {\n            var x = this.normal();\n            var v = Math.pow(c * x + 1, 3);\n        } while (v <= 0);\n        var u = this.uniform();\n        var x2 = Math.pow(x, 2);\n    } while (u >= 1 - 0.0331 * x2 * x2 &&\n             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n    if (a < 1) {\n        return d * v * Math.exp(this.exponential() / -a);\n    } else {\n        return d * v;\n    }\n};\n\n/**\n * Accepts a dice rolling notation string and returns a generator\n * function for that distribution. The parser is quite flexible.\n * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n * @param {RNG} rng An optional RNG object.\n * @returns {Function}\n */\nRNG.roller = function(expr, rng) {\n    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n    var dice = parseFloat(parts[0]) || 1;\n    var sides = parseFloat(parts[1]);\n    var mod = parseFloat(parts[2]) || 0;\n    rng = rng || new RNG();\n    return function() {\n        var total = dice + mod;\n        for (var i = 0; i < dice; i++) {\n            total += rng.random(sides);\n        }\n        return total;\n    };\n};\n\n/* Provide a pre-made generator instance. */\nRNG.$ = new RNG();\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = RNG\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/exports-loader?RNG!./src/scripts/bower_components/rng-js/rng.js\n ** module id = 39\n ** module chunks = 1\n **/","/**\n * Seedable random number generator functions.\n * @version 1.0.0\n * @license Public Domain\n *\n * @example\n * var rng = new RNG('Example');\n * rng.random(40, 50);  // =>  42\n * rng.uniform();       // =>  0.7972798995050903\n * rng.normal();        // => -0.6698504543216376\n * rng.exponential();   // =>  1.0547367609131555\n * rng.poisson(4);      // =>  2\n * rng.gamma(4);        // =>  2.781724687386858\n */\n\n/**\n * @param {String} seed A string to seed the generator.\n * @constructor\n */\nfunction RC4(seed) {\n    this.s = new Array(256);\n    this.i = 0;\n    this.j = 0;\n    for (var i = 0; i < 256; i++) {\n        this.s[i] = i;\n    }\n    if (seed) {\n        this.mix(seed);\n    }\n}\n\n/**\n * Get the underlying bytes of a string.\n * @param {string} string\n * @returns {Array} An array of bytes\n */\nRC4.getStringBytes = function(string) {\n    var output = [];\n    for (var i = 0; i < string.length; i++) {\n        var c = string.charCodeAt(i);\n        var bytes = [];\n        do {\n            bytes.push(c & 0xFF);\n            c = c >> 8;\n        } while (c > 0);\n        output = output.concat(bytes.reverse());\n    }\n    return output;\n};\n\nRC4.prototype._swap = function(i, j) {\n    var tmp = this.s[i];\n    this.s[i] = this.s[j];\n    this.s[j] = tmp;\n};\n\n/**\n * Mix additional entropy into this generator.\n * @param {String} seed\n */\nRC4.prototype.mix = function(seed) {\n    var input = RC4.getStringBytes(seed);\n    var j = 0;\n    for (var i = 0; i < this.s.length; i++) {\n        j += this.s[i] + input[i % input.length];\n        j %= 256;\n        this._swap(i, j);\n    }\n};\n\n/**\n * @returns {number} The next byte of output from the generator.\n */\nRC4.prototype.next = function() {\n    this.i = (this.i + 1) % 256;\n    this.j = (this.j + this.s[this.i]) % 256;\n    this._swap(this.i, this.j);\n    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n};\n\n/**\n * Create a new random number generator with optional seed. If the\n * provided seed is a function (i.e. Math.random) it will be used as\n * the uniform number generator.\n * @param seed An arbitrary object used to seed the generator.\n * @constructor\n */\nfunction RNG(seed) {\n    if (seed == null) {\n        seed = (Math.random() + Date.now()).toString();\n    } else if (typeof seed === \"function\") {\n        // Use it as a uniform number generator\n        this.uniform = seed;\n        this.nextByte = function() {\n            return ~~(this.uniform() * 256);\n        };\n        seed = null;\n    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n        seed = JSON.stringify(seed);\n    }\n    this._normal = null;\n    if (seed) {\n        this._state = new RC4(seed);\n    } else {\n        this._state = null;\n    }\n}\n\n/**\n * @returns {number} Uniform random number between 0 and 255.\n */\nRNG.prototype.nextByte = function() {\n    return this._state.next();\n};\n\n/**\n * @returns {number} Uniform random number between 0 and 1.\n */\nRNG.prototype.uniform = function() {\n    var BYTES = 7; // 56 bits to make a 53-bit double\n    var output = 0;\n    for (var i = 0; i < BYTES; i++) {\n        output *= 256;\n        output += this.nextByte();\n    }\n    return output / (Math.pow(2, BYTES * 8) - 1);\n};\n\n/**\n * Produce a random integer within [n, m).\n * @param {number} [n=0]\n * @param {number} m\n *\n */\nRNG.prototype.random = function(n, m) {\n    if (n == null) {\n        return this.uniform();\n    } else if (m == null) {\n        m = n;\n        n = 0;\n    }\n    return n + Math.floor(this.uniform() * (m - n));\n};\n\n/**\n * Generates numbers using this.uniform() with the Box-Muller transform.\n * @returns {number} Normally-distributed random number of mean 0, variance 1.\n */\nRNG.prototype.normal = function() {\n    if (this._normal !== null) {\n        var n = this._normal;\n        this._normal = null;\n        return n;\n    } else {\n        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n        var y = this.uniform();\n        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n    }\n};\n\n/**\n * Generates numbers using this.uniform().\n * @returns {number} Number from the exponential distribution, lambda = 1.\n */\nRNG.prototype.exponential = function() {\n    return -Math.log(this.uniform() || Math.pow(2, -53));\n};\n\n/**\n * Generates numbers using this.uniform() and Knuth's method.\n * @param {number} [mean=1]\n * @returns {number} Number from the Poisson distribution.\n */\nRNG.prototype.poisson = function(mean) {\n    var L = Math.exp(-(mean || 1));\n    var k = 0, p = 1;\n    do {\n        k++;\n        p *= this.uniform();\n    } while (p > L);\n    return k - 1;\n};\n\n/**\n * Generates numbers using this.uniform(), this.normal(),\n * this.exponential(), and the Marsaglia-Tsang method.\n * @param {number} a\n * @returns {number} Number from the gamma distribution.\n */\nRNG.prototype.gamma = function(a) {\n    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n    var c = 1 / Math.sqrt(9 * d);\n    do {\n        do {\n            var x = this.normal();\n            var v = Math.pow(c * x + 1, 3);\n        } while (v <= 0);\n        var u = this.uniform();\n        var x2 = Math.pow(x, 2);\n    } while (u >= 1 - 0.0331 * x2 * x2 &&\n             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n    if (a < 1) {\n        return d * v * Math.exp(this.exponential() / -a);\n    } else {\n        return d * v;\n    }\n};\n\n/**\n * Accepts a dice rolling notation string and returns a generator\n * function for that distribution. The parser is quite flexible.\n * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n * @param {RNG} rng An optional RNG object.\n * @returns {Function}\n */\nRNG.roller = function(expr, rng) {\n    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n    var dice = parseFloat(parts[0]) || 1;\n    var sides = parseFloat(parts[1]);\n    var mod = parseFloat(parts[2]) || 0;\n    rng = rng || new RNG();\n    return function() {\n        var total = dice + mod;\n        for (var i = 0; i < dice; i++) {\n            total += rng.random(sides);\n        }\n        return total;\n    };\n};\n\n/* Provide a pre-made generator instance. */\nRNG.$ = new RNG();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/bower_components/rng-js/rng.js\n ** module id = 40\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/Basic.vert\n ** module id = 41\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nprecision highp float;\\n\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nfloat aastep_1_0(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\n\\n\\nvarying vec2 vUv;\\nuniform vec3 color;\\n// 0 hidden, 1 full, 2 hidden\\nuniform float percent;\\n\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\n\\n// Common\\n#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\n\\nfloat quadraticInOut(float t) {\\n  float p = 2.0 * t * t;\\n  return t < 0.5 ? p : -p + (4.0 * t) - 1.0;\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n  return a;\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n  return a;\\n}\\n\\nvoid main() {\\n  // For fog\\n  vec3 outgoingLight = vec3( 0.0 );\\t// outgoing light does not have an alpha, the surface does\\n  vec4 diffuseColor = vec4( color, 1.0 );\\n\\n  float alpha = 0.0;\\n\\n  float percentInOut = quadraticInOut(percent / 2.0) * 2.0;\\n\\n  if (vUv.x < percentInOut && vUv.x >= percentInOut - 1.0) {\\n    alpha = 1.0;\\n  }\\n\\n\\n  outgoingLight = diffuseColor.rgb;\\n\\n  float depth = gl_FragCoord.z / gl_FragCoord.w;\\n  float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n  fogFactor = whiteCompliment( fogFactor );\\n\\n  outgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n  gl_FragColor = vec4(outgoingLight, alpha);\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/Line.frag\n ** module id = 42\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\nvarying float noise;\\nuniform float time;\\nuniform float strength;\\nuniform float seed;\\n\\n//\\n// GLSL textureless classic 3D noise \\\"cnoise\\\",\\n// with an RSL-style periodic variant \\\"pnoise\\\".\\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\\n// Version: 2011-10-11\\n//\\n// Many thanks to Ian McEwan of Ashima Arts for the\\n// ideas for permutation and gradient selection.\\n//\\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\\n// Distributed under the MIT license. See LICENSE file.\\n// https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_1_0(vec3 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_1_0(vec4 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_1_1(vec4 x)\\n{\\n  return mod289_1_0(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_1_2(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nvec3 fade_1_3(vec3 t) {\\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\\n}\\n\\n// Classic Perlin noise, periodic variant\\nfloat pnoise_1_4(vec3 P, vec3 rep)\\n{\\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\\n  Pi0 = mod289_1_0(Pi0);\\n  Pi1 = mod289_1_0(Pi1);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute_1_1(permute_1_1(ix) + iy);\\n  vec4 ixy0 = permute_1_1(ixy + iz0);\\n  vec4 ixy1 = permute_1_1(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt_1_2(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt_1_2(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade_1_3(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n  return 2.2 * n_xyz;\\n}\\n\\n\\n\\n\\nfloat turbulence( vec3 p ) {\\n    float w = 100.0;\\n    float t = -.5;\\n    for (float f = 1.0 ; f <= 10.0 ; f++ ){\\n        float power = pow( 2.0, f );\\n        t += abs( pnoise_1_4( vec3( power * p ), vec3( 10.0, 10.0, 10.0 ) ) / power );\\n    }\\n    return t;\\n}\\n\\nvoid main() {\\n    vUv = uv;\\n\\n\\n    float time2 = time + seed;\\n\\n    // add time to the noise parameters so it's animated\\n    noise = 10.0 *  -.10 * turbulence( 10.5 * normal + time2 );\\n    float b = 5.0 * pnoise_1_4( 0.2 * position + vec3( 2.0 * time2 ), vec3( 100.0 ) );\\n    float displacement = - noise + b;\\n\\n    // Less displacement on center.\\n    displacement = displacement * vUv.x;\\n\\n    //vec3 newPosition = position + normal * displacement * strength * 30.0;\\n    //vec2 normal2 = normalize(uv - 0.5);\\n    vec3 normal2 = normalize(position - 0.5);\\n    float strengthMultiplier = 15.0;\\n    vec3 newPosition = position + vec3(normal2.x, normal2.y, 0.0) * displacement * strength * strengthMultiplier;\\n    //gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/BasicNoise.vert\n ** module id = 43\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nprecision highp float;\\n\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nfloat aastep_1_0(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\n\\n\\nvarying vec2 vUv;\\nuniform vec3 color;\\n\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\n\\n// Common\\n#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\n\\nvec3 inputToLinear( in vec3 a ) {\\n  return a;\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n  return a;\\n}\\n\\nvoid main() {\\n  // For fog\\n  vec3 outgoingLight = vec3( 0.0 );\\t// outgoing light does not have an alpha, the surface does\\n  vec4 diffuseColor = vec4( color, 1.0 );\\n\\n  float alpha = 0.0;\\n  float wireframe_size = 0.01;\\n  float min_x = 0.0;\\n  float max_x = 1.0;\\n\\n  // If max is 1 then wireframe is is only half size.\\n  //max_x = max_x * 0.98;\\n\\n  // Get distance from edges.\\n  vec2 edgeX = abs(vec2(vUv.x - min_x, vUv.x - max_x));\\n  // Add the wireframe.\\n  edgeX = max(vec2(0.0, 0.0), edgeX - wireframe_size);\\n\\n  // Get the smallest distance from edges.\\n  float distance_x = min(edgeX.x, edgeX.y);\\n\\n\\n  alpha = aastep_1_0(distance_x, 0.01);\\n\\n\\n  // Add the fill alpha.\\n  if (vUv.x > min_x && vUv.x < max_x) {\\n    alpha = max(0.1, alpha);\\n  }\\n\\n  outgoingLight = diffuseColor.rgb;\\n\\n  float depth = gl_FragCoord.z / gl_FragCoord.w;\\n  float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n  fogFactor = whiteCompliment( fogFactor );\\n\\n  outgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n  gl_FragColor = vec4(outgoingLight, alpha);\\n  //vec3 k = vec3(1.0, 1.0, 1.0);\\n  //gl_FragColor = vec4( vec3( vUv, 0. ), 1. );\\n  //gl_FragColor = vec4( color, 1.0 );\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/BasicNoise.frag\n ** module id = 44\n ** module chunks = 1\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  AnimatedObject = require 'app/elements/AnimatedObject'\n  class AnimatedLine extends AnimatedObject\n    @circleGeom = new THREE.PlaneBufferGeometry( 100, 1)\n    @ringGeom = false\n    @ringGeom2 = false\n    @noOutline = true\n\n    constructor: () ->\n      super\n\n    getGeometry: () -> return AnimatedLine.circleGeom\n\n    getGeometryOutline: (outlineWidth) -> return false\n\n    update: (seconds, progression) ->\n      #if Audio.instance.high > 0.002\n      #  @speed += Audio.instance.high\n      #console.log Audio.instance.high\n\n      #if Math.random() > 0.9 && Audio.instance.high > 0.09\n      #  @velocity.add(@direction.clone().multiplyScalar(Audio.instance.high * 12 * @weight))\n      @container.position.add(@velocity)\n\n      @velocity = @velocity.multiplyScalar(0.94)\n\n      timeDiff = Date.now() - @start\n      for material in @materials\n        material.uniforms['time'].value = 0.00025 * ( timeDiff )\n\n      scale = @animatedProperties.scale * @values.size * 0.1\n      @container.scale.set(1, scale, 1)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedLine.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'exports?RNG!rng'\n  TweenMax = require 'TweenMax'\n  ElementBase = require 'app/elements/ElementBase'\n  Colors = require 'app/components/Colors'\n\n\n  class SpreadedObjects extends ElementBase\n    @properties:\n      numItems: {name: 'numItems', label: 'num items', val: 20, triggerRebuild: true}\n      seed: {name: 'seed', label: 'seed', val: 12002, triggerRebuild: true}\n      randX: {name: 'randX', label: 'random x', val: 80, triggerRebuild: true}\n      randY: {name: 'randY', label: 'random y', val: 80, triggerRebuild: true}\n      randZ: {name: 'randZ', label: 'random z', val: 0, triggerRebuild: true}\n      randRotZ: {name: 'randRotZ', label: 'random rotation z', val: 0, triggerRebuild: true}\n      randScaleX: {name: 'randScaleX', label: 'random scale x', val: 0, triggerRebuild: true}\n      randScaleY: {name: 'randScaleY', label: 'random scale y', val: 0, triggerRebuild: true}\n      circleRadius: {name: 'circleRadius', label: 'circle radius', val: 20}\n      circleRadiusMax: {name: 'circleRadiusMax', label: 'circle radius max', val: 20}\n      progression: {name: 'progression', label: 'progression', val: 1, min: 0, max: 2}\n      depth: {name: 'depth', label: 'depth', val: 0}\n      percent_color: {name: 'percent_color', label: 'percent color', val: 0.4, triggerRebuild: true}\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      rotX: {name: 'rotX', label: 'rotation x', val: 0}\n      rotY: {name: 'rotY', label: 'rotation y', val: 0}\n      rotZ: {name: 'rotZ', label: 'rotation z', val: 0}\n\n    constructor: (@values = {}, time = 0) ->\n      # Set the default value of instance properties.\n      for key, prop of SpreadedObjects.properties\n        if !@values[key]?\n          @values[key] = prop.val\n\n      # Set values cache\n      super\n\n      @timeline = new TimelineMax()\n      @container = new THREE.Object3D()\n      @totalDuration = 0\n      @items = []\n      @items_position = []\n      @build(time)\n\n    getItemClass: () -> return AnimatedCircle\n\n    rebuild: (time) ->\n      @empty()\n      @build(time)\n\n    empty: () ->\n      if !@items || !@items.length then return\n      @timeline.clear()\n      @items_position = []\n\n      for item in @items\n        @container.remove(item.container)\n        item.destroy()\n      @items = []\n\n    build: (time = 0) ->\n      @rng = new RNG(@values.seed)\n      @rngAnimation = new RNG(@values.seed + \"lorem\")\n      @rngOutline = new RNG(@values.seed)\n\n      for i in [0..@values.numItems - 1]\n        itemClass = @getItemClass()\n        rndtype = @rng.random(0, 1000) / 1000\n        draw_outline = if rndtype < 0.8 then true else false\n        draw_circle = if rndtype > 0.5 then true else false\n\n        if itemClass.noOutline\n          draw_outline = false\n          draw_circle = true\n\n        color = Colors.get(@rng.random(0, 1000))\n        if @rng.random(0, 1000) > @values.percent_color * 1000\n          color = Colors.get(0)\n\n        fillColor = color.clone()\n        if draw_outline\n          fillColor.multiplyScalar(@rng.random(0.1, 0.5))\n\n        size = @rng.random(@values.circleRadius, @values.circleRadiusMax)\n        x = @getRandomPosition(@values.randX)\n        y = @getRandomPosition(@values.randY)\n        z = @getRandomPosition(@values.randZ)\n        randRotZ = @rng.random(0, 1000) / 1000 * Math.PI * @values.randRotZ\n        randScaleX = @rng.random(0, 1000) / 1000 * @values.randScaleX\n        randScaleY = @rng.random(0, 1000) / 1000 * @values.randScaleY\n        pos = {x: x, y: y, z: z}\n\n        delay = @rngAnimation.random(0, 2400) / 1000\n        duration = @rngAnimation.random(600, 800) / 1000\n        duration *= 4\n        border_radius = @rngOutline.random(1, 400) / 100\n\n\n        if draw_outline == false\n          # more fill opacity if no outline\n          fillColor.multiplyScalar(3)\n\n        item = new itemClass({\n          size: size,\n          outlineWidth: border_radius,\n          drawOutline: draw_outline,\n          drawCircle: draw_circle,\n          color: color,\n          fillColor: fillColor,\n          delay: delay,\n          duration: duration,\n          depth: @values.depth,\n          x: pos.x,\n          y: pos.y,\n          z: pos.z,\n          randRotZ: randRotZ,\n          randScaleX: randScaleX,\n          randScaleY: randScaleY\n        })\n        @container.add(item.container)\n        @timeline.add(item.timeline, 0)\n        @items.push(item)\n        @items_position.push(pos)\n\n      @totalDuration = @timeline.duration()\n\n      # Set initial properties\n      @update(time, @values, true)\n\n    update: (seconds, values = false, force = false) ->\n      if values == false then values = @values\n      needs_rebuild = false\n\n      # Check if any of the invaldating property changed.\n      for key, prop of SpreadedObjects.properties\n        if prop.triggerRebuild && @valueChanged(key, values)\n          needs_rebuild = true\n\n      if force || @valueChanged(\"x\", values) || @valueChanged(\"y\", values) || @valueChanged(\"z\", values)\n        @container.position.set(values.x, values.y, values.z)\n\n      if force || @valueChanged(\"rotX\", values) || @valueChanged(\"rotY\", values) || @valueChanged(\"rotZ\", values)\n        @container.rotation.set(@degreeToRadian(values.rotX), @degreeToRadian(values.rotY), @degreeToRadian(values.rotZ))\n\n      #if force || @valueChanged(\"progression\", values)\n      progression = values.progression / 2\n      @timeline.seek(@totalDuration * progression)\n      for item in @items\n        item.update(seconds, {progression: values.progression})\n\n      if force || @valueChanged(\"depth\", values)\n        for item, key in @items\n          pos = @items_position[key]\n          item.container.position.set(pos.x, pos.y, pos.z * values.depth)\n\n      # save the new values\n      @values = _.merge(@values, values)\n\n      if needs_rebuild == true\n        @rebuild(seconds)\n\n    getRandomPosition: (scale = 1) ->\n      return @rng.random(-scale, scale)\n\n    destroy: () ->\n      super\n      # clean up...\n      if @container\n        if @container.parent then @container.parent.remove(@container)\n        delete @container\n      delete @rng\n      delete @rngOutline\n      delete @cache\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/SpreadedObjects.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  AnimatedObject = require 'app/elements/AnimatedObject'\n  CircleGeometry2 = require 'app/geometries/CircleGeometry2'\n  RingGeometry2 = require 'app/geometries/RingGeometry2'\n\n  class AnimatedCircle extends AnimatedObject\n    @circleGeom = new CircleGeometry2( 10, 30, 0, Math.PI * 2 )\n    @ringGeom = new RingGeometry2( 10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2 )\n    @ringGeom2 = new RingGeometry2( 10 - 1, 10, 30, 1, 0, Math.PI * 2 )\n\n    constructor: () ->\n      super\n\n    getGeometry: () ->\n      return AnimatedCircle.circleGeom\n\n    getGeometryOutline: (outlineWidth) ->\n      if outlineWidth < 1 then return AnimatedCircle.ringGeom\n      return AnimatedCircle.ringGeom2\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedCircle.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  AnimatedObject = require 'app/elements/AnimatedObject'\n  class AnimatedBox extends AnimatedObject\n    @circleGeom = new THREE.CircleGeometry( 10, 4, 0, Math.PI * 2 )\n    @ringGeom = new THREE.RingGeometry( 10 - 1, 10 + 1, 4, 1, 0, Math.PI * 2 )\n    @ringGeom2 = new THREE.RingGeometry( 10 - 1, 10, 4, 1, 0, Math.PI * 2 )\n\n    constructor: () ->\n      super\n\n    getGeometry: () ->\n      return AnimatedBox.circleGeom\n\n    getGeometryOutline: (outlineWidth) ->\n      if outlineWidth < 1 then return AnimatedBox.ringGeom\n      return AnimatedBox.ringGeom2\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedBox.coffee\n **/","// Modified to have uv on the edges.\n\ndefine(function(require) {\n  var THREE = require('Three');\n\nTHREE.RingGeometry2 = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'RingGeometry2';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0;\n\touterRadius = outerRadius || 50;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\n\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) { // concentric circles inside ring\n\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) { // number of segments per circle\n\n\t\t\tvar vertex = new THREE.Vector3();\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tthis.vertices.push( vertex );\n\t\t\t//uvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\n\t\t  var uv = {\n        x: (i / phiSegments),\n        y: (o / thetaSegments)\n      };\n      uvs.push(new THREE.Vector2(uv.x, uv.y));\n    }\n\n\t\tradius += radiusStep;\n\n\t}\n\n\tvar n = new THREE.Vector3( 0, 0, 1 );\n\n\tfor ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring\n\n\t\tvar thetaSegment = i * (thetaSegments + 1);\n\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) { // number of segments per circle\n\n\t\t\tvar segment = o + thetaSegment;\n\n\t\t\tvar v1 = segment;\n\t\t\tvar v2 = segment + thetaSegments + 1;\n\t\t\tvar v3 = segment + thetaSegments + 2;\n\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\n\t\t\tv1 = segment;\n\t\t\tv2 = segment + thetaSegments + 2;\n\t\t\tv3 = segment + 1;\n\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\n\t\t}\n\t}\n\n\tthis.computeFaceNormals();\n\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.RingGeometry2.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.RingGeometry2.prototype.constructor = THREE.RingGeometry2;\n\nreturn THREE.RingGeometry2;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/geometries/RingGeometry2.js\n ** module id = 49\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\n\\n// Precompute coords for FXAA\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nuniform vec2 resolution;\\n\\n//To save 9 dependent texture reads, you can compute\\n//these in the vertex shader and use the optimized\\n//frag.glsl function in your frag shader. \\n\\n//This is best suited for mobile devices, like iOS.\\n\\nvoid texcoords_1_0(vec2 fragCoord, vec2 resolution,\\n\\t\\t\\tout vec2 v_rgbNW, out vec2 v_rgbNE,\\n\\t\\t\\tout vec2 v_rgbSW, out vec2 v_rgbSE,\\n\\t\\t\\tout vec2 v_rgbM) {\\n\\tvec2 inverseVP = 1.0 / resolution.xy;\\n\\tv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\\n\\tv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\\n\\tv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\\n\\tv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\\n\\tv_rgbM = vec2(fragCoord * inverseVP);\\n}\\n\\n\\n\\nvoid main() {\\n  vUv = uv;\\n\\n  // FXAA\\n  vec2 fragCoord = uv * resolution;\\n\\ttexcoords_1_0(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/postprocessing/CustomPostPass.vert\n ** module id = 50\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\n/**\\nBasic FXAA implementation based on the code on geeks3d.com with the\\nmodification that the texture2DLod stuff was removed since it's\\nunsupported by WebGL.\\n\\n--\\n\\nFrom:\\nhttps://github.com/mitsuhiko/webgl-meincraft\\n\\nCopyright (c) 2011 by Armin Ronacher.\\n\\nSome rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are\\nmet:\\n\\n    * Redistributions of source code must retain the above copyright\\n      notice, this list of conditions and the following disclaimer.\\n\\n    * Redistributions in binary form must reproduce the above\\n      copyright notice, this list of conditions and the following\\n      disclaimer in the documentation and/or other materials provided\\n      with the distribution.\\n\\n    * The names of the contributors may not be used to endorse or\\n      promote products derived from this software without specific\\n      prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n\\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n*/\\n\\n#ifndef FXAA_REDUCE_MIN\\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\\n#endif\\n#ifndef FXAA_REDUCE_MUL\\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\\n#endif\\n#ifndef FXAA_SPAN_MAX\\n    #define FXAA_SPAN_MAX     8.0\\n#endif\\n\\n//optimized version for mobile, where dependent \\n//texture reads can be a bottleneck\\nvec4 fxaa_1_0(sampler2D tex, vec2 fragCoord, vec2 resolution,\\n            vec2 v_rgbNW, vec2 v_rgbNE, \\n            vec2 v_rgbSW, vec2 v_rgbSE, \\n            vec2 v_rgbM) {\\n    vec4 color;\\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\\n    vec4 texColor = texture2D(tex, v_rgbM);\\n    vec3 rgbM  = texColor.xyz;\\n    vec3 luma = vec3(0.299, 0.587, 0.114);\\n    float lumaNW = dot(rgbNW, luma);\\n    float lumaNE = dot(rgbNE, luma);\\n    float lumaSW = dot(rgbSW, luma);\\n    float lumaSE = dot(rgbSE, luma);\\n    float lumaM  = dot(rgbM,  luma);\\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\\n    \\n    mediump vec2 dir;\\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n    \\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\\n    \\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n              dir * rcpDirMin)) * inverseVP;\\n    \\n    vec3 rgbA = 0.5 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\\n\\n    float lumaB = dot(rgbB, luma);\\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\\n        color = vec4(rgbA, texColor.a);\\n    else\\n        color = vec4(rgbB, texColor.a);\\n    return color;\\n}\\n\\n\\n\\n\\n//texcoords computed in vertex step\\n//to avoid dependent texture reads\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nhighp float random_2_1(vec2 co)\\n{\\n    highp float a = 12.9898;\\n    highp float b = 78.233;\\n    highp float c = 43758.5453;\\n    highp float dt= dot(co.xy ,vec2(a,b));\\n    highp float sn= mod(dt,3.14);\\n    return fract(sin(sn) * c);\\n}\\n\\n\\n\\nvec3 blendSoftLight_4_2(vec3 base, vec3 blend) {\\n    return mix(\\n        sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend), \\n        2.0 * base * blend + base * base * (1.0 - 2.0 * blend), \\n        step(base, vec3(0.5))\\n    );\\n}\\n\\n// Using conditionals\\n// vec3 blendSoftLight(vec3 base, vec3 blend) {\\n//     return vec3(\\n//         ((blend.r < 0.5) ? (2.0 * base.r * blend.r + base.r * base.r * (1.0 - 2.0 * blend.r)) : (sqrt(base.r) * (2.0 * blend.r - 1.0) + 2.0 * base.r * (1.0 - blend.r))),\\n//         ((blend.g < 0.5) ? (2.0 * base.g * blend.g + base.g * base.g * (1.0 - 2.0 * blend.g)) : (sqrt(base.g) * (2.0 * blend.g - 1.0) + 2.0 * base.g * (1.0 - blend.g))),\\n//         ((blend.b < 0.5) ? (2.0 * base.b * blend.b + base.b * base.b * (1.0 - 2.0 * blend.b)) : (sqrt(base.b) * (2.0 * blend.b - 1.0) + 2.0 * base.b * (1.0 - blend.b)))\\n//     );\\n// }\\n\\n\\nfloat luma_3_3(vec3 color) {\\n  return dot(color, vec3(0.299, 0.587, 0.114));\\n}\\n\\nfloat luma_3_3(vec4 color) {\\n  return dot(color.rgb, vec3(0.299, 0.587, 0.114));\\n}\\n\\n\\n\\n\\nuniform sampler2D tDiffuse;\\nuniform vec2 resolution;\\nuniform float nIntensity;\\nuniform float time;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vec2 p = vUv;\\n  vec2 fragCoord = vUv * resolution;\\n\\n  // FXAA\\n  gl_FragColor = fxaa_1_0(tDiffuse, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n\\n  float center = smoothstep(0.0, 1.0, length(vUv-0.5));\\n\\n  // Add vignetting.\\n  gl_FragColor.rgb = mix(gl_FragColor.rgb, vec3(0.0, 0.0, 0.0), center * 0.5);\\n\\n  // Add film grain.\\n  vec3 g = vec3( random_2_1( (gl_FragCoord.xy / resolution.xy) * time )) * nIntensity;\\n\\n  vec3 color = blendSoftLight_4_2(gl_FragColor.rgb, g);\\n  float luminance = luma_3_3(gl_FragColor.rgb);\\n  //reduce the noise based on some\\n  //threshold of the background luminance\\n  float response = smoothstep(0.05, 0.5, luminance);\\n  color = mix(color, gl_FragColor.rgb, pow(response, 2.0));\\n\\n  gl_FragColor = vec4(color, 1.0);\\n\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/postprocessing/CustomPostPass.frag\n ** module id = 51\n ** module chunks = 1\n **/","module.exports = TweenMax;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"TweenMax\"\n ** module id = 52\n ** module chunks = 1\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'rng'\n  TweenMax = require 'TweenMax'\n\n  Colors = require 'app/components/Colors'\n\n  ShaderVertex = require 'app/shaders/BasicNoise.vert'\n  ShaderFragement = require 'app/shaders/BasicNoise.frag'\n\n  class AnimatedObject\n    @circleGeom = new THREE.CircleGeometry( 10, 30, 0, Math.PI * 2 )\n    @ringGeom = new THREE.RingGeometry( 10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2 )\n    @ringGeom2 = new THREE.RingGeometry( 10 - 1, 10, 30, 1, 0, Math.PI * 2 )\n\n    @properties:\n      size: {name: 'size', label: 'size', val: 80}\n      outlineWidth: {name: 'outlineWidth', label: 'outline width', val: 2}\n      drawOutline: {name: 'drawOutline', label: 'draw outline', val: true}\n      drawCircle: {name: 'drawCircle', label: 'draw circle', val: false}\n      color: {name: 'color', label: 'color', val: false}\n      fillColor: {name: 'fillColor', label: 'fill color', val: false}\n      delay: {name: 'delay', label: 'delay', val: 0}\n      duration: {name: 'duration', label: 'duration', val: 0.5}\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      randRotZ: {name: 'randRotZ', label: 'random rotation z', val: 0}\n      randScaleX: {name: 'randScaleX', label: 'random scale x', val: 0}\n      randScaleY: {name: 'randScaleY', label: 'random scale y', val: 0}\n\n    constructor: (@values = {}, time = 0) ->\n      for key, prop of AnimatedObject.properties\n        if !@values[key]?\n          @values[key] = prop.val\n\n      @container = new THREE.Object3D()\n      @container.scale.set(0.001,0.001,0.001)\n      @container.position.set(@values.x, @values.y, @values.z)\n      @container.rotation.set(0, 0, @values.randRotZ)\n      @materials = []\n      @start = Date.now()\n\n      @offset = new THREE.Vector3()\n      @velocity = new THREE.Vector3()\n      @weight = Math.random() * 0.5 + 0.5\n      @direction = new THREE.Vector3(Math.random() * 2 - 1, Math.random() * 2 - 1, 0)\n      @speed = 0\n      @animatedProperties =\n        scale: 0.001\n      @timeline = new TimelineMax()\n      # First value\n      tween = TweenLite.to(@animatedProperties, 0, {scale: 0.00001, ease: Linear.easeNone})\n      @timeline.add(tween, 0)\n      # Middle\n      tween = TweenLite.to(@animatedProperties, @values.duration, {scale: 1, delay: @values.delay, ease: Cubic.easeOut})\n      @timeline.add(tween)\n\n      # Stay for a while\n      tween = TweenLite.to(@animatedProperties, @values.duration * 0.5, {scale: 1, ease: Cubic.easeOut})\n      @timeline.add(tween)\n\n      # End\n      tween = TweenLite.to(@animatedProperties, @values.duration, {scale: 0.00001, ease: Cubic.easeIn})\n      @timeline.add(tween)\n\n      #if @values.drawOutline then @renderOutline(@values.size, @values.color, @values.outlineWidth)\n      #if @values.drawCircle then @renderCircle(@values.size, @values.fillColor)\n      @renderCircle(@values.size, @values.fillColor)\n\n    getGeometry: () ->\n      return AnimatedObject.circleGeom\n\n    getGeometryOutline: (outlineWidth) ->\n      if outlineWidth < 1 then return AnimatedObject.ringGeom\n      return AnimatedObject.ringGeom2\n\n    destroy: () ->\n      @timeline.clear()\n\n      for child in @container.children\n        @container.remove(child)\n\n      @container = null\n\n    getMaterial: (color) ->\n      uniforms = {\n        time: {\n          type: 'f',\n          value: 0.0\n        },\n        seed: {\n          type: 'f',\n          value: Math.random() * 1000\n        },\n        strength: {\n          type: 'f',\n          value: 0.2\n        },\n        color: {\n          type: 'c',\n          value: color\n        }\n      }\n      material = new THREE.ShaderMaterial({\n        vertexShader: ShaderVertex,\n        fragmentShader: ShaderFragement,\n        uniforms: uniforms,\n        transparent: true,\n        depthWrite: false,\n        depthTest: false\n        })\n\n      #material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0x009900, shininess: 30, shading: THREE.FlatShading })\n      material.blending = THREE.AdditiveBlending\n      return material\n\n    update: (seconds, progression) ->\n      @container.position.add(@velocity)\n\n      @velocity = @velocity.multiplyScalar(0.94)\n\n      timeDiff = Date.now() - @start\n      for material in @materials\n        material.uniforms['time'].value = 0.00025 * ( timeDiff )\n        material.uniforms['strength'].value = window.audio.data.filters.mid.timeDomainRMS\n\n      scale = @animatedProperties.scale * @values.size * 0.1\n      @container.scale.set(scale * (1 + @values.randScaleX), scale * (1 + @values.randScaleY), scale)\n\n    renderCircle: (size, color) =>\n      material = @getMaterial(color)\n      @materials.push(material)\n\n      object = new THREE.Mesh(@getGeometry() , material )\n      @container.add( object )\n\n    renderOutline: (size, color, outlineWidth) =>\n      geom = @getGeometryOutline(outlineWidth)\n\n      material = @getMaterial(color)\n      @materials.push(material)\n      object = new THREE.Mesh( geom, material )\n      @container.add( object )\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedObject.coffee\n **/"],"sourceRoot":""}