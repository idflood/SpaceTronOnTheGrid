{"version":3,"sources":["webpack:///App.js","webpack:///webpack/bootstrap 36a44615669f216c71d7?ad23","webpack:///./src/scripts/app/App.coffee","webpack:///external \"THREE\"","webpack:///external \"TweenTime.Core\"","webpack:///./src/scripts/app/components/Background.coffee","webpack:///./src/scripts/app/components/PostFX.coffee","webpack:///./src/scripts/app/components/SceneManager.coffee","webpack:///./src/scripts/app/components/Audio.coffee","webpack:///./src/scripts/app/components/ElementFactory.coffee","webpack:///./src/scripts/app/components/DataNormalizer.coffee","webpack:///./src/scripts/app/data.json","webpack:///external \"_\"","webpack:///external {\"root\":\"signals\",\"commonjs\":\"./signals\",\"amd\":\"signals\"}","webpack:///./src/scripts/app/postprocessing/GlitchPass2.js","webpack:///./src/scripts/app/shaders/DigitalGlitch2.js","webpack:///./src/scripts/app/elements/Camera.coffee","webpack:///./src/scripts/app/elements/Circles.coffee","webpack:///./src/scripts/app/elements/Boxes.coffee","webpack:///./src/scripts/app/elements/Lines.coffee","webpack:///./src/scripts/app/elements/SingleObject.coffee","webpack:///./src/scripts/app/elements/Circle.coffee","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/EffectComposer.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/MaskPass.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/BloomPass.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/ShaderPass.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/RenderPass.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/FilmPass.js","webpack:///./src/scripts/vendors/three.js-extras/shaders/CopyShader.js","webpack:///./src/scripts/vendors/three.js-extras/shaders/FXAAShader.js","webpack:///./src/scripts/vendors/three.js-extras/shaders/FilmShader.js","webpack:///./src/scripts/vendors/three.js-extras/shaders/ConvolutionShader.js","webpack:///./src/scripts/vendors/three.js-extras/shaders/VignetteShader.js","webpack:///./src/scripts/app/elements/AnimatedCircle.coffee","webpack:///./src/scripts/app/elements/SpreadedObjects.coffee","webpack:///./src/scripts/app/elements/AnimatedBox.coffee","webpack:///./src/scripts/app/elements/AnimatedLine.coffee","webpack:///./src/scripts/app/elements/ElementBase.coffee","webpack:///./src/scripts/app/components/Colors.coffee","webpack:///./src/scripts/app/geometries/RingGeometry2.js","webpack:///./src/scripts/bower_components/rng-js/rng.js","webpack:///external \"TweenMax\"","webpack:///./src/scripts/app/shaders/BasicNoise.vert","webpack:///./src/scripts/app/shaders/BasicNoise.frag","webpack:///./src/scripts/app/elements/AnimatedObject.coffee","webpack:///./src/scripts/app/geometries/CircleGeometry2.js","webpack:///./src/scripts/bower_components/rng-js/rng.js?2b54"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","__bind","fn","me","apply","arguments","require","App","Audio","Background","DataNormalizer","ElementFactory","PostFX","SceneManager","THREE","TweenTime","dataJson","window","this","animate","onWindowResize","updateCameraAspect","onAudioLoaded","onTimerSeeked","onTimerStatusChanged","audio_url","conf","container","size","audio","factory","JSON","parse","console","log","settings","data","normalizeData","tweenTime","timer","statusChanged","add","seeked","getScreenSize","camera","PerspectiveCamera","width","height","position","z","activeCamera","scene","Scene","sceneManager","time","Date","now","document","createElement","containerWebgl","body","appendChild","renderer","WebGLRenderer","antialias","alpha","setSize","setClearColor","createElements","domElement","addEventListener","postfx","prototype","is_playing","play","pause","seek","$","addClass","light1","material","object","object2","object3","MeshPhongMaterial","color","specular","shininess","shading","SmoothShading","Mesh","PlaneBufferGeometry","set","rotation","PointLight","__createElementsBackup","material2","materialBlack","MeshBasicMaterial","transparent","blending","MultiplyBlending","wireframe","CircleGeometry","Math","PI","RingGeometry","SCREEN_HEIGHT","SCREEN_WIDTH","propertieswidth","timelineheight","innerWidth","innerHeight","editorEnabled","hasClass","aspect","updateProjectionMatrix","resize","requestAnimationFrame","update","render","delta","newTime","particles","lookAt","undefined","Core","bg","bgMat","texture","ImageUtils","loadTexture","wrapS","wrapT","RepeatWrapping","repeat","map","PlaneGeometry","depthTest","depthWrite","dpr","renderModel","autoClear","RenderPass","devicePixelRatio","renderTargetParameters","minFilter","LinearFilter","magFilter","format","RGBFormat","stencilBufer","renderTarget","WebGLRenderTarget","effectFXAA","ShaderPass","FXAAShader","uniforms","value","bloom","BloomPass","glitchPass","GlitchPass2","intensity","tScratch","vignettePass","VignetteShader","filmShader","FilmPass","renderToScreen","composer","EffectComposer","addPass","reset","clear","Signals","_","defaultCamera","updated","timestamp","el","item","seconds","should_exist","type","_i","_len","_ref","length","start","end","isDirtyObject","remove","destroy","classObject","getTypeClass","create","values","_data","isCamera","mp3Url","onLoadedCallback","gain2","muted","parameters","rms","createSound","load","fftSize","filters","playing","timeDelay","bass","mid","high","context","AudioContext","webkitAudioContext","analyser","createAnalyser","source","createBufferSource","frequency","Q","gain","treble","each","_this","spec","key","filter","createBiquadFilter","createDelay","delayNode","createDelayNode","delayTime","createGain","gainNode","createGainNode","delay","sampleRate","connect","destination","samples","frequencyBinCount","freq","Uint8Array","instance","bins","num","waveforms","smoothingTimeConstant","getByteFrequencyData","getByteTimeDomainData","currentTime","buffer","url","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","buff","loop","send","src","stop","disconnect","duration","accum","s","sqrt","Boxes","Camera","Circle","Circles","Lines","SingleObject","extend","properties","val","elements","Box","itemType","getTypeProperties","itemName","element_class","prop","prop_definition","keys","push","warn","normalizeItem","data_item","existing_prop","key2","new_prop","static_prop","static_properties","value2","find","name","dt_size","DigitalGlitch2","error","shader","UniformsUtils","clone","generateHeightmap","ShaderMaterial","vertexShader","fragmentShader","enabled","needsSwap","OrthographicCamera","quad","goWild","curF","generateTrigger","writeBuffer","readBuffer","random","randFloat","randX","randInt","data_arr","Float32Array","i","DataTexture","FloatType","NearestFilter","needsUpdate","flipY","tDiffuse","tDisp","byp","amount","angle","seed","seed_x","seed_y","distortion_x","distortion_y","col_s","join","target","Vector3","target_x","target_y","target_z","fov","x","y","label","force","__hasProp","hasOwnProperty","__extends","child","parent","ctor","constructor","__super__","AnimatedCircle","SpreadedObjects","_super","getItemClass","AnimatedBox","AnimatedLine","Colors","ElementBase","RNG","ShaderFragement","ShaderVertex","getGeometry","getDefaultProperties","timeline","TimelineMax","Color","getMaterial","rotX","rotY","rotZ","scaleX","scaleY","scaleZ","opacity","min","max","geometry","valueChanged","degreeToRadian","scale","ambient","FlatShading","side","DoubleSide","AdditiveBlending","RingGeometry2","innerRadius","inner_radius","pi2","geom","dynamic","vertices","verticesNeedUpdate","dispose","stencilBuffer","renderTarget1","renderTarget2","passes","CopyShader","copyPass","swapBuffers","tmp","pass","insertPass","index","splice","maskActive","il","stencilFunc","NOTEQUAL","EQUAL","MaskPass","ClearMaskPass","inverse","colorMask","depthMask","writeValue","clearValue","enable","STENCIL_TEST","stencilOp","REPLACE","ALWAYS","clearStencil","KEEP","disable","strength","kernelSize","sigma","resolution","pars","renderTargetX","renderTargetY","copyShader","copyUniforms","materialCopy","ConvolutionShader","convolutionShader","convolutionUniforms","blurx","buildKernel","materialConvolution","defines","KERNEL_SIZE_FLOAT","toFixed","KERNEL_SIZE_INT","blurX","blurY","Vector2","textureID","overrideMaterial","clearColor","clearAlpha","oldClearColor","oldClearAlpha","copy","getClearColor","getClearAlpha","noiseIntensity","scanlinesIntensity","scanlinesCount","grayscale","FilmShader","nIntensity","sIntensity","sCount","uImageIncrement","cKernel","gauss","exp","sum","halfWidth","kMaxKernelSize","ceil","Array","offset","darkness","AnimatedObject","CircleGeometry2","circleGeom","ringGeom","ringGeom2","getGeometryOutline","outlineWidth","TweenMax","Object3D","totalDuration","items","items_position","build","numItems","triggerRebuild","randY","randZ","randRotZ","randScaleX","randScaleY","circleRadius","circleRadiusMax","progression","depth","percent_color","rebuild","empty","border_radius","draw_circle","draw_outline","fillColor","itemClass","pos","rndtype","rng","rngAnimation","rngOutline","noOutline","get","multiplyScalar","getRandomPosition","drawOutline","drawCircle","needs_rebuild","_j","_len1","_ref1","_ref2","merge","cache","timeDiff","velocity","materials","animatedProperties","buildCache","has_changed","new_val","degree","items2","abs","parseInt","outerRadius","thetaSegments","phiSegments","thetaStart","thetaLength","Geometry","o","uvs","radius","radiusStep","vertex","segment","cos","sin","uv","n","thetaSegment","v1","v2","v3","faces","Face3","faceVertexUvs","computeFaceNormals","boundingSphere","Sphere","Object","RC4","j","mix","toString","uniform","nextByte","stringify","_normal","_state","getStringBytes","string","output","charCodeAt","bytes","concat","reverse","_swap","input","next","BYTES","pow","floor","normal","exponential","poisson","mean","L","k","gamma","a","d","v","u","x2","roller","expr","parts","split","slice","dice","parseFloat","sides","mod","total","tween","renderOutline","renderCircle","weight","direction","speed","TweenLite","to","ease","Linear","easeNone","Cubic","easeOut","easeIn","children","segments","center","centerUV"],"mappings":"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","file":"App.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var App, Audio, Background, DataNormalizer, ElementFactory, PostFX, SceneManager, THREE, TweenTime, dataJson;\n\t  THREE = __webpack_require__(3);\n\t  TweenTime = __webpack_require__(4);\n\t  Background = __webpack_require__(5);\n\t  PostFX = __webpack_require__(6);\n\t  SceneManager = __webpack_require__(7);\n\t  Audio = __webpack_require__(8);\n\t  ElementFactory = __webpack_require__(9);\n\t  DataNormalizer = __webpack_require__(10);\n\t  dataJson = __webpack_require__(11);\n\t  return window.App = App = (function() {\n\t    function App() {\n\t      this.animate = __bind(this.animate, this);\n\t      this.onWindowResize = __bind(this.onWindowResize, this);\n\t      this.updateCameraAspect = __bind(this.updateCameraAspect, this);\n\t      this.onAudioLoaded = __bind(this.onAudioLoaded, this);\n\t      this.onTimerSeeked = __bind(this.onTimerSeeked, this);\n\t      this.onTimerStatusChanged = __bind(this.onTimerStatusChanged, this);\n\t      var audio_url, conf, container, size;\n\t      window.updateCameraAspect = this.updateCameraAspect;\n\t      audio_url = './assets/08 - Space Tron On The Grid.mp3';\n\t      this.audio = new Audio(audio_url, this.onAudioLoaded);\n\t      this.factory = new ElementFactory();\n\t      conf = JSON.parse(dataJson);\n\t      console.log(conf);\n\t      this.settings = conf.settings;\n\t      this.data = DataNormalizer.normalizeData(conf.data, this.factory);\n\t      this.tweenTime = new TweenTime(this.data);\n\t      this.tweenTime.timer.statusChanged.add(this.onTimerStatusChanged);\n\t      this.tweenTime.timer.seeked.add(this.onTimerSeeked);\n\t      size = this.getScreenSize();\n\t      this.camera = new THREE.PerspectiveCamera(45, size.width / size.height, 1, 2000);\n\t      this.camera.position.z = 600;\n\t      window.activeCamera = this.camera;\n\t      this.scene = new THREE.Scene();\n\t      this.sceneManager = new SceneManager(this.tweenTime, this.data, this.scene, this.camera, this.factory);\n\t      this.time = Date.now() * 0.0001;\n\t      container = document.createElement('div');\n\t      this.containerWebgl = container;\n\t      document.body.appendChild(container);\n\t      this.renderer = new THREE.WebGLRenderer({\n\t        antialias: false,\n\t        alpha: false\n\t      });\n\t      this.renderer.setSize(size.width, size.height);\n\t      this.renderer.setClearColor(0x111111, 1);\n\t      this.createElements();\n\t      container.appendChild(this.renderer.domElement);\n\t      window.addEventListener('resize', this.onWindowResize, false);\n\t      this.postfx = new PostFX(this.scene, this.camera, this.renderer, size);\n\t      this.animate();\n\t    }\n\t\n\t    App.prototype.onTimerStatusChanged = function(is_playing) {\n\t      if (is_playing) {\n\t        return this.audio.play();\n\t      } else {\n\t        return this.audio.pause();\n\t      }\n\t    };\n\t\n\t    App.prototype.onTimerSeeked = function(time) {\n\t      return this.audio.seek(time / 1000);\n\t    };\n\t\n\t    App.prototype.onAudioLoaded = function() {\n\t      console.log(\"audio loaded\");\n\t      return $('body').addClass('is-audio-loaded');\n\t    };\n\t\n\t    App.prototype.createElements = function() {\n\t      var light1, material, object, object2, object3;\n\t      material = new THREE.MeshPhongMaterial({\n\t        color: 0x111111,\n\t        specular: 0x666666,\n\t        shininess: 30,\n\t        shading: THREE.SmoothShading\n\t      });\n\t      object = new THREE.Mesh(new THREE.PlaneBufferGeometry(2000, 650, 1, 1), material);\n\t      object.position.set(420, 0, -350);\n\t      object.rotation.set(0.1, 0.8, 0.7);\n\t      this.scene.add(object);\n\t      object2 = new THREE.Mesh(new THREE.PlaneBufferGeometry(2000, 650, 1, 1), material);\n\t      object2.position.set(320, 0, -450);\n\t      object2.rotation.set(0.17, 0.85, 0.78);\n\t      this.scene.add(object2);\n\t      object3 = new THREE.Mesh(new THREE.PlaneBufferGeometry(2000, 650, 1, 1), material);\n\t      object3.position.set(-120, -600, -950);\n\t      object3.rotation.set(0.17, 0.35, -0.38);\n\t      this.scene.add(object3);\n\t      light1 = new THREE.PointLight(0xffffff, 3, 1400);\n\t      light1.position.set(100, 300, 200);\n\t      return this.scene.add(light1);\n\t    };\n\t\n\t    App.prototype.__createElementsBackup = function() {\n\t      var material, material2, materialBlack, object;\n\t      material = new THREE.MeshBasicMaterial({\n\t        color: 0xd7888e,\n\t        transparent: true\n\t      });\n\t      material.blending = THREE.MultiplyBlending;\n\t      materialBlack = new THREE.MeshBasicMaterial({\n\t        color: 0x222222,\n\t        transparent: true,\n\t        wireframe: false\n\t      });\n\t      materialBlack.blending = THREE.MultiplyBlending;\n\t      material2 = new THREE.MeshBasicMaterial({\n\t        color: 0x406872,\n\t        transparent: true\n\t      });\n\t      material2.blending = THREE.MultiplyBlending;\n\t      object = new THREE.Mesh(new THREE.CircleGeometry(50, 50, 0, Math.PI * 2), material);\n\t      object.position.set(20, 0, 0);\n\t      this.scene.add(object);\n\t      object = new THREE.Mesh(new THREE.RingGeometry(43, 50, 50, 1, 0, Math.PI * 2), materialBlack);\n\t      object.position.set(20, 0, 0);\n\t      this.scene.add(object);\n\t      object = new THREE.Mesh(new THREE.RingGeometry(40, 50, 4, 1, 0, Math.PI * 2), material2);\n\t      object.position.set(-20, 0, 0);\n\t      object.rotation.set(0, 0, Math.PI / 4);\n\t      return this.scene.add(object);\n\t    };\n\t\n\t    App.prototype.getScreenSize = function() {\n\t      var SCREEN_HEIGHT, SCREEN_WIDTH, propertieswidth, timelineheight;\n\t      SCREEN_WIDTH = window.innerWidth;\n\t      SCREEN_HEIGHT = window.innerHeight;\n\t      if (window.editorEnabled) {\n\t        timelineheight = 295;\n\t        if ($('body').hasClass('timeline-is-closed')) {\n\t          timelineheight = 95;\n\t        }\n\t        propertieswidth = 279;\n\t        if ($('body').hasClass('properties-is-closed')) {\n\t          propertieswidth = 0;\n\t        }\n\t        SCREEN_HEIGHT -= timelineheight;\n\t        SCREEN_WIDTH -= propertieswidth;\n\t      }\n\t      return {\n\t        width: SCREEN_WIDTH,\n\t        height: SCREEN_HEIGHT\n\t      };\n\t    };\n\t\n\t    App.prototype.updateCameraAspect = function(camera, size) {\n\t      if (size == null) {\n\t        size = false;\n\t      }\n\t      if (size === false) {\n\t        size = this.getScreenSize();\n\t      }\n\t      camera.aspect = size.width / size.height;\n\t      return camera.updateProjectionMatrix();\n\t    };\n\t\n\t    App.prototype.onWindowResize = function() {\n\t      var size;\n\t      size = this.getScreenSize();\n\t      this.updateCameraAspect(this.camera, size);\n\t      this.updateCameraAspect(window.activeCamera, size);\n\t      this.renderer.setSize(size.width, size.height);\n\t      return this.postfx.resize(size.width, size.height);\n\t    };\n\t\n\t    App.prototype.animate = function() {\n\t      requestAnimationFrame(this.animate);\n\t      this.audio.update();\n\t      return this.render();\n\t    };\n\t\n\t    App.prototype.render = function() {\n\t      var delta, newTime;\n\t      newTime = Date.now() * 0.0001;\n\t      delta = newTime - this.time;\n\t      if (this.particles) {\n\t        this.particles.update();\n\t      }\n\t      this.camera.lookAt(this.scene.position);\n\t      this.postfx.render(delta);\n\t      return this.time = newTime;\n\t    };\n\t\n\t    return App;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = THREE;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = TweenTime.Core;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Background, THREE;\n\t  THREE = __webpack_require__(3);\n\t  return Background = (function() {\n\t    function Background(scene) {\n\t      var bg, bgMat, texture;\n\t      this.scene = scene;\n\t      texture = THREE.ImageUtils.loadTexture('src/images/background.jpg');\n\t      texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n\t      texture.repeat.set(2, 2);\n\t      bgMat = new THREE.MeshBasicMaterial({\n\t        map: texture\n\t      });\n\t      bg = new THREE.Mesh(new THREE.PlaneGeometry(1600, 1600, 4, 4), bgMat);\n\t      bg.material.depthTest = false;\n\t      bg.material.depthWrite = false;\n\t      bg.position.set(0, 0, -10);\n\t      this.scene.add(bg);\n\t    }\n\t\n\t    return Background;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var PostFX, THREE;\n\t  THREE = __webpack_require__(3);\n\t  __webpack_require__(22);\n\t  __webpack_require__(23);\n\t  __webpack_require__(24);\n\t  __webpack_require__(25);\n\t  __webpack_require__(26);\n\t  __webpack_require__(27);\n\t  __webpack_require__(14);\n\t  __webpack_require__(28);\n\t  __webpack_require__(29);\n\t  __webpack_require__(30);\n\t  __webpack_require__(31);\n\t  __webpack_require__(32);\n\t  __webpack_require__(15);\n\t  return PostFX = (function() {\n\t    function PostFX(scene, camera, renderer, size) {\n\t      var dpr, renderModel;\n\t      this.scene = scene;\n\t      this.camera = camera;\n\t      this.renderer = renderer;\n\t      this.renderer.autoClear = false;\n\t      renderModel = new THREE.RenderPass(this.scene, this.camera);\n\t      window.renderModel = renderModel;\n\t      dpr = window.devicePixelRatio != null ? window.devicePixelRatio : 1;\n\t      this.renderTargetParameters = {\n\t        minFilter: THREE.LinearFilter,\n\t        magFilter: THREE.LinearFilter,\n\t        format: THREE.RGBFormat,\n\t        stencilBufer: false\n\t      };\n\t      this.renderTarget = new THREE.WebGLRenderTarget(size.width * dpr, size.height * dpr, this.renderTargetParameters);\n\t      this.effectFXAA = new THREE.ShaderPass(THREE.FXAAShader);\n\t      this.effectFXAA.uniforms['resolution'].value.set(1 / (size.width * dpr), 1 / (size.height * dpr));\n\t      this.bloom = new THREE.BloomPass(0.6, 25, 4);\n\t      this.glitchPass = new THREE.GlitchPass2();\n\t      this.glitchPass.intensity = 0.3;\n\t      this.glitchPass.uniforms.tScratch.value = THREE.ImageUtils.loadTexture(\"src/images/lensflare_dirt.jpg\");\n\t      this.vignettePass = new THREE.ShaderPass(THREE.VignetteShader);\n\t      this.vignettePass.uniforms['darkness'].value = 2;\n\t      this.filmShader = new THREE.FilmPass(0.34, 0.01, 648, false);\n\t      this.filmShader.renderToScreen = true;\n\t      this.composer = new THREE.EffectComposer(this.renderer, this.renderTarget);\n\t      this.composer.setSize(size.width * dpr, size.height * dpr);\n\t      this.composer.addPass(renderModel);\n\t      this.composer.addPass(this.bloom);\n\t      this.composer.addPass(this.vignettePass);\n\t      this.composer.addPass(this.filmShader);\n\t    }\n\t\n\t    PostFX.prototype.resize = function(SCREEN_WIDTH, SCREEN_HEIGHT) {\n\t      var dpr;\n\t      dpr = window.devicePixelRatio != null ? window.devicePixelRatio : 1;\n\t      this.renderTarget = new THREE.WebGLRenderTarget(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr, this.renderTargetParameters);\n\t      this.composer.reset(this.renderTarget);\n\t      return this.effectFXAA.uniforms['resolution'].value.set(1 / (SCREEN_WIDTH * dpr), 1 / (SCREEN_HEIGHT * dpr));\n\t    };\n\t\n\t    PostFX.prototype.render = function(delta) {\n\t      this.renderer.clear();\n\t      return this.composer.render(delta);\n\t    };\n\t\n\t    return PostFX;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var SceneManager, Signals, _;\n\t  _ = __webpack_require__(12);\n\t  Signals = __webpack_require__(13);\n\t  return SceneManager = (function() {\n\t    function SceneManager(tweenTime, data, scene, defaultCamera, factory) {\n\t      this.tweenTime = tweenTime;\n\t      this.data = data;\n\t      this.scene = scene;\n\t      this.defaultCamera = defaultCamera;\n\t      this.factory = factory;\n\t      this.update = __bind(this.update, this);\n\t      this.timer = this.tweenTime.timer;\n\t      this.timer.updated.add(this.update);\n\t      this.update(0);\n\t    }\n\t\n\t    SceneManager.prototype.update = function(timestamp) {\n\t      var activeCamera, el, item, seconds, should_exist, type, _i, _len, _ref;\n\t      activeCamera = this.defaultCamera;\n\t      seconds = timestamp / 1000;\n\t      _ref = this.data;\n\t      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n\t        item = _ref[_i];\n\t        should_exist = seconds >= item.start && seconds <= item.end ? true : false;\n\t        if ((item.object && should_exist === false) || item.isDirtyObject) {\n\t          item.isDirtyObject = false;\n\t          if (item.object) {\n\t            this.scene.remove(item.object.container);\n\t            item.object.destroy();\n\t            delete item.object;\n\t          }\n\t        }\n\t        if (!item.classObject) {\n\t          item.classObject = this.factory.getTypeClass(item.type);\n\t        }\n\t        if (should_exist === false) {\n\t          continue;\n\t        }\n\t        if (should_exist && !item.object) {\n\t          type = item.type;\n\t          el = this.factory.create(type, item.values, seconds - item.start);\n\t          this.scene.add(el.container);\n\t          item.object = el;\n\t          el.container._data = item;\n\t        }\n\t        if (item.object && item.object.isCamera) {\n\t          activeCamera = item.object.container;\n\t          window.updateCameraAspect(activeCamera);\n\t        }\n\t        if (item.object) {\n\t          item.object.update(seconds - item.start, item.values);\n\t        }\n\t      }\n\t      window.activeCamera = activeCamera;\n\t      if (window.renderModel) {\n\t        return window.renderModel.camera = activeCamera;\n\t      }\n\t    };\n\t\n\t    return SceneManager;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Audio, _;\n\t  _ = __webpack_require__(12);\n\t  return Audio = (function() {\n\t    Audio.instance = false;\n\t\n\t    function Audio(mp3Url, onLoadedCallback) {\n\t      var gain2, muted, parameters;\n\t      this.onLoadedCallback = onLoadedCallback;\n\t      this.rms = __bind(this.rms, this);\n\t      this.play = __bind(this.play, this);\n\t      this.pause = __bind(this.pause, this);\n\t      this.createSound = __bind(this.createSound, this);\n\t      this.load = __bind(this.load, this);\n\t      this.seek = __bind(this.seek, this);\n\t      this.update = __bind(this.update, this);\n\t      window.audio = this;\n\t      muted = true;\n\t      this.fftSize = 512;\n\t      this.filters = {};\n\t      this.playing = false;\n\t      this.now = 0.0;\n\t      this.timeDelay = 0.0;\n\t      this.bass = 0;\n\t      this.mid = 0;\n\t      this.high = 0;\n\t      this.context = false;\n\t      if (typeof AudioContext !== \"undefined\") {\n\t        this.context = new AudioContext();\n\t      } else if (typeof webkitAudioContext !== \"undefined\") {\n\t        this.context = new webkitAudioContext();\n\t      }\n\t      this.analyser = this.context.createAnalyser();\n\t      this.analyser.fftSize = this.fftSize;\n\t      this.source = this.context.createBufferSource();\n\t      parameters = {\n\t        bass: {\n\t          type: 0,\n\t          frequency: 120,\n\t          Q: 1.2,\n\t          gain: 2.0\n\t        },\n\t        mid: {\n\t          type: 2,\n\t          frequency: 400,\n\t          Q: 1.2,\n\t          gain: 4.0\n\t        },\n\t        treble: {\n\t          type: 1,\n\t          frequency: 2000,\n\t          Q: 1.2,\n\t          gain: 3.0\n\t        }\n\t      };\n\t      _.each(parameters, (function(_this) {\n\t        return function(spec, key) {\n\t          var filter;\n\t          filter = _this.context.createBiquadFilter();\n\t          filter.key = key;\n\t          filter.type = spec.type;\n\t          filter.frequency = spec.frequency;\n\t          filter.Q.value = spec.Q;\n\t          filter.analyser = _this.context.createAnalyser();\n\t          filter.analyser.fftSize = _this.fftSize;\n\t          if (_this.context.createDelay != null) {\n\t            filter.delayNode = _this.context.createDelay();\n\t          } else {\n\t            filter.delayNode = _this.context.createDelayNode();\n\t          }\n\t          filter.delayNode.delayTime.value = 0;\n\t          if (_this.context.createGain != null) {\n\t            filter.gainNode = _this.context.createGain();\n\t          } else {\n\t            filter.gainNode = _this.context.createGainNode();\n\t          }\n\t          filter.gainNode.gain.value = spec.gain;\n\t          return _this.filters[key] = filter;\n\t        };\n\t      })(this));\n\t      if (this.context.createDelay != null) {\n\t        this.delay = this.context.createDelay();\n\t      } else {\n\t        this.delay = this.context.createDelayNode();\n\t      }\n\t      this.delay.delayTime.value = this.fftSize * 2 / this.context.sampleRate;\n\t      this.source.connect(this.analyser);\n\t      this.analyser.connect(this.delay);\n\t      if (muted) {\n\t        gain2 = this.context.createGain();\n\t        this.delay.connect(gain2);\n\t        gain2.gain.value = 0.00;\n\t        gain2.connect(this.context.destination);\n\t      } else {\n\t        this.delay.connect(this.context.destination);\n\t      }\n\t      _.each(this.filters, (function(_this) {\n\t        return function(filter) {\n\t          _this.source.connect(filter.delayNode);\n\t          filter.delayNode.connect(filter);\n\t          filter.connect(filter.gainNode);\n\t          return filter.gainNode.connect(filter.analyser);\n\t        };\n\t      })(this));\n\t      this.samples = this.analyser.frequencyBinCount;\n\t      this.data = {\n\t        freq: new Uint8Array(this.samples),\n\t        time: new Uint8Array(this.samples),\n\t        filter: {\n\t          bass: new Uint8Array(256),\n\t          mid: new Uint8Array(256),\n\t          treble: new Uint8Array(256)\n\t        }\n\t      };\n\t      this.load(mp3Url);\n\t      Audio.instance = this;\n\t    }\n\t\n\t    Audio.prototype.update = function() {\n\t      var bins, num, waveforms, _i;\n\t      if (this.playing === false) {\n\t        return;\n\t      }\n\t      this.analyser.smoothingTimeConstant = 0;\n\t      this.analyser.getByteFrequencyData(this.data.freq);\n\t      this.analyser.getByteTimeDomainData(this.data.time);\n\t      _.each(this.filters, (function(_this) {\n\t        return function(filter) {\n\t          return filter.analyser.getByteTimeDomainData(_this.data.filter[filter.key]);\n\t        };\n\t      })(this));\n\t      bins = [0, 0, 0, 0];\n\t      waveforms = [this.data.time, this.data.filter.bass, this.data.filter.mid, this.data.filter.treble];\n\t      for (num = _i = 0; _i <= 3; num = ++_i) {\n\t        bins[num] = this.rms(waveforms[num]);\n\t      }\n\t      this.bass = bins[1];\n\t      this.mid = bins[2];\n\t      this.high = bins[3];\n\t      return this.now = this.context.currentTime - this.timeDelay;\n\t    };\n\t\n\t    Audio.prototype.seek = function(seconds) {\n\t      this.now = seconds;\n\t      if (this.source.buffer) {\n\t        if (this.playing) {\n\t          this.pause();\n\t          return this.play();\n\t        }\n\t      }\n\t    };\n\t\n\t    Audio.prototype.load = function(url) {\n\t      var request;\n\t      request = new XMLHttpRequest();\n\t      request.open(\"GET\", url, true);\n\t      request.responseType = \"arraybuffer\";\n\t      request.onload = (function(_this) {\n\t        return function() {\n\t          return _this.context.decodeAudioData(request.response, function(buff) {\n\t            _this.buffer = buff;\n\t            _this.source.buffer = _this.buffer;\n\t            _this.source.loop = false;\n\t            if (_this.onLoadedCallback) {\n\t              return _this.onLoadedCallback();\n\t            }\n\t          });\n\t        };\n\t      })(this);\n\t      return request.send();\n\t    };\n\t\n\t    Audio.prototype.createSound = function() {\n\t      var src;\n\t      src = this.context.createBufferSource();\n\t      if (this.buffer) {\n\t        src.buffer = this.buffer;\n\t      }\n\t      src.connect(this.analyser);\n\t      _.each(this.filters, (function(_this) {\n\t        return function(filter) {\n\t          return src.connect(filter.delayNode);\n\t        };\n\t      })(this));\n\t      return src;\n\t    };\n\t\n\t    Audio.prototype.pause = function() {\n\t      if (this.source) {\n\t        if (this.playing) {\n\t          this.source.stop(0);\n\t        }\n\t        this.source.disconnect(0);\n\t        this.source = false;\n\t      }\n\t      return this.playing = false;\n\t    };\n\t\n\t    Audio.prototype.play = function() {\n\t      this.playing = true;\n\t      this.timeDelay = this.context.currentTime - this.now;\n\t      if (!this.source) {\n\t        this.source = this.createSound();\n\t      }\n\t      if (this.source.buffer) {\n\t        return this.source.start(0, this.now, this.buffer.duration - this.now);\n\t      }\n\t    };\n\t\n\t    Audio.prototype.rms = function(data) {\n\t      var accum, num, s, size, _i, _ref;\n\t      size = data.length;\n\t      accum = 0;\n\t      for (num = _i = 0, _ref = size - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; num = 0 <= _ref ? ++_i : --_i) {\n\t        s = (data[num] - 128) / 128;\n\t        accum += s * s;\n\t      }\n\t      return Math.sqrt(accum / size);\n\t    };\n\t\n\t    return Audio;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Boxes, Camera, Circle, Circles, ElementFactory, Lines, SingleObject, extend;\n\t  Camera = __webpack_require__(16);\n\t  Circles = __webpack_require__(17);\n\t  Boxes = __webpack_require__(18);\n\t  Lines = __webpack_require__(19);\n\t  SingleObject = __webpack_require__(20);\n\t  Circle = __webpack_require__(21);\n\t  extend = function(object, properties) {\n\t    var key, val;\n\t    for (key in properties) {\n\t      val = properties[key];\n\t      if (typeof object[key] === 'object' && object[key] !== null) {\n\t        object[key] = extend({}, val);\n\t      } else {\n\t        object[key] = val;\n\t      }\n\t    }\n\t    return object;\n\t  };\n\t  ElementFactory = (function() {\n\t    function ElementFactory() {\n\t      this.getTypeClass = __bind(this.getTypeClass, this);\n\t    }\n\t\n\t    ElementFactory.elements = {\n\t      Circles: {\n\t        classObject: Circles\n\t      },\n\t      Boxes: {\n\t        classObject: Boxes\n\t      },\n\t      Lines: {\n\t        classObject: Lines\n\t      },\n\t      Camera: {\n\t        classObject: Camera\n\t      },\n\t      Box: {\n\t        classObject: SingleObject\n\t      },\n\t      Circle: {\n\t        classObject: Circle\n\t      }\n\t    };\n\t\n\t    ElementFactory.prototype.getTypeClass = function(itemType) {\n\t      return ElementFactory.elements[itemType].classObject;\n\t    };\n\t\n\t    ElementFactory.getTypeProperties = function(itemName) {\n\t      var element_class, item, key, prop, prop_definition, properties, _ref;\n\t      item = ElementFactory.elements[itemName];\n\t      if (item) {\n\t        element_class = item.classObject;\n\t        if (element_class) {\n\t          properties = [];\n\t          _ref = item.classObject.properties;\n\t          for (key in _ref) {\n\t            prop_definition = _ref[key];\n\t            prop = extend({}, prop_definition);\n\t            prop.keys = [];\n\t            properties.push(prop);\n\t          }\n\t          console.log(properties);\n\t          return properties;\n\t        }\n\t      }\n\t    };\n\t\n\t    ElementFactory.prototype.create = function(itemName, values, time) {\n\t      var item;\n\t      item = ElementFactory.elements[itemName];\n\t      if (!item) {\n\t        console.warn(\"Can't create item: \" + itemName);\n\t        return false;\n\t      }\n\t      return new item.classObject(values);\n\t    };\n\t\n\t    return ElementFactory;\n\t\n\t  })();\n\t  return window.ElementFactory = ElementFactory;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var DataNormalizer, ElementFactory, _;\n\t  _ = __webpack_require__(12);\n\t  ElementFactory = __webpack_require__(9);\n\t  return DataNormalizer = (function() {\n\t    function DataNormalizer() {}\n\t\n\t    DataNormalizer.normalizeItem = function(data_item, factory) {\n\t      var existing_prop, key, key2, new_prop, static_prop, static_properties, value2;\n\t      if (!data_item.classObject) {\n\t        data_item.classObject = factory.getTypeClass(data_item.type);\n\t      }\n\t      static_properties = data_item.classObject.properties;\n\t      if (!static_properties) {\n\t        return;\n\t      }\n\t      for (key in static_properties) {\n\t        static_prop = static_properties[key];\n\t        existing_prop = _.find(data_item.properties, function(prop) {\n\t          return prop.name === static_prop.name;\n\t        });\n\t        if (!existing_prop) {\n\t          new_prop = {};\n\t          for (key2 in static_prop) {\n\t            value2 = static_prop[key2];\n\t            new_prop[key2] = value2;\n\t          }\n\t          new_prop.keys = [];\n\t          data_item.properties.push(new_prop);\n\t        }\n\t      }\n\t      return data_item;\n\t    };\n\t\n\t    DataNormalizer.normalizeData = function(data, factory) {\n\t      data = _.map(data, function(item) {\n\t        return DataNormalizer.normalizeItem(item, factory);\n\t      });\n\t      return data;\n\t    };\n\t\n\t    return DataNormalizer;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"{\\n  \\\"settings\\\": {\\n    \\\"time\\\": 0,\\n    \\\"duration\\\": 240,\\n    \\\"domain\\\": [\\n      0,\\n      20000\\n    ]\\n  },\\n  \\\"data\\\": [\\n    {\\n      \\\"id\\\": \\\"item1\\\",\\n      \\\"type\\\": \\\"Circles\\\",\\n      \\\"label\\\": \\\"Test circles\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 2,\\n      \\\"collapsed\\\": true,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"progression\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 0,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 1.3379999999999999,\\n              \\\"val\\\": 1\\n            },\\n            {\\n              \\\"time\\\": 2,\\n              \\\"val\\\": 2\\n            }\\n          ]\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"val\\\": 2\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"val\\\": 8464\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randX\\\",\\n          \\\"val\\\": 84\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randY\\\",\\n          \\\"val\\\": 84\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadius\\\",\\n          \\\"val\\\": 20\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadiusMax\\\",\\n          \\\"val\\\": 20\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"percent_color\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"randZ\\\",\\n          \\\"label\\\": \\\"random z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randRotZ\\\",\\n          \\\"label\\\": \\\"random rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleX\\\",\\n          \\\"label\\\": \\\"random scale x\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleY\\\",\\n          \\\"label\\\": \\\"random scale y\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotX\\\",\\n          \\\"label\\\": \\\"rotation x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotY\\\",\\n          \\\"label\\\": \\\"rotation y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotZ\\\",\\n          \\\"label\\\": \\\"rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"progression\\\": 0,\\n        \\\"numItems\\\": 2,\\n        \\\"seed\\\": 8464,\\n        \\\"randX\\\": 84,\\n        \\\"randY\\\": 84,\\n        \\\"circleRadius\\\": 20,\\n        \\\"circleRadiusMax\\\": 20,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 0,\\n        \\\"depth\\\": 0,\\n        \\\"percent_color\\\": 0,\\n        \\\"randZ\\\": 0,\\n        \\\"randRotZ\\\": 0,\\n        \\\"randScaleX\\\": 0,\\n        \\\"randScaleY\\\": 0,\\n        \\\"rotX\\\": 0,\\n        \\\"rotY\\\": 0,\\n        \\\"rotZ\\\": 0\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"item2\\\",\\n      \\\"type\\\": \\\"Circles\\\",\\n      \\\"label\\\": \\\"Circles 2\\\",\\n      \\\"start\\\": 0.793,\\n      \\\"end\\\": 4.800000000000006,\\n      \\\"collapsed\\\": true,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"progression\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 1.021,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 1.9579999999999993,\\n              \\\"val\\\": 1\\n            },\\n            {\\n              \\\"time\\\": 2.2789999999999995,\\n              \\\"val\\\": 1\\n            },\\n            {\\n              \\\"time\\\": 4.435000000000008,\\n              \\\"val\\\": 0\\n            }\\n          ]\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"val\\\": 5\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"val\\\": -456453\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randX\\\",\\n          \\\"val\\\": 265\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randY\\\",\\n          \\\"val\\\": 265\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadius\\\",\\n          \\\"val\\\": 3\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadiusMax\\\",\\n          \\\"val\\\": 50\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 70\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"percent_color\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"randZ\\\",\\n          \\\"label\\\": \\\"random z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randRotZ\\\",\\n          \\\"label\\\": \\\"random rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleX\\\",\\n          \\\"label\\\": \\\"random scale x\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleY\\\",\\n          \\\"label\\\": \\\"random scale y\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotX\\\",\\n          \\\"label\\\": \\\"rotation x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotY\\\",\\n          \\\"label\\\": \\\"rotation y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotZ\\\",\\n          \\\"label\\\": \\\"rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"progression\\\": 0,\\n        \\\"numItems\\\": 5,\\n        \\\"seed\\\": -456453,\\n        \\\"randX\\\": 265,\\n        \\\"randY\\\": 265,\\n        \\\"circleRadius\\\": 3,\\n        \\\"circleRadiusMax\\\": 50,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 70,\\n        \\\"depth\\\": 0,\\n        \\\"percent_color\\\": 0,\\n        \\\"randZ\\\": 0,\\n        \\\"randRotZ\\\": 0,\\n        \\\"randScaleX\\\": 0,\\n        \\\"randScaleY\\\": 0,\\n        \\\"rotX\\\": 0,\\n        \\\"rotY\\\": 0,\\n        \\\"rotZ\\\": 0\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"item3\\\",\\n      \\\"type\\\": \\\"Circles\\\",\\n      \\\"label\\\": \\\"Circles 3\\\",\\n      \\\"start\\\": 4.514,\\n      \\\"end\\\": 12.172,\\n      \\\"collapsed\\\": true,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"progression\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 4.7250000000000005,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 5.614999999999998,\\n              \\\"val\\\": 0.5\\n            },\\n            {\\n              \\\"time\\\": 11.668999999999995,\\n              \\\"val\\\": 0\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"val\\\": 100,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 4.795000000000001,\\n              \\\"val\\\": 100\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 5.110000000000001,\\n              \\\"val\\\": 0\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 120,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"val\\\": 5\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"val\\\": 12002\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randX\\\",\\n          \\\"val\\\": 80\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randY\\\",\\n          \\\"val\\\": 80\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadius\\\",\\n          \\\"val\\\": 20\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadiusMax\\\",\\n          \\\"val\\\": 20\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"percent_color\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"randZ\\\",\\n          \\\"label\\\": \\\"random z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randRotZ\\\",\\n          \\\"label\\\": \\\"random rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleX\\\",\\n          \\\"label\\\": \\\"random scale x\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleY\\\",\\n          \\\"label\\\": \\\"random scale y\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotX\\\",\\n          \\\"label\\\": \\\"rotation x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotY\\\",\\n          \\\"label\\\": \\\"rotation y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotZ\\\",\\n          \\\"label\\\": \\\"rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"progression\\\": 0,\\n        \\\"x\\\": 100,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 120,\\n        \\\"numItems\\\": 5,\\n        \\\"seed\\\": 12002,\\n        \\\"randX\\\": 80,\\n        \\\"randY\\\": 80,\\n        \\\"circleRadius\\\": 20,\\n        \\\"circleRadiusMax\\\": 20,\\n        \\\"depth\\\": 0,\\n        \\\"percent_color\\\": 0,\\n        \\\"randZ\\\": 0,\\n        \\\"randRotZ\\\": 0,\\n        \\\"randScaleX\\\": 0,\\n        \\\"randScaleY\\\": 0,\\n        \\\"rotX\\\": 0,\\n        \\\"rotY\\\": 0,\\n        \\\"rotZ\\\": 0\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"item4\\\",\\n      \\\"type\\\": \\\"Circles\\\",\\n      \\\"label\\\": \\\"Circles 4\\\",\\n      \\\"start\\\": 5.235,\\n      \\\"end\\\": 11.328,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"val\\\": 5\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"val\\\": 1325\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randX\\\",\\n          \\\"val\\\": 150\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randY\\\",\\n          \\\"val\\\": 150\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadius\\\",\\n          \\\"val\\\": 10\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadiusMax\\\",\\n          \\\"val\\\": 20\\n        },\\n        {\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 5.235,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 6.085000000000001,\\n              \\\"val\\\": 1\\n            },\\n            {\\n              \\\"time\\\": 11.049000000000001,\\n              \\\"val\\\": 0\\n            }\\n          ],\\n          \\\"name\\\": \\\"progression\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"val\\\": -100\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"percent_color\\\",\\n          \\\"val\\\": 0.4\\n        },\\n        {\\n          \\\"name\\\": \\\"randZ\\\",\\n          \\\"label\\\": \\\"random z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randRotZ\\\",\\n          \\\"label\\\": \\\"random rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleX\\\",\\n          \\\"label\\\": \\\"random scale x\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleY\\\",\\n          \\\"label\\\": \\\"random scale y\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotX\\\",\\n          \\\"label\\\": \\\"rotation x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotY\\\",\\n          \\\"label\\\": \\\"rotation y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotZ\\\",\\n          \\\"label\\\": \\\"rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 5,\\n        \\\"seed\\\": 1325,\\n        \\\"randX\\\": 150,\\n        \\\"randY\\\": 150,\\n        \\\"circleRadius\\\": 10,\\n        \\\"circleRadiusMax\\\": 20,\\n        \\\"progression\\\": 0,\\n        \\\"x\\\": -100,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 0,\\n        \\\"depth\\\": 0,\\n        \\\"percent_color\\\": 0.4,\\n        \\\"randZ\\\": 0,\\n        \\\"randRotZ\\\": 0,\\n        \\\"randScaleX\\\": 0,\\n        \\\"randScaleY\\\": 0,\\n        \\\"rotX\\\": 0,\\n        \\\"rotY\\\": 0,\\n        \\\"rotZ\\\": 0\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"item5\\\",\\n      \\\"type\\\": \\\"Camera\\\",\\n      \\\"label\\\": \\\"Camera 5\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 10.136,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 0,\\n              \\\"val\\\": 200\\n            },\\n            {\\n              \\\"time\\\": 10.098,\\n              \\\"val\\\": 20\\n            }\\n          ],\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"val\\\": 200\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 0,\\n              \\\"val\\\": 600\\n            },\\n            {\\n              \\\"time\\\": 10.098,\\n              \\\"val\\\": 350\\n            }\\n          ],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 600\\n        },\\n        {\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 0,\\n              \\\"val\\\": 60\\n            },\\n            {\\n              \\\"time\\\": 10.098,\\n              \\\"val\\\": 37\\n            }\\n          ],\\n          \\\"name\\\": \\\"target_x\\\",\\n          \\\"val\\\": 60\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_z\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"fov\\\",\\n          \\\"label\\\": \\\"fov\\\",\\n          \\\"val\\\": 45,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"x\\\": 200,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 600,\\n        \\\"target_x\\\": 60,\\n        \\\"target_y\\\": 0,\\n        \\\"target_z\\\": 0,\\n        \\\"fov\\\": 45\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"item6\\\",\\n      \\\"type\\\": \\\"Camera\\\",\\n      \\\"label\\\": \\\"Camera 6\\\",\\n      \\\"start\\\": 10.13,\\n      \\\"end\\\": 14.156,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"val\\\": -20\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"val\\\": 100\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 300\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_x\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_z\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"fov\\\",\\n          \\\"label\\\": \\\"fov\\\",\\n          \\\"val\\\": 45,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"x\\\": -20,\\n        \\\"y\\\": 100,\\n        \\\"z\\\": 300,\\n        \\\"target_x\\\": 0,\\n        \\\"target_y\\\": 0,\\n        \\\"target_z\\\": 0,\\n        \\\"fov\\\": 45\\n      }\\n    }\\n  ]\\n}\\n\"\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = _;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = undefined;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tTHREE.GlitchPass2 = function ( dt_size ) {\n\t\n\t  if ( THREE.DigitalGlitch2 === undefined ) console.error( \"THREE.GlitchPass relies on THREE.DigitalGlitch\" );\n\t\n\t  var shader = THREE.DigitalGlitch2;\n\t  this.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\t\n\t  if(dt_size==undefined) dt_size=64;\n\t\n\t  this.intensity = 1;\n\t  this.uniforms[\"tDisp\"].value=this.generateHeightmap(dt_size);\n\t\n\t\n\t  this.material = new THREE.ShaderMaterial({\n\t    uniforms: this.uniforms,\n\t    vertexShader: shader.vertexShader,\n\t    fragmentShader: shader.fragmentShader\n\t  });\n\t\n\t  this.enabled = true;\n\t  this.renderToScreen = false;\n\t  this.needsSwap = true;\n\t\n\t  this.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t  this.scene  = new THREE.Scene();\n\t\n\t  this.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t  this.scene.add( this.quad );\n\t\n\t  this.goWild=false;\n\t  this.curF=0;\n\t  this.generateTrigger();\n\t\n\t};\n\t\n\tTHREE.GlitchPass2.prototype = {\n\t\n\t  render: function ( renderer, writeBuffer, readBuffer, delta )\n\t  {\n\t    this.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t    this.uniforms[ 'seed' ].value=Math.random();//default seeding\n\t    //this.uniforms[ 'byp' ].value=0;\n\t\n\t    this.uniforms[ 'amount' ].value = (Math.random()/420) * this.intensity;\n\t    this.uniforms[ 'angle' ].value=THREE.Math.randFloat(-Math.PI,Math.PI);\n\t    this.uniforms[ 'seed_x' ].value=THREE.Math.randFloat(-1,1);\n\t    this.uniforms[ 'seed_y' ].value=THREE.Math.randFloat(-1,1);\n\t    this.uniforms[ 'seed_x' ].value *= 0.001;\n\t    this.uniforms[ 'seed_y' ].value *= 0.001;\n\t    this.uniforms[ 'distortion_x' ].value=THREE.Math.randFloat(0,0.001);\n\t    this.uniforms[ 'distortion_y' ].value=THREE.Math.randFloat(0,0.001);\n\t    //this.curF=0;\n\t    this.generateTrigger();\n\t\n\t    this.uniforms[ 'byp' ].value=0;\n\t    this.curF++;\n\t\n\t    this.quad.material = this.material;\n\t    if ( this.renderToScreen )\n\t    {\n\t      renderer.render( this.scene, this.camera );\n\t    }\n\t    else\n\t    {\n\t      renderer.render( this.scene, this.camera, writeBuffer, false );\n\t    }\n\t  },\n\t  generateTrigger:function()\n\t  {\n\t    this.randX=THREE.Math.randInt(120,240);\n\t  },\n\t  generateHeightmap:function(dt_size)\n\t  {\n\t    var data_arr = new Float32Array( dt_size*dt_size * 3 );\n\t    var length=dt_size*dt_size;\n\t\n\t    for ( var i = 0; i < length; i++)\n\t    {\n\t      var val=THREE.Math.randFloat(0,1);\n\t      data_arr[ i*3 + 0 ] = val;\n\t      data_arr[ i*3 + 1 ] = val;\n\t      data_arr[ i*3 + 2 ] = val;\n\t    }\n\t\n\t    var texture = new THREE.DataTexture( data_arr, dt_size, dt_size, THREE.RGBFormat, THREE.FloatType );\n\t    texture.minFilter = THREE.NearestFilter;\n\t    texture.magFilter = THREE.NearestFilter;\n\t    texture.needsUpdate = true;\n\t    texture.flipY = false;\n\t    return texture;\n\t  }\n\t};\n\t\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author felixturner / http://airtight.cc/\n\t *\n\t * RGB Shift Shader\n\t * Shifts red and blue channels from center in opposite directions\n\t * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n\t * by Tom Butterworth / http://kriss.cx/tom/\n\t *\n\t * amount: shift distance (1 is width of input)\n\t * angle: shift angle in radians\n\t */\n\t\n\tTHREE.DigitalGlitch2 = {\n\t\n\t  uniforms: {\n\t\n\t    \"tDiffuse\":   { type: \"t\", value: null },//diffuse texture\n\t    \"tDisp\":    { type: \"t\", value: null },//displacement texture for digital glitch squares\n\t    \"tScratch\":   { type: \"t\", value: null },//scratch texture\n\t    \"byp\":      { type: \"i\", value: 0 },//apply the glitch ?\n\t    \"amount\":   { type: \"f\", value: 0.08 },\n\t    \"angle\":    { type: \"f\", value: 0.02 },\n\t    \"seed\":     { type: \"f\", value: 0.02 },\n\t    \"seed_x\":   { type: \"f\", value: 0.02 },//-1,1\n\t    \"seed_y\":   { type: \"f\", value: 0.02 },//-1,1\n\t    \"distortion_x\": { type: \"f\", value: 0.5 },\n\t    \"distortion_y\": { type: \"f\", value: 0.6 },\n\t    \"col_s\":    { type: \"f\", value: 0.05 }\n\t  },\n\t\n\t  vertexShader: [\n\t\n\t    \"varying vec2 vUv;\",\n\t    \"void main() {\",\n\t      \"vUv = uv;\",\n\t      \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t    \"}\"\n\t  ].join(\"\\n\"),\n\t\n\t  fragmentShader: [\n\t    \"uniform int byp;\",//should we apply the glitch ?\n\t\n\t    \"uniform sampler2D tDiffuse;\",\n\t    \"uniform sampler2D tDisp;\",\n\t    \"uniform sampler2D tScratch;\",\n\t\n\t    \"uniform float amount;\",\n\t    \"uniform float angle;\",\n\t    \"uniform float seed;\",\n\t    \"uniform float seed_x;\",\n\t    \"uniform float seed_y;\",\n\t    \"uniform float distortion_x;\",\n\t    \"uniform float distortion_y;\",\n\t    \"uniform float col_s;\",\n\t\n\t    \"varying vec2 vUv;\",\n\t\n\t\n\t    \"float rand(vec2 co){\",\n\t      \"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\n\t    \"}\",\n\t\n\t    \"float luma(vec3 color) {\",\n\t      \"return dot(color, vec3(0.299, 0.587, 0.114));\",\n\t    \"}\",\n\t\n\t    \"float luma(vec4 color) {\",\n\t      \"return dot(color.rgb, vec3(0.299, 0.587, 0.114));\",\n\t    \"}\",\n\t\n\t    \"void main() {\",\n\t      // ref for dust/scratch: https://gist.github.com/mattdesl/253aece2d3eaac505823\n\t      \"vec2 p = vUv;\",\n\t      \"vec4 scratches = texture2D(tScratch, p);\",\n\t\n\t\n\t      // https://github.com/mattdesl/lwjgl-basics/wiki/ShaderLesson3\n\t      \"if(byp<1) {\",\n\t        \"float xs = floor(gl_FragCoord.x / 0.5);\",\n\t        \"float ys = floor(gl_FragCoord.y / 0.5);\",\n\t        //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n\t        \"vec4 normal = texture2D (tDisp, p*seed*seed);\",\n\t        \"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\",\n\t          \"if(seed_x>0.){\",\n\t            \"p.y = 1. - (p.y + distortion_y);\",\n\t          \"}\",\n\t          \"else {\",\n\t            \"p.y = distortion_y;\",\n\t          \"}\",\n\t        \"}\",\n\t        \"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\",\n\t          \"if(seed_y>0.){\",\n\t            \"p.x=distortion_x;\",\n\t          \"}\",\n\t          \"else {\",\n\t            \"p.x = 1. - (p.x + distortion_x);\",\n\t          \"}\",\n\t        \"}\",\n\t        \"p.x+=normal.x*seed_x*(seed/5.);\",\n\t        \"p.y+=normal.y*seed_y*(seed/5.);\",\n\t        //base from RGB shift shader\n\t        \"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\n\t        \"vec4 cr = texture2D(tDiffuse, p + offset);\",\n\t        \"vec4 cga = texture2D(tDiffuse, p);\",\n\t        \"vec4 cb = texture2D(tDiffuse, p - offset);\",\n\t\n\t        \"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\n\t        //add noise\n\t        \"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\",\n\t        \"gl_FragColor = gl_FragColor+ snow;\",\n\t      \"}\",\n\t      \"else {\",\n\t        \"gl_FragColor=texture2D (tDiffuse, vUv);\",\n\t      \"}\",\n\t\n\t      \"vec3 scratchBlend = gl_FragColor.rgb + scratches.rgb;\",\n\t      // vignette scratch so that it affect only edges.\n\t      \"float center = smoothstep(0.0, 0.5, length(vUv-0.5));\",\n\t      \"float luminance = luma(gl_FragColor.rgb);\",\n\t      \"float brightnessMap = smoothstep(0.1, 0.4, luminance * center );\",\n\t      \"gl_FragColor.rgb = mix(gl_FragColor.rgb, scratchBlend, brightnessMap);\",\n\t    \"}\"\n\t\n\t  ].join(\"\\n\")\n\t\n\t};\n\t\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Camera, THREE;\n\t  THREE = __webpack_require__(3);\n\t  return Camera = (function() {\n\t    Camera.properties = {\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 700\n\t      },\n\t      target_x: {\n\t        name: 'target_x',\n\t        label: 'target x',\n\t        val: 0\n\t      },\n\t      target_y: {\n\t        name: 'target_y',\n\t        label: 'target y',\n\t        val: 0\n\t      },\n\t      target_z: {\n\t        name: 'target_z',\n\t        label: 'target z',\n\t        val: 0\n\t      },\n\t      fov: {\n\t        name: 'fov',\n\t        label: 'fov',\n\t        val: 45\n\t      }\n\t    };\n\t\n\t    function Camera(values, time) {\n\t      this.values = values != null ? values : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.isCamera = true;\n\t      this.target = new THREE.Vector3(this.values.target_x, this.values.target_y, this.values.target_z);\n\t      this.container = new THREE.PerspectiveCamera(this.values.fov, window.innerWidth / window.innerHeight, 1, 2000);\n\t      this.container.position.set(this.values.x, this.values.y, this.values.z);\n\t    }\n\t\n\t    Camera.prototype.update = function(seconds, values, force) {\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values.fov != null) {\n\t        this.container.fov = values.fov;\n\t      }\n\t      this.container.position.set(values.x, values.y, values.z);\n\t      this.target.set(values.target_x, values.target_y, values.target_z);\n\t      return this.container.lookAt(this.target);\n\t    };\n\t\n\t    Camera.prototype.destroy = function() {\n\t      delete this.container;\n\t      return delete this.isCamera;\n\t    };\n\t\n\t    return Camera;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedCircle, Circles, SpreadedObjects;\n\t  AnimatedCircle = __webpack_require__(33);\n\t  SpreadedObjects = __webpack_require__(34);\n\t  return Circles = (function(_super) {\n\t    __extends(Circles, _super);\n\t\n\t    function Circles() {\n\t      return Circles.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Circles.prototype.getItemClass = function() {\n\t      return AnimatedCircle;\n\t    };\n\t\n\t    return Circles;\n\t\n\t  })(SpreadedObjects);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedBox, Boxes, SpreadedObjects;\n\t  AnimatedBox = __webpack_require__(35);\n\t  SpreadedObjects = __webpack_require__(34);\n\t  return Boxes = (function(_super) {\n\t    __extends(Boxes, _super);\n\t\n\t    function Boxes() {\n\t      return Boxes.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Boxes.prototype.getItemClass = function() {\n\t      return AnimatedBox;\n\t    };\n\t\n\t    return Boxes;\n\t\n\t  })(SpreadedObjects);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedLine, Lines, SpreadedObjects;\n\t  AnimatedLine = __webpack_require__(36);\n\t  SpreadedObjects = __webpack_require__(34);\n\t  return Lines = (function(_super) {\n\t    __extends(Lines, _super);\n\t\n\t    function Lines() {\n\t      return Lines.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Lines.prototype.getItemClass = function() {\n\t      return AnimatedLine;\n\t    };\n\t\n\t    return Lines;\n\t\n\t  })(SpreadedObjects);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Colors, ElementBase, RNG, ShaderFragement, ShaderVertex, SingleObject, THREE, _;\n\t  _ = __webpack_require__(12);\n\t  THREE = __webpack_require__(3);\n\t  RNG = __webpack_require__(40);\n\t  ElementBase = __webpack_require__(37);\n\t  Colors = __webpack_require__(38);\n\t  ShaderVertex = __webpack_require__(42);\n\t  ShaderFragement = __webpack_require__(43);\n\t  return SingleObject = (function(_super) {\n\t    __extends(SingleObject, _super);\n\t\n\t    SingleObject.properties = {\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      rotX: {\n\t        name: 'rotX',\n\t        label: 'rotation x',\n\t        val: 0\n\t      },\n\t      rotY: {\n\t        name: 'rotY',\n\t        label: 'rotation y',\n\t        val: 0\n\t      },\n\t      rotZ: {\n\t        name: 'rotZ',\n\t        label: 'rotation z',\n\t        val: 0\n\t      },\n\t      scaleX: {\n\t        name: 'scaleX',\n\t        label: 'scale x',\n\t        val: 1\n\t      },\n\t      scaleY: {\n\t        name: 'scaleY',\n\t        label: 'scale y',\n\t        val: 1\n\t      },\n\t      scaleZ: {\n\t        name: 'scaleZ',\n\t        label: 'scale z',\n\t        val: 1\n\t      },\n\t      color: {\n\t        name: 'color',\n\t        label: 'color',\n\t        'type': 'color',\n\t        val: \"#888888\"\n\t      },\n\t      opacity: {\n\t        name: 'opacity',\n\t        label: 'opacity',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1\n\t      }\n\t    };\n\t\n\t    function SingleObject(values, time) {\n\t      var color, key, prop, _ref;\n\t      this.values = values != null ? values : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.getGeometry = __bind(this.getGeometry, this);\n\t      _ref = this.getDefaultProperties();\n\t      for (key in _ref) {\n\t        prop = _ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      SingleObject.__super__.constructor.apply(this, arguments);\n\t      this.timeline = new TimelineMax();\n\t      color = new THREE.Color(values.color);\n\t      this.material = this.getMaterial(color);\n\t      this.container = new THREE.Mesh(this.getGeometry(), this.material);\n\t    }\n\t\n\t    SingleObject.prototype.getDefaultProperties = function() {\n\t      return SingleObject.properties;\n\t    };\n\t\n\t    SingleObject.prototype.getGeometry = function() {\n\t      return new THREE.PlaneGeometry(100, 100);\n\t    };\n\t\n\t    SingleObject.prototype.destroy = function() {\n\t      SingleObject.__super__.destroy.apply(this, arguments);\n\t      if (this.container) {\n\t        if (this.container.parent) {\n\t          this.container.parent.remove(this.container);\n\t        }\n\t        delete this.container;\n\t      }\n\t      delete this.geometry;\n\t      return delete this.timeline;\n\t    };\n\t\n\t    SingleObject.prototype.update = function(seconds, values, force) {\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values === false) {\n\t        values = this.values;\n\t      }\n\t      if (force || this.valueChanged(\"x\", values) || this.valueChanged(\"y\", values) || this.valueChanged(\"z\", values)) {\n\t        this.container.position.set(values.x, values.y, values.z);\n\t      }\n\t      if (force || this.valueChanged(\"rotX\", values) || this.valueChanged(\"rotY\", values) || this.valueChanged(\"rotZ\", values)) {\n\t        this.container.rotation.set(this.degreeToRadian(values.rotX), this.degreeToRadian(values.rotY), this.degreeToRadian(values.rotZ));\n\t      }\n\t      if (force || this.valueChanged(\"scaleX\", values) || this.valueChanged(\"scaleY\", values) || this.valueChanged(\"scaleZ\", values)) {\n\t        values.scaleX = values.scaleX || 0.000000001;\n\t        values.scaleY = values.scaleY || 0.000000001;\n\t        values.scaleZ = values.scaleZ || 0.000000001;\n\t        this.container.scale.set(values.scaleX, values.scaleY, values.scaleZ);\n\t      }\n\t      if (force || this.valueChanged(\"color\", values)) {\n\t        this.material.color = new THREE.Color(values.color);\n\t      }\n\t      if (force || this.valueChanged(\"opacity\", values)) {\n\t        this.material.opacity = values.opacity;\n\t      }\n\t    };\n\t\n\t    SingleObject.prototype.getMaterial = function(color) {\n\t      var material;\n\t      material = new THREE.MeshPhongMaterial({\n\t        ambient: 0x030303,\n\t        color: 0xdddddd,\n\t        specular: 0x888888,\n\t        shininess: 30,\n\t        shading: THREE.FlatShading\n\t      });\n\t      material.transparent = true;\n\t      material.depthWrite = false;\n\t      material.depthTest = false;\n\t      material.side = THREE.DoubleSide;\n\t      material.blending = THREE.AdditiveBlending;\n\t      return material;\n\t    };\n\t\n\t    return SingleObject;\n\t\n\t  })(ElementBase);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Circle, Colors, RNG, RingGeometry2, ShaderFragement, ShaderVertex, SingleObject, THREE, _;\n\t  _ = __webpack_require__(12);\n\t  THREE = __webpack_require__(3);\n\t  RNG = __webpack_require__(40);\n\t  SingleObject = __webpack_require__(20);\n\t  Colors = __webpack_require__(38);\n\t  RingGeometry2 = __webpack_require__(39);\n\t  ShaderVertex = __webpack_require__(42);\n\t  ShaderFragement = __webpack_require__(43);\n\t  return Circle = (function(_super) {\n\t    __extends(Circle, _super);\n\t\n\t    function Circle() {\n\t      this.getGeometry = __bind(this.getGeometry, this);\n\t      return Circle.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Circle.properties = {\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      rotX: {\n\t        name: 'rotX',\n\t        label: 'rotation x',\n\t        val: 0\n\t      },\n\t      rotY: {\n\t        name: 'rotY',\n\t        label: 'rotation y',\n\t        val: 0\n\t      },\n\t      rotZ: {\n\t        name: 'rotZ',\n\t        label: 'rotation z',\n\t        val: 0\n\t      },\n\t      scaleX: {\n\t        name: 'scaleX',\n\t        label: 'scale x',\n\t        val: 1\n\t      },\n\t      scaleY: {\n\t        name: 'scaleY',\n\t        label: 'scale y',\n\t        val: 1\n\t      },\n\t      scaleZ: {\n\t        name: 'scaleZ',\n\t        label: 'scale z',\n\t        val: 1\n\t      },\n\t      innerRadius: {\n\t        name: 'innerRadius',\n\t        label: 'innerRadius',\n\t        val: 0.7,\n\t        min: 0,\n\t        max: 1\n\t      },\n\t      angle: {\n\t        name: 'angle',\n\t        label: 'angle',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1\n\t      },\n\t      color: {\n\t        name: 'color',\n\t        label: 'color',\n\t        'type': 'color',\n\t        val: \"#888888\"\n\t      },\n\t      opacity: {\n\t        name: 'opacity',\n\t        label: 'opacity',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1\n\t      }\n\t    };\n\t\n\t    Circle.prototype.getDefaultProperties = function() {\n\t      return Circle.properties;\n\t    };\n\t\n\t    Circle.prototype.getGeometry = function() {\n\t      var angle, inner_radius, pi2;\n\t      inner_radius = this.values.innerRadius || 0.000000001;\n\t      inner_radius = Math.min(0.999999999, inner_radius);\n\t      pi2 = Math.PI * 2;\n\t      angle = this.values.angle * pi2;\n\t      return new RingGeometry2(100 * inner_radius, 100, 30, 1, 0, angle);\n\t    };\n\t\n\t    Circle.prototype.update = function(seconds, values, force) {\n\t      var geom;\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      Circle.__super__.update.apply(this, arguments);\n\t      if (force || this.valueChanged(\"innerRadius\", values) || this.valueChanged(\"angle\", values)) {\n\t        geom = this.getGeometry();\n\t        this.container.geometry.dynamic = true;\n\t        this.container.geometry.vertices = geom.vertices;\n\t        this.container.geometry.verticesNeedUpdate = true;\n\t        geom.dispose();\n\t      }\n\t    };\n\t\n\t    return Circle;\n\t\n\t  })(SingleObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\t\n\t\tthis.renderer = renderer;\n\t\n\t\tif ( renderTarget === undefined ) {\n\t\n\t\t\tvar width = window.innerWidth || 1;\n\t\t\tvar height = window.innerHeight || 1;\n\t\t\tvar parameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\n\t\n\t\t\trenderTarget = new THREE.WebGLRenderTarget( width, height, parameters );\n\t\n\t\t}\n\t\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\t\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\t\n\t\tthis.passes = [];\n\t\n\t\tif ( THREE.CopyShader === undefined )\n\t\t\tconsole.error( \"THREE.EffectComposer relies on THREE.CopyShader\" );\n\t\n\t\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\t\n\t};\n\t\n\tTHREE.EffectComposer.prototype = {\n\t\n\t\tswapBuffers: function() {\n\t\n\t\t\tvar tmp = this.readBuffer;\n\t\t\tthis.readBuffer = this.writeBuffer;\n\t\t\tthis.writeBuffer = tmp;\n\t\n\t\t},\n\t\n\t\taddPass: function ( pass ) {\n\t\n\t\t\tthis.passes.push( pass );\n\t\n\t\t},\n\t\n\t\tinsertPass: function ( pass, index ) {\n\t\n\t\t\tthis.passes.splice( index, 0, pass );\n\t\n\t\t},\n\t\n\t\trender: function ( delta ) {\n\t\n\t\t\tthis.writeBuffer = this.renderTarget1;\n\t\t\tthis.readBuffer = this.renderTarget2;\n\t\n\t\t\tvar maskActive = false;\n\t\n\t\t\tvar pass, i, il = this.passes.length;\n\t\n\t\t\tfor ( i = 0; i < il; i ++ ) {\n\t\n\t\t\t\tpass = this.passes[ i ];\n\t\n\t\t\t\tif ( !pass.enabled ) continue;\n\t\n\t\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\n\t\n\t\t\t\tif ( pass.needsSwap ) {\n\t\n\t\t\t\t\tif ( maskActive ) {\n\t\n\t\t\t\t\t\tvar context = this.renderer.context;\n\t\n\t\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\t\n\t\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\n\t\n\t\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.swapBuffers();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\t\n\t\t\t\t\tmaskActive = true;\n\t\n\t\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\t\n\t\t\t\t\tmaskActive = false;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t},\n\t\n\t\treset: function ( renderTarget ) {\n\t\n\t\t\tif ( renderTarget === undefined ) {\n\t\n\t\t\t\trenderTarget = this.renderTarget1.clone();\n\t\n\t\t\t\trenderTarget.width = window.innerWidth;\n\t\t\t\trenderTarget.height = window.innerHeight;\n\t\n\t\t\t}\n\t\n\t\t\tthis.renderTarget1 = renderTarget;\n\t\t\tthis.renderTarget2 = renderTarget.clone();\n\t\n\t\t\tthis.writeBuffer = this.renderTarget1;\n\t\t\tthis.readBuffer = this.renderTarget2;\n\t\n\t\t},\n\t\n\t\tsetSize: function ( width, height ) {\n\t\n\t\t\tvar renderTarget = this.renderTarget1.clone();\n\t\n\t\t\trenderTarget.width = width;\n\t\t\trenderTarget.height = height;\n\t\n\t\t\tthis.reset( renderTarget );\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.MaskPass = function ( scene, camera ) {\n\t\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\t\n\t\tthis.enabled = true;\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\t\n\t\tthis.inverse = false;\n\t\n\t};\n\t\n\tTHREE.MaskPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tvar context = renderer.context;\n\t\n\t\t\t// don't update color or depth\n\t\n\t\t\tcontext.colorMask( false, false, false, false );\n\t\t\tcontext.depthMask( false );\n\t\n\t\t\t// set up stencil\n\t\n\t\t\tvar writeValue, clearValue;\n\t\n\t\t\tif ( this.inverse ) {\n\t\n\t\t\t\twriteValue = 0;\n\t\t\t\tclearValue = 1;\n\t\n\t\t\t} else {\n\t\n\t\t\t\twriteValue = 1;\n\t\t\t\tclearValue = 0;\n\t\n\t\t\t}\n\t\n\t\t\tcontext.enable( context.STENCIL_TEST );\n\t\t\tcontext.stencilOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\t\tcontext.stencilFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\t\tcontext.clearStencil( clearValue );\n\t\n\t\t\t// draw into the stencil buffer\n\t\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\t\n\t\t\t// re-enable update of color and depth\n\t\n\t\t\tcontext.colorMask( true, true, true, true );\n\t\t\tcontext.depthMask( true );\n\t\n\t\t\t// only render where stencil is set to 1\n\t\n\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );  // draw if == 1\n\t\t\tcontext.stencilOp( context.KEEP, context.KEEP, context.KEEP );\n\t\n\t\t}\n\t\n\t};\n\t\n\t\n\tTHREE.ClearMaskPass = function () {\n\t\n\t\tthis.enabled = true;\n\t\n\t};\n\t\n\tTHREE.ClearMaskPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tvar context = renderer.context;\n\t\n\t\t\tcontext.disable( context.STENCIL_TEST );\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.BloomPass = function ( strength, kernelSize, sigma, resolution ) {\n\t\n\t\tstrength = ( strength !== undefined ) ? strength : 1;\n\t\tkernelSize = ( kernelSize !== undefined ) ? kernelSize : 25;\n\t\tsigma = ( sigma !== undefined ) ? sigma : 4.0;\n\t\tresolution = ( resolution !== undefined ) ? resolution : 256;\n\t\n\t\t// render targets\n\t\n\t\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\t\n\t\tthis.renderTargetX = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\t\tthis.renderTargetY = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\t\n\t\t// copy material\n\t\n\t\tif ( THREE.CopyShader === undefined )\n\t\t\tconsole.error( \"THREE.BloomPass relies on THREE.CopyShader\" );\n\t\n\t\tvar copyShader = THREE.CopyShader;\n\t\n\t\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\t\n\t\tthis.copyUniforms[ \"opacity\" ].value = strength;\n\t\n\t\tthis.materialCopy = new THREE.ShaderMaterial( {\n\t\n\t\t\tuniforms: this.copyUniforms,\n\t\t\tvertexShader: copyShader.vertexShader,\n\t\t\tfragmentShader: copyShader.fragmentShader,\n\t\t\tblending: THREE.AdditiveBlending,\n\t\t\ttransparent: true\n\t\n\t\t} );\n\t\n\t\t// convolution material\n\t\n\t\tif ( THREE.ConvolutionShader === undefined )\n\t\t\tconsole.error( \"THREE.BloomPass relies on THREE.ConvolutionShader\" );\n\t\n\t\tvar convolutionShader = THREE.ConvolutionShader;\n\t\n\t\tthis.convolutionUniforms = THREE.UniformsUtils.clone( convolutionShader.uniforms );\n\t\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurx;\n\t\tthis.convolutionUniforms[ \"cKernel\" ].value = THREE.ConvolutionShader.buildKernel( sigma );\n\t\n\t\tthis.materialConvolution = new THREE.ShaderMaterial( {\n\t\n\t\t\tuniforms: this.convolutionUniforms,\n\t\t\tvertexShader:  convolutionShader.vertexShader,\n\t\t\tfragmentShader: convolutionShader.fragmentShader,\n\t\t\tdefines: {\n\t\t\t\t\"KERNEL_SIZE_FLOAT\": kernelSize.toFixed( 1 ),\n\t\t\t\t\"KERNEL_SIZE_INT\": kernelSize.toFixed( 0 )\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = false;\n\t\tthis.clear = false;\n\t\n\t\n\t\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\t\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\t\n\t};\n\t\n\tTHREE.BloomPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\t\n\t\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\n\t\n\t\t\t// Render quad with blured scene into texture (convolution pass 1)\n\t\n\t\t\tthis.quad.material = this.materialConvolution;\n\t\n\t\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\t\n\t\t\trenderer.render( this.scene, this.camera, this.renderTargetX, true );\n\t\n\t\n\t\t\t// Render quad with blured scene into texture (convolution pass 2)\n\t\n\t\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = this.renderTargetX;\n\t\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurY;\n\t\n\t\t\trenderer.render( this.scene, this.camera, this.renderTargetY, true );\n\t\n\t\t\t// Render original scene with superimposed blur to texture\n\t\n\t\t\tthis.quad.material = this.materialCopy;\n\t\n\t\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetY;\n\t\n\t\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\n\t\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\n\t\t}\n\t\n\t};\n\t\n\tTHREE.BloomPass.blurX = new THREE.Vector2( 0.001953125, 0.0 );\n\tTHREE.BloomPass.blurY = new THREE.Vector2( 0.0, 0.001953125 );\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.ShaderPass = function ( shader, textureID ) {\n\t\n\t\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\t\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\t\n\t\tthis.material = new THREE.ShaderMaterial( {\n\t\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\t\n\t\t} );\n\t\n\t\tthis.renderToScreen = false;\n\t\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = true;\n\t\tthis.clear = false;\n\t\n\t\n\t\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\t\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\t\n\t};\n\t\n\tTHREE.ShaderPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tif ( this.uniforms[ this.textureID ] ) {\n\t\n\t\t\t\tthis.uniforms[ this.textureID ].value = readBuffer;\n\t\n\t\t\t}\n\t\n\t\t\tthis.quad.material = this.material;\n\t\n\t\t\tif ( this.renderToScreen ) {\n\t\n\t\t\t\trenderer.render( this.scene, this.camera );\n\t\n\t\t\t} else {\n\t\n\t\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\t\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\t\n\t\tthis.overrideMaterial = overrideMaterial;\n\t\n\t\tthis.clearColor = clearColor;\n\t\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 1;\n\t\n\t\tthis.oldClearColor = new THREE.Color();\n\t\tthis.oldClearAlpha = 1;\n\t\n\t\tthis.enabled = true;\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\t\n\t};\n\t\n\tTHREE.RenderPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\t\n\t\t\tif ( this.clearColor ) {\n\t\n\t\t\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\t\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\n\t\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\t\n\t\t\t}\n\t\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\n\t\t\tif ( this.clearColor ) {\n\t\n\t\t\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\t\n\t\t\t}\n\t\n\t\t\tthis.scene.overrideMaterial = null;\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.FilmPass = function ( noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale ) {\n\t\n\t\tif ( THREE.FilmShader === undefined )\n\t\t\tconsole.error( \"THREE.FilmPass relies on THREE.FilmShader\" );\n\t\n\t\tvar shader = THREE.FilmShader;\n\t\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\t\n\t\tthis.material = new THREE.ShaderMaterial( {\n\t\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\t\n\t\t} );\n\t\n\t\tif ( grayscale !== undefined )\tthis.uniforms.grayscale.value = grayscale;\n\t\tif ( noiseIntensity !== undefined ) this.uniforms.nIntensity.value = noiseIntensity;\n\t\tif ( scanlinesIntensity !== undefined ) this.uniforms.sIntensity.value = scanlinesIntensity;\n\t\tif ( scanlinesCount !== undefined ) this.uniforms.sCount.value = scanlinesCount;\n\t\n\t\tthis.enabled = true;\n\t\tthis.renderToScreen = false;\n\t\tthis.needsSwap = true;\n\t\n\t\n\t\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\t\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\t\n\t};\n\t\n\tTHREE.FilmPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\t\tthis.uniforms[ \"time\" ].value += delta;\n\t\n\t\t\tthis.quad.material = this.material;\n\t\n\t\t\tif ( this.renderToScreen ) {\n\t\n\t\t\t\trenderer.render( this.scene, this.camera );\n\t\n\t\t\t} else {\n\t\n\t\t\t\trenderer.render( this.scene, this.camera, writeBuffer, false );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Full-screen textured quad shader\n\t */\n\t\n\tTHREE.CopyShader = {\n\t\n\t\tuniforms: {\n\t\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\t\n\t\t},\n\t\n\t\tvertexShader: [\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tfragmentShader: [\n\t\n\t\t\t\"uniform float opacity;\",\n\t\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\t\"gl_FragColor = opacity * texel;\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\")\n\t\n\t};\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author davidedc / http://www.sketchpatch.net/\n\t *\n\t * NVIDIA FXAA by Timothy Lottes\n\t * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\n\t * - WebGL port by @supereggbert\n\t * http://www.glge.org/demos/fxaa/\n\t */\n\t\n\tTHREE.FXAAShader = {\n\t\n\t\tuniforms: {\n\t\n\t\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\t\"resolution\": { type: \"v2\", value: new THREE.Vector2( 1 / 1024, 1 / 512 )  }\n\t\n\t\t},\n\t\n\t\tvertexShader: [\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tfragmentShader: [\n\t\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform vec2 resolution;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"#define FXAA_REDUCE_MIN   (1.0/128.0)\",\n\t\t\t\"#define FXAA_REDUCE_MUL   (1.0/8.0)\",\n\t\t\t\"#define FXAA_SPAN_MAX     8.0\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );\",\n\t\t\t\t\"vec3 rgbM  = rgbaM.xyz;\",\n\t\t\t\t\"float opacity  = rgbaM.w;\",\n\t\n\t\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\t\n\t\t\t\t\"float lumaNW = dot( rgbNW, luma );\",\n\t\t\t\t\"float lumaNE = dot( rgbNE, luma );\",\n\t\t\t\t\"float lumaSW = dot( rgbSW, luma );\",\n\t\t\t\t\"float lumaSE = dot( rgbSE, luma );\",\n\t\t\t\t\"float lumaM  = dot( rgbM,  luma );\",\n\t\t\t\t\"float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\",\n\t\t\t\t\"float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\",\n\t\n\t\t\t\t\"vec2 dir;\",\n\t\t\t\t\"dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\",\n\t\t\t\t\"dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\",\n\t\n\t\t\t\t\"float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\",\n\t\n\t\t\t\t\"float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\",\n\t\t\t\t\"dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\",\n\t\t\t\t\t  \"max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\",\n\t\t\t\t\t\t\t\"dir * rcpDirMin)) * resolution;\",\n\t\n\t\t\t\t\"vec3 rgbA = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\t\"rgbA += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\t\"rgbA *= 0.5;\",\n\t\n\t\t\t\t\"vec3 rgbB = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz;\",\n\t\t\t\t\"rgbB += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz;\",\n\t\t\t\t\"rgbB *= 0.25;\",\n\t\t\t\t\"rgbB += rgbA * 0.5;\",\n\t\n\t\t\t\t\"float lumaB = dot( rgbB, luma );\",\n\t\n\t\t\t\t\"if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\",\n\t\n\t\t\t\t\t\"gl_FragColor = vec4( rgbA, opacity );\",\n\t\n\t\t\t\t\"} else {\",\n\t\n\t\t\t\t\t\"gl_FragColor = vec4( rgbB, opacity );\",\n\t\n\t\t\t\t\"}\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\")\n\t\n\t};\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Film grain & scanlines shader\n\t *\n\t * - ported from HLSL to WebGL / GLSL\n\t * http://www.truevision3d.com/forums/showcase/staticnoise_colorblackwhite_scanline_shaders-t18698.0.html\n\t *\n\t * Screen Space Static Postprocessor\n\t *\n\t * Produces an analogue noise overlay similar to a film grain / TV static\n\t *\n\t * Original implementation and noise algorithm\n\t * Pat 'Hawthorne' Shearon\n\t *\n\t * Optimized scanlines + noise version with intensity scaling\n\t * Georg 'Leviathan' Steinrohder\n\t *\n\t * This version is provided under a Creative Commons Attribution 3.0 License\n\t * http://creativecommons.org/licenses/by/3.0/\n\t */\n\t\n\tTHREE.FilmShader = {\n\t\n\t\tuniforms: {\n\t\n\t\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\t\"time\":       { type: \"f\", value: 0.0 },\n\t\t\t\"nIntensity\": { type: \"f\", value: 0.5 },\n\t\t\t\"sIntensity\": { type: \"f\", value: 0.05 },\n\t\t\t\"sCount\":     { type: \"f\", value: 4096 },\n\t\t\t\"grayscale\":  { type: \"i\", value: 1 }\n\t\n\t\t},\n\t\n\t\tvertexShader: [\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tfragmentShader: [\n\t\n\t\t\t// control parameter\n\t\t\t\"uniform float time;\",\n\t\n\t\t\t\"uniform bool grayscale;\",\n\t\n\t\t\t// noise effect intensity value (0 = no effect, 1 = full effect)\n\t\t\t\"uniform float nIntensity;\",\n\t\n\t\t\t// scanlines effect intensity value (0 = no effect, 1 = full effect)\n\t\t\t\"uniform float sIntensity;\",\n\t\n\t\t\t// scanlines effect count value (0 = no effect, 4096 = full effect)\n\t\t\t\"uniform float sCount;\",\n\t\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t// sample the source\n\t\t\t\t\"vec4 cTextureScreen = texture2D( tDiffuse, vUv );\",\n\t\n\t\t\t\t// make some noise\n\t\t\t\t\"float x = vUv.x * vUv.y * time *  1000.0;\",\n\t\t\t\t\"x = mod( x, 13.0 ) * mod( x, 123.0 );\",\n\t\t\t\t\"float dx = mod( x, 0.01 );\",\n\t\n\t\t\t\t// add noise\n\t\t\t\t\"vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\",\n\t\n\t\t\t\t// get us a sine and cosine\n\t\t\t\t\"vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\",\n\t\n\t\t\t\t// add scanlines\n\t\t\t\t\"cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\",\n\t\n\t\t\t\t// interpolate between source and result by intensity\n\t\t\t\t\"cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\",\n\t\n\t\t\t\t// convert to grayscale if desired\n\t\t\t\t\"if( grayscale ) {\",\n\t\n\t\t\t\t\t\"cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\",\n\t\n\t\t\t\t\"}\",\n\t\n\t\t\t\t\"gl_FragColor =  vec4( cResult, cTextureScreen.a );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\")\n\t\n\t};\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Convolution shader\n\t * ported from o3d sample to WebGL / GLSL\n\t * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\n\t */\n\t\n\tTHREE.ConvolutionShader = {\n\t\n\t\tdefines: {\n\t\n\t\t\t\"KERNEL_SIZE_FLOAT\": \"25.0\",\n\t\t\t\"KERNEL_SIZE_INT\": \"25\",\n\t\n\t\t},\n\t\n\t\tuniforms: {\n\t\n\t\t\t\"tDiffuse\":        { type: \"t\", value: null },\n\t\t\t\"uImageIncrement\": { type: \"v2\", value: new THREE.Vector2( 0.001953125, 0.0 ) },\n\t\t\t\"cKernel\":         { type: \"fv1\", value: [] }\n\t\n\t\t},\n\t\n\t\tvertexShader: [\n\t\n\t\t\t\"uniform vec2 uImageIncrement;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tfragmentShader: [\n\t\n\t\t\t\"uniform float cKernel[ KERNEL_SIZE_INT ];\",\n\t\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform vec2 uImageIncrement;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vec2 imageCoord = vUv;\",\n\t\t\t\t\"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\n\t\n\t\t\t\t\"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\n\t\n\t\t\t\t\t\"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\n\t\t\t\t\t\"imageCoord += uImageIncrement;\",\n\t\n\t\t\t\t\"}\",\n\t\n\t\t\t\t\"gl_FragColor = sum;\",\n\t\n\t\t\t\"}\"\n\t\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tbuildKernel: function ( sigma ) {\n\t\n\t\t\t// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\n\t\n\t\t\tfunction gauss( x, sigma ) {\n\t\n\t\t\t\treturn Math.exp( - ( x * x ) / ( 2.0 * sigma * sigma ) );\n\t\n\t\t\t}\n\t\n\t\t\tvar i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil( sigma * 3.0 ) + 1;\n\t\n\t\t\tif ( kernelSize > kMaxKernelSize ) kernelSize = kMaxKernelSize;\n\t\t\thalfWidth = ( kernelSize - 1 ) * 0.5;\n\t\n\t\t\tvalues = new Array( kernelSize );\n\t\t\tsum = 0.0;\n\t\t\tfor ( i = 0; i < kernelSize; ++i ) {\n\t\n\t\t\t\tvalues[ i ] = gauss( i - halfWidth, sigma );\n\t\t\t\tsum += values[ i ];\n\t\n\t\t\t}\n\t\n\t\t\t// normalize the kernel\n\t\n\t\t\tfor ( i = 0; i < kernelSize; ++i ) values[ i ] /= sum;\n\t\n\t\t\treturn values;\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Vignette shader\n\t * based on PaintEffect postprocess from ro.me\n\t * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\n\t */\n\t\n\tTHREE.VignetteShader = {\n\t\n\t  uniforms: {\n\t\n\t    \"tDiffuse\": { type: \"t\", value: null },\n\t    \"offset\":   { type: \"f\", value: 1.0 },\n\t    \"darkness\": { type: \"f\", value: 1.0 }\n\t\n\t  },\n\t\n\t  vertexShader: [\n\t\n\t    \"varying vec2 vUv;\",\n\t\n\t    \"void main() {\",\n\t\n\t      \"vUv = uv;\",\n\t      \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t    \"}\"\n\t\n\t  ].join(\"\\n\"),\n\t\n\t  fragmentShader: [\n\t\n\t    \"uniform float offset;\",\n\t    \"uniform float darkness;\",\n\t\n\t    \"uniform sampler2D tDiffuse;\",\n\t\n\t    \"varying vec2 vUv;\",\n\t\n\t    \"void main() {\",\n\t\n\t      // Eskil's vignette\n\t\n\t      \"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t      \"vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\",\n\t      \"gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\",\n\t\n\t      /*\n\t      // alternative version from glfx.js\n\t      // this one makes more \"dusty\" look (as opposed to \"burned\")\n\t\n\t      \"vec4 color = texture2D( tDiffuse, vUv );\",\n\t      \"float dist = distance( vUv, vec2( 0.5 ) );\",\n\t      \"color.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\n\t      \"gl_FragColor = color;\",\n\t      */\n\t\n\t    \"}\"\n\t\n\t  ].join(\"\\n\")\n\t\n\t};\n\t\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedCircle, AnimatedObject, CircleGeometry2, RingGeometry2, THREE, _;\n\t  _ = __webpack_require__(12);\n\t  THREE = __webpack_require__(3);\n\t  AnimatedObject = __webpack_require__(44);\n\t  CircleGeometry2 = __webpack_require__(45);\n\t  RingGeometry2 = __webpack_require__(39);\n\t  return AnimatedCircle = (function(_super) {\n\t    __extends(AnimatedCircle, _super);\n\t\n\t    AnimatedCircle.circleGeom = new CircleGeometry2(10, 30, 0, Math.PI * 2);\n\t\n\t    AnimatedCircle.ringGeom = new RingGeometry2(10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedCircle.ringGeom2 = new RingGeometry2(10 - 1, 10, 30, 1, 0, Math.PI * 2);\n\t\n\t    function AnimatedCircle() {\n\t      AnimatedCircle.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    AnimatedCircle.prototype.getGeometry = function() {\n\t      return AnimatedCircle.circleGeom;\n\t    };\n\t\n\t    AnimatedCircle.prototype.getGeometryOutline = function(outlineWidth) {\n\t      if (outlineWidth < 1) {\n\t        return AnimatedCircle.ringGeom;\n\t      }\n\t      return AnimatedCircle.ringGeom2;\n\t    };\n\t\n\t    return AnimatedCircle;\n\t\n\t  })(AnimatedObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Colors, ElementBase, RNG, SpreadedObjects, THREE, TweenMax, _;\n\t  _ = __webpack_require__(12);\n\t  THREE = __webpack_require__(3);\n\t  RNG = __webpack_require__(46);\n\t  TweenMax = __webpack_require__(41);\n\t  ElementBase = __webpack_require__(37);\n\t  Colors = __webpack_require__(38);\n\t  return SpreadedObjects = (function(_super) {\n\t    __extends(SpreadedObjects, _super);\n\t\n\t    SpreadedObjects.properties = {\n\t      numItems: {\n\t        name: 'numItems',\n\t        label: 'num items',\n\t        val: 20,\n\t        triggerRebuild: true\n\t      },\n\t      seed: {\n\t        name: 'seed',\n\t        label: 'seed',\n\t        val: 12002,\n\t        triggerRebuild: true\n\t      },\n\t      randX: {\n\t        name: 'randX',\n\t        label: 'random x',\n\t        val: 80,\n\t        triggerRebuild: true\n\t      },\n\t      randY: {\n\t        name: 'randY',\n\t        label: 'random y',\n\t        val: 80,\n\t        triggerRebuild: true\n\t      },\n\t      randZ: {\n\t        name: 'randZ',\n\t        label: 'random z',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      randRotZ: {\n\t        name: 'randRotZ',\n\t        label: 'random rotation z',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      randScaleX: {\n\t        name: 'randScaleX',\n\t        label: 'random scale x',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      randScaleY: {\n\t        name: 'randScaleY',\n\t        label: 'random scale y',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      circleRadius: {\n\t        name: 'circleRadius',\n\t        label: 'circle radius',\n\t        val: 20\n\t      },\n\t      circleRadiusMax: {\n\t        name: 'circleRadiusMax',\n\t        label: 'circle radius max',\n\t        val: 20\n\t      },\n\t      progression: {\n\t        name: 'progression',\n\t        label: 'progression',\n\t        val: 1,\n\t        min: 0,\n\t        max: 2\n\t      },\n\t      depth: {\n\t        name: 'depth',\n\t        label: 'depth',\n\t        val: 0\n\t      },\n\t      percent_color: {\n\t        name: 'percent_color',\n\t        label: 'percent color',\n\t        val: 0.4,\n\t        triggerRebuild: true\n\t      },\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      rotX: {\n\t        name: 'rotX',\n\t        label: 'rotation x',\n\t        val: 0\n\t      },\n\t      rotY: {\n\t        name: 'rotY',\n\t        label: 'rotation y',\n\t        val: 0\n\t      },\n\t      rotZ: {\n\t        name: 'rotZ',\n\t        label: 'rotation z',\n\t        val: 0\n\t      }\n\t    };\n\t\n\t    function SpreadedObjects(values, time) {\n\t      var key, prop, _ref;\n\t      this.values = values != null ? values : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      _ref = SpreadedObjects.properties;\n\t      for (key in _ref) {\n\t        prop = _ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      SpreadedObjects.__super__.constructor.apply(this, arguments);\n\t      this.timeline = new TimelineMax();\n\t      this.container = new THREE.Object3D();\n\t      this.totalDuration = 0;\n\t      this.items = [];\n\t      this.items_position = [];\n\t      this.build(time);\n\t    }\n\t\n\t    SpreadedObjects.prototype.getItemClass = function() {\n\t      return AnimatedCircle;\n\t    };\n\t\n\t    SpreadedObjects.prototype.rebuild = function(time) {\n\t      this.empty();\n\t      return this.build(time);\n\t    };\n\t\n\t    SpreadedObjects.prototype.empty = function() {\n\t      var item, _i, _len, _ref;\n\t      if (!this.items || !this.items.length) {\n\t        return;\n\t      }\n\t      this.timeline.clear();\n\t      this.items_position = [];\n\t      _ref = this.items;\n\t      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n\t        item = _ref[_i];\n\t        this.container.remove(item.container);\n\t        item.destroy();\n\t      }\n\t      return this.items = [];\n\t    };\n\t\n\t    SpreadedObjects.prototype.build = function(time) {\n\t      var border_radius, color, delay, draw_circle, draw_outline, duration, fillColor, i, item, itemClass, pos, randRotZ, randScaleX, randScaleY, rndtype, size, x, y, z, _i, _ref;\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.rng = new RNG(this.values.seed);\n\t      this.rngAnimation = new RNG(this.values.seed + \"lorem\");\n\t      this.rngOutline = new RNG(this.values.seed);\n\t      for (i = _i = 0, _ref = this.values.numItems - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n\t        itemClass = this.getItemClass();\n\t        rndtype = this.rng.random(0, 1000) / 1000;\n\t        draw_outline = rndtype < 0.8 ? true : false;\n\t        draw_circle = rndtype > 0.5 ? true : false;\n\t        if (itemClass.noOutline) {\n\t          draw_outline = false;\n\t          draw_circle = true;\n\t        }\n\t        color = Colors.get(this.rng.random(0, 1000));\n\t        if (this.rng.random(0, 1000) > this.values.percent_color * 1000) {\n\t          color = Colors.get(0);\n\t        }\n\t        fillColor = color.clone();\n\t        if (draw_outline) {\n\t          fillColor.multiplyScalar(this.rng.random(0.1, 0.5));\n\t        }\n\t        size = this.rng.random(this.values.circleRadius, this.values.circleRadiusMax);\n\t        x = this.getRandomPosition(this.values.randX);\n\t        y = this.getRandomPosition(this.values.randY);\n\t        z = this.getRandomPosition(this.values.randZ);\n\t        randRotZ = this.rng.random(0, 1000) / 1000 * Math.PI * this.values.randRotZ;\n\t        randScaleX = this.rng.random(0, 1000) / 1000 * this.values.randScaleX;\n\t        randScaleY = this.rng.random(0, 1000) / 1000 * this.values.randScaleY;\n\t        pos = {\n\t          x: x,\n\t          y: y,\n\t          z: z\n\t        };\n\t        delay = this.rngAnimation.random(0, 2400) / 1000;\n\t        duration = this.rngAnimation.random(600, 800) / 1000;\n\t        duration *= 4;\n\t        border_radius = this.rngOutline.random(1, 400) / 100;\n\t        if (draw_outline === false) {\n\t          fillColor.multiplyScalar(3);\n\t        }\n\t        item = new itemClass({\n\t          size: size,\n\t          outlineWidth: border_radius,\n\t          drawOutline: draw_outline,\n\t          drawCircle: draw_circle,\n\t          color: color,\n\t          fillColor: fillColor,\n\t          delay: delay,\n\t          duration: duration,\n\t          depth: this.values.depth,\n\t          x: pos.x,\n\t          y: pos.y,\n\t          z: pos.z,\n\t          randRotZ: randRotZ,\n\t          randScaleX: randScaleX,\n\t          randScaleY: randScaleY\n\t        });\n\t        this.container.add(item.container);\n\t        this.timeline.add(item.timeline, 0);\n\t        this.items.push(item);\n\t        this.items_position.push(pos);\n\t      }\n\t      this.totalDuration = this.timeline.duration();\n\t      return this.update(time, this.values, true);\n\t    };\n\t\n\t    SpreadedObjects.prototype.update = function(seconds, values, force) {\n\t      var item, key, needs_rebuild, pos, progression, prop, _i, _j, _len, _len1, _ref, _ref1, _ref2;\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values === false) {\n\t        values = this.values;\n\t      }\n\t      needs_rebuild = false;\n\t      _ref = SpreadedObjects.properties;\n\t      for (key in _ref) {\n\t        prop = _ref[key];\n\t        if (prop.triggerRebuild && this.valueChanged(key, values)) {\n\t          needs_rebuild = true;\n\t        }\n\t      }\n\t      if (force || this.valueChanged(\"x\", values) || this.valueChanged(\"y\", values) || this.valueChanged(\"z\", values)) {\n\t        this.container.position.set(values.x, values.y, values.z);\n\t      }\n\t      if (force || this.valueChanged(\"rotX\", values) || this.valueChanged(\"rotY\", values) || this.valueChanged(\"rotZ\", values)) {\n\t        this.container.rotation.set(this.degreeToRadian(values.rotX), this.degreeToRadian(values.rotY), this.degreeToRadian(values.rotZ));\n\t      }\n\t      progression = values.progression / 2;\n\t      this.timeline.seek(this.totalDuration * progression);\n\t      _ref1 = this.items;\n\t      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n\t        item = _ref1[_i];\n\t        item.update(seconds, {\n\t          progression: values.progression\n\t        });\n\t      }\n\t      if (force || this.valueChanged(\"depth\", values)) {\n\t        _ref2 = this.items;\n\t        for (key = _j = 0, _len1 = _ref2.length; _j < _len1; key = ++_j) {\n\t          item = _ref2[key];\n\t          pos = this.items_position[key];\n\t          item.container.position.set(pos.x, pos.y, pos.z * values.depth);\n\t        }\n\t      }\n\t      this.values = _.merge(this.values, values);\n\t      if (needs_rebuild === true) {\n\t        return this.rebuild(seconds);\n\t      }\n\t    };\n\t\n\t    SpreadedObjects.prototype.getRandomPosition = function(scale) {\n\t      if (scale == null) {\n\t        scale = 1;\n\t      }\n\t      return this.rng.random(-scale, scale);\n\t    };\n\t\n\t    SpreadedObjects.prototype.destroy = function() {\n\t      SpreadedObjects.__super__.destroy.apply(this, arguments);\n\t      if (this.container) {\n\t        if (this.container.parent) {\n\t          this.container.parent.remove(this.container);\n\t        }\n\t        delete this.container;\n\t      }\n\t      delete this.rng;\n\t      delete this.rngOutline;\n\t      return delete this.cache;\n\t    };\n\t\n\t    return SpreadedObjects;\n\t\n\t  })(ElementBase);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedBox, AnimatedObject, THREE, _;\n\t  _ = __webpack_require__(12);\n\t  THREE = __webpack_require__(3);\n\t  AnimatedObject = __webpack_require__(44);\n\t  return AnimatedBox = (function(_super) {\n\t    __extends(AnimatedBox, _super);\n\t\n\t    AnimatedBox.circleGeom = new THREE.CircleGeometry(10, 4, 0, Math.PI * 2);\n\t\n\t    AnimatedBox.ringGeom = new THREE.RingGeometry(10 - 1, 10 + 1, 4, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedBox.ringGeom2 = new THREE.RingGeometry(10 - 1, 10, 4, 1, 0, Math.PI * 2);\n\t\n\t    function AnimatedBox() {\n\t      AnimatedBox.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    AnimatedBox.prototype.getGeometry = function() {\n\t      return AnimatedBox.circleGeom;\n\t    };\n\t\n\t    AnimatedBox.prototype.getGeometryOutline = function(outlineWidth) {\n\t      if (outlineWidth < 1) {\n\t        return AnimatedBox.ringGeom;\n\t      }\n\t      return AnimatedBox.ringGeom2;\n\t    };\n\t\n\t    return AnimatedBox;\n\t\n\t  })(AnimatedObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var __hasProp = {}.hasOwnProperty,\n\t  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedLine, AnimatedObject, THREE, _;\n\t  _ = __webpack_require__(12);\n\t  THREE = __webpack_require__(3);\n\t  AnimatedObject = __webpack_require__(44);\n\t  return AnimatedLine = (function(_super) {\n\t    __extends(AnimatedLine, _super);\n\t\n\t    AnimatedLine.circleGeom = new THREE.PlaneGeometry(100, 1);\n\t\n\t    AnimatedLine.ringGeom = false;\n\t\n\t    AnimatedLine.ringGeom2 = false;\n\t\n\t    AnimatedLine.noOutline = true;\n\t\n\t    function AnimatedLine() {\n\t      AnimatedLine.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    AnimatedLine.prototype.getGeometry = function() {\n\t      return AnimatedLine.circleGeom;\n\t    };\n\t\n\t    AnimatedLine.prototype.getGeometryOutline = function(outlineWidth) {\n\t      return false;\n\t    };\n\t\n\t    AnimatedLine.prototype.update = function(seconds, progression) {\n\t      var material, scale, timeDiff, _i, _len, _ref;\n\t      this.container.position.add(this.velocity);\n\t      this.velocity = this.velocity.multiplyScalar(0.94);\n\t      timeDiff = Date.now() - this.start;\n\t      _ref = this.materials;\n\t      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n\t        material = _ref[_i];\n\t        material.uniforms['time'].value = 0.00025 * timeDiff;\n\t      }\n\t      scale = this.animatedProperties.scale * this.values.size * 0.1;\n\t      return this.container.scale.set(1, scale, 1);\n\t    };\n\t\n\t    return AnimatedLine;\n\t\n\t  })(AnimatedObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var ElementBase;\n\t  return ElementBase = (function() {\n\t    function ElementBase(values, time) {\n\t      this.values = values != null ? values : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.destroy = __bind(this.destroy, this);\n\t      this.cache = this.buildCache();\n\t    }\n\t\n\t    ElementBase.prototype.buildCache = function() {\n\t      var cache, key, prop, _ref;\n\t      cache = {};\n\t      _ref = this.values;\n\t      for (key in _ref) {\n\t        prop = _ref[key];\n\t        cache[key] = prop.val;\n\t      }\n\t      return cache;\n\t    };\n\t\n\t    ElementBase.prototype.valueChanged = function(key, values) {\n\t      var has_changed, new_val;\n\t      if (values[key] == null) {\n\t        return false;\n\t      }\n\t      new_val = values[key];\n\t      has_changed = true;\n\t      if ((this.cache[key] != null) && this.cache[key] === new_val) {\n\t        has_changed = false;\n\t      }\n\t      this.cache[key] = new_val;\n\t      return has_changed;\n\t    };\n\t\n\t    ElementBase.prototype.degreeToRadian = function(degree) {\n\t      return Math.PI * degree / 180;\n\t    };\n\t\n\t    ElementBase.prototype.destroy = function() {\n\t      return delete this.cache;\n\t    };\n\t\n\t    return ElementBase;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Colors, THREE, items, items2, length;\n\t  THREE = __webpack_require__(3);\n\t  items = [new THREE.Color(0xffffff), new THREE.Color(0x86d1b8), new THREE.Color(0x65c282)];\n\t  items2 = [new THREE.Color(0xffffff), new THREE.Color(0x023750), new THREE.Color(0x028A9E), new THREE.Color(0x0EBFA9), new THREE.Color(0xF2C01D), new THREE.Color(0xD93024)];\n\t  length = items.length;\n\t  return Colors = (function() {\n\t    function Colors() {}\n\t\n\t    Colors.get = function(index) {\n\t      index = Math.abs(parseInt(index, 10));\n\t      return items[index % length];\n\t    };\n\t\n\t    return Colors;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;// Modified to have uv on the edges.\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var THREE = __webpack_require__(3);\n\t\n\tTHREE.RingGeometry2 = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\t\n\t\tTHREE.Geometry.call( this );\n\t\n\t\tthis.type = 'RingGeometry2';\n\t\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\t\n\t\tinnerRadius = innerRadius || 0;\n\t\touterRadius = outerRadius || 50;\n\t\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\t\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\n\t\n\t\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\n\t\tfor ( i = 0; i < phiSegments + 1; i ++ ) { // concentric circles inside ring\n\t\n\t\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) { // number of segments per circle\n\t\n\t\t\t\tvar vertex = new THREE.Vector3();\n\t\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\t\n\t\t\t\tthis.vertices.push( vertex );\n\t\t\t\t//uvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\n\t\t\t  var uv = {\n\t        x: (i / phiSegments),\n\t        y: (o / thetaSegments)\n\t      };\n\t      uvs.push(new THREE.Vector2(uv.x, uv.y));\n\t    }\n\t\n\t\t\tradius += radiusStep;\n\t\n\t\t}\n\t\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\n\t\n\t\tfor ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring\n\t\n\t\t\tvar thetaSegment = i * (thetaSegments + 1);\n\t\n\t\t\tfor ( o = 0; o < thetaSegments ; o ++ ) { // number of segments per circle\n\t\n\t\t\t\tvar segment = o + thetaSegment;\n\t\n\t\t\t\tvar v1 = segment;\n\t\t\t\tvar v2 = segment + thetaSegments + 1;\n\t\t\t\tvar v3 = segment + thetaSegments + 2;\n\t\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\t\n\t\t\t\tv1 = segment;\n\t\t\t\tv2 = segment + thetaSegments + 2;\n\t\t\t\tv3 = segment + 1;\n\t\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\t\n\t\t\t}\n\t\t}\n\t\n\t\tthis.computeFaceNormals();\n\t\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\t\n\t};\n\t\n\tTHREE.RingGeometry2.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.RingGeometry2.prototype.constructor = THREE.RingGeometry2;\n\t\n\treturn THREE.RingGeometry2;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Seedable random number generator functions.\n\t * @version 1.0.0\n\t * @license Public Domain\n\t *\n\t * @example\n\t * var rng = new RNG('Example');\n\t * rng.random(40, 50);  // =>  42\n\t * rng.uniform();       // =>  0.7972798995050903\n\t * rng.normal();        // => -0.6698504543216376\n\t * rng.exponential();   // =>  1.0547367609131555\n\t * rng.poisson(4);      // =>  2\n\t * rng.gamma(4);        // =>  2.781724687386858\n\t */\n\t\n\t/**\n\t * @param {String} seed A string to seed the generator.\n\t * @constructor\n\t */\n\tfunction RC4(seed) {\n\t    this.s = new Array(256);\n\t    this.i = 0;\n\t    this.j = 0;\n\t    for (var i = 0; i < 256; i++) {\n\t        this.s[i] = i;\n\t    }\n\t    if (seed) {\n\t        this.mix(seed);\n\t    }\n\t}\n\t\n\t/**\n\t * Get the underlying bytes of a string.\n\t * @param {string} string\n\t * @returns {Array} An array of bytes\n\t */\n\tRC4.getStringBytes = function(string) {\n\t    var output = [];\n\t    for (var i = 0; i < string.length; i++) {\n\t        var c = string.charCodeAt(i);\n\t        var bytes = [];\n\t        do {\n\t            bytes.push(c & 0xFF);\n\t            c = c >> 8;\n\t        } while (c > 0);\n\t        output = output.concat(bytes.reverse());\n\t    }\n\t    return output;\n\t};\n\t\n\tRC4.prototype._swap = function(i, j) {\n\t    var tmp = this.s[i];\n\t    this.s[i] = this.s[j];\n\t    this.s[j] = tmp;\n\t};\n\t\n\t/**\n\t * Mix additional entropy into this generator.\n\t * @param {String} seed\n\t */\n\tRC4.prototype.mix = function(seed) {\n\t    var input = RC4.getStringBytes(seed);\n\t    var j = 0;\n\t    for (var i = 0; i < this.s.length; i++) {\n\t        j += this.s[i] + input[i % input.length];\n\t        j %= 256;\n\t        this._swap(i, j);\n\t    }\n\t};\n\t\n\t/**\n\t * @returns {number} The next byte of output from the generator.\n\t */\n\tRC4.prototype.next = function() {\n\t    this.i = (this.i + 1) % 256;\n\t    this.j = (this.j + this.s[this.i]) % 256;\n\t    this._swap(this.i, this.j);\n\t    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n\t};\n\t\n\t/**\n\t * Create a new random number generator with optional seed. If the\n\t * provided seed is a function (i.e. Math.random) it will be used as\n\t * the uniform number generator.\n\t * @param seed An arbitrary object used to seed the generator.\n\t * @constructor\n\t */\n\tfunction RNG(seed) {\n\t    if (seed == null) {\n\t        seed = (Math.random() + Date.now()).toString();\n\t    } else if (typeof seed === \"function\") {\n\t        // Use it as a uniform number generator\n\t        this.uniform = seed;\n\t        this.nextByte = function() {\n\t            return ~~(this.uniform() * 256);\n\t        };\n\t        seed = null;\n\t    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n\t        seed = JSON.stringify(seed);\n\t    }\n\t    this._normal = null;\n\t    if (seed) {\n\t        this._state = new RC4(seed);\n\t    } else {\n\t        this._state = null;\n\t    }\n\t}\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 255.\n\t */\n\tRNG.prototype.nextByte = function() {\n\t    return this._state.next();\n\t};\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 1.\n\t */\n\tRNG.prototype.uniform = function() {\n\t    var BYTES = 7; // 56 bits to make a 53-bit double\n\t    var output = 0;\n\t    for (var i = 0; i < BYTES; i++) {\n\t        output *= 256;\n\t        output += this.nextByte();\n\t    }\n\t    return output / (Math.pow(2, BYTES * 8) - 1);\n\t};\n\t\n\t/**\n\t * Produce a random integer within [n, m).\n\t * @param {number} [n=0]\n\t * @param {number} m\n\t *\n\t */\n\tRNG.prototype.random = function(n, m) {\n\t    if (n == null) {\n\t        return this.uniform();\n\t    } else if (m == null) {\n\t        m = n;\n\t        n = 0;\n\t    }\n\t    return n + Math.floor(this.uniform() * (m - n));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() with the Box-Muller transform.\n\t * @returns {number} Normally-distributed random number of mean 0, variance 1.\n\t */\n\tRNG.prototype.normal = function() {\n\t    if (this._normal !== null) {\n\t        var n = this._normal;\n\t        this._normal = null;\n\t        return n;\n\t    } else {\n\t        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n\t        var y = this.uniform();\n\t        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n\t        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n\t    }\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform().\n\t * @returns {number} Number from the exponential distribution, lambda = 1.\n\t */\n\tRNG.prototype.exponential = function() {\n\t    return -Math.log(this.uniform() || Math.pow(2, -53));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() and Knuth's method.\n\t * @param {number} [mean=1]\n\t * @returns {number} Number from the Poisson distribution.\n\t */\n\tRNG.prototype.poisson = function(mean) {\n\t    var L = Math.exp(-(mean || 1));\n\t    var k = 0, p = 1;\n\t    do {\n\t        k++;\n\t        p *= this.uniform();\n\t    } while (p > L);\n\t    return k - 1;\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform(), this.normal(),\n\t * this.exponential(), and the Marsaglia-Tsang method.\n\t * @param {number} a\n\t * @returns {number} Number from the gamma distribution.\n\t */\n\tRNG.prototype.gamma = function(a) {\n\t    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n\t    var c = 1 / Math.sqrt(9 * d);\n\t    do {\n\t        do {\n\t            var x = this.normal();\n\t            var v = Math.pow(c * x + 1, 3);\n\t        } while (v <= 0);\n\t        var u = this.uniform();\n\t        var x2 = Math.pow(x, 2);\n\t    } while (u >= 1 - 0.0331 * x2 * x2 &&\n\t             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n\t    if (a < 1) {\n\t        return d * v * Math.exp(this.exponential() / -a);\n\t    } else {\n\t        return d * v;\n\t    }\n\t};\n\t\n\t/**\n\t * Accepts a dice rolling notation string and returns a generator\n\t * function for that distribution. The parser is quite flexible.\n\t * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n\t * @param {RNG} rng An optional RNG object.\n\t * @returns {Function}\n\t */\n\tRNG.roller = function(expr, rng) {\n\t    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n\t    var dice = parseFloat(parts[0]) || 1;\n\t    var sides = parseFloat(parts[1]);\n\t    var mod = parseFloat(parts[2]) || 0;\n\t    rng = rng || new RNG();\n\t    return function() {\n\t        var total = dice + mod;\n\t        for (var i = 0; i < dice; i++) {\n\t            total += rng.random(sides);\n\t        }\n\t        return total;\n\t    };\n\t};\n\t\n\t/* Provide a pre-made generator instance. */\n\tRNG.$ = new RNG();\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = TweenMax;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\nvarying float noise;\\nuniform float time;\\nuniform float strength;\\nuniform float seed;\\n\\n//\\n// GLSL textureless classic 3D noise \\\"cnoise\\\",\\n// with an RSL-style periodic variant \\\"pnoise\\\".\\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\\n// Version: 2011-10-11\\n//\\n// Many thanks to Ian McEwan of Ashima Arts for the\\n// ideas for permutation and gradient selection.\\n//\\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\\n// Distributed under the MIT license. See LICENSE file.\\n// https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_1_0(vec3 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_1_0(vec4 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_1_1(vec4 x)\\n{\\n  return mod289_1_0(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_1_2(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nvec3 fade_1_3(vec3 t) {\\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\\n}\\n\\n// Classic Perlin noise, periodic variant\\nfloat pnoise_1_4(vec3 P, vec3 rep)\\n{\\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\\n  Pi0 = mod289_1_0(Pi0);\\n  Pi1 = mod289_1_0(Pi1);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute_1_1(permute_1_1(ix) + iy);\\n  vec4 ixy0 = permute_1_1(ixy + iz0);\\n  vec4 ixy1 = permute_1_1(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt_1_2(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt_1_2(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade_1_3(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n  return 2.2 * n_xyz;\\n}\\n\\n\\n\\n\\nfloat turbulence( vec3 p ) {\\n    float w = 100.0;\\n    float t = -.5;\\n    for (float f = 1.0 ; f <= 10.0 ; f++ ){\\n        float power = pow( 2.0, f );\\n        t += abs( pnoise_1_4( vec3( power * p ), vec3( 10.0, 10.0, 10.0 ) ) / power );\\n    }\\n    return t;\\n}\\n\\nvoid main() {\\n    vUv = uv;\\n\\n    float time2 = time + seed;\\n\\n    // add time to the noise parameters so it's animated\\n    noise = 10.0 *  -.10 * turbulence( 10.5 * normal + time2 );\\n    float b = 5.0 * pnoise_1_4( 0.2 * position + vec3( 2.0 * time2 ), vec3( 100.0 ) );\\n    float displacement = - noise + b;\\n\\n    // Less displacement on center.\\n    displacement = displacement * vUv.x;\\n\\n    //vec3 newPosition = position + normal * displacement * strength * 30.0;\\n    //vec2 normal2 = normalize(uv - 0.5);\\n    vec3 normal2 = normalize(position - 0.5);\\n    float strengthMultiplier = 15.0;\\n    vec3 newPosition = position + vec3(normal2.x, normal2.y, 0.0) * displacement * strength * strengthMultiplier;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\\n}\\n\"\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nprecision highp float;\\n\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nfloat aastep_1_0(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\n\\n\\nvarying vec2 vUv;\\nuniform vec3 color;\\n\\nvoid main() {\\n  float alpha = 0.0;\\n  float wireframe_size = 0.04;\\n  float min_x = 0.3;\\n  float max_x = 1.0;\\n\\n  // If max is 1 then wireframe is is only half size.\\n  max_x = max_x * 0.9;\\n\\n  // Get distance from edges.\\n  vec2 edgeX = abs(vec2(vUv.x - min_x, vUv.x - max_x));\\n  // Add the wireframe.\\n  edgeX = max(vec2(0.0, 0.0), edgeX - wireframe_size);\\n\\n  // Get the smallest distance from edges.\\n  float distance_x = min(edgeX.x, edgeX.y);\\n\\n\\n  alpha = aastep_1_0(distance_x, 0.01);\\n\\n  // Add the fill alpha.\\n  if (vUv.x > min_x && vUv.x < max_x) {\\n    alpha = max(0.3, alpha);\\n  }\\n\\n  gl_FragColor = vec4( color, alpha );\\n  //vec3 k = vec3(1.0, 1.0, 1.0);\\n  //gl_FragColor = vec4( vec3( vUv, 0. ), 1. );\\n  //gl_FragColor = vec4( color, 1.0 );\\n}\\n\"\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedObject, Audio, Colors, RNG, ShaderFragement, ShaderVertex, THREE, TweenMax, _;\n\t  _ = __webpack_require__(12);\n\t  THREE = __webpack_require__(3);\n\t  RNG = __webpack_require__(40);\n\t  TweenMax = __webpack_require__(41);\n\t  Colors = __webpack_require__(38);\n\t  Audio = __webpack_require__(8);\n\t  ShaderVertex = __webpack_require__(42);\n\t  ShaderFragement = __webpack_require__(43);\n\t  return AnimatedObject = (function() {\n\t    AnimatedObject.circleGeom = new THREE.CircleGeometry(10, 30, 0, Math.PI * 2);\n\t\n\t    AnimatedObject.ringGeom = new THREE.RingGeometry(10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedObject.ringGeom2 = new THREE.RingGeometry(10 - 1, 10, 30, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedObject.properties = {\n\t      size: {\n\t        name: 'size',\n\t        label: 'size',\n\t        val: 80\n\t      },\n\t      outlineWidth: {\n\t        name: 'outlineWidth',\n\t        label: 'outline width',\n\t        val: 2\n\t      },\n\t      drawOutline: {\n\t        name: 'drawOutline',\n\t        label: 'draw outline',\n\t        val: true\n\t      },\n\t      drawCircle: {\n\t        name: 'drawCircle',\n\t        label: 'draw circle',\n\t        val: false\n\t      },\n\t      color: {\n\t        name: 'color',\n\t        label: 'color',\n\t        val: false\n\t      },\n\t      fillColor: {\n\t        name: 'fillColor',\n\t        label: 'fill color',\n\t        val: false\n\t      },\n\t      delay: {\n\t        name: 'delay',\n\t        label: 'delay',\n\t        val: 0\n\t      },\n\t      duration: {\n\t        name: 'duration',\n\t        label: 'duration',\n\t        val: 0.5\n\t      },\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      randRotZ: {\n\t        name: 'randRotZ',\n\t        label: 'random rotation z',\n\t        val: 0\n\t      },\n\t      randScaleX: {\n\t        name: 'randScaleX',\n\t        label: 'random scale x',\n\t        val: 0\n\t      },\n\t      randScaleY: {\n\t        name: 'randScaleY',\n\t        label: 'random scale y',\n\t        val: 0\n\t      }\n\t    };\n\t\n\t    function AnimatedObject(values, time) {\n\t      var key, prop, tween, _ref;\n\t      this.values = values != null ? values : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.renderOutline = __bind(this.renderOutline, this);\n\t      this.renderCircle = __bind(this.renderCircle, this);\n\t      _ref = AnimatedObject.properties;\n\t      for (key in _ref) {\n\t        prop = _ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      this.container = new THREE.Object3D();\n\t      this.container.scale.set(0.001, 0.001, 0.001);\n\t      this.container.position.set(this.values.x, this.values.y, this.values.z);\n\t      this.container.rotation.set(0, 0, this.values.randRotZ);\n\t      this.materials = [];\n\t      this.start = Date.now();\n\t      this.offset = new THREE.Vector3();\n\t      this.velocity = new THREE.Vector3();\n\t      this.weight = Math.random() * 0.5 + 0.5;\n\t      this.direction = new THREE.Vector3(Math.random() * 2 - 1, Math.random() * 2 - 1, 0);\n\t      this.speed = 0;\n\t      this.animatedProperties = {\n\t        scale: 0.001\n\t      };\n\t      this.timeline = new TimelineMax();\n\t      tween = TweenLite.to(this.animatedProperties, 0, {\n\t        scale: 0.00001,\n\t        ease: Linear.easeNone\n\t      });\n\t      this.timeline.add(tween, 0);\n\t      tween = TweenLite.to(this.animatedProperties, this.values.duration, {\n\t        scale: 1,\n\t        delay: this.values.delay,\n\t        ease: Cubic.easeOut\n\t      });\n\t      this.timeline.add(tween);\n\t      tween = TweenLite.to(this.animatedProperties, this.values.duration * 0.5, {\n\t        scale: 1,\n\t        ease: Cubic.easeOut\n\t      });\n\t      this.timeline.add(tween);\n\t      tween = TweenLite.to(this.animatedProperties, this.values.duration, {\n\t        scale: 0.00001,\n\t        ease: Cubic.easeIn\n\t      });\n\t      this.timeline.add(tween);\n\t      this.renderCircle(this.values.size, this.values.fillColor);\n\t    }\n\t\n\t    AnimatedObject.prototype.getGeometry = function() {\n\t      return AnimatedObject.circleGeom;\n\t    };\n\t\n\t    AnimatedObject.prototype.getGeometryOutline = function(outlineWidth) {\n\t      if (outlineWidth < 1) {\n\t        return AnimatedObject.ringGeom;\n\t      }\n\t      return AnimatedObject.ringGeom2;\n\t    };\n\t\n\t    AnimatedObject.prototype.destroy = function() {\n\t      var child, _i, _len, _ref;\n\t      this.timeline.clear();\n\t      _ref = this.container.children;\n\t      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n\t        child = _ref[_i];\n\t        this.container.remove(child);\n\t      }\n\t      return this.container = null;\n\t    };\n\t\n\t    AnimatedObject.prototype.getMaterial = function(color) {\n\t      var material, uniforms;\n\t      uniforms = {\n\t        time: {\n\t          type: 'f',\n\t          value: 0.0\n\t        },\n\t        seed: {\n\t          type: 'f',\n\t          value: Math.random() * 1000\n\t        },\n\t        strength: {\n\t          type: 'f',\n\t          value: 0.2\n\t        },\n\t        color: {\n\t          type: 'c',\n\t          value: color\n\t        }\n\t      };\n\t      material = new THREE.ShaderMaterial({\n\t        vertexShader: ShaderVertex,\n\t        fragmentShader: ShaderFragement,\n\t        uniforms: uniforms,\n\t        transparent: true,\n\t        depthWrite: false,\n\t        depthTest: false\n\t      });\n\t      material.blending = THREE.AdditiveBlending;\n\t      return material;\n\t    };\n\t\n\t    AnimatedObject.prototype.update = function(seconds, progression) {\n\t      var material, scale, timeDiff, _i, _len, _ref;\n\t      this.container.position.add(this.velocity);\n\t      this.velocity = this.velocity.multiplyScalar(0.94);\n\t      timeDiff = Date.now() - this.start;\n\t      _ref = this.materials;\n\t      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n\t        material = _ref[_i];\n\t        material.uniforms['time'].value = 0.00025 * timeDiff;\n\t        material.uniforms['strength'].value = window.audio.mid;\n\t      }\n\t      scale = this.animatedProperties.scale * this.values.size * 0.1;\n\t      return this.container.scale.set(scale * (1 + this.values.randScaleX), scale * (1 + this.values.randScaleY), scale);\n\t    };\n\t\n\t    AnimatedObject.prototype.renderCircle = function(size, color) {\n\t      var material, object;\n\t      material = this.getMaterial(color);\n\t      this.materials.push(material);\n\t      object = new THREE.Mesh(this.getGeometry(), material);\n\t      return this.container.add(object);\n\t    };\n\t\n\t    AnimatedObject.prototype.renderOutline = function(size, color, outlineWidth) {\n\t      var geom, material, object;\n\t      geom = this.getGeometryOutline(outlineWidth);\n\t      material = this.getMaterial(color);\n\t      this.materials.push(material);\n\t      object = new THREE.Mesh(geom, material);\n\t      return this.container.add(object);\n\t    };\n\t\n\t    return AnimatedObject;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;// Modified to have uv on the edges.\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var THREE = __webpack_require__(3);\n\t\n\tTHREE.CircleGeometry2 = function ( radius, segments, thetaStart, thetaLength ) {\n\t\n\t\tTHREE.Geometry.call( this );\n\t\n\t\tthis.type = 'CircleGeometry2';\n\t\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\t\n\t\tradius = radius || 50;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\t\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\t\n\t\tvar i, uvs = [],\n\t\tcenter = new THREE.Vector3(),\n\t  centerUV = new THREE.Vector2( 0, 0 );\n\t  //centerUV = new THREE.Vector2( 0.5, 0.5 );\n\t\n\t\tthis.vertices.push(center);\n\t\tuvs.push( centerUV );\n\t\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\t\n\t\t\tvar vertex = new THREE.Vector3();\n\t\t\tvar segment = thetaStart + i / segments * thetaLength;\n\t\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\t\n\t\t\tthis.vertices.push( vertex );\n\t\t\t//uvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\n\t\n\t    uvs.push(new THREE.Vector2(1, i / segments));\n\t\t}\n\t\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\n\t\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\t\n\t\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\t//this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\n\t    this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), new THREE.Vector2(0, i / segments) ] );\n\t\n\t\t}\n\t\n\t\tthis.computeFaceNormals();\n\t\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\t\n\t};\n\t\n\tTHREE.CircleGeometry2.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.CircleGeometry2.prototype.constructor = THREE.CircleGeometry2;\n\t\n\treturn THREE.CircleGeometry2;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Seedable random number generator functions.\n\t * @version 1.0.0\n\t * @license Public Domain\n\t *\n\t * @example\n\t * var rng = new RNG('Example');\n\t * rng.random(40, 50);  // =>  42\n\t * rng.uniform();       // =>  0.7972798995050903\n\t * rng.normal();        // => -0.6698504543216376\n\t * rng.exponential();   // =>  1.0547367609131555\n\t * rng.poisson(4);      // =>  2\n\t * rng.gamma(4);        // =>  2.781724687386858\n\t */\n\t\n\t/**\n\t * @param {String} seed A string to seed the generator.\n\t * @constructor\n\t */\n\tfunction RC4(seed) {\n\t    this.s = new Array(256);\n\t    this.i = 0;\n\t    this.j = 0;\n\t    for (var i = 0; i < 256; i++) {\n\t        this.s[i] = i;\n\t    }\n\t    if (seed) {\n\t        this.mix(seed);\n\t    }\n\t}\n\t\n\t/**\n\t * Get the underlying bytes of a string.\n\t * @param {string} string\n\t * @returns {Array} An array of bytes\n\t */\n\tRC4.getStringBytes = function(string) {\n\t    var output = [];\n\t    for (var i = 0; i < string.length; i++) {\n\t        var c = string.charCodeAt(i);\n\t        var bytes = [];\n\t        do {\n\t            bytes.push(c & 0xFF);\n\t            c = c >> 8;\n\t        } while (c > 0);\n\t        output = output.concat(bytes.reverse());\n\t    }\n\t    return output;\n\t};\n\t\n\tRC4.prototype._swap = function(i, j) {\n\t    var tmp = this.s[i];\n\t    this.s[i] = this.s[j];\n\t    this.s[j] = tmp;\n\t};\n\t\n\t/**\n\t * Mix additional entropy into this generator.\n\t * @param {String} seed\n\t */\n\tRC4.prototype.mix = function(seed) {\n\t    var input = RC4.getStringBytes(seed);\n\t    var j = 0;\n\t    for (var i = 0; i < this.s.length; i++) {\n\t        j += this.s[i] + input[i % input.length];\n\t        j %= 256;\n\t        this._swap(i, j);\n\t    }\n\t};\n\t\n\t/**\n\t * @returns {number} The next byte of output from the generator.\n\t */\n\tRC4.prototype.next = function() {\n\t    this.i = (this.i + 1) % 256;\n\t    this.j = (this.j + this.s[this.i]) % 256;\n\t    this._swap(this.i, this.j);\n\t    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n\t};\n\t\n\t/**\n\t * Create a new random number generator with optional seed. If the\n\t * provided seed is a function (i.e. Math.random) it will be used as\n\t * the uniform number generator.\n\t * @param seed An arbitrary object used to seed the generator.\n\t * @constructor\n\t */\n\tfunction RNG(seed) {\n\t    if (seed == null) {\n\t        seed = (Math.random() + Date.now()).toString();\n\t    } else if (typeof seed === \"function\") {\n\t        // Use it as a uniform number generator\n\t        this.uniform = seed;\n\t        this.nextByte = function() {\n\t            return ~~(this.uniform() * 256);\n\t        };\n\t        seed = null;\n\t    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n\t        seed = JSON.stringify(seed);\n\t    }\n\t    this._normal = null;\n\t    if (seed) {\n\t        this._state = new RC4(seed);\n\t    } else {\n\t        this._state = null;\n\t    }\n\t}\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 255.\n\t */\n\tRNG.prototype.nextByte = function() {\n\t    return this._state.next();\n\t};\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 1.\n\t */\n\tRNG.prototype.uniform = function() {\n\t    var BYTES = 7; // 56 bits to make a 53-bit double\n\t    var output = 0;\n\t    for (var i = 0; i < BYTES; i++) {\n\t        output *= 256;\n\t        output += this.nextByte();\n\t    }\n\t    return output / (Math.pow(2, BYTES * 8) - 1);\n\t};\n\t\n\t/**\n\t * Produce a random integer within [n, m).\n\t * @param {number} [n=0]\n\t * @param {number} m\n\t *\n\t */\n\tRNG.prototype.random = function(n, m) {\n\t    if (n == null) {\n\t        return this.uniform();\n\t    } else if (m == null) {\n\t        m = n;\n\t        n = 0;\n\t    }\n\t    return n + Math.floor(this.uniform() * (m - n));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() with the Box-Muller transform.\n\t * @returns {number} Normally-distributed random number of mean 0, variance 1.\n\t */\n\tRNG.prototype.normal = function() {\n\t    if (this._normal !== null) {\n\t        var n = this._normal;\n\t        this._normal = null;\n\t        return n;\n\t    } else {\n\t        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n\t        var y = this.uniform();\n\t        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n\t        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n\t    }\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform().\n\t * @returns {number} Number from the exponential distribution, lambda = 1.\n\t */\n\tRNG.prototype.exponential = function() {\n\t    return -Math.log(this.uniform() || Math.pow(2, -53));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() and Knuth's method.\n\t * @param {number} [mean=1]\n\t * @returns {number} Number from the Poisson distribution.\n\t */\n\tRNG.prototype.poisson = function(mean) {\n\t    var L = Math.exp(-(mean || 1));\n\t    var k = 0, p = 1;\n\t    do {\n\t        k++;\n\t        p *= this.uniform();\n\t    } while (p > L);\n\t    return k - 1;\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform(), this.normal(),\n\t * this.exponential(), and the Marsaglia-Tsang method.\n\t * @param {number} a\n\t * @returns {number} Number from the gamma distribution.\n\t */\n\tRNG.prototype.gamma = function(a) {\n\t    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n\t    var c = 1 / Math.sqrt(9 * d);\n\t    do {\n\t        do {\n\t            var x = this.normal();\n\t            var v = Math.pow(c * x + 1, 3);\n\t        } while (v <= 0);\n\t        var u = this.uniform();\n\t        var x2 = Math.pow(x, 2);\n\t    } while (u >= 1 - 0.0331 * x2 * x2 &&\n\t             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n\t    if (a < 1) {\n\t        return d * v * Math.exp(this.exponential() / -a);\n\t    } else {\n\t        return d * v;\n\t    }\n\t};\n\t\n\t/**\n\t * Accepts a dice rolling notation string and returns a generator\n\t * function for that distribution. The parser is quite flexible.\n\t * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n\t * @param {RNG} rng An optional RNG object.\n\t * @returns {Function}\n\t */\n\tRNG.roller = function(expr, rng) {\n\t    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n\t    var dice = parseFloat(parts[0]) || 1;\n\t    var sides = parseFloat(parts[1]);\n\t    var mod = parseFloat(parts[2]) || 0;\n\t    rng = rng || new RNG();\n\t    return function() {\n\t        var total = dice + mod;\n\t        for (var i = 0; i < dice; i++) {\n\t            total += rng.random(sides);\n\t        }\n\t        return total;\n\t    };\n\t};\n\t\n\t/* Provide a pre-made generator instance. */\n\tRNG.$ = new RNG();\n\t\n\t\n\t/*** EXPORTS FROM exports-loader ***/\n\tmodule.exports = RNG\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** App.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 36a44615669f216c71d7\n **/","# green: 567c6d\n# yellow: e2cb7b\n# brownish: cbad7b\n# red: af1925\n# pink: ddb3b4\n# purple: 715160\n# blue: 406872\n\n\ndefine (require) ->\n  THREE = require 'Three'\n\n  TweenTime = require 'TweenTime'\n\n  Background = require 'app/components/Background'\n  PostFX = require 'app/components/PostFX'\n  SceneManager = require 'app/components/SceneManager'\n  Audio = require 'app/components/Audio'\n  ElementFactory = require 'app/components/ElementFactory'\n  DataNormalizer = require 'app/components/DataNormalizer'\n\n  dataJson = require 'raw!app/data.json'\n\n  #Circles = require 'app/elements/Circles'\n\n  #Particles = require 'app/elements/Particles'\n\n  window.App = class App\n    constructor: () ->\n      window.updateCameraAspect = @updateCameraAspect\n\n      audio_url = './assets/08 - Space Tron On The Grid.mp3'\n      @audio = new Audio(audio_url, @onAudioLoaded)\n      @factory = new ElementFactory()\n\n      # Convert loaded data\n      conf = JSON.parse(dataJson)\n      console.log conf\n      @settings = conf.settings\n      @data = DataNormalizer.normalizeData(conf.data, @factory)\n\n      @tweenTime = new TweenTime(@data)\n      @tweenTime.timer.statusChanged.add(@onTimerStatusChanged)\n      @tweenTime.timer.seeked.add(@onTimerSeeked)\n\n      size = @getScreenSize()\n      @camera = new THREE.PerspectiveCamera( 45, size.width / size.height, 1, 2000 )\n      @camera.position.z = 600\n      window.activeCamera = @camera\n\n      @scene = new THREE.Scene()\n      #@orchestrator = new Orchestrator(@timer, @data, @scene, @camera)\n      @sceneManager = new SceneManager(@tweenTime, @data, @scene, @camera, @factory)\n\n      @time = Date.now() * 0.0001\n      container = document.createElement( 'div' )\n      @containerWebgl = container # Save for use in EditorUI for object picking.\n      document.body.appendChild( container )\n\n      @renderer = new THREE.WebGLRenderer( { antialias: false, alpha: false } )\n      @renderer.setSize(size.width, size.height)\n\n      #@renderer.setClearColor( 0xe1d8c7, 1)\n      @renderer.setClearColor( 0x111111, 1)\n\n      #circles = new Circles(@scene, 10, 4323, 130, 20, 50)\n      #circles2 = new Circles(@scene, 20, 51232, 180, 4, 10)\n\n      @createElements()\n\n      container.appendChild( @renderer.domElement )\n\n      window.addEventListener('resize', @onWindowResize, false)\n\n      @postfx = new PostFX(@scene, @camera, @renderer, size)\n      #new Background(@scene)\n\n      #@particles = new Particles()\n      #@scene.add(@particles.container)\n\n      @animate()\n\n    onTimerStatusChanged: (is_playing) =>\n      if is_playing\n        @audio.play()\n      else\n        @audio.pause()\n\n    onTimerSeeked: (time) =>\n      @audio.seek(time / 1000)\n\n    onAudioLoaded: () =>\n      console.log \"audio loaded\"\n      $('body').addClass('is-audio-loaded')\n\n    createElements: () ->\n      material = new THREE.MeshPhongMaterial({color: 0x111111, specular: 0x666666, shininess: 30, shading: THREE.SmoothShading})\n      #material.blending = THREE.AdditiveBlending\n\n      object = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2000, 650, 1, 1 ), material )\n      object.position.set( 420, 0, -350 )\n      object.rotation.set(0.1, 0.8, 0.7)\n      @scene.add( object )\n\n      object2 = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2000, 650, 1, 1 ), material )\n      object2.position.set( 320, 0, -450 )\n      object2.rotation.set(0.17, 0.85, 0.78)\n      @scene.add( object2 )\n\n      object3 = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2000, 650, 1, 1 ), material )\n      object3.position.set( -120, -600, -950 )\n      object3.rotation.set(0.17, 0.35, -0.38)\n      @scene.add( object3 )\n\n      light1 = new THREE.PointLight( 0xffffff, 3, 1400 )\n      light1.position.set(100, 300, 200)\n      @scene.add(light1)\n\n\n    __createElementsBackup: () ->\n      #material = new THREE.MeshBasicMaterial( { color: 0xffffff, side: THREE.DoubleSide } )\n      #material = new THREE.MeshBasicMaterial({color: 0xaf1925, transparent: true})\n      material = new THREE.MeshBasicMaterial({color: 0xd7888e, transparent: true})\n      material.blending = THREE.MultiplyBlending\n\n      materialBlack = new THREE.MeshBasicMaterial({color: 0x222222, transparent: true, wireframe: false})\n      materialBlack.blending = THREE.MultiplyBlending\n\n      material2 = new THREE.MeshBasicMaterial({color: 0x406872, transparent: true})\n      material2.blending = THREE.MultiplyBlending\n\n      object = new THREE.Mesh( new THREE.CircleGeometry( 50, 50, 0, Math.PI * 2 ), material )\n      #object = new THREE.Mesh( new THREE.BoxGeometry(30, 30, 30 , 2, 2, 2), material )\n      object.position.set( 20, 0, 0 )\n      #object.rotation.set(Math.PI / -2, 0, 0)\n      @scene.add( object )\n\n      object = new THREE.Mesh( new THREE.RingGeometry( 43, 50, 50, 1, 0, Math.PI * 2 ), materialBlack )\n      #object = new THREE.Mesh( new THREE.BoxGeometry(30, 30, 30 , 2, 2, 2), material )\n      object.position.set( 20, 0, 0 )\n      #object.rotation.set(Math.PI / -2, 0, 0)\n      @scene.add( object )\n\n      #object = new THREE.Mesh( new THREE.SphereGeometry( 75, 20, 10 ), material );\n      #object = new THREE.Mesh( new THREE.PlaneGeometry( 100, 100, 2, 2 ), material2 );\n      object = new THREE.Mesh( new THREE.RingGeometry( 40, 50, 4, 1, 0, Math.PI * 2 ), material2 );\n      object.position.set( -20, 0, 0 );\n      object.rotation.set(0, 0, Math.PI / 4)\n      @scene.add( object )\n\n    getScreenSize: () ->\n      SCREEN_WIDTH = window.innerWidth\n      SCREEN_HEIGHT = window.innerHeight\n      if window.editorEnabled\n        timelineheight = 295\n        if $('body').hasClass('timeline-is-closed') then timelineheight = 95\n        propertieswidth = 279\n        if $('body').hasClass('properties-is-closed') then propertieswidth = 0\n        SCREEN_HEIGHT -= timelineheight\n        SCREEN_WIDTH -= propertieswidth\n\n      #console.log {width: SCREEN_WIDTH, height: SCREEN_HEIGHT}\n      return {width: SCREEN_WIDTH, height: SCREEN_HEIGHT}\n\n    updateCameraAspect: (camera, size = false) =>\n      if size == false\n        size = @getScreenSize()\n      camera.aspect = size.width / size.height\n      camera.updateProjectionMatrix()\n\n    onWindowResize: () =>\n      size = @getScreenSize()\n\n      @updateCameraAspect(@camera, size)\n      @updateCameraAspect(window.activeCamera, size)\n\n      @renderer.setSize(size.width, size.height)\n      @postfx.resize(size.width, size.height)\n\n    animate: () =>\n      requestAnimationFrame(@animate)\n      @audio.update()\n      @render()\n\n    render: () ->\n      newTime = Date.now() * 0.0001\n      delta = newTime - @time\n\n      if @particles then @particles.update()\n      @camera.lookAt( @scene.position )\n      @postfx.render(delta)\n\n      @time = newTime\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/App.coffee\n **/","module.exports = THREE;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"THREE\"\n ** module id = 3\n ** module chunks = 1\n **/","module.exports = TweenTime.Core;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"TweenTime.Core\"\n ** module id = 4\n ** module chunks = 1\n **/","define (require) ->\n  THREE = require 'Three'\n\n  class Background\n    constructor: (@scene) ->\n      texture = THREE.ImageUtils.loadTexture('src/images/background.jpg')\n      texture.wrapS = texture.wrapT = THREE.RepeatWrapping\n      texture.repeat.set( 2, 2 )\n      bgMat = new THREE.MeshBasicMaterial({map: texture})\n      bg = new THREE.Mesh(new THREE.PlaneGeometry(1600, 1600, 4, 4), bgMat)\n      bg.material.depthTest = false\n      bg.material.depthWrite = false\n      bg.position.set(0, 0, -10)\n      @scene.add(bg)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/Background.coffee\n **/","define (require) ->\n  THREE = require 'Three'\n\n  require 'vendors/three.js-extras/postprocessing/EffectComposer'\n  require 'vendors/three.js-extras/postprocessing/MaskPass'\n  require 'vendors/three.js-extras/postprocessing/BloomPass'\n  require 'vendors/three.js-extras/postprocessing/ShaderPass'\n  require 'vendors/three.js-extras/postprocessing/RenderPass'\n  require 'vendors/three.js-extras/postprocessing/FilmPass'\n  require 'app/postprocessing/GlitchPass2'\n\n  require 'vendors/three.js-extras/shaders/CopyShader'\n  require 'vendors/three.js-extras/shaders/FXAAShader'\n  require 'vendors/three.js-extras/shaders/FilmShader'\n  require 'vendors/three.js-extras/shaders/ConvolutionShader'\n  require 'vendors/three.js-extras/shaders/VignetteShader'\n  require 'app/shaders/DigitalGlitch2'\n\n  class PostFX\n    constructor: (@scene, @camera, @renderer, size) ->\n      @renderer.autoClear = false\n\n      renderModel = new THREE.RenderPass( @scene, @camera )\n      # There will only be 1 rendermodel and we need to be able\n      # to swith camera from the orchestrator.\n      window.renderModel = renderModel\n\n      dpr = if window.devicePixelRatio? then window.devicePixelRatio else 1\n\n      @renderTargetParameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBufer: false }\n      @renderTarget = new THREE.WebGLRenderTarget(size.width * dpr, size.height * dpr, @renderTargetParameters)\n\n      @effectFXAA = new THREE.ShaderPass( THREE.FXAAShader )\n      @effectFXAA.uniforms[ 'resolution' ].value.set(1 / (size.width * dpr), 1 / (size.height * dpr))\n\n      @bloom = new THREE.BloomPass(0.6, 25, 4)\n\n      @glitchPass = new THREE.GlitchPass2()\n      @glitchPass.intensity = 0.3;\n      @glitchPass.uniforms.tScratch.value = THREE.ImageUtils.loadTexture( \"src/images/lensflare_dirt.jpg\" )\n\n      @vignettePass = new THREE.ShaderPass(THREE.VignetteShader)\n      @vignettePass.uniforms['darkness'].value = 2\n\n      @filmShader = new THREE.FilmPass( 0.34, 0.01, 648, false )\n      @filmShader.renderToScreen = true\n\n      @composer = new THREE.EffectComposer( @renderer, @renderTarget )\n      @composer.setSize(size.width * dpr, size.height * dpr)\n      @composer.addPass( renderModel )\n      #@composer.addPass( @effectFXAA )\n      @composer.addPass( @bloom )\n      #@composer.addPass( @glitchPass )\n      @composer.addPass( @vignettePass )\n      @composer.addPass( @filmShader )\n\n    resize: (SCREEN_WIDTH, SCREEN_HEIGHT) ->\n      dpr = if window.devicePixelRatio? then window.devicePixelRatio else 1\n      #@composer.setSize(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr)\n      @renderTarget = new THREE.WebGLRenderTarget(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr, @renderTargetParameters)\n      @composer.reset(@renderTarget)\n      @effectFXAA.uniforms[ 'resolution' ].value.set(1 / (SCREEN_WIDTH * dpr), 1 / (SCREEN_HEIGHT * dpr))\n\n    render: (delta) ->\n      @renderer.clear()\n      @composer.render(delta)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/PostFX.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  Signals = require 'js-signals'\n\n  class SceneManager\n    constructor: (@tweenTime, @data, @scene, @defaultCamera, @factory) ->\n      @timer = @tweenTime.timer\n      @timer.updated.add(@update)\n      @update(0)\n\n    update: (timestamp) =>\n      activeCamera = @defaultCamera\n      seconds = timestamp / 1000\n\n      for item in @data\n        should_exist = if seconds >= item.start && seconds <= item.end then true else false\n\n        # Remove the item\n        if (item.object && should_exist == false) || item.isDirtyObject\n          item.isDirtyObject = false\n          if item.object\n            @scene.remove(item.object.container)\n            item.object.destroy()\n            delete item.object\n\n        # Assign the object class to be able to access all object properties in propertiesEditor\n        if !item.classObject then item.classObject = @factory.getTypeClass(item.type)\n\n        # If object doesn't exist skip the update.\n        if should_exist == false then continue\n\n        # Create the item\n        if should_exist && !item.object\n          type = item.type\n          el = @factory.create(type, item.values, seconds - item.start)\n          @scene.add(el.container)\n          # Save reference to the custom object class in data\n          item.object = el\n          # And a reference to the data from the 3d container\n          el.container._data = item\n\n        # If this is a camera set it as the active camera.\n        if item.object && item.object.isCamera\n          activeCamera = item.object.container\n          window.updateCameraAspect(activeCamera)\n\n        # Update the item\n        if item.object then item.object.update(seconds - item.start, item.values)\n\n      # Set correct camera\n      window.activeCamera = activeCamera\n      if window.renderModel\n        window.renderModel.camera = activeCamera\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/SceneManager.coffee\n **/","#https://github.com/geluso/delight/commit/2575886522227c34c0d3d77f795f5d00acce284b\ndefine (require) ->\n  _ = require 'lodash'\n\n  class Audio\n    @instance = false\n\n    constructor: (mp3Url, @onLoadedCallback) ->\n      window.audio = this\n      muted = true\n      @fftSize = 512\n      @filters = {}\n      @playing = false\n      @now = 0.0\n      @timeDelay = 0.0\n\n      @bass = 0\n      @mid = 0\n      @high = 0\n\n      @context = false\n      if typeof AudioContext != \"undefined\"\n        @context = new AudioContext()\n      else if typeof webkitAudioContext != \"undefined\"\n        @context = new webkitAudioContext()\n\n      # create analyser\n      @analyser = @context.createAnalyser()\n      @analyser.fftSize = @fftSize\n\n      @source = @context.createBufferSource()\n\n      # create bass/mid/treble filters\n      parameters =\n        bass:\n          type: 0 #lowpass\n          frequency: 120\n          Q: 1.2\n          gain: 2.0\n        mid:\n          type: 2 #bandpass\n          frequency: 400\n          Q: 1.2\n          gain: 4.0\n        treble:\n          type: 1 #highpass\n          frequency: 2000\n          Q: 1.2\n          gain: 3.0\n      _.each parameters, (spec, key) =>\n        filter = @context.createBiquadFilter()\n        filter.key = key\n        filter.type = spec.type\n        filter.frequency = spec.frequency\n        filter.Q.value = spec.Q\n\n        # create analyser for filtered signal\n        filter.analyser = @context.createAnalyser()\n        filter.analyser.fftSize = @fftSize\n\n        # create delay to compensate fftSize lag\n        if @context.createDelay?\n          filter.delayNode = @context.createDelay()\n        else\n          filter.delayNode = @context.createDelayNode()\n        filter.delayNode.delayTime.value = 0\n\n        # create gain node to offset filter loss\n        if @context.createGain?\n          filter.gainNode = @context.createGain()\n        else\n          filter.gainNode = @context.createGainNode()\n        filter.gainNode.gain.value = spec.gain\n\n        @filters[key] = filter\n\n      # create delay to compensate fftSize lag\n      if @context.createDelay?\n        @delay = @context.createDelay()\n      else\n        @delay = @context.createDelayNode()\n      @delay.delayTime.value = @fftSize * 2 / @context.sampleRate\n\n      # connect audio processing pipe\n      @source.connect(@analyser)\n      @analyser.connect(@delay)\n\n\n      if muted\n        gain2 = @context.createGain()\n        @delay.connect(gain2)\n        gain2.gain.value = 0.00\n        gain2.connect(@context.destination)\n      else\n        @delay.connect(@context.destination)\n\n      # connect secondary filters + analysers + gain\n      _.each @filters, (filter) =>\n        @source.connect(filter.delayNode)\n        filter.delayNode.connect(filter)\n        filter.connect(filter.gainNode)\n        filter.gainNode.connect(filter.analyser)\n\n      # create buffers for time/freq data\n      @samples = @analyser.frequencyBinCount\n      @data =\n        freq: new Uint8Array(@samples)\n        time: new Uint8Array(@samples)\n        filter:\n          bass: new Uint8Array(256)\n          mid: new Uint8Array(256)\n          treble: new Uint8Array(256)\n\n      @load(mp3Url)\n\n      # i know, ....\n      Audio.instance = this\n\n    update: () =>\n      if @playing == false then return\n      @analyser.smoothingTimeConstant = 0\n      @analyser.getByteFrequencyData(@data.freq)\n      @analyser.getByteTimeDomainData(@data.time)\n\n      _.each @filters, (filter) =>\n        filter.analyser.getByteTimeDomainData(@data.filter[filter.key])\n\n      # calculate rms\n      bins = [0, 0, 0, 0]\n      waveforms = [@data.time, @data.filter.bass, @data.filter.mid, @data.filter.treble]\n      for num in [0..3]\n        bins[num] = @rms(waveforms[num])\n      @bass = bins[1]\n      @mid = bins[2]\n      @high = bins[3]\n\n      @now = @context.currentTime - @timeDelay\n\n    seek: (seconds) =>\n      @now = seconds\n      #@context.currentTime = @now\n\n      if @source.buffer\n        #@source.noteOn(0)\n        if @playing\n          @pause()\n          @play()\n          #@source.stop(0)\n          #@source.start(0, @now, @buffer.duration - @now)\n\n\n    load: (url) =>\n      request = new XMLHttpRequest()\n      request.open(\"GET\", url, true)\n      request.responseType = \"arraybuffer\"\n\n      request.onload = () =>\n        #@buffer = @context.createBuffer(request.response, false)\n        @context.decodeAudioData request.response, (buff) =>\n          @buffer = buff\n          @source.buffer = @buffer\n          @source.loop = false\n          if @onLoadedCallback then @onLoadedCallback()\n          #@play()\n\n      request.send()\n\n    createSound: () =>\n      src = @context.createBufferSource()\n      if @buffer\n        src.buffer = @buffer\n      src.connect(@analyser)\n      _.each @filters, (filter) =>\n        src.connect(filter.delayNode)\n      return src\n\n    pause: () =>\n      if @source\n        if @playing\n          @source.stop(0)\n        @source.disconnect(0)\n        @source = false\n      @playing = false\n\n    play: () =>\n      @playing = true\n      @timeDelay = @context.currentTime - @now\n      #console.log @now\n      if !@source\n        @source = @createSound()\n      if @source.buffer\n        #@source.noteOn(0)\n        @source.start(0, @now, @buffer.duration - @now)\n\n\n    rms: (data) =>\n      size = data.length\n      accum = 0\n      for num in [0..size - 1]\n        s = (data[num] - 128) / 128\n        accum += s * s\n      return Math.sqrt(accum / size)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/Audio.coffee\n **/","define (require) ->\n  Camera = require 'app/elements/Camera'\n  Circles = require 'app/elements/Circles'\n  Boxes = require 'app/elements/Boxes'\n  Lines = require 'app/elements/Lines'\n\n  SingleObject = require 'app/elements/SingleObject'\n  Circle = require 'app/elements/Circle'\n\n  extend = (object, properties) ->\n    for key, val of properties\n      if typeof(object[key]) == 'object' && object[key] != null\n        object[key] = extend({}, val)\n      else\n        object[key] = val\n    object\n\n  class ElementFactory\n    @elements:\n      Circles:\n        classObject: Circles\n      Boxes:\n        classObject: Boxes\n      Lines:\n        classObject: Lines\n      Camera:\n        classObject: Camera\n      Box:\n        classObject: SingleObject\n      Circle:\n        classObject: Circle\n\n    getTypeClass: (itemType) =>\n      ElementFactory.elements[itemType].classObject\n\n    @getTypeProperties: (itemName) =>\n      item = ElementFactory.elements[itemName]\n      if item\n        element_class = item.classObject\n        if element_class\n          properties = []\n          for key, prop_definition of item.classObject.properties\n            prop = extend({}, prop_definition)\n            prop.keys = []\n            properties.push(prop)\n          console.log properties\n          return properties\n      return\n\n    create: (itemName, values, time) ->\n      item = ElementFactory.elements[itemName]\n      if !item\n        console.warn(\"Can't create item: \" + itemName)\n        return false\n\n      return new item.classObject(values)\n\n  window.ElementFactory = ElementFactory\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/ElementFactory.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  ElementFactory = require 'app/components/ElementFactory'\n\n  class DataNormalizer\n    @normalizeItem = (data_item, factory) ->\n      if !data_item.classObject\n        data_item.classObject = factory.getTypeClass(data_item.type)\n      static_properties = data_item.classObject.properties\n      if !static_properties then return\n      for key, static_prop of static_properties\n        existing_prop = _.find(data_item.properties, (prop) -> prop.name == static_prop.name)\n        if !existing_prop\n          new_prop = {}\n          # clone static prop in new_prop\n          for key2, value2 of static_prop\n            new_prop[key2] = value2\n\n          new_prop.keys = []\n          data_item.properties.push(new_prop)\n      return data_item\n\n    @normalizeData = (data, factory) ->\n      data = _.map(data, (item) ->\n        DataNormalizer.normalizeItem(item, factory)\n      )\n      return data\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/DataNormalizer.coffee\n **/","module.exports = \"{\\n  \\\"settings\\\": {\\n    \\\"time\\\": 0,\\n    \\\"duration\\\": 240,\\n    \\\"domain\\\": [\\n      0,\\n      20000\\n    ]\\n  },\\n  \\\"data\\\": [\\n    {\\n      \\\"id\\\": \\\"item1\\\",\\n      \\\"type\\\": \\\"Circles\\\",\\n      \\\"label\\\": \\\"Test circles\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 2,\\n      \\\"collapsed\\\": true,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"progression\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 0,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 1.3379999999999999,\\n              \\\"val\\\": 1\\n            },\\n            {\\n              \\\"time\\\": 2,\\n              \\\"val\\\": 2\\n            }\\n          ]\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"val\\\": 2\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"val\\\": 8464\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randX\\\",\\n          \\\"val\\\": 84\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randY\\\",\\n          \\\"val\\\": 84\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadius\\\",\\n          \\\"val\\\": 20\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadiusMax\\\",\\n          \\\"val\\\": 20\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"percent_color\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"randZ\\\",\\n          \\\"label\\\": \\\"random z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randRotZ\\\",\\n          \\\"label\\\": \\\"random rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleX\\\",\\n          \\\"label\\\": \\\"random scale x\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleY\\\",\\n          \\\"label\\\": \\\"random scale y\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotX\\\",\\n          \\\"label\\\": \\\"rotation x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotY\\\",\\n          \\\"label\\\": \\\"rotation y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotZ\\\",\\n          \\\"label\\\": \\\"rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"progression\\\": 0,\\n        \\\"numItems\\\": 2,\\n        \\\"seed\\\": 8464,\\n        \\\"randX\\\": 84,\\n        \\\"randY\\\": 84,\\n        \\\"circleRadius\\\": 20,\\n        \\\"circleRadiusMax\\\": 20,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 0,\\n        \\\"depth\\\": 0,\\n        \\\"percent_color\\\": 0,\\n        \\\"randZ\\\": 0,\\n        \\\"randRotZ\\\": 0,\\n        \\\"randScaleX\\\": 0,\\n        \\\"randScaleY\\\": 0,\\n        \\\"rotX\\\": 0,\\n        \\\"rotY\\\": 0,\\n        \\\"rotZ\\\": 0\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"item2\\\",\\n      \\\"type\\\": \\\"Circles\\\",\\n      \\\"label\\\": \\\"Circles 2\\\",\\n      \\\"start\\\": 0.793,\\n      \\\"end\\\": 4.800000000000006,\\n      \\\"collapsed\\\": true,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"progression\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 1.021,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 1.9579999999999993,\\n              \\\"val\\\": 1\\n            },\\n            {\\n              \\\"time\\\": 2.2789999999999995,\\n              \\\"val\\\": 1\\n            },\\n            {\\n              \\\"time\\\": 4.435000000000008,\\n              \\\"val\\\": 0\\n            }\\n          ]\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"val\\\": 5\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"val\\\": -456453\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randX\\\",\\n          \\\"val\\\": 265\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randY\\\",\\n          \\\"val\\\": 265\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadius\\\",\\n          \\\"val\\\": 3\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadiusMax\\\",\\n          \\\"val\\\": 50\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 70\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"percent_color\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"randZ\\\",\\n          \\\"label\\\": \\\"random z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randRotZ\\\",\\n          \\\"label\\\": \\\"random rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleX\\\",\\n          \\\"label\\\": \\\"random scale x\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleY\\\",\\n          \\\"label\\\": \\\"random scale y\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotX\\\",\\n          \\\"label\\\": \\\"rotation x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotY\\\",\\n          \\\"label\\\": \\\"rotation y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotZ\\\",\\n          \\\"label\\\": \\\"rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"progression\\\": 0,\\n        \\\"numItems\\\": 5,\\n        \\\"seed\\\": -456453,\\n        \\\"randX\\\": 265,\\n        \\\"randY\\\": 265,\\n        \\\"circleRadius\\\": 3,\\n        \\\"circleRadiusMax\\\": 50,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 70,\\n        \\\"depth\\\": 0,\\n        \\\"percent_color\\\": 0,\\n        \\\"randZ\\\": 0,\\n        \\\"randRotZ\\\": 0,\\n        \\\"randScaleX\\\": 0,\\n        \\\"randScaleY\\\": 0,\\n        \\\"rotX\\\": 0,\\n        \\\"rotY\\\": 0,\\n        \\\"rotZ\\\": 0\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"item3\\\",\\n      \\\"type\\\": \\\"Circles\\\",\\n      \\\"label\\\": \\\"Circles 3\\\",\\n      \\\"start\\\": 4.514,\\n      \\\"end\\\": 12.172,\\n      \\\"collapsed\\\": true,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"progression\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 4.7250000000000005,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 5.614999999999998,\\n              \\\"val\\\": 0.5\\n            },\\n            {\\n              \\\"time\\\": 11.668999999999995,\\n              \\\"val\\\": 0\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"val\\\": 100,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 4.795000000000001,\\n              \\\"val\\\": 100\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 5.110000000000001,\\n              \\\"val\\\": 0\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 120,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"val\\\": 5\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"val\\\": 12002\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randX\\\",\\n          \\\"val\\\": 80\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randY\\\",\\n          \\\"val\\\": 80\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadius\\\",\\n          \\\"val\\\": 20\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadiusMax\\\",\\n          \\\"val\\\": 20\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"percent_color\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"randZ\\\",\\n          \\\"label\\\": \\\"random z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randRotZ\\\",\\n          \\\"label\\\": \\\"random rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleX\\\",\\n          \\\"label\\\": \\\"random scale x\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleY\\\",\\n          \\\"label\\\": \\\"random scale y\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotX\\\",\\n          \\\"label\\\": \\\"rotation x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotY\\\",\\n          \\\"label\\\": \\\"rotation y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotZ\\\",\\n          \\\"label\\\": \\\"rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"progression\\\": 0,\\n        \\\"x\\\": 100,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 120,\\n        \\\"numItems\\\": 5,\\n        \\\"seed\\\": 12002,\\n        \\\"randX\\\": 80,\\n        \\\"randY\\\": 80,\\n        \\\"circleRadius\\\": 20,\\n        \\\"circleRadiusMax\\\": 20,\\n        \\\"depth\\\": 0,\\n        \\\"percent_color\\\": 0,\\n        \\\"randZ\\\": 0,\\n        \\\"randRotZ\\\": 0,\\n        \\\"randScaleX\\\": 0,\\n        \\\"randScaleY\\\": 0,\\n        \\\"rotX\\\": 0,\\n        \\\"rotY\\\": 0,\\n        \\\"rotZ\\\": 0\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"item4\\\",\\n      \\\"type\\\": \\\"Circles\\\",\\n      \\\"label\\\": \\\"Circles 4\\\",\\n      \\\"start\\\": 5.235,\\n      \\\"end\\\": 11.328,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"val\\\": 5\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"val\\\": 1325\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randX\\\",\\n          \\\"val\\\": 150\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"randY\\\",\\n          \\\"val\\\": 150\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadius\\\",\\n          \\\"val\\\": 10\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"circleRadiusMax\\\",\\n          \\\"val\\\": 20\\n        },\\n        {\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 5.235,\\n              \\\"val\\\": 0\\n            },\\n            {\\n              \\\"time\\\": 6.085000000000001,\\n              \\\"val\\\": 1\\n            },\\n            {\\n              \\\"time\\\": 11.049000000000001,\\n              \\\"val\\\": 0\\n            }\\n          ],\\n          \\\"name\\\": \\\"progression\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"val\\\": -100\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"percent_color\\\",\\n          \\\"val\\\": 0.4\\n        },\\n        {\\n          \\\"name\\\": \\\"randZ\\\",\\n          \\\"label\\\": \\\"random z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randRotZ\\\",\\n          \\\"label\\\": \\\"random rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleX\\\",\\n          \\\"label\\\": \\\"random scale x\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"randScaleY\\\",\\n          \\\"label\\\": \\\"random scale y\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotX\\\",\\n          \\\"label\\\": \\\"rotation x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotY\\\",\\n          \\\"label\\\": \\\"rotation y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotZ\\\",\\n          \\\"label\\\": \\\"rotation z\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 5,\\n        \\\"seed\\\": 1325,\\n        \\\"randX\\\": 150,\\n        \\\"randY\\\": 150,\\n        \\\"circleRadius\\\": 10,\\n        \\\"circleRadiusMax\\\": 20,\\n        \\\"progression\\\": 0,\\n        \\\"x\\\": -100,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 0,\\n        \\\"depth\\\": 0,\\n        \\\"percent_color\\\": 0.4,\\n        \\\"randZ\\\": 0,\\n        \\\"randRotZ\\\": 0,\\n        \\\"randScaleX\\\": 0,\\n        \\\"randScaleY\\\": 0,\\n        \\\"rotX\\\": 0,\\n        \\\"rotY\\\": 0,\\n        \\\"rotZ\\\": 0\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"item5\\\",\\n      \\\"type\\\": \\\"Camera\\\",\\n      \\\"label\\\": \\\"Camera 5\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 10.136,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 0,\\n              \\\"val\\\": 200\\n            },\\n            {\\n              \\\"time\\\": 10.098,\\n              \\\"val\\\": 20\\n            }\\n          ],\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"val\\\": 200\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 0,\\n              \\\"val\\\": 600\\n            },\\n            {\\n              \\\"time\\\": 10.098,\\n              \\\"val\\\": 350\\n            }\\n          ],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 600\\n        },\\n        {\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 0,\\n              \\\"val\\\": 60\\n            },\\n            {\\n              \\\"time\\\": 10.098,\\n              \\\"val\\\": 37\\n            }\\n          ],\\n          \\\"name\\\": \\\"target_x\\\",\\n          \\\"val\\\": 60\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_z\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"fov\\\",\\n          \\\"label\\\": \\\"fov\\\",\\n          \\\"val\\\": 45,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"x\\\": 200,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": 600,\\n        \\\"target_x\\\": 60,\\n        \\\"target_y\\\": 0,\\n        \\\"target_z\\\": 0,\\n        \\\"fov\\\": 45\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"item6\\\",\\n      \\\"type\\\": \\\"Camera\\\",\\n      \\\"label\\\": \\\"Camera 6\\\",\\n      \\\"start\\\": 10.13,\\n      \\\"end\\\": 14.156,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"val\\\": -20\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"val\\\": 100\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 300\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_x\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_z\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"fov\\\",\\n          \\\"label\\\": \\\"fov\\\",\\n          \\\"val\\\": 45,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"x\\\": -20,\\n        \\\"y\\\": 100,\\n        \\\"z\\\": 300,\\n        \\\"target_x\\\": 0,\\n        \\\"target_y\\\": 0,\\n        \\\"target_z\\\": 0,\\n        \\\"fov\\\": 45\\n      }\\n    }\\n  ]\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/scripts/app/data.json\n ** module id = 11\n ** module chunks = 1\n **/","module.exports = _;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"_\"\n ** module id = 12\n ** module chunks = 1\n **/","module.exports = undefined;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"signals\",\"commonjs\":\"./signals\",\"amd\":\"signals\"}\n ** module id = 13\n ** module chunks = 1\n **/","THREE.GlitchPass2 = function ( dt_size ) {\n\n  if ( THREE.DigitalGlitch2 === undefined ) console.error( \"THREE.GlitchPass relies on THREE.DigitalGlitch\" );\n\n  var shader = THREE.DigitalGlitch2;\n  this.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n  if(dt_size==undefined) dt_size=64;\n\n  this.intensity = 1;\n  this.uniforms[\"tDisp\"].value=this.generateHeightmap(dt_size);\n\n\n  this.material = new THREE.ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader\n  });\n\n  this.enabled = true;\n  this.renderToScreen = false;\n  this.needsSwap = true;\n\n  this.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n  this.scene  = new THREE.Scene();\n\n  this.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n  this.scene.add( this.quad );\n\n  this.goWild=false;\n  this.curF=0;\n  this.generateTrigger();\n\n};\n\nTHREE.GlitchPass2.prototype = {\n\n  render: function ( renderer, writeBuffer, readBuffer, delta )\n  {\n    this.uniforms[ \"tDiffuse\" ].value = readBuffer;\n    this.uniforms[ 'seed' ].value=Math.random();//default seeding\n    //this.uniforms[ 'byp' ].value=0;\n\n    this.uniforms[ 'amount' ].value = (Math.random()/420) * this.intensity;\n    this.uniforms[ 'angle' ].value=THREE.Math.randFloat(-Math.PI,Math.PI);\n    this.uniforms[ 'seed_x' ].value=THREE.Math.randFloat(-1,1);\n    this.uniforms[ 'seed_y' ].value=THREE.Math.randFloat(-1,1);\n    this.uniforms[ 'seed_x' ].value *= 0.001;\n    this.uniforms[ 'seed_y' ].value *= 0.001;\n    this.uniforms[ 'distortion_x' ].value=THREE.Math.randFloat(0,0.001);\n    this.uniforms[ 'distortion_y' ].value=THREE.Math.randFloat(0,0.001);\n    //this.curF=0;\n    this.generateTrigger();\n\n    this.uniforms[ 'byp' ].value=0;\n    this.curF++;\n\n    this.quad.material = this.material;\n    if ( this.renderToScreen )\n    {\n      renderer.render( this.scene, this.camera );\n    }\n    else\n    {\n      renderer.render( this.scene, this.camera, writeBuffer, false );\n    }\n  },\n  generateTrigger:function()\n  {\n    this.randX=THREE.Math.randInt(120,240);\n  },\n  generateHeightmap:function(dt_size)\n  {\n    var data_arr = new Float32Array( dt_size*dt_size * 3 );\n    var length=dt_size*dt_size;\n\n    for ( var i = 0; i < length; i++)\n    {\n      var val=THREE.Math.randFloat(0,1);\n      data_arr[ i*3 + 0 ] = val;\n      data_arr[ i*3 + 1 ] = val;\n      data_arr[ i*3 + 2 ] = val;\n    }\n\n    var texture = new THREE.DataTexture( data_arr, dt_size, dt_size, THREE.RGBFormat, THREE.FloatType );\n    texture.minFilter = THREE.NearestFilter;\n    texture.magFilter = THREE.NearestFilter;\n    texture.needsUpdate = true;\n    texture.flipY = false;\n    return texture;\n  }\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/postprocessing/GlitchPass2.js\n ** module id = 14\n ** module chunks = 1\n **/","/**\n * @author felixturner / http://airtight.cc/\n *\n * RGB Shift Shader\n * Shifts red and blue channels from center in opposite directions\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n * by Tom Butterworth / http://kriss.cx/tom/\n *\n * amount: shift distance (1 is width of input)\n * angle: shift angle in radians\n */\n\nTHREE.DigitalGlitch2 = {\n\n  uniforms: {\n\n    \"tDiffuse\":   { type: \"t\", value: null },//diffuse texture\n    \"tDisp\":    { type: \"t\", value: null },//displacement texture for digital glitch squares\n    \"tScratch\":   { type: \"t\", value: null },//scratch texture\n    \"byp\":      { type: \"i\", value: 0 },//apply the glitch ?\n    \"amount\":   { type: \"f\", value: 0.08 },\n    \"angle\":    { type: \"f\", value: 0.02 },\n    \"seed\":     { type: \"f\", value: 0.02 },\n    \"seed_x\":   { type: \"f\", value: 0.02 },//-1,1\n    \"seed_y\":   { type: \"f\", value: 0.02 },//-1,1\n    \"distortion_x\": { type: \"f\", value: 0.5 },\n    \"distortion_y\": { type: \"f\", value: 0.6 },\n    \"col_s\":    { type: \"f\", value: 0.05 }\n  },\n\n  vertexShader: [\n\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n      \"vUv = uv;\",\n      \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\"\n  ].join(\"\\n\"),\n\n  fragmentShader: [\n    \"uniform int byp;\",//should we apply the glitch ?\n\n    \"uniform sampler2D tDiffuse;\",\n    \"uniform sampler2D tDisp;\",\n    \"uniform sampler2D tScratch;\",\n\n    \"uniform float amount;\",\n    \"uniform float angle;\",\n    \"uniform float seed;\",\n    \"uniform float seed_x;\",\n    \"uniform float seed_y;\",\n    \"uniform float distortion_x;\",\n    \"uniform float distortion_y;\",\n    \"uniform float col_s;\",\n\n    \"varying vec2 vUv;\",\n\n\n    \"float rand(vec2 co){\",\n      \"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\n    \"}\",\n\n    \"float luma(vec3 color) {\",\n      \"return dot(color, vec3(0.299, 0.587, 0.114));\",\n    \"}\",\n\n    \"float luma(vec4 color) {\",\n      \"return dot(color.rgb, vec3(0.299, 0.587, 0.114));\",\n    \"}\",\n\n    \"void main() {\",\n      // ref for dust/scratch: https://gist.github.com/mattdesl/253aece2d3eaac505823\n      \"vec2 p = vUv;\",\n      \"vec4 scratches = texture2D(tScratch, p);\",\n\n\n      // https://github.com/mattdesl/lwjgl-basics/wiki/ShaderLesson3\n      \"if(byp<1) {\",\n        \"float xs = floor(gl_FragCoord.x / 0.5);\",\n        \"float ys = floor(gl_FragCoord.y / 0.5);\",\n        //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n        \"vec4 normal = texture2D (tDisp, p*seed*seed);\",\n        \"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\",\n          \"if(seed_x>0.){\",\n            \"p.y = 1. - (p.y + distortion_y);\",\n          \"}\",\n          \"else {\",\n            \"p.y = distortion_y;\",\n          \"}\",\n        \"}\",\n        \"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\",\n          \"if(seed_y>0.){\",\n            \"p.x=distortion_x;\",\n          \"}\",\n          \"else {\",\n            \"p.x = 1. - (p.x + distortion_x);\",\n          \"}\",\n        \"}\",\n        \"p.x+=normal.x*seed_x*(seed/5.);\",\n        \"p.y+=normal.y*seed_y*(seed/5.);\",\n        //base from RGB shift shader\n        \"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\n        \"vec4 cr = texture2D(tDiffuse, p + offset);\",\n        \"vec4 cga = texture2D(tDiffuse, p);\",\n        \"vec4 cb = texture2D(tDiffuse, p - offset);\",\n\n        \"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\n        //add noise\n        \"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\",\n        \"gl_FragColor = gl_FragColor+ snow;\",\n      \"}\",\n      \"else {\",\n        \"gl_FragColor=texture2D (tDiffuse, vUv);\",\n      \"}\",\n\n      \"vec3 scratchBlend = gl_FragColor.rgb + scratches.rgb;\",\n      // vignette scratch so that it affect only edges.\n      \"float center = smoothstep(0.0, 0.5, length(vUv-0.5));\",\n      \"float luminance = luma(gl_FragColor.rgb);\",\n      \"float brightnessMap = smoothstep(0.1, 0.4, luminance * center );\",\n      \"gl_FragColor.rgb = mix(gl_FragColor.rgb, scratchBlend, brightnessMap);\",\n    \"}\"\n\n  ].join(\"\\n\")\n\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/DigitalGlitch2.js\n ** module id = 15\n ** module chunks = 1\n **/","define (require) ->\n  THREE = require 'Three'\n\n  class Camera\n    @properties:\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 700}\n      target_x: {name: 'target_x', label: 'target x', val: 0}\n      target_y: {name: 'target_y', label: 'target y', val: 0}\n      target_z: {name: 'target_z', label: 'target z', val: 0}\n      fov: {name: 'fov', label: 'fov', val: 45}\n\n    constructor: (@values = {}, time = 0) ->\n      @isCamera = true\n      @target = new THREE.Vector3(@values.target_x, @values.target_y, @values.target_z)\n      @container = new THREE.PerspectiveCamera( @values.fov, window.innerWidth / window.innerHeight, 1, 2000 )\n      @container.position.set(@values.x, @values.y, @values.z)\n\n    update: (seconds, values = false, force = false) ->\n      if values.fov? then @container.fov = values.fov\n      @container.position.set(values.x, values.y, values.z)\n      @target.set(values.target_x, values.target_y, values.target_z)\n      @container.lookAt( @target )\n\n    destroy: () ->\n      delete @container\n      delete @isCamera\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Camera.coffee\n **/","define (require) ->\n  AnimatedCircle = require 'app/elements/AnimatedCircle'\n  SpreadedObjects = require 'app/elements/SpreadedObjects'\n\n  class Circles extends SpreadedObjects\n    getItemClass: () -> return AnimatedCircle\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Circles.coffee\n **/","define (require) ->\n  AnimatedBox = require 'app/elements/AnimatedBox'\n  SpreadedObjects = require 'app/elements/SpreadedObjects'\n\n  class Boxes extends SpreadedObjects\n    getItemClass: () -> return AnimatedBox\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Boxes.coffee\n **/","define (require) ->\n  AnimatedLine = require 'app/elements/AnimatedLine'\n  SpreadedObjects = require 'app/elements/SpreadedObjects'\n\n  class Lines extends SpreadedObjects\n    getItemClass: () -> return AnimatedLine\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Lines.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'rng'\n  ElementBase = require 'app/elements/ElementBase'\n  Colors = require 'app/components/Colors'\n\n  ShaderVertex = require 'app/shaders/BasicNoise.vert'\n  ShaderFragement = require 'app/shaders/BasicNoise.frag'\n\n  class SingleObject extends ElementBase\n    @properties:\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      rotX: {name: 'rotX', label: 'rotation x', val: 0}\n      rotY: {name: 'rotY', label: 'rotation y', val: 0}\n      rotZ: {name: 'rotZ', label: 'rotation z', val: 0}\n      scaleX: {name: 'scaleX', label: 'scale x', val: 1}\n      scaleY: {name: 'scaleY', label: 'scale y', val: 1}\n      scaleZ: {name: 'scaleZ', label: 'scale z', val: 1}\n      color: {name: 'color', label: 'color', 'type': 'color', val: \"#888888\"}\n      opacity: {name: 'opacity', label: 'opacity', val: 1, min: 0, max: 1}\n\n    constructor: (@values = {}, time = 0) ->\n      # Set the default value of instance properties.\n      for key, prop of @getDefaultProperties()\n        if !@values[key]?\n          @values[key] = prop.val\n\n      # Set values cache\n      super\n\n      @timeline = new TimelineMax()\n      #color = Colors.get(0)\n      color = new THREE.Color(values.color)\n      @material = @getMaterial(color)\n      @container = new THREE.Mesh(@getGeometry() , @material )\n\n    getDefaultProperties: () -> SingleObject.properties\n\n    getGeometry: () =>\n      return new THREE.PlaneGeometry( 100, 100)\n\n    destroy: () ->\n      super\n      # clean up...\n      if @container\n        if @container.parent then @container.parent.remove(@container)\n        delete @container\n\n      delete @geometry\n      delete @timeline\n\n    update: (seconds, values = false, force = false) ->\n      if values == false then values = @values\n\n      if force || @valueChanged(\"x\", values) || @valueChanged(\"y\", values) || @valueChanged(\"z\", values)\n        @container.position.set(values.x, values.y, values.z)\n\n      if force || @valueChanged(\"rotX\", values) || @valueChanged(\"rotY\", values) || @valueChanged(\"rotZ\", values)\n        @container.rotation.set(@degreeToRadian(values.rotX), @degreeToRadian(values.rotY), @degreeToRadian(values.rotZ))\n      if force || @valueChanged(\"scaleX\", values) || @valueChanged(\"scaleY\", values) || @valueChanged(\"scaleZ\", values)\n        # Don't allow scale by 0.\n        values.scaleX = values.scaleX || 0.000000001\n        values.scaleY = values.scaleY || 0.000000001\n        values.scaleZ = values.scaleZ || 0.000000001\n        @container.scale.set(values.scaleX, values.scaleY, values.scaleZ)\n\n      if force || @valueChanged(\"color\", values)\n        @material.color = new THREE.Color(values.color)\n      if force || @valueChanged(\"opacity\", values)\n        @material.opacity = values.opacity\n      return\n\n    getMaterial: (color) ->\n      material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0x888888, shininess: 30, shading: THREE.FlatShading })\n      material.transparent = true\n      material.depthWrite = false\n      material.depthTest = false\n      material.side = THREE.DoubleSide\n\n      material.blending = THREE.AdditiveBlending\n      return material\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/SingleObject.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'rng'\n  SingleObject = require 'app/elements/SingleObject'\n  Colors = require 'app/components/Colors'\n  RingGeometry2 = require 'app/geometries/RingGeometry2'\n\n  ShaderVertex = require 'app/shaders/BasicNoise.vert'\n  ShaderFragement = require 'app/shaders/BasicNoise.frag'\n\n  class Circle extends SingleObject\n    @properties:\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      rotX: {name: 'rotX', label: 'rotation x', val: 0}\n      rotY: {name: 'rotY', label: 'rotation y', val: 0}\n      rotZ: {name: 'rotZ', label: 'rotation z', val: 0}\n      scaleX: {name: 'scaleX', label: 'scale x', val: 1}\n      scaleY: {name: 'scaleY', label: 'scale y', val: 1}\n      scaleZ: {name: 'scaleZ', label: 'scale z', val: 1}\n      innerRadius: {name: 'innerRadius', label: 'innerRadius', val: 0.7, min: 0, max: 1}\n      angle: {name: 'angle', label: 'angle', val: 1, min: 0, max: 1}\n      color: {name: 'color', label: 'color', 'type': 'color', val: \"#888888\"}\n      opacity: {name: 'opacity', label: 'opacity', val: 1, min: 0, max: 1}\n\n    getDefaultProperties: () -> Circle.properties\n\n    getGeometry: () =>\n      # Don't allow 0 innerRadius\n      inner_radius = @values.innerRadius || 0.000000001\n      # And neither 1.\n      inner_radius = Math.min(0.999999999, inner_radius)\n      pi2 = Math.PI * 2\n      angle = @values.angle * pi2\n      return new RingGeometry2( 100 * inner_radius, 100, 30, 1, 0, angle )\n\n    update: (seconds, values = false, force = false) ->\n      super\n\n      if force || @valueChanged(\"innerRadius\", values) || @valueChanged(\"angle\", values)\n        geom = @getGeometry()\n        @container.geometry.dynamic = true\n        @container.geometry.vertices = geom.vertices\n        @container.geometry.verticesNeedUpdate = true\n\n        geom.dispose()\n      return\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Circle.coffee\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar width = window.innerWidth || 1;\n\t\tvar height = window.innerHeight || 1;\n\t\tvar parameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\n\n\t\trenderTarget = new THREE.WebGLRenderTarget( width, height, parameters );\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.passes = [];\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.EffectComposer relies on THREE.CopyShader\" );\n\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\n};\n\nTHREE.EffectComposer.prototype = {\n\n\tswapBuffers: function() {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\trender: function ( delta ) {\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( !pass.enabled ) continue;\n\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\n\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\tmaskActive = true;\n\n\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\tmaskActive = false;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\n\t\t\trenderTarget.width = window.innerWidth;\n\t\t\trenderTarget.height = window.innerHeight;\n\n\t\t}\n\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar renderTarget = this.renderTarget1.clone();\n\n\t\trenderTarget.width = width;\n\t\trenderTarget.height = height;\n\n\t\tthis.reset( renderTarget );\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/EffectComposer.js\n ** module id = 22\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MaskPass = function ( scene, camera ) {\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.enabled = true;\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nTHREE.MaskPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tvar context = renderer.context;\n\n\t\t// don't update color or depth\n\n\t\tcontext.colorMask( false, false, false, false );\n\t\tcontext.depthMask( false );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tcontext.enable( context.STENCIL_TEST );\n\t\tcontext.stencilOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tcontext.stencilFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tcontext.clearStencil( clearValue );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t// re-enable update of color and depth\n\n\t\tcontext.colorMask( true, true, true, true );\n\t\tcontext.depthMask( true );\n\n\t\t// only render where stencil is set to 1\n\n\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );  // draw if == 1\n\t\tcontext.stencilOp( context.KEEP, context.KEEP, context.KEEP );\n\n\t}\n\n};\n\n\nTHREE.ClearMaskPass = function () {\n\n\tthis.enabled = true;\n\n};\n\nTHREE.ClearMaskPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tvar context = renderer.context;\n\n\t\tcontext.disable( context.STENCIL_TEST );\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/MaskPass.js\n ** module id = 23\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.BloomPass = function ( strength, kernelSize, sigma, resolution ) {\n\n\tstrength = ( strength !== undefined ) ? strength : 1;\n\tkernelSize = ( kernelSize !== undefined ) ? kernelSize : 25;\n\tsigma = ( sigma !== undefined ) ? sigma : 4.0;\n\tresolution = ( resolution !== undefined ) ? resolution : 256;\n\n\t// render targets\n\n\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\n\tthis.renderTargetX = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\tthis.renderTargetY = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\n\t// copy material\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.CopyShader\" );\n\n\tvar copyShader = THREE.CopyShader;\n\n\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\n\tthis.copyUniforms[ \"opacity\" ].value = strength;\n\n\tthis.materialCopy = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: THREE.AdditiveBlending,\n\t\ttransparent: true\n\n\t} );\n\n\t// convolution material\n\n\tif ( THREE.ConvolutionShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.ConvolutionShader\" );\n\n\tvar convolutionShader = THREE.ConvolutionShader;\n\n\tthis.convolutionUniforms = THREE.UniformsUtils.clone( convolutionShader.uniforms );\n\n\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurx;\n\tthis.convolutionUniforms[ \"cKernel\" ].value = THREE.ConvolutionShader.buildKernel( sigma );\n\n\tthis.materialConvolution = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.convolutionUniforms,\n\t\tvertexShader:  convolutionShader.vertexShader,\n\t\tfragmentShader: convolutionShader.fragmentShader,\n\t\tdefines: {\n\t\t\t\"KERNEL_SIZE_FLOAT\": kernelSize.toFixed( 1 ),\n\t\t\t\"KERNEL_SIZE_INT\": kernelSize.toFixed( 0 )\n\t\t}\n\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\tthis.clear = false;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.BloomPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\n\n\t\t// Render quad with blured scene into texture (convolution pass 1)\n\n\t\tthis.quad.material = this.materialConvolution;\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\n\t\trenderer.render( this.scene, this.camera, this.renderTargetX, true );\n\n\n\t\t// Render quad with blured scene into texture (convolution pass 2)\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = this.renderTargetX;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurY;\n\n\t\trenderer.render( this.scene, this.camera, this.renderTargetY, true );\n\n\t\t// Render original scene with superimposed blur to texture\n\n\t\tthis.quad.material = this.materialCopy;\n\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetY;\n\n\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t}\n\n};\n\nTHREE.BloomPass.blurX = new THREE.Vector2( 0.001953125, 0.0 );\nTHREE.BloomPass.blurY = new THREE.Vector2( 0.0, 0.001953125 );\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/BloomPass.js\n ** module id = 24\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShaderPass = function ( shader, textureID ) {\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\tthis.material = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\n\t} );\n\n\tthis.renderToScreen = false;\n\n\tthis.enabled = true;\n\tthis.needsSwap = true;\n\tthis.clear = false;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.ShaderPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer;\n\n\t\t}\n\n\t\tthis.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t} else {\n\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/ShaderPass.js\n ** module id = 25\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 1;\n\n\tthis.oldClearColor = new THREE.Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.enabled = true;\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n};\n\nTHREE.RenderPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/RenderPass.js\n ** module id = 26\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.FilmPass = function ( noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale ) {\n\n\tif ( THREE.FilmShader === undefined )\n\t\tconsole.error( \"THREE.FilmPass relies on THREE.FilmShader\" );\n\n\tvar shader = THREE.FilmShader;\n\n\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\tthis.material = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\n\t} );\n\n\tif ( grayscale !== undefined )\tthis.uniforms.grayscale.value = grayscale;\n\tif ( noiseIntensity !== undefined ) this.uniforms.nIntensity.value = noiseIntensity;\n\tif ( scanlinesIntensity !== undefined ) this.uniforms.sIntensity.value = scanlinesIntensity;\n\tif ( scanlinesCount !== undefined ) this.uniforms.sCount.value = scanlinesCount;\n\n\tthis.enabled = true;\n\tthis.renderToScreen = false;\n\tthis.needsSwap = true;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.FilmPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\tthis.uniforms[ \"time\" ].value += delta;\n\n\t\tthis.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t} else {\n\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, false );\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/FilmPass.js\n ** module id = 27\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nTHREE.CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/CopyShader.js\n ** module id = 28\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n * @author davidedc / http://www.sketchpatch.net/\n *\n * NVIDIA FXAA by Timothy Lottes\n * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\n * - WebGL port by @supereggbert\n * http://www.glge.org/demos/fxaa/\n */\n\nTHREE.FXAAShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\"resolution\": { type: \"v2\", value: new THREE.Vector2( 1 / 1024, 1 / 512 )  }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec2 resolution;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"#define FXAA_REDUCE_MIN   (1.0/128.0)\",\n\t\t\"#define FXAA_REDUCE_MUL   (1.0/8.0)\",\n\t\t\"#define FXAA_SPAN_MAX     8.0\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );\",\n\t\t\t\"vec3 rgbM  = rgbaM.xyz;\",\n\t\t\t\"float opacity  = rgbaM.w;\",\n\n\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\n\t\t\t\"float lumaNW = dot( rgbNW, luma );\",\n\t\t\t\"float lumaNE = dot( rgbNE, luma );\",\n\t\t\t\"float lumaSW = dot( rgbSW, luma );\",\n\t\t\t\"float lumaSE = dot( rgbSE, luma );\",\n\t\t\t\"float lumaM  = dot( rgbM,  luma );\",\n\t\t\t\"float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\",\n\t\t\t\"float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\",\n\n\t\t\t\"vec2 dir;\",\n\t\t\t\"dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\",\n\t\t\t\"dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\",\n\n\t\t\t\"float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\",\n\n\t\t\t\"float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\",\n\t\t\t\"dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\",\n\t\t\t\t  \"max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\",\n\t\t\t\t\t\t\"dir * rcpDirMin)) * resolution;\",\n\n\t\t\t\"vec3 rgbA = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\"rgbA += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\"rgbA *= 0.5;\",\n\n\t\t\t\"vec3 rgbB = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz;\",\n\t\t\t\"rgbB += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz;\",\n\t\t\t\"rgbB *= 0.25;\",\n\t\t\t\"rgbB += rgbA * 0.5;\",\n\n\t\t\t\"float lumaB = dot( rgbB, luma );\",\n\n\t\t\t\"if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\",\n\n\t\t\t\t\"gl_FragColor = vec4( rgbA, opacity );\",\n\n\t\t\t\"} else {\",\n\n\t\t\t\t\"gl_FragColor = vec4( rgbB, opacity );\",\n\n\t\t\t\"}\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/FXAAShader.js\n ** module id = 29\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Film grain & scanlines shader\n *\n * - ported from HLSL to WebGL / GLSL\n * http://www.truevision3d.com/forums/showcase/staticnoise_colorblackwhite_scanline_shaders-t18698.0.html\n *\n * Screen Space Static Postprocessor\n *\n * Produces an analogue noise overlay similar to a film grain / TV static\n *\n * Original implementation and noise algorithm\n * Pat 'Hawthorne' Shearon\n *\n * Optimized scanlines + noise version with intensity scaling\n * Georg 'Leviathan' Steinrohder\n *\n * This version is provided under a Creative Commons Attribution 3.0 License\n * http://creativecommons.org/licenses/by/3.0/\n */\n\nTHREE.FilmShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\"time\":       { type: \"f\", value: 0.0 },\n\t\t\"nIntensity\": { type: \"f\", value: 0.5 },\n\t\t\"sIntensity\": { type: \"f\", value: 0.05 },\n\t\t\"sCount\":     { type: \"f\", value: 4096 },\n\t\t\"grayscale\":  { type: \"i\", value: 1 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t// control parameter\n\t\t\"uniform float time;\",\n\n\t\t\"uniform bool grayscale;\",\n\n\t\t// noise effect intensity value (0 = no effect, 1 = full effect)\n\t\t\"uniform float nIntensity;\",\n\n\t\t// scanlines effect intensity value (0 = no effect, 1 = full effect)\n\t\t\"uniform float sIntensity;\",\n\n\t\t// scanlines effect count value (0 = no effect, 4096 = full effect)\n\t\t\"uniform float sCount;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t// sample the source\n\t\t\t\"vec4 cTextureScreen = texture2D( tDiffuse, vUv );\",\n\n\t\t\t// make some noise\n\t\t\t\"float x = vUv.x * vUv.y * time *  1000.0;\",\n\t\t\t\"x = mod( x, 13.0 ) * mod( x, 123.0 );\",\n\t\t\t\"float dx = mod( x, 0.01 );\",\n\n\t\t\t// add noise\n\t\t\t\"vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\",\n\n\t\t\t// get us a sine and cosine\n\t\t\t\"vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\",\n\n\t\t\t// add scanlines\n\t\t\t\"cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\",\n\n\t\t\t// interpolate between source and result by intensity\n\t\t\t\"cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\",\n\n\t\t\t// convert to grayscale if desired\n\t\t\t\"if( grayscale ) {\",\n\n\t\t\t\t\"cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\",\n\n\t\t\t\"}\",\n\n\t\t\t\"gl_FragColor =  vec4( cResult, cTextureScreen.a );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/FilmShader.js\n ** module id = 30\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Convolution shader\n * ported from o3d sample to WebGL / GLSL\n * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\n */\n\nTHREE.ConvolutionShader = {\n\n\tdefines: {\n\n\t\t\"KERNEL_SIZE_FLOAT\": \"25.0\",\n\t\t\"KERNEL_SIZE_INT\": \"25\",\n\n\t},\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":        { type: \"t\", value: null },\n\t\t\"uImageIncrement\": { type: \"v2\", value: new THREE.Vector2( 0.001953125, 0.0 ) },\n\t\t\"cKernel\":         { type: \"fv1\", value: [] }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float cKernel[ KERNEL_SIZE_INT ];\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec2 imageCoord = vUv;\",\n\t\t\t\"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\n\n\t\t\t\"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\n\n\t\t\t\t\"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\n\t\t\t\t\"imageCoord += uImageIncrement;\",\n\n\t\t\t\"}\",\n\n\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\n\t].join(\"\\n\"),\n\n\tbuildKernel: function ( sigma ) {\n\n\t\t// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\n\n\t\tfunction gauss( x, sigma ) {\n\n\t\t\treturn Math.exp( - ( x * x ) / ( 2.0 * sigma * sigma ) );\n\n\t\t}\n\n\t\tvar i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil( sigma * 3.0 ) + 1;\n\n\t\tif ( kernelSize > kMaxKernelSize ) kernelSize = kMaxKernelSize;\n\t\thalfWidth = ( kernelSize - 1 ) * 0.5;\n\n\t\tvalues = new Array( kernelSize );\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < kernelSize; ++i ) {\n\n\t\t\tvalues[ i ] = gauss( i - halfWidth, sigma );\n\t\t\tsum += values[ i ];\n\n\t\t}\n\n\t\t// normalize the kernel\n\n\t\tfor ( i = 0; i < kernelSize; ++i ) values[ i ] /= sum;\n\n\t\treturn values;\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/ConvolutionShader.js\n ** module id = 31\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Vignette shader\n * based on PaintEffect postprocess from ro.me\n * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\n */\n\nTHREE.VignetteShader = {\n\n  uniforms: {\n\n    \"tDiffuse\": { type: \"t\", value: null },\n    \"offset\":   { type: \"f\", value: 1.0 },\n    \"darkness\": { type: \"f\", value: 1.0 }\n\n  },\n\n  vertexShader: [\n\n    \"varying vec2 vUv;\",\n\n    \"void main() {\",\n\n      \"vUv = uv;\",\n      \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n    \"}\"\n\n  ].join(\"\\n\"),\n\n  fragmentShader: [\n\n    \"uniform float offset;\",\n    \"uniform float darkness;\",\n\n    \"uniform sampler2D tDiffuse;\",\n\n    \"varying vec2 vUv;\",\n\n    \"void main() {\",\n\n      // Eskil's vignette\n\n      \"vec4 texel = texture2D( tDiffuse, vUv );\",\n      \"vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\",\n      \"gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\",\n\n      /*\n      // alternative version from glfx.js\n      // this one makes more \"dusty\" look (as opposed to \"burned\")\n\n      \"vec4 color = texture2D( tDiffuse, vUv );\",\n      \"float dist = distance( vUv, vec2( 0.5 ) );\",\n      \"color.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\n      \"gl_FragColor = color;\",\n      */\n\n    \"}\"\n\n  ].join(\"\\n\")\n\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/VignetteShader.js\n ** module id = 32\n ** module chunks = 1\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  AnimatedObject = require 'app/elements/AnimatedObject'\n  CircleGeometry2 = require 'app/geometries/CircleGeometry2'\n  RingGeometry2 = require 'app/geometries/RingGeometry2'\n\n  class AnimatedCircle extends AnimatedObject\n    @circleGeom = new CircleGeometry2( 10, 30, 0, Math.PI * 2 )\n    @ringGeom = new RingGeometry2( 10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2 )\n    @ringGeom2 = new RingGeometry2( 10 - 1, 10, 30, 1, 0, Math.PI * 2 )\n\n    constructor: () ->\n      super\n\n    getGeometry: () ->\n      return AnimatedCircle.circleGeom\n\n    getGeometryOutline: (outlineWidth) ->\n      if outlineWidth < 1 then return AnimatedCircle.ringGeom\n      return AnimatedCircle.ringGeom2\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedCircle.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'exports?RNG!rng'\n  TweenMax = require 'TweenMax'\n  ElementBase = require 'app/elements/ElementBase'\n  Colors = require 'app/components/Colors'\n\n\n  class SpreadedObjects extends ElementBase\n    @properties:\n      numItems: {name: 'numItems', label: 'num items', val: 20, triggerRebuild: true}\n      seed: {name: 'seed', label: 'seed', val: 12002, triggerRebuild: true}\n      randX: {name: 'randX', label: 'random x', val: 80, triggerRebuild: true}\n      randY: {name: 'randY', label: 'random y', val: 80, triggerRebuild: true}\n      randZ: {name: 'randZ', label: 'random z', val: 0, triggerRebuild: true}\n      randRotZ: {name: 'randRotZ', label: 'random rotation z', val: 0, triggerRebuild: true}\n      randScaleX: {name: 'randScaleX', label: 'random scale x', val: 0, triggerRebuild: true}\n      randScaleY: {name: 'randScaleY', label: 'random scale y', val: 0, triggerRebuild: true}\n      circleRadius: {name: 'circleRadius', label: 'circle radius', val: 20}\n      circleRadiusMax: {name: 'circleRadiusMax', label: 'circle radius max', val: 20}\n      progression: {name: 'progression', label: 'progression', val: 1, min: 0, max: 2}\n      depth: {name: 'depth', label: 'depth', val: 0}\n      percent_color: {name: 'percent_color', label: 'percent color', val: 0.4, triggerRebuild: true}\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      rotX: {name: 'rotX', label: 'rotation x', val: 0}\n      rotY: {name: 'rotY', label: 'rotation y', val: 0}\n      rotZ: {name: 'rotZ', label: 'rotation z', val: 0}\n\n    constructor: (@values = {}, time = 0) ->\n      # Set the default value of instance properties.\n      for key, prop of SpreadedObjects.properties\n        if !@values[key]?\n          @values[key] = prop.val\n\n      # Set values cache\n      super\n\n      @timeline = new TimelineMax()\n      @container = new THREE.Object3D()\n      @totalDuration = 0\n      @items = []\n      @items_position = []\n      @build(time)\n\n    getItemClass: () -> return AnimatedCircle\n\n    rebuild: (time) ->\n      @empty()\n      @build(time)\n\n    empty: () ->\n      if !@items || !@items.length then return\n      @timeline.clear()\n      @items_position = []\n\n      for item in @items\n        @container.remove(item.container)\n        item.destroy()\n      @items = []\n\n    build: (time = 0) ->\n      @rng = new RNG(@values.seed)\n      @rngAnimation = new RNG(@values.seed + \"lorem\")\n      @rngOutline = new RNG(@values.seed)\n\n      for i in [0..@values.numItems - 1]\n        itemClass = @getItemClass()\n        rndtype = @rng.random(0, 1000) / 1000\n        draw_outline = if rndtype < 0.8 then true else false\n        draw_circle = if rndtype > 0.5 then true else false\n\n        if itemClass.noOutline\n          draw_outline = false\n          draw_circle = true\n\n        color = Colors.get(@rng.random(0, 1000))\n        if @rng.random(0, 1000) > @values.percent_color * 1000\n          color = Colors.get(0)\n\n        fillColor = color.clone()\n        if draw_outline\n          fillColor.multiplyScalar(@rng.random(0.1, 0.5))\n\n        size = @rng.random(@values.circleRadius, @values.circleRadiusMax)\n        x = @getRandomPosition(@values.randX)\n        y = @getRandomPosition(@values.randY)\n        z = @getRandomPosition(@values.randZ)\n        randRotZ = @rng.random(0, 1000) / 1000 * Math.PI * @values.randRotZ\n        randScaleX = @rng.random(0, 1000) / 1000 * @values.randScaleX\n        randScaleY = @rng.random(0, 1000) / 1000 * @values.randScaleY\n        pos = {x: x, y: y, z: z}\n\n        delay = @rngAnimation.random(0, 2400) / 1000\n        duration = @rngAnimation.random(600, 800) / 1000\n        duration *= 4\n        border_radius = @rngOutline.random(1, 400) / 100\n\n\n        if draw_outline == false\n          # more fill opacity if no outline\n          fillColor.multiplyScalar(3)\n\n        item = new itemClass({\n          size: size,\n          outlineWidth: border_radius,\n          drawOutline: draw_outline,\n          drawCircle: draw_circle,\n          color: color,\n          fillColor: fillColor,\n          delay: delay,\n          duration: duration,\n          depth: @values.depth,\n          x: pos.x,\n          y: pos.y,\n          z: pos.z,\n          randRotZ: randRotZ,\n          randScaleX: randScaleX,\n          randScaleY: randScaleY\n        })\n        @container.add(item.container)\n        @timeline.add(item.timeline, 0)\n        @items.push(item)\n        @items_position.push(pos)\n\n      @totalDuration = @timeline.duration()\n\n      # Set initial properties\n      @update(time, @values, true)\n\n    update: (seconds, values = false, force = false) ->\n      if values == false then values = @values\n      needs_rebuild = false\n\n      # Check if any of the invaldating property changed.\n      for key, prop of SpreadedObjects.properties\n        if prop.triggerRebuild && @valueChanged(key, values)\n          needs_rebuild = true\n\n      if force || @valueChanged(\"x\", values) || @valueChanged(\"y\", values) || @valueChanged(\"z\", values)\n        @container.position.set(values.x, values.y, values.z)\n\n      if force || @valueChanged(\"rotX\", values) || @valueChanged(\"rotY\", values) || @valueChanged(\"rotZ\", values)\n        @container.rotation.set(@degreeToRadian(values.rotX), @degreeToRadian(values.rotY), @degreeToRadian(values.rotZ))\n\n      #if force || @valueChanged(\"progression\", values)\n      progression = values.progression / 2\n      @timeline.seek(@totalDuration * progression)\n      for item in @items\n        item.update(seconds, {progression: values.progression})\n\n      if force || @valueChanged(\"depth\", values)\n        for item, key in @items\n          pos = @items_position[key]\n          item.container.position.set(pos.x, pos.y, pos.z * values.depth)\n\n      # save the new values\n      @values = _.merge(@values, values)\n\n      if needs_rebuild == true\n        @rebuild(seconds)\n\n    getRandomPosition: (scale = 1) ->\n      return @rng.random(-scale, scale)\n\n    destroy: () ->\n      super\n      # clean up...\n      if @container\n        if @container.parent then @container.parent.remove(@container)\n        delete @container\n      delete @rng\n      delete @rngOutline\n      delete @cache\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/SpreadedObjects.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  AnimatedObject = require 'app/elements/AnimatedObject'\n  class AnimatedBox extends AnimatedObject\n    @circleGeom = new THREE.CircleGeometry( 10, 4, 0, Math.PI * 2 )\n    @ringGeom = new THREE.RingGeometry( 10 - 1, 10 + 1, 4, 1, 0, Math.PI * 2 )\n    @ringGeom2 = new THREE.RingGeometry( 10 - 1, 10, 4, 1, 0, Math.PI * 2 )\n\n    constructor: () ->\n      super\n\n    getGeometry: () ->\n      return AnimatedBox.circleGeom\n\n    getGeometryOutline: (outlineWidth) ->\n      if outlineWidth < 1 then return AnimatedBox.ringGeom\n      return AnimatedBox.ringGeom2\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedBox.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  AnimatedObject = require 'app/elements/AnimatedObject'\n  class AnimatedLine extends AnimatedObject\n    @circleGeom = new THREE.PlaneGeometry( 100, 1)\n    @ringGeom = false\n    @ringGeom2 = false\n    @noOutline = true\n\n    constructor: () ->\n      super\n\n    getGeometry: () -> return AnimatedLine.circleGeom\n\n    getGeometryOutline: (outlineWidth) -> return false\n\n    update: (seconds, progression) ->\n      #if Audio.instance.high > 0.002\n      #  @speed += Audio.instance.high\n      #console.log Audio.instance.high\n\n      #if Math.random() > 0.9 && Audio.instance.high > 0.09\n      #  @velocity.add(@direction.clone().multiplyScalar(Audio.instance.high * 12 * @weight))\n      @container.position.add(@velocity)\n\n      @velocity = @velocity.multiplyScalar(0.94)\n\n      timeDiff = Date.now() - @start\n      for material in @materials\n        material.uniforms['time'].value = 0.00025 * ( timeDiff )\n\n      scale = @animatedProperties.scale * @values.size * 0.1\n      @container.scale.set(1, scale, 1)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedLine.coffee\n **/","define (require) ->\n\n  class ElementBase\n    constructor: (@values = {}, time = 0) ->\n      @cache = @buildCache()\n\n    buildCache: () ->\n      cache = {}\n      for key, prop of @values\n        cache[key] = prop.val\n      return cache\n\n    valueChanged: (key, values) ->\n      # Value can't change if it is not even set.\n      if !values[key]? then return false\n      new_val = values[key]\n      has_changed = true\n      if @cache[key]? && @cache[key] == new_val then has_changed = false\n\n      # Directly set the new cache value to avoid setting it multiple time to true.\n      @cache[key] = new_val\n      return has_changed\n\n    degreeToRadian: (degree) -> Math.PI * degree / 180\n\n    destroy: () =>\n      delete @cache\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/ElementBase.coffee\n **/","#https://kuler.adobe.com/Tron-Legacy2-color-theme-1406713/edit/?copy=true&base=2&rule=Custom&selected=0&name=Copy%20of%20Tron%20Legacy2&mode=rgb&rgbvalues=0.008019047984151012,0.2173110006233171,0.3137254901960784,0.00784313725490196,0.5411764705882353,0.6196078431372549,0.05627426106529288,0.7490196078431373,0.6616535221392924,0.9490196078431372,0.7547155506500436,0.11287104291749415,0.8509803921568627,0.1894012485482237,0.1429403608472727&swatchOrder=0,1,2,3,4\ndefine (require) ->\n  THREE = require 'Three'\n\n  items = [\n    new THREE.Color(0xffffff),\n    new THREE.Color(0x86d1b8),\n    new THREE.Color(0x65c282),\n  ]\n\n  items2 = [\n    new THREE.Color(0xffffff),\n    new THREE.Color(0x023750),\n    new THREE.Color(0x028A9E),\n    new THREE.Color(0x0EBFA9),\n    new THREE.Color(0xF2C01D),\n    new THREE.Color(0xD93024),\n    #new THREE.Color(0x9ACCEF),\n  ]\n\n  length = items.length\n\n  class Colors\n    @get = (index) ->\n      index = Math.abs(parseInt(index, 10))\n      return items[index % length]\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/Colors.coffee\n **/","// Modified to have uv on the edges.\n\ndefine(function(require) {\n  var THREE = require('Three');\n\nTHREE.RingGeometry2 = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'RingGeometry2';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0;\n\touterRadius = outerRadius || 50;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\n\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) { // concentric circles inside ring\n\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) { // number of segments per circle\n\n\t\t\tvar vertex = new THREE.Vector3();\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tthis.vertices.push( vertex );\n\t\t\t//uvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\n\t\t  var uv = {\n        x: (i / phiSegments),\n        y: (o / thetaSegments)\n      };\n      uvs.push(new THREE.Vector2(uv.x, uv.y));\n    }\n\n\t\tradius += radiusStep;\n\n\t}\n\n\tvar n = new THREE.Vector3( 0, 0, 1 );\n\n\tfor ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring\n\n\t\tvar thetaSegment = i * (thetaSegments + 1);\n\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) { // number of segments per circle\n\n\t\t\tvar segment = o + thetaSegment;\n\n\t\t\tvar v1 = segment;\n\t\t\tvar v2 = segment + thetaSegments + 1;\n\t\t\tvar v3 = segment + thetaSegments + 2;\n\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\n\t\t\tv1 = segment;\n\t\t\tv2 = segment + thetaSegments + 2;\n\t\t\tv3 = segment + 1;\n\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\n\t\t}\n\t}\n\n\tthis.computeFaceNormals();\n\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.RingGeometry2.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.RingGeometry2.prototype.constructor = THREE.RingGeometry2;\n\nreturn THREE.RingGeometry2;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/geometries/RingGeometry2.js\n ** module id = 39\n ** module chunks = 1\n **/","/**\n * Seedable random number generator functions.\n * @version 1.0.0\n * @license Public Domain\n *\n * @example\n * var rng = new RNG('Example');\n * rng.random(40, 50);  // =>  42\n * rng.uniform();       // =>  0.7972798995050903\n * rng.normal();        // => -0.6698504543216376\n * rng.exponential();   // =>  1.0547367609131555\n * rng.poisson(4);      // =>  2\n * rng.gamma(4);        // =>  2.781724687386858\n */\n\n/**\n * @param {String} seed A string to seed the generator.\n * @constructor\n */\nfunction RC4(seed) {\n    this.s = new Array(256);\n    this.i = 0;\n    this.j = 0;\n    for (var i = 0; i < 256; i++) {\n        this.s[i] = i;\n    }\n    if (seed) {\n        this.mix(seed);\n    }\n}\n\n/**\n * Get the underlying bytes of a string.\n * @param {string} string\n * @returns {Array} An array of bytes\n */\nRC4.getStringBytes = function(string) {\n    var output = [];\n    for (var i = 0; i < string.length; i++) {\n        var c = string.charCodeAt(i);\n        var bytes = [];\n        do {\n            bytes.push(c & 0xFF);\n            c = c >> 8;\n        } while (c > 0);\n        output = output.concat(bytes.reverse());\n    }\n    return output;\n};\n\nRC4.prototype._swap = function(i, j) {\n    var tmp = this.s[i];\n    this.s[i] = this.s[j];\n    this.s[j] = tmp;\n};\n\n/**\n * Mix additional entropy into this generator.\n * @param {String} seed\n */\nRC4.prototype.mix = function(seed) {\n    var input = RC4.getStringBytes(seed);\n    var j = 0;\n    for (var i = 0; i < this.s.length; i++) {\n        j += this.s[i] + input[i % input.length];\n        j %= 256;\n        this._swap(i, j);\n    }\n};\n\n/**\n * @returns {number} The next byte of output from the generator.\n */\nRC4.prototype.next = function() {\n    this.i = (this.i + 1) % 256;\n    this.j = (this.j + this.s[this.i]) % 256;\n    this._swap(this.i, this.j);\n    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n};\n\n/**\n * Create a new random number generator with optional seed. If the\n * provided seed is a function (i.e. Math.random) it will be used as\n * the uniform number generator.\n * @param seed An arbitrary object used to seed the generator.\n * @constructor\n */\nfunction RNG(seed) {\n    if (seed == null) {\n        seed = (Math.random() + Date.now()).toString();\n    } else if (typeof seed === \"function\") {\n        // Use it as a uniform number generator\n        this.uniform = seed;\n        this.nextByte = function() {\n            return ~~(this.uniform() * 256);\n        };\n        seed = null;\n    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n        seed = JSON.stringify(seed);\n    }\n    this._normal = null;\n    if (seed) {\n        this._state = new RC4(seed);\n    } else {\n        this._state = null;\n    }\n}\n\n/**\n * @returns {number} Uniform random number between 0 and 255.\n */\nRNG.prototype.nextByte = function() {\n    return this._state.next();\n};\n\n/**\n * @returns {number} Uniform random number between 0 and 1.\n */\nRNG.prototype.uniform = function() {\n    var BYTES = 7; // 56 bits to make a 53-bit double\n    var output = 0;\n    for (var i = 0; i < BYTES; i++) {\n        output *= 256;\n        output += this.nextByte();\n    }\n    return output / (Math.pow(2, BYTES * 8) - 1);\n};\n\n/**\n * Produce a random integer within [n, m).\n * @param {number} [n=0]\n * @param {number} m\n *\n */\nRNG.prototype.random = function(n, m) {\n    if (n == null) {\n        return this.uniform();\n    } else if (m == null) {\n        m = n;\n        n = 0;\n    }\n    return n + Math.floor(this.uniform() * (m - n));\n};\n\n/**\n * Generates numbers using this.uniform() with the Box-Muller transform.\n * @returns {number} Normally-distributed random number of mean 0, variance 1.\n */\nRNG.prototype.normal = function() {\n    if (this._normal !== null) {\n        var n = this._normal;\n        this._normal = null;\n        return n;\n    } else {\n        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n        var y = this.uniform();\n        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n    }\n};\n\n/**\n * Generates numbers using this.uniform().\n * @returns {number} Number from the exponential distribution, lambda = 1.\n */\nRNG.prototype.exponential = function() {\n    return -Math.log(this.uniform() || Math.pow(2, -53));\n};\n\n/**\n * Generates numbers using this.uniform() and Knuth's method.\n * @param {number} [mean=1]\n * @returns {number} Number from the Poisson distribution.\n */\nRNG.prototype.poisson = function(mean) {\n    var L = Math.exp(-(mean || 1));\n    var k = 0, p = 1;\n    do {\n        k++;\n        p *= this.uniform();\n    } while (p > L);\n    return k - 1;\n};\n\n/**\n * Generates numbers using this.uniform(), this.normal(),\n * this.exponential(), and the Marsaglia-Tsang method.\n * @param {number} a\n * @returns {number} Number from the gamma distribution.\n */\nRNG.prototype.gamma = function(a) {\n    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n    var c = 1 / Math.sqrt(9 * d);\n    do {\n        do {\n            var x = this.normal();\n            var v = Math.pow(c * x + 1, 3);\n        } while (v <= 0);\n        var u = this.uniform();\n        var x2 = Math.pow(x, 2);\n    } while (u >= 1 - 0.0331 * x2 * x2 &&\n             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n    if (a < 1) {\n        return d * v * Math.exp(this.exponential() / -a);\n    } else {\n        return d * v;\n    }\n};\n\n/**\n * Accepts a dice rolling notation string and returns a generator\n * function for that distribution. The parser is quite flexible.\n * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n * @param {RNG} rng An optional RNG object.\n * @returns {Function}\n */\nRNG.roller = function(expr, rng) {\n    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n    var dice = parseFloat(parts[0]) || 1;\n    var sides = parseFloat(parts[1]);\n    var mod = parseFloat(parts[2]) || 0;\n    rng = rng || new RNG();\n    return function() {\n        var total = dice + mod;\n        for (var i = 0; i < dice; i++) {\n            total += rng.random(sides);\n        }\n        return total;\n    };\n};\n\n/* Provide a pre-made generator instance. */\nRNG.$ = new RNG();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/bower_components/rng-js/rng.js\n ** module id = 40\n ** module chunks = 1\n **/","module.exports = TweenMax;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"TweenMax\"\n ** module id = 41\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\nvarying float noise;\\nuniform float time;\\nuniform float strength;\\nuniform float seed;\\n\\n//\\n// GLSL textureless classic 3D noise \\\"cnoise\\\",\\n// with an RSL-style periodic variant \\\"pnoise\\\".\\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\\n// Version: 2011-10-11\\n//\\n// Many thanks to Ian McEwan of Ashima Arts for the\\n// ideas for permutation and gradient selection.\\n//\\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\\n// Distributed under the MIT license. See LICENSE file.\\n// https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_1_0(vec3 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_1_0(vec4 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_1_1(vec4 x)\\n{\\n  return mod289_1_0(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_1_2(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nvec3 fade_1_3(vec3 t) {\\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\\n}\\n\\n// Classic Perlin noise, periodic variant\\nfloat pnoise_1_4(vec3 P, vec3 rep)\\n{\\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\\n  Pi0 = mod289_1_0(Pi0);\\n  Pi1 = mod289_1_0(Pi1);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute_1_1(permute_1_1(ix) + iy);\\n  vec4 ixy0 = permute_1_1(ixy + iz0);\\n  vec4 ixy1 = permute_1_1(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt_1_2(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt_1_2(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade_1_3(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n  return 2.2 * n_xyz;\\n}\\n\\n\\n\\n\\nfloat turbulence( vec3 p ) {\\n    float w = 100.0;\\n    float t = -.5;\\n    for (float f = 1.0 ; f <= 10.0 ; f++ ){\\n        float power = pow( 2.0, f );\\n        t += abs( pnoise_1_4( vec3( power * p ), vec3( 10.0, 10.0, 10.0 ) ) / power );\\n    }\\n    return t;\\n}\\n\\nvoid main() {\\n    vUv = uv;\\n\\n    float time2 = time + seed;\\n\\n    // add time to the noise parameters so it's animated\\n    noise = 10.0 *  -.10 * turbulence( 10.5 * normal + time2 );\\n    float b = 5.0 * pnoise_1_4( 0.2 * position + vec3( 2.0 * time2 ), vec3( 100.0 ) );\\n    float displacement = - noise + b;\\n\\n    // Less displacement on center.\\n    displacement = displacement * vUv.x;\\n\\n    //vec3 newPosition = position + normal * displacement * strength * 30.0;\\n    //vec2 normal2 = normalize(uv - 0.5);\\n    vec3 normal2 = normalize(position - 0.5);\\n    float strengthMultiplier = 15.0;\\n    vec3 newPosition = position + vec3(normal2.x, normal2.y, 0.0) * displacement * strength * strengthMultiplier;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/BasicNoise.vert\n ** module id = 42\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nprecision highp float;\\n\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nfloat aastep_1_0(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\n\\n\\nvarying vec2 vUv;\\nuniform vec3 color;\\n\\nvoid main() {\\n  float alpha = 0.0;\\n  float wireframe_size = 0.04;\\n  float min_x = 0.3;\\n  float max_x = 1.0;\\n\\n  // If max is 1 then wireframe is is only half size.\\n  max_x = max_x * 0.9;\\n\\n  // Get distance from edges.\\n  vec2 edgeX = abs(vec2(vUv.x - min_x, vUv.x - max_x));\\n  // Add the wireframe.\\n  edgeX = max(vec2(0.0, 0.0), edgeX - wireframe_size);\\n\\n  // Get the smallest distance from edges.\\n  float distance_x = min(edgeX.x, edgeX.y);\\n\\n\\n  alpha = aastep_1_0(distance_x, 0.01);\\n\\n  // Add the fill alpha.\\n  if (vUv.x > min_x && vUv.x < max_x) {\\n    alpha = max(0.3, alpha);\\n  }\\n\\n  gl_FragColor = vec4( color, alpha );\\n  //vec3 k = vec3(1.0, 1.0, 1.0);\\n  //gl_FragColor = vec4( vec3( vUv, 0. ), 1. );\\n  //gl_FragColor = vec4( color, 1.0 );\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/BasicNoise.frag\n ** module id = 43\n ** module chunks = 1\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'rng'\n  TweenMax = require 'TweenMax'\n\n  Colors = require 'app/components/Colors'\n\n  # should not be a dependency.\n  Audio = require 'app/components/Audio'\n\n  ShaderVertex = require 'app/shaders/BasicNoise.vert'\n  ShaderFragement = require 'app/shaders/BasicNoise.frag'\n\n  class AnimatedObject\n    @circleGeom = new THREE.CircleGeometry( 10, 30, 0, Math.PI * 2 )\n    @ringGeom = new THREE.RingGeometry( 10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2 )\n    @ringGeom2 = new THREE.RingGeometry( 10 - 1, 10, 30, 1, 0, Math.PI * 2 )\n\n    @properties:\n      size: {name: 'size', label: 'size', val: 80}\n      outlineWidth: {name: 'outlineWidth', label: 'outline width', val: 2}\n      drawOutline: {name: 'drawOutline', label: 'draw outline', val: true}\n      drawCircle: {name: 'drawCircle', label: 'draw circle', val: false}\n      color: {name: 'color', label: 'color', val: false}\n      fillColor: {name: 'fillColor', label: 'fill color', val: false}\n      delay: {name: 'delay', label: 'delay', val: 0}\n      duration: {name: 'duration', label: 'duration', val: 0.5}\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      randRotZ: {name: 'randRotZ', label: 'random rotation z', val: 0}\n      randScaleX: {name: 'randScaleX', label: 'random scale x', val: 0}\n      randScaleY: {name: 'randScaleY', label: 'random scale y', val: 0}\n\n    constructor: (@values = {}, time = 0) ->\n      for key, prop of AnimatedObject.properties\n        if !@values[key]?\n          @values[key] = prop.val\n\n      @container = new THREE.Object3D()\n      @container.scale.set(0.001,0.001,0.001)\n      @container.position.set(@values.x, @values.y, @values.z)\n      @container.rotation.set(0, 0, @values.randRotZ)\n      @materials = []\n      @start = Date.now()\n\n      @offset = new THREE.Vector3()\n      @velocity = new THREE.Vector3()\n      @weight = Math.random() * 0.5 + 0.5\n      @direction = new THREE.Vector3(Math.random() * 2 - 1, Math.random() * 2 - 1, 0)\n      @speed = 0\n      @animatedProperties =\n        scale: 0.001\n      @timeline = new TimelineMax()\n      # First value\n      tween = TweenLite.to(@animatedProperties, 0, {scale: 0.00001, ease: Linear.easeNone})\n      @timeline.add(tween, 0)\n      # Middle\n      tween = TweenLite.to(@animatedProperties, @values.duration, {scale: 1, delay: @values.delay, ease: Cubic.easeOut})\n      @timeline.add(tween)\n\n      # Stay for a while\n      tween = TweenLite.to(@animatedProperties, @values.duration * 0.5, {scale: 1, ease: Cubic.easeOut})\n      @timeline.add(tween)\n\n      # End\n      tween = TweenLite.to(@animatedProperties, @values.duration, {scale: 0.00001, ease: Cubic.easeIn})\n      @timeline.add(tween)\n\n      #if @values.drawOutline then @renderOutline(@values.size, @values.color, @values.outlineWidth)\n      #if @values.drawCircle then @renderCircle(@values.size, @values.fillColor)\n      @renderCircle(@values.size, @values.fillColor)\n\n    getGeometry: () ->\n      return AnimatedObject.circleGeom\n\n    getGeometryOutline: (outlineWidth) ->\n      if outlineWidth < 1 then return AnimatedObject.ringGeom\n      return AnimatedObject.ringGeom2\n\n    destroy: () ->\n      @timeline.clear()\n\n      for child in @container.children\n        @container.remove(child)\n\n      @container = null\n\n    getMaterial: (color) ->\n      uniforms = {\n        time: {\n          type: 'f',\n          value: 0.0\n        },\n        seed: {\n          type: 'f',\n          value: Math.random() * 1000\n        },\n        strength: {\n          type: 'f',\n          value: 0.2\n        },\n        color: {\n          type: 'c',\n          value: color\n        }\n      }\n      material = new THREE.ShaderMaterial({\n        vertexShader: ShaderVertex,\n        fragmentShader: ShaderFragement,\n        uniforms: uniforms,\n        transparent: true,\n        depthWrite: false,\n        depthTest: false\n        })\n\n      #material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0x009900, shininess: 30, shading: THREE.FlatShading })\n      material.blending = THREE.AdditiveBlending\n      return material\n\n    update: (seconds, progression) ->\n      #if Audio.instance.high > 0.002\n      #  @speed += Audio.instance.high\n      #console.log Audio.instance.high\n\n      #if Math.random() > 0.9 && Audio.instance.high > 0.09\n      #  @velocity.add(@direction.clone().multiplyScalar(Audio.instance.high * 12 * @weight))\n      @container.position.add(@velocity)\n\n      @velocity = @velocity.multiplyScalar(0.94)\n\n      timeDiff = Date.now() - @start\n      for material in @materials\n        material.uniforms['time'].value = 0.00025 * ( timeDiff )\n        material.uniforms['strength'].value = window.audio.mid\n\n      scale = @animatedProperties.scale * @values.size * 0.1\n      @container.scale.set(scale * (1 + @values.randScaleX), scale * (1 + @values.randScaleY), scale)\n\n    renderCircle: (size, color) =>\n      material = @getMaterial(color)\n      @materials.push(material)\n\n      object = new THREE.Mesh(@getGeometry() , material )\n      @container.add( object )\n\n    renderOutline: (size, color, outlineWidth) =>\n      geom = @getGeometryOutline(outlineWidth)\n\n      material = @getMaterial(color)\n      @materials.push(material)\n      object = new THREE.Mesh( geom, material )\n      @container.add( object )\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedObject.coffee\n **/","// Modified to have uv on the edges.\n\ndefine(function(require) {\n  var THREE = require('Three');\n\nTHREE.CircleGeometry2 = function ( radius, segments, thetaStart, thetaLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'CircleGeometry2';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 50;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tvar i, uvs = [],\n\tcenter = new THREE.Vector3(),\n  centerUV = new THREE.Vector2( 0, 0 );\n  //centerUV = new THREE.Vector2( 0.5, 0.5 );\n\n\tthis.vertices.push(center);\n\tuvs.push( centerUV );\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar segment = thetaStart + i / segments * thetaLength;\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tthis.vertices.push( vertex );\n\t\t//uvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\n\n    uvs.push(new THREE.Vector2(1, i / segments));\n\t}\n\n\tvar n = new THREE.Vector3( 0, 0, 1 );\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t//this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\n    this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), new THREE.Vector2(0, i / segments) ] );\n\n\t}\n\n\tthis.computeFaceNormals();\n\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.CircleGeometry2.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.CircleGeometry2.prototype.constructor = THREE.CircleGeometry2;\n\nreturn THREE.CircleGeometry2;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/geometries/CircleGeometry2.js\n ** module id = 45\n ** module chunks = 1\n **/","/**\n * Seedable random number generator functions.\n * @version 1.0.0\n * @license Public Domain\n *\n * @example\n * var rng = new RNG('Example');\n * rng.random(40, 50);  // =>  42\n * rng.uniform();       // =>  0.7972798995050903\n * rng.normal();        // => -0.6698504543216376\n * rng.exponential();   // =>  1.0547367609131555\n * rng.poisson(4);      // =>  2\n * rng.gamma(4);        // =>  2.781724687386858\n */\n\n/**\n * @param {String} seed A string to seed the generator.\n * @constructor\n */\nfunction RC4(seed) {\n    this.s = new Array(256);\n    this.i = 0;\n    this.j = 0;\n    for (var i = 0; i < 256; i++) {\n        this.s[i] = i;\n    }\n    if (seed) {\n        this.mix(seed);\n    }\n}\n\n/**\n * Get the underlying bytes of a string.\n * @param {string} string\n * @returns {Array} An array of bytes\n */\nRC4.getStringBytes = function(string) {\n    var output = [];\n    for (var i = 0; i < string.length; i++) {\n        var c = string.charCodeAt(i);\n        var bytes = [];\n        do {\n            bytes.push(c & 0xFF);\n            c = c >> 8;\n        } while (c > 0);\n        output = output.concat(bytes.reverse());\n    }\n    return output;\n};\n\nRC4.prototype._swap = function(i, j) {\n    var tmp = this.s[i];\n    this.s[i] = this.s[j];\n    this.s[j] = tmp;\n};\n\n/**\n * Mix additional entropy into this generator.\n * @param {String} seed\n */\nRC4.prototype.mix = function(seed) {\n    var input = RC4.getStringBytes(seed);\n    var j = 0;\n    for (var i = 0; i < this.s.length; i++) {\n        j += this.s[i] + input[i % input.length];\n        j %= 256;\n        this._swap(i, j);\n    }\n};\n\n/**\n * @returns {number} The next byte of output from the generator.\n */\nRC4.prototype.next = function() {\n    this.i = (this.i + 1) % 256;\n    this.j = (this.j + this.s[this.i]) % 256;\n    this._swap(this.i, this.j);\n    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n};\n\n/**\n * Create a new random number generator with optional seed. If the\n * provided seed is a function (i.e. Math.random) it will be used as\n * the uniform number generator.\n * @param seed An arbitrary object used to seed the generator.\n * @constructor\n */\nfunction RNG(seed) {\n    if (seed == null) {\n        seed = (Math.random() + Date.now()).toString();\n    } else if (typeof seed === \"function\") {\n        // Use it as a uniform number generator\n        this.uniform = seed;\n        this.nextByte = function() {\n            return ~~(this.uniform() * 256);\n        };\n        seed = null;\n    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n        seed = JSON.stringify(seed);\n    }\n    this._normal = null;\n    if (seed) {\n        this._state = new RC4(seed);\n    } else {\n        this._state = null;\n    }\n}\n\n/**\n * @returns {number} Uniform random number between 0 and 255.\n */\nRNG.prototype.nextByte = function() {\n    return this._state.next();\n};\n\n/**\n * @returns {number} Uniform random number between 0 and 1.\n */\nRNG.prototype.uniform = function() {\n    var BYTES = 7; // 56 bits to make a 53-bit double\n    var output = 0;\n    for (var i = 0; i < BYTES; i++) {\n        output *= 256;\n        output += this.nextByte();\n    }\n    return output / (Math.pow(2, BYTES * 8) - 1);\n};\n\n/**\n * Produce a random integer within [n, m).\n * @param {number} [n=0]\n * @param {number} m\n *\n */\nRNG.prototype.random = function(n, m) {\n    if (n == null) {\n        return this.uniform();\n    } else if (m == null) {\n        m = n;\n        n = 0;\n    }\n    return n + Math.floor(this.uniform() * (m - n));\n};\n\n/**\n * Generates numbers using this.uniform() with the Box-Muller transform.\n * @returns {number} Normally-distributed random number of mean 0, variance 1.\n */\nRNG.prototype.normal = function() {\n    if (this._normal !== null) {\n        var n = this._normal;\n        this._normal = null;\n        return n;\n    } else {\n        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n        var y = this.uniform();\n        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n    }\n};\n\n/**\n * Generates numbers using this.uniform().\n * @returns {number} Number from the exponential distribution, lambda = 1.\n */\nRNG.prototype.exponential = function() {\n    return -Math.log(this.uniform() || Math.pow(2, -53));\n};\n\n/**\n * Generates numbers using this.uniform() and Knuth's method.\n * @param {number} [mean=1]\n * @returns {number} Number from the Poisson distribution.\n */\nRNG.prototype.poisson = function(mean) {\n    var L = Math.exp(-(mean || 1));\n    var k = 0, p = 1;\n    do {\n        k++;\n        p *= this.uniform();\n    } while (p > L);\n    return k - 1;\n};\n\n/**\n * Generates numbers using this.uniform(), this.normal(),\n * this.exponential(), and the Marsaglia-Tsang method.\n * @param {number} a\n * @returns {number} Number from the gamma distribution.\n */\nRNG.prototype.gamma = function(a) {\n    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n    var c = 1 / Math.sqrt(9 * d);\n    do {\n        do {\n            var x = this.normal();\n            var v = Math.pow(c * x + 1, 3);\n        } while (v <= 0);\n        var u = this.uniform();\n        var x2 = Math.pow(x, 2);\n    } while (u >= 1 - 0.0331 * x2 * x2 &&\n             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n    if (a < 1) {\n        return d * v * Math.exp(this.exponential() / -a);\n    } else {\n        return d * v;\n    }\n};\n\n/**\n * Accepts a dice rolling notation string and returns a generator\n * function for that distribution. The parser is quite flexible.\n * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n * @param {RNG} rng An optional RNG object.\n * @returns {Function}\n */\nRNG.roller = function(expr, rng) {\n    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n    var dice = parseFloat(parts[0]) || 1;\n    var sides = parseFloat(parts[1]);\n    var mod = parseFloat(parts[2]) || 0;\n    rng = rng || new RNG();\n    return function() {\n        var total = dice + mod;\n        for (var i = 0; i < dice; i++) {\n            total += rng.random(sides);\n        }\n        return total;\n    };\n};\n\n/* Provide a pre-made generator instance. */\nRNG.$ = new RNG();\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = RNG\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/exports-loader?RNG!./src/scripts/bower_components/rng-js/rng.js\n ** module id = 46\n ** module chunks = 1\n **/"],"sourceRoot":""}