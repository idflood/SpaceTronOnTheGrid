{"version":3,"sources":["webpack:///App.js","webpack:///webpack/bootstrap a77038209ac687b469b6?068e","webpack:///./src/scripts/app/App.coffee","webpack:///./src/scripts/vendors/three.js-extras/shaders/FXAAShader.js","webpack:///external \"THREE\"","webpack:///external \"TweenTime.Core\"","webpack:///./src/scripts/app/components/Audio.coffee","webpack:///./src/scripts/app/components/Shaders.coffee","webpack:///./src/scripts/app/components/Background.coffee","webpack:///./src/scripts/app/components/PostFX.coffee","webpack:///./src/scripts/app/components/SceneManager.coffee","webpack:///./src/scripts/app/components/ElementFactory.coffee","webpack:///./src/scripts/app/components/DataNormalizer.coffee","webpack:///./src/scripts/app/elements/Particles.coffee","webpack:///./src/scripts/app/elements/OrganizedChaos.coffee","webpack:///./src/scripts/app/data.json","webpack:///external \"_\"","webpack:///external {\"root\":\"signals\",\"commonjs\":\"./signals\",\"amd\":\"signals\"}","webpack:///./src/scripts/app/postprocessing/GlitchPass2.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/EffectComposer.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/MaskPass.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/BloomPass.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/ShaderPass.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/RenderPass.js","webpack:///./src/scripts/vendors/three.js-extras/postprocessing/FilmPass.js","webpack:///./src/scripts/vendors/three.js-extras/shaders/CopyShader.js","webpack:///./src/scripts/vendors/three.js-extras/shaders/FilmShader.js","webpack:///./src/scripts/vendors/three.js-extras/shaders/ConvolutionShader.js","webpack:///./src/scripts/vendors/three.js-extras/shaders/VignetteShader.js","webpack:///./src/scripts/app/shaders/DigitalGlitch2.js","webpack:///./src/scripts/app/elements/Camera.coffee","webpack:///./src/scripts/app/elements/Circles.coffee","webpack:///./src/scripts/app/elements/Boxes.coffee","webpack:///./src/scripts/app/elements/Lines.coffee","webpack:///./src/scripts/app/elements/SingleObject.coffee","webpack:///./src/scripts/app/elements/Circle.coffee","webpack:///./src/scripts/app/components/Colors.coffee","webpack:///./src/scripts/app/elements/ElementBase.coffee","webpack:///./src/scripts/app/geometries/CircleGeometry2.js","webpack:///./src/scripts/bower_components/rng-js/rng.js?2b54","webpack:///./src/scripts/bower_components/rng-js/rng.js","webpack:///./src/scripts/app/shaders/Basic.vert","webpack:///./src/scripts/app/shaders/Line.frag","webpack:///./src/scripts/app/shaders/BasicNoise.vert","webpack:///./src/scripts/app/shaders/BasicNoise.frag","webpack:///./src/scripts/app/elements/AnimatedCircle.coffee","webpack:///./src/scripts/app/elements/SpreadedObjects.coffee","webpack:///./src/scripts/app/elements/AnimatedBox.coffee","webpack:///./src/scripts/app/elements/AnimatedLine.coffee","webpack:///./src/scripts/app/geometries/RingGeometry2.js","webpack:///external \"TweenMax\"","webpack:///./src/scripts/app/elements/AnimatedObject.coffee"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","bind","fn","me","apply","arguments","require","App","Audio","Background","DataNormalizer","ElementFactory","OrganizedChaos","Particles","PostFX","SceneManager","Shaders","THREE","TweenTime","dataJson","window","this","animate","onWindowResize","updateCameraAspect","onAudioLoaded","onTimerSeeked","onTimerStatusChanged","audio_url","conf","container","light1","size","shaders","audio","factory","JSON","parse","console","log","settings","data","normalizeData","tweenTime","timer","statusChanged","add","seeked","time","seek","getScreenSize","camera","PerspectiveCamera","width","height","position","z","activeCamera","scene","Scene","fog","FogExp2","sceneManager","Date","now","document","createElement","containerWebgl","body","appendChild","renderer","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","setClearColor","DirectionalLight","set","domElement","addEventListener","postfx","prototype","is_playing","play","pause","$","addClass","createElements","material","object","object2","object3","MeshPhongMaterial","color","specular","shininess","shading","SmoothShading","Mesh","PlaneBufferGeometry","rotation","__createElementsBackup","material2","materialBlack","MeshBasicMaterial","transparent","blending","MultiplyBlending","wireframe","CircleGeometry","Math","PI","RingGeometry","SCREEN_HEIGHT","SCREEN_WIDTH","propertieswidth","timelineheight","innerWidth","innerHeight","editorEnabled","hasClass","aspect","updateProjectionMatrix","resize","requestAnimationFrame","update","render","delta","newTime","particles","chaos","lookAt","undefined","FXAAShader","uniforms","tDiffuse","type","value","resolution","Vector2","vertexShader","join","fragmentShader","Core","_","mp3Url","onLoadedCallback","gain2","muted","parameters","rms","createSound","load","fftSize","filters","playing","timeDelay","bass","mid","high","context","AudioContext","webkitAudioContext","analyser","createAnalyser","source","createBufferSource","frequency","Q","gain","treble","each","_this","spec","key","filter","createBiquadFilter","createDelay","delayNode","createDelayNode","delayTime","createGain","gainNode","createGainNode","delay","sampleRate","connect","destination","samples","frequencyBinCount","freq","Uint8Array","instance","bins","i","num","waveforms","smoothingTimeConstant","getByteFrequencyData","getByteTimeDomainData","currentTime","seconds","buffer","url","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","buff","loop","send","src","stop","disconnect","start","duration","accum","ref","s","length","sqrt","LineFragement","ShaderVertex","j","simpleMaterial","FlatShading","side","DoubleSide","push","createMaterialLine","len","results","shader","percent","max","speed","random","getMaterialLine","animated","floor","Color","fogColor","fogDensity",0.2045,"ShaderMaterial","depthWrite","depthTest","AdditiveBlending","bg","bgMat","texture","ImageUtils","loadTexture","wrapS","wrapT","RepeatWrapping","repeat","map","PlaneGeometry","dpr","renderModel","autoClear","RenderPass","renderTargetParameters","minFilter","LinearFilter","magFilter","format","RGBFormat","stencilBufer","renderTarget","WebGLRenderTarget","effectFXAA","ShaderPass","bloom","BloomPass","glitchPass","GlitchPass2","intensity","tScratch","vignettePass","VignetteShader","filmShader","FilmPass","renderToScreen","composer","EffectComposer","addPass","reset","clear","Signals","defaultCamera","updated","timestamp","el","item","should_exist","end","isDirtyObject","remove","destroy","classObject","getTypeClass","create","values","_data","isCamera","Boxes","Camera","Circle","Circles","Lines","SingleObject","extend","properties","val","elements","Chaos","Box","itemType","getTypeProperties","itemName","element_class","prop","prop_definition","keys","warn","normalizeItem","data_item","existing_prop","key2","new_prop","static_prop","static_properties","value2","find","name","group","Colors","values1","index","geom","num_childs","ref1","Object3D","items","scale","ambient","circleGeom","ringGeom","x","y","numItems","parseInt","label","triggerRebuild","force","current","volume","child","parent","ctor","constructor","hasProp","__super__","hasOwnProperty","CircleGeometry2","ElementBase","RNG","ShaderFragement","superClass","build","lineGeom","ringGeom2","TYPE_LINE","TYPE_SQUARE","TYPE_CIRCLE","seed","depth","spread","spreadY","maxChilds","rotationX","min","rotationY","rotationZ","rotationRandX","rotationRandY","rotationRandZ","circles","squares","lineWidth","lineWidthRand","materialColors","materialAnimated","getDefaultProperties","rebuild","empty","getItemType","rng","ii","offset","pos2","posX","posY","rngChilds","rngRotationX","rngRotationY","rngRotationZ","rngScale","rngScaleLine","rngShaderAnim","rngSpacing","rngType","rngX","rngY","spacing","spreadY_half","spread_half","Vector3","addItem","clone","normalize","multiplyScalar","k","results1","item2","item2Container","quaternion","Quaternion","setFromAxisAngle","setFromQuaternion","copy","updateMatrix","getMaterial","strength","needs_rebuild","valueChanged","merge","children","dt_size","DigitalGlitch2","error","UniformsUtils","generateHeightmap","enabled","needsSwap","OrthographicCamera","quad","goWild","curF","generateTrigger","writeBuffer","readBuffer","randFloat","randX","randInt","data_arr","Float32Array","DataTexture","FloatType","NearestFilter","needsUpdate","flipY","stencilBuffer","renderTarget1","renderTarget2","passes","CopyShader","copyPass","swapBuffers","tmp","pass","insertPass","splice","maskActive","il","stencilFunc","NOTEQUAL","EQUAL","MaskPass","ClearMaskPass","inverse","colorMask","depthMask","writeValue","clearValue","enable","STENCIL_TEST","stencilOp","REPLACE","ALWAYS","clearStencil","KEEP","disable","kernelSize","sigma","pars","renderTargetX","renderTargetY","copyShader","copyUniforms","materialCopy","ConvolutionShader","convolutionShader","convolutionUniforms","blurx","buildKernel","materialConvolution","defines","KERNEL_SIZE_FLOAT","toFixed","KERNEL_SIZE_INT","blurX","blurY","textureID","overrideMaterial","clearColor","clearAlpha","oldClearColor","oldClearAlpha","getClearColor","getClearAlpha","noiseIntensity","scanlinesIntensity","scanlinesCount","grayscale","FilmShader","nIntensity","sIntensity","sCount","opacity","uImageIncrement","cKernel","gauss","exp","sum","halfWidth","kMaxKernelSize","ceil","Array","darkness","tDisp","byp","amount","angle","seed_x","seed_y","distortion_x","distortion_y","col_s","target","target_x","target_y","target_z","fov","AnimatedCircle","SpreadedObjects","getItemClass","AnimatedBox","AnimatedLine","getGeometry","timeline","TimelineMax","rotX","rotY","rotZ","scaleX","scaleY","scaleZ","geometry","degreeToRadian","RingGeometry2","innerRadius","inner_radius","pi2","dynamic","vertices","verticesNeedUpdate","dispose","items2","get","abs","cache","buildCache","has_changed","new_val","degree","radius","segments","thetaStart","thetaLength","Geometry","uvs","center","centerUV","vertex","segment","cos","sin","n","faces","Face3","faceVertexUvs","computeFaceNormals","boundingSphere","Sphere","Object","RC4","mix","toString","uniform","nextByte","stringify","_normal","_state","getStringBytes","string","output","charCodeAt","bytes","concat","reverse","_swap","input","next","BYTES","pow","normal","exponential","poisson","mean","L","gamma","a","d","v","u","x2","roller","expr","parts","split","slice","dice","parseFloat","sides","mod","total","AnimatedObject","getGeometryOutline","outlineWidth","TweenMax","totalDuration","items_position","randY","randZ","randRotZ","randScaleX","randScaleY","circleRadius","circleRadiusMax","progression","percent_color","border_radius","draw_circle","draw_outline","fillColor","itemClass","pos","rndtype","rngAnimation","rngOutline","noOutline","getRandomPosition","drawOutline","drawCircle","len1","ref2","timeDiff","velocity","materials","animatedProperties","outerRadius","thetaSegments","phiSegments","o","radiusStep","uv","thetaSegment","v1","v2","v3","tween","renderOutline","renderCircle","weight","direction","TweenLite","to","ease","Linear","easeNone","Cubic","easeOut","easeIn"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,UAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GEnChC,GAAAW,GAAAC,EAAA,SAAAC,EAAAC,GAAA,wBAAAD,GAAAE,MAAAD,EAAAE,YAAAL,GAAO,SAACM,GACN,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CFoDC,OEpDDF,GAAQ5B,EAAQ,GAEhB6B,EAAY7B,EAAQ,GAEpB2B,EAAU3B,EAAQ,GAClBoB,EAAapB,EAAQ,GACrByB,EAASzB,EAAQ,GACjB0B,EAAe1B,EAAQ,IACvBmB,EAAQnB,EAAQ,GAChBsB,EAAiBtB,EAAQ,IACzBqB,EAAiBrB,EAAQ,IAEzB8B,EAAW9B,EAAQ,IAInBwB,EAAYxB,EAAQ,IACpBuB,EAAiBvB,EAAQ,IAEzB+B,OAAOb,IAAYA,EAAA,WACJ,QAAAA,KACXc,KAAAC,QAAArB,EAAAoB,KAAAC,QAAAD,WAAAE,eAAAtB,EAAAoB,KAAAE,eAAAF,WAAAG,mBAAAvB,EAAAoB,KAAAG,mBAAAH,WAAAI,cAAAxB,EAAAoB,KAAAI,cAAAJ,WAAAK,cAAAzB,EAAAoB,KAAAK,cAAAL,WAAAM,qBAAA1B,EAAAoB,KAAAM,qBAAAN,KAAA,IAAAO,GAAAC,EAAAC,EAAAC,EAAAC,CAAAZ,QAAOI,mBAAqBH,KAACG,mBAE7BH,KAACY,QAAc,GAAAjB,GAEfY,EAAY,2CACZP,KAACa,MAAY,GAAA1B,GAAMoB,EAAWP,KAACI,eAC/BJ,KAACc,QAAc,GAAAxB,GAGfkB,EAAOO,KAAKC,MAAMlB,GAClBmB,QAAQC,IAAIV,GACZR,KAACmB,SAAWX,EAAKW,SACjBnB,KAACoB,KAAO/B,EAAegC,cAAcb,EAAKY,KAAMpB,KAACc,SAEjDd,KAACsB,UAAgB,GAAAzB,GAAUG,KAACoB,MAC5BpB,KAACsB,UAAUC,MAAMC,cAAcC,IAAIzB,KAACM,sBACpCN,KAACsB,UAAUC,MAAMG,OAAOD,IAAIzB,KAACK,eAE1BL,KAACmB,SAASQ,MACX3B,KAACsB,UAAUC,MAAMK,MAAM5B,KAACmB,SAASQ,OAEnChB,EAAOX,KAAC6B,gBACR7B,KAAC8B,OAAa,GAAAlC,GAAMmC,kBAAmB,GAAIpB,EAAKqB,MAAQrB,EAAKsB,OAAQ,EAAG,KACxEjC,KAAC8B,OAAOI,SAASC,EAAI,IACrBpC,OAAOqC,aAAepC,KAAC8B,OAEvB9B,KAACqC,MAAY,GAAAzC,GAAM0C,MACnBtC,KAACqC,MAAME,IAAU,GAAA3C,GAAM4C,QAAS,QAAU,OAE1CxC,KAACyC,aAAmB,GAAA/C,GAAaM,KAACsB,UAAWtB,KAACoB,KAAMpB,KAACqC,MAAOrC,KAAC8B,OAAQ9B,KAACc,SAEtEd,KAAC2B,KAAoB,KAAbe,KAAKC,MACblC,EAAYmC,SAASC,cAAe,OACpC7C,KAAC8C,eAAiBrC,EAClBmC,SAASG,KAAKC,YAAavC,GAE3BT,KAACiD,SAAe,GAAArD,GAAMsD,eAAiBC,WAAW,EAAMC,OAAO,IAC/DpD,KAACiD,SAASI,cAAetD,OAAOuD,kBAChCtD,KAACiD,SAASM,QAAQ5C,EAAKqB,MAAOrB,EAAKsB,QAGnCjC,KAACiD,SAASO,cAAe,QAAU,GAKnC9C,EAAa,GAAAd,GAAM6D,iBAAkB,SAAU,IAC/C/C,EAAOwB,SAASwB,IAAI,IAAK,IAAK,KAC9B1D,KAACqC,MAAMZ,IAAIf,GAIXD,EAAUuC,YAAahD,KAACiD,SAASU,YAEjC5D,OAAO6D,iBAAiB,SAAU5D,KAACE,gBAAgB,GAEnDF,KAAC6D,OAAa,GAAApE,GAAOO,KAACqC,MAAOrC,KAAC8B,OAAQ9B,KAACiD,SAAUtC,GAUjDX,KAACC,UFqJF,MExNDf,GAAA4E,UAqEAxD,qBAAsB,SAACyD,GACrB,MAAGA,GACD/D,KAACa,MAAMmD,OAEPhE,KAACa,MAAMoD,SAzEX/E,EAAA4E,UA2EAzD,cAAe,SAACsB,GFiBb,MEhBD3B,MAACa,MAAMe,KAAKD,EAAO,MA5ErBzC,EAAA4E,UA8EA1D,cAAe,WFmBZ,MElBDa,SAAQC,IAAI,gBACZgD,EAAE,QAAQC,SAAS,oBAhFrBjF,EAAA4E,UAkFAM,eAAgB,WACd,GAAAC,GAAAC,EAAAC,EAAAC,CFoCC,OEpCDH,GAAe,GAAAzE,GAAM6E,mBAAmBC,MAAO,QAAUC,SAAU,QAAUC,UAAW,GAAIC,QAASjF,EAAMkF,gBAG3GR,EAAa,GAAA1E,GAAMmF,KAAU,GAAAnF,GAAMoF,oBAAqB,IAAM,IAAK,EAAG,GAAKX,GAC3EC,EAAOpC,SAASwB,IAAK,IAAK,EAAG,MAC7BY,EAAOW,SAASvB,IAAI,GAAK,GAAK,IAC9B1D,KAACqC,MAAMZ,IAAK6C,GAEZC,EAAc,GAAA3E,GAAMmF,KAAU,GAAAnF,GAAMoF,oBAAqB,IAAM,IAAK,EAAG,GAAKX,GAC5EE,EAAQrC,SAASwB,IAAK,IAAK,EAAG,MAC9Ba,EAAQU,SAASvB,IAAI,IAAM,IAAM,KACjC1D,KAACqC,MAAMZ,IAAK8C,GAEZC,EAAc,GAAA5E,GAAMmF,KAAU,GAAAnF,GAAMoF,oBAAqB,IAAM,IAAK,EAAG,GAAKX,GAC5EG,EAAQtC,SAASwB,IAAK,KAAM,KAAM,MAClCc,EAAQS,SAASvB,IAAI,IAAM,KAAM,KACjC1D,KAACqC,MAAMZ,IAAK+C,IAnGdtF,EAAA4E,UAsGAoB,uBAAwB,WAGtB,GAAAb,GAAAc,EAAAC,EAAAd,CF4CC,OE5CDD,GAAe,GAAAzE,GAAMyF,mBAAmBX,MAAO,SAAUY,aAAa,IACtEjB,EAASkB,SAAW3F,EAAM4F,iBAE1BJ,EAAoB,GAAAxF,GAAMyF,mBAAmBX,MAAO,QAAUY,aAAa,EAAMG,WAAW,IAC5FL,EAAcG,SAAW3F,EAAM4F,iBAE/BL,EAAgB,GAAAvF,GAAMyF,mBAAmBX,MAAO,QAAUY,aAAa,IACvEH,EAAUI,SAAW3F,EAAM4F,iBAE3BlB,EAAa,GAAA1E,GAAMmF,KAAU,GAAAnF,GAAM8F,eAAgB,GAAI,GAAI,EAAa,EAAVC,KAAKC,IAAUvB,GAE7EC,EAAOpC,SAASwB,IAAK,GAAI,EAAG,GAE5B1D,KAACqC,MAAMZ,IAAK6C,GAEZA,EAAa,GAAA1E,GAAMmF,KAAU,GAAAnF,GAAMiG,aAAc,GAAI,GAAI,GAAI,EAAG,EAAa,EAAVF,KAAKC,IAAUR,GAElFd,EAAOpC,SAASwB,IAAK,GAAI,EAAG,GAE5B1D,KAACqC,MAAMZ,IAAK6C,GAIZA,EAAa,GAAA1E,GAAMmF,KAAU,GAAAnF,GAAMiG,aAAc,GAAI,GAAI,EAAG,EAAG,EAAa,EAAVF,KAAKC,IAAUT,GACjFb,EAAOpC,SAASwB,IAAK,IAAK,EAAG,GAC7BY,EAAOW,SAASvB,IAAI,EAAG,EAAGiC,KAAKC,GAAK,GACpC5F,KAACqC,MAAMZ,IAAK6C,IAnIdpF,EAAA4E,UAqIAjC,cAAe,WACb,GAAAiE,GAAAC,EAAAC,EAAAC,CAWA,OAXAF,GAAehG,OAAOmG,WACtBJ,EAAgB/F,OAAOoG,YACpBpG,OAAOqG,gBACRH,EAAiB,IACd/B,EAAE,QAAQmC,SAAS,wBAA2BJ,EAAiB,IAClED,EAAkB,IACf9B,EAAE,QAAQmC,SAAS,0BAA6BL,EAAkB,GACrEF,GAAiBG,EACjBF,GAAgBC,IAGVhE,MAAO+D,EAAc9D,OAAQ6D,IAjJvC5G,EAAA4E,UAmJA3D,mBAAoB,SAAC2B,EAAQnB,GFmC1B,MAPY,OAARA,IE5BsBA,GAAO,GAC/BA,KAAQ,IACTA,EAAOX,KAAC6B,iBACVC,EAAOwE,OAAS3F,EAAKqB,MAAQrB,EAAKsB,OAClCH,EAAOyE,0BAvJTrH,EAAA4E,UAyJA5D,eAAgB,WACd,GAAAS,EFqCC,OErCDA,GAAOX,KAAC6B,gBAER7B,KAACG,mBAAmBH,KAAC8B,OAAQnB,GAC7BX,KAACG,mBAAmBJ,OAAOqC,aAAczB,GAEzCX,KAACiD,SAASM,QAAQ5C,EAAKqB,MAAOrB,EAAKsB,QACnCjC,KAAC6D,OAAO2C,OAAO7F,EAAKqB,MAAOrB,EAAKsB,SAhKlC/C,EAAA4E,UAkKA7D,QAAS,WFoCN,MEnCDwG,uBAAsBzG,KAACC,SACvBD,KAACa,MAAM6F,SACP1G,KAACY,QAAQ8F,SACT1G,KAAC2G,UAtKHzH,EAAA4E,UAwKA6C,OAAQ,WACN,GAAAC,GAAAC,CF4CC,OE5CDA,GAAuB,KAAbnE,KAAKC,MACfiE,EAAQC,EAAU7G,KAAC2B,KAEhB3B,KAAC8G,WAAe9G,KAAC8G,UAAUJ,SAC3B1G,KAAC+G,OAAW/G,KAAC+G,MAAML,SACtB1G,KAAC8B,OAAOkF,OAAQhH,KAACqC,MAAMH,UACvBlC,KAAC6D,OAAO8C,OAAOC,GAEf5G,KAAC2B,KAAOkF,GFuCF3H,ME7OZX,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KFqPM,SAASP,EAAQD,EAASH,GGpPhC4B,MAAAsH,YAEAC,UAEAC,UAAiBC,KAAA,IAAAC,MAAA,MACjBC,YAAiBF,KAAA,KAAAC,MAAA,GAAA1H,OAAA4H,QAAA,gBAIjBC,cAEA,oBAEA,gBAEA,YACA,4EAEA,KAEAC,KAAA,MAEAC,gBAEA,8BACA,2BAEA,oBAEA,wCACA,sCACA,gCAEA,gBAEA,iGACA,gGACA,gGACA,+FACA,uEACA,0BACA,4BAEA,2CAEA,qCACA,qCACA,qCACA,qCACA,qCACA,qFACA,qFAEA,YACA,oDACA,oDAEA,gHAEA,6EACA,mDACA,6CACA,kCAEA,oGACA,gGACA,eAEA,qFACA,gFACA,gBACA,sBAEA,mCAEA,sDAEA,wCAEA,WAEA,wCAEA,IAEA,KAEAD,KAAA,QHuQM,SAAStJ,EAAQD,EAASH,GIxWhCI,EAAAD,QAAAyB,OJ8WM,SAASxB,EAAQD,EAASH,GK9WhCI,EAAAD,QAAA0B,UAAA+H,MLmXO,CACA,CAED,SAASxJ,EAAQD,EAASH,GMrXhC,GAAAW,GAAAC,EAAA,SAAAC,EAAAC,GAAA,wBAAAD,GAAAE,MAAAD,EAAAE,YAAAL,GAAO,SAACM,GACN,GAAAE,GAAA0I,CN2XC,OM3XDA,GAAI7J,EAAQ,IAENmB,EAAA,WAGS,QAAAA,GAAC2I,EAAQC,GACpB,GAAAC,GAAAC,EAAAC,CADoBlI,MAAC+H,iBAADA,EACpB/H,KAAAmI,IAAAvJ,EAAAoB,KAAAmI,IAAAnI,WAAAgE,KAAApF,EAAAoB,KAAAgE,KAAAhE,WAAAiE,MAAArF,EAAAoB,KAAAiE,MAAAjE,WAAAoI,YAAAxJ,EAAAoB,KAAAoI,YAAApI,WAAAqI,KAAAzJ,EAAAoB,KAAAqI,KAAArI,WAAA4B,KAAAhD,EAAAoB,KAAA4B,KAAA5B,WAAA0G,OAAA9H,EAAAoB,KAAA0G,OAAA1G,MAAAD,OAAOc,MAAQb,KACfiI,GAAQ,EACRjI,KAACsI,QAAU,IACXtI,KAACuI,WACDvI,KAACwI,SAAU,EACXxI,KAAC2C,IAAM,EACP3C,KAACyI,UAAY,EAEbzI,KAAC0I,KAAO,EACR1I,KAAC2I,IAAM,EACP3I,KAAC4I,KAAO,EAER5I,KAAC6I,SAAU,EACe,mBAAvBC,cACD9I,KAAC6I,QAAc,GAAAC,cACoB,mBAA7BC,sBACN/I,KAAC6I,QAAc,GAAAE,qBAGjB/I,KAACgJ,SAAWhJ,KAAC6I,QAAQI,iBACrBjJ,KAACgJ,SAASV,QAAUtI,KAACsI,QAErBtI,KAACkJ,OAASlJ,KAAC6I,QAAQM,qBAGnBjB,GACEQ,MACErB,KAAM,EACN+B,UAAW,IACXC,EAAG,IACHC,KAAM,GACRX,KACEtB,KAAM,EACN+B,UAAW,IACXC,EAAG,IACHC,KAAM,GACRC,QACElC,KAAM,EACN+B,UAAW,IACXC,EAAG,IACHC,KAAM,IACVzB,EAAE2B,KAAKtB,EAAY,SAAAuB,GNiYhB,MMjYgB,UAACC,EAAMC,GACxB,GAAAC,ENqZG,OMrZHA,GAASH,EAACZ,QAAQgB,qBAClBD,EAAOD,IAAMA,EACbC,EAAOvC,KAAOqC,EAAKrC,KACnBuC,EAAOR,UAAYM,EAAKN,UACxBQ,EAAOP,EAAE/B,MAAQoC,EAAKL,EAGtBO,EAAOZ,SAAWS,EAACZ,QAAQI,iBAC3BW,EAAOZ,SAASV,QAAUmB,EAACnB,QAGxB,MAAAmB,EAAAZ,QAAAiB,YACDF,EAAOG,UAAYN,EAACZ,QAAQiB,cAE5BF,EAAOG,UAAYN,EAACZ,QAAQmB,kBAC9BJ,EAAOG,UAAUE,UAAU3C,MAAQ,EAGhC,MAAAmC,EAAAZ,QAAAqB,WACDN,EAAOO,SAAWV,EAACZ,QAAQqB,aAE3BN,EAAOO,SAAWV,EAACZ,QAAQuB,iBAC7BR,EAAOO,SAASb,KAAKhC,MAAQoC,EAAKJ,KAElCG,EAAClB,QAAQoB,GAAOC,IAzBC5J,OA4BhB,MAAAA,KAAA6I,QAAAiB,YACD9J,KAACqK,MAAQrK,KAAC6I,QAAQiB,cAElB9J,KAACqK,MAAQrK,KAAC6I,QAAQmB,kBACpBhK,KAACqK,MAAMJ,UAAU3C,MAAmB,EAAXtH,KAACsI,QAActI,KAAC6I,QAAQyB,WAGjDtK,KAACkJ,OAAOqB,QAAQvK,KAACgJ,UACjBhJ,KAACgJ,SAASuB,QAAQvK,KAACqK,OAGhBpC,GACDD,EAAQhI,KAAC6I,QAAQqB,aACjBlK,KAACqK,MAAME,QAAQvC,GACfA,EAAMsB,KAAKhC,MAAQ,EACnBU,EAAMuC,QAAQvK,KAAC6I,QAAQ2B,cAEvBxK,KAACqK,MAAME,QAAQvK,KAAC6I,QAAQ2B,aAG1B3C,EAAE2B,KAAKxJ,KAACuI,QAAS,SAAAkB,GN0Xd,MM1Xc,UAACG,GN8Xb,MM7XHH,GAACP,OAAOqB,QAAQX,EAAOG,WACvBH,EAAOG,UAAUQ,QAAQX,GACzBA,EAAOW,QAAQX,EAAOO,UACtBP,EAAOO,SAASI,QAAQX,EAAOZ,YAJhBhJ,OAOjBA,KAACyK,QAAUzK,KAACgJ,SAAS0B,kBACrB1K,KAACoB,MACCuJ,KAAU,GAAAC,YAAW5K,KAACyK,SACtB9I,KAAU,GAAAiJ,YAAW5K,KAACyK,SACtBb,QACElB,KAAU,GAAAkC,YAAW,KACrBjC,IAAS,GAAAiC,YAAW,KACpBrB,OAAY,GAAAqB,YAAW,OAE3B5K,KAACqI,KAAKP,GAGN3I,EAAM0L,SAAW7K,KNkelB,MMjlBDb,GAAC0L,UAAW,EAAZ1L,EAAA2E,UAiHA4C,OAAQ,WACN,GAAAoE,GAAAC,EAAAC,EAAAC,CAAA,IAAGjL,KAACwI,WAAW,EAAf,CAWA,IAVAxI,KAACgJ,SAASkC,sBAAwB,EAClClL,KAACgJ,SAASmC,qBAAqBnL,KAACoB,KAAKuJ,MACrC3K,KAACgJ,SAASoC,sBAAsBpL,KAACoB,KAAKO,MAEtCkG,EAAE2B,KAAKxJ,KAACuI,QAAS,SAAAkB,GN6Xd,MM7Xc,UAACG,GN8Xb,MM7XHA,GAAOZ,SAASoC,sBAAsB3B,EAACrI,KAAKwI,OAAOA,EAAOD,QAD3C3J,OAIjB8K,GAAQ,EAAG,EAAG,EAAG,GACjBG,GAAajL,KAACoB,KAAKO,KAAM3B,KAACoB,KAAKwI,OAAOlB,KAAM1I,KAACoB,KAAKwI,OAAOjB,IAAK3I,KAACoB,KAAKwI,OAAOL,QAChEyB,EAAAD,EAAA,KAAAA,EAAAC,IAAAD,EACTD,EAAKE,GAAOhL,KAACmI,IAAI8C,EAAUD,GNkY5B,OMjYDhL,MAAC0I,KAAOoC,EAAK,GACb9K,KAAC2I,IAAMmC,EAAK,GACZ9K,KAAC4I,KAAOkC,EAAK,GAIb9K,KAAC2C,IAAM3C,KAAC6I,QAAQwC,YAAcrL,KAACyI,YArIjCtJ,EAAA2E,UAuIAlC,KAAM,SAAC0J,GAIL,MAHAtL,MAAC2C,IAAM2I,EAGJtL,KAACkJ,OAAOqC,QAENvL,KAACwI,SACFxI,KAACiE,QACDjE,KAACgE,QAJL,QA3IF7E,EAAA2E,UAoJAuE,KAAM,SAACmD,GACL,GAAAC,ENyYC,OMzYDA,GAAc,GAAAC,gBACdD,EAAQE,KAAK,MAAOH,GAAK,GACzBC,EAAQG,aAAe,cAEvBH,EAAQI,OAAS,SAAApC,GN0Xd,MM1Xc,YN2XZ,MMzXHA,GAACZ,QAAQiD,gBAAgBL,EAAQM,SAAU,SAACC,GAI1C,MAHAvC,GAAC8B,OAASS,EACVvC,EAACP,OAAOqC,OAAS9B,EAAC8B,OAClB9B,EAACP,OAAO+C,MAAO,EACZxC,EAAC1B,iBAAsB0B,EAAC1B,mBAA3B,WANa/H,MASjByL,EAAQS,QAlKV/M,EAAA2E,UAoKAsE,YAAa,WACX,GAAA+D,EAMA,OANAA,GAAMnM,KAAC6I,QAAQM,qBACZnJ,KAACuL,SACFY,EAAIZ,OAASvL,KAACuL,QAChBY,EAAI5B,QAAQvK,KAACgJ,UACbnB,EAAE2B,KAAKxJ,KAACuI,QAAS,SAAAkB,GNgYd,MMhYc,UAACG,GNiYb,MMhYHuC,GAAI5B,QAAQX,EAAOG,aADJ/J,OAEVmM,GA3KThN,EAAA2E,UA6KAG,MAAO,WN2YJ,MM1YEjE,MAACkJ,SACClJ,KAACwI,SACFxI,KAACkJ,OAAOkD,KAAK,GACfpM,KAACkJ,OAAOmD,WAAW,GACnBrM,KAACkJ,QAAS,GACZlJ,KAACwI,SAAU,GAnLbrJ,EAAA2E,UAqLAE,KAAM,WAMJ,MALAhE,MAACwI,SAAU,EACXxI,KAACyI,UAAYzI,KAAC6I,QAAQwC,YAAcrL,KAAC2C,IAElC3C,KAAEkJ,SACHlJ,KAACkJ,OAASlJ,KAACoI,eACVpI,KAACkJ,OAAOqC,OAETvL,KAACkJ,OAAOoD,MAAM,EAAGtM,KAAC2C,IAAK3C,KAACuL,OAAOgB,SAAWvM,KAAC2C,KAF7C,QA3LFxD,EAAA2E,UAgMAqE,IAAK,SAAC/G,GACJ,GAAAoL,GAAAzB,EAAAC,EAAAyB,EAAAC,EAAA/L,CAEA,KAFAA,EAAOS,EAAKuL,OACZH,EAAQ,EACGxB,EAAAD,EAAA,EAAA0B,EAAA9L,EAAA,EAAA8L,GAAA,EAAAA,GAAA1B,KAAA0B,EAAAzB,EAAAyB,GAAA,IAAA1B,MACT2B,GAAKtL,EAAK4J,GAAO,KAAO,IACxBwB,GAASE,EAAIA,CACf,OAAO/G,MAAKiH,KAAKJ,EAAQ7L,IN2YnBxB,MMrlBZZ,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KN6lBM,SAASP,EAAQD,EAASH,GAE/B,GAAIW,EOhmBLA,GAAO,SAACM,GACN,GAAAE,GAAA0N,EAAAC,EAAAnN,EAAAC,CPqmBC,OOrmBDA,GAAQ5B,EAAQ,GAChBmB,EAAQnB,EAAQ,GAEhB8O,EAAe9O,EAAQ,IACvB6O,EAAgB7O,EAAQ,IAElB2B,EAAA,WACS,QAAAA,KACX,GAAAoL,GAAAgC,CAMA,KANAhN,OAAOa,QAAUZ,KACjBA,KAACY,WAGDZ,KAACgN,eAAqB,GAAApN,GAAMyF,mBAAmBX,MAAO,SAAUG,QAASjF,EAAMqN,YAAaC,KAAMtN,EAAMuN,aAE/FpC,EAAAgC,EAAA,KAAAA,EAAAhC,IAAAgC,EAEP/M,KAACY,QAAQwM,KAAKpN,KAACqN,mBAAmB,UACpCpM,SAAQC,IAAIlB,KAACY,SP+pBd,MOzqBDjB,GAAAmE,UAYA4C,OAAQ,WAEN,GAAAqG,GAAAO,EAAAb,EAAAc,EAAAC,CPomBC,KOpmBDf,EAAAzM,KAAAY,QAAA2M,KAAAR,EAAA,EAAAO,EAAAb,EAAAE,OAAAW,EAAAP,MPqmBGS,EAASf,EAAIM,GOlmBdS,EAAOrG,SAASsG,QAAQnG,MAAQ3B,KAAK+H,IAAI,EAAGF,EAAOrG,SAASsG,QAAQnG,MAAuB,IAAfkG,EAAOG,OPqmBhFJ,EAAQH,KOpmBRrN,OAAOc,MAAM8H,IAAM,IAAOhD,KAAKiI,SAAW,IAC3CJ,EAAOrG,SAASsG,QAAQnG,MAAQ,EPqmBlB,OAGjB,OAAOiG,IO3nBV5N,EAAAmE,UAsBA+J,gBAAiB,SAACC,GAChB,MAAGA,MAAY,EACN9N,KAACgN,eACHhN,KAACY,QAAQ+E,KAAKoI,MAAMpI,KAAKiI,SAAW5N,KAACY,QAAQ+L,UAzBtDhN,EAAAmE,UA2BAuJ,mBAAoB,SAAC3I,GACnB,GAAAL,GAAA8C,CA0BA,OA1BAA,IACEsG,SACEpG,KAAM,IACNC,MAAO,GAET5C,OACE2C,KAAM,IACNC,MAAW,GAAA1H,GAAMoO,MAAMtJ,IAEzBuJ,UAAW5G,KAAM,IAAKC,MAAW,GAAA1H,GAAMoO,MAAM,UAC7CE,YAAa7G,KAAM,IAAK8G,MAAA,QAE1B9J,EAAe,GAAAzE,GAAMwO,gBACnB3G,aAAcqF,EACdnF,eAAgBkF,EAChBK,KAAMtN,EAAMuN,WACZtI,QAASjF,EAAMqN,YACf9F,SAAUA,EACV7B,aAAa,EACb+I,YAAY,EACZC,WAAW,EACX/L,KAAK,IAGP8B,EAASsJ,MAAQhI,KAAKiI,SAAW,GACjCvJ,EAASkB,SAAW3F,EAAM2O,iBACnBlK,GPmnBD1E,MOjrBZpB,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KPyrBM,SAASP,EAAQD,EAASH,GAE/B,GAAIW,EQ3rBLA,GAAO,SAACM,GACN,GAAAG,GAAAQ,CR6rBC,OQ7rBDA,GAAQ5B,EAAQ,GAEVoB,EAAA,WACS,QAAAA,GAACiD,GACZ,GAAAmM,GAAAC,EAAAC,CADY1O,MAACqC,MAADA,EACZqM,EAAU9O,EAAM+O,WAAWC,YAAY,6BACvCF,EAAQG,MAAQH,EAAQI,MAAQlP,EAAMmP,eACtCL,EAAQM,OAAOtL,IAAK,EAAG,GACvB+K,EAAY,GAAA7O,GAAMyF,mBAAmB4J,IAAKP,IAC1CF,EAAS,GAAA5O,GAAMmF,KAAS,GAAAnF,GAAMsP,cAAc,KAAM,KAAM,EAAG,GAAIT,GAC/DD,EAAGnK,SAASiK,WAAY,EACxBE,EAAGnK,SAASgK,YAAa,EACzBG,EAAGtM,SAASwB,IAAI,EAAG,EAAG,KACtB1D,KAACqC,MAAMZ,IAAI+M,GRksBZ,MAAOpP,OQ/sBZb,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KRutBM,SAASP,EAAQD,EAASH,GAE/B,GAAIW,ESztBLA,GAAO,SAACM,GACN,GAAAQ,GAAAG,CTwuBC,OSxuBDA,GAAQ5B,EAAQ,GAEhBA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IAERA,EAAQ,IACRA,EAAQ,GACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IAEFyB,EAAA,WACS,QAAAA,GAAC4C,EAAQP,EAASmB,EAAWtC,GACxC,GAAAwO,GAAAC,CADYpP,MAACqC,MAADA,EAAQrC,KAAC8B,OAADA,EAAS9B,KAACiD,SAADA,EAC7BjD,KAACiD,SAASoM,WAAY,EAEtBD,EAAkB,GAAAxP,GAAM0P,WAAYtP,KAACqC,MAAOrC,KAAC8B,QAG7C/B,OAAOqP,YAAcA,EAErBD,EAAS,MAAApP,OAAAuD,iBAA8BvD,OAAOuD,iBAAsB,EAEpEtD,KAACuP,wBAA2BC,UAAW5P,EAAM6P,aAAcC,UAAW9P,EAAM6P,aAAcE,OAAQ/P,EAAMgQ,UAAWC,cAAc,GACjI7P,KAAC8P,aAAmB,GAAAlQ,GAAMmQ,kBAAkBpP,EAAKqB,MAAQmN,EAAKxO,EAAKsB,OAASkN,EAAKnP,KAACuP,wBAElFvP,KAACgQ,WAAiB,GAAApQ,GAAMqQ,WAAYrQ,EAAMsH,YAC1ClH,KAACgQ,WAAW7I,SAAU,WAAeG,MAAM5D,IAAI,GAAK/C,EAAKqB,MAAQmN,GAAM,GAAKxO,EAAKsB,OAASkN,IAE1FnP,KAACkQ,MAAY,GAAAtQ,GAAMuQ,UAAU,GAAK,GAAI,GAEtCnQ,KAACoQ,WAAiB,GAAAxQ,GAAMyQ,YACxBrQ,KAACoQ,WAAWE,UAAY,GACxBtQ,KAACoQ,WAAWjJ,SAASoJ,SAASjJ,MAAQ1H,EAAM+O,WAAWC,YAAa,iCAEpE5O,KAACwQ,aAAmB,GAAA5Q,GAAMqQ,WAAWrQ,EAAM6Q,gBAC3CzQ,KAACwQ,aAAarJ,SAAS,SAAYG,MAAQ,EAE3CtH,KAAC0Q,WAAiB,GAAA9Q,GAAM+Q,SAAU,IAAM,IAAM,KAAK,GACnD3Q,KAAC0Q,WAAWE,gBAAiB,EAE7B5Q,KAAC6Q,SAAe,GAAAjR,GAAMkR,eAAgB9Q,KAACiD,SAAUjD,KAAC8P,cAClD9P,KAAC6Q,SAAStN,QAAQ5C,EAAKqB,MAAQmN,EAAKxO,EAAKsB,OAASkN,GAClDnP,KAAC6Q,SAASE,QAAS3B,GACnBpP,KAAC6Q,SAASE,QAAS/Q,KAACgQ,YACpBhQ,KAAC6Q,SAASE,QAAS/Q,KAACkQ,OAEpBlQ,KAAC6Q,SAASE,QAAS/Q,KAACwQ,cACpBxQ,KAAC6Q,SAASE,QAAS/Q,KAAC0Q,YTouBrB,MSvwBDjR,GAAAqE,UAqCA0C,OAAQ,SAACT,EAAcD,GACrB,GAAAqJ,ETytBC,OSztBDA,GAAS,MAAApP,OAAAuD,iBAA8BvD,OAAOuD,iBAAsB,EAEpEtD,KAAC8P,aAAmB,GAAAlQ,GAAMmQ,kBAAkBhK,EAAeoJ,EAAKrJ,EAAgBqJ,EAAKnP,KAACuP,wBACtFvP,KAAC6Q,SAASG,MAAMhR,KAAC8P,cACjB9P,KAACgQ,WAAW7I,SAAU,WAAeG,MAAM5D,IAAI,GAAKqC,EAAeoJ,GAAM,GAAKrJ,EAAgBqJ,KA1ChG1P,EAAAqE,UA4CA6C,OAAQ,SAACC,GTwtBN,MSvtBD5G,MAACiD,SAASgO,QACVjR,KAAC6Q,SAASlK,OAAOC,ITytBXnH,MS1xBZlB,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KTkyBM,SAASP,EAAQD,EAASH,GUlyBhC,GAAAW,GAAAC,EAAA,SAAAC,EAAAC,GAAA,wBAAAD,GAAAE,MAAAD,EAAAE,YAAAL,GAAO,SAACM,GACN,GAAAS,GAAAwR,EAAArJ,CVyyBC,OUzyBDA,GAAI7J,EAAQ,IACZkT,EAAUlT,EAAQ,IAEZ0B,EAAA,WACS,QAAAA,GAAC4B,EAAYF,EAAOiB,EAAQ8O,EAAgBrQ,GAA3Cd,KAACsB,UAADA,EAAYtB,KAACoB,KAADA,EAAOpB,KAACqC,MAADA,EAAQrC,KAACmR,cAADA,EAAgBnR,KAACc,QAADA,EACvDd,KAAA0G,OAAA9H,EAAAoB,KAAA0G,OAAA1G,WAACuB,MAAQvB,KAACsB,UAAUC,MACpBvB,KAACuB,MAAM6P,QAAQ3P,IAAIzB,KAAC0G,QACpB1G,KAAC0G,OAAO,GV01BT,MU71BDhH,GAAAoE,UAKA4C,OAAQ,SAAC2K,GACP,GAAAjP,GAAAkP,EAAAvG,EAAAwG,EAAAjE,EAAAb,EAAAnB,EAAAkG,EAAAnK,CAGA,KAHAjF,EAAepC,KAACmR,cAChB7F,EAAU+F,EAAY,IAEtB5E,EAAAzM,KAAAoB,KAAA2J,EAAA,EAAAuC,EAAAb,EAAAE,OAAAW,EAAAvC,MV+yBGwG,EAAO9E,EAAI1B,GU9yBZyG,EAAkBlG,GAAWiG,EAAKjF,OAAShB,GAAWiG,EAAKE,KAAS,GAAU,GAG1EF,EAAKjN,QAAUkN,KAAgB,GAAUD,EAAKG,iBAChDH,EAAKG,eAAgB,EAClBH,EAAKjN,SACNtE,KAACqC,MAAMsP,OAAOJ,EAAKjN,OAAO7D,WAC1B8Q,EAAKjN,OAAOsN,gBACZL,GAAYjN,SAGbiN,EAAMM,cAAiBN,EAAKM,YAAc7R,KAACc,QAAQgR,aAAaP,EAAKlK,OAGrEmK,KAAgB,IAGhBA,IAAgBD,EAAMjN,SACvB+C,EAAOkK,EAAKlK,KACZiK,EAAKtR,KAACc,QAAQiR,OAAO1K,EAAMkK,EAAKS,OAAQ1G,EAAUiG,EAAKjF,OACvDtM,KAACqC,MAAMZ,IAAI6P,EAAG7Q,WAEd8Q,EAAKjN,OAASgN,EAEdA,EAAG7Q,UAAUwR,MAAQV,GAGpBA,EAAKjN,QAAUiN,EAAKjN,OAAO4N,WAC5B9P,EAAemP,EAAKjN,OAAO7D,UAC3BV,OAAOI,mBAAmBiC,IAGzBmP,EAAKjN,QAAYiN,EAAKjN,OAAOoC,OAAO4E,EAAUiG,EAAKjF,MAAOiF,EAAKS,QAIpE,OADAjS,QAAOqC,aAAeA,EACnBrC,OAAOqP,YACRrP,OAAOqP,YAAYtN,OAASM,EAD9B,QV+yBM1C,MUl2BZnB,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KV02BM,SAASP,EAAQD,EAASH,GW12BhC,GAAAW,GAAAC,EAAA,SAAAC,EAAAC,GAAA,wBAAAD,GAAAE,MAAAD,EAAAE,YAAAL,GAAO,SAACM,GACN,GAAAkT,GAAAC,EAAAC,EAAAC,EAAAhT,EAAAiT,EAAAhT,EAAAiT,EAAAC,CXo8BC,OWp8BDL,GAASpU,EAAQ,IACjBsU,EAAUtU,EAAQ,IAClBmU,EAAQnU,EAAQ,IAChBuU,EAAQvU,EAAQ,IAEhBwU,EAAexU,EAAQ,IACvBqU,EAASrU,EAAQ,IACjBuB,EAAiBvB,EAAQ,IAEzByU,EAAS,SAACnO,EAAQoO,GAChB,GAAA/I,GAAAgJ,CAAA,KAAAhJ,IAAA+I,GX+2BGC,EAAMD,EAAW/I,GW92BQ,gBAAvBrF,GAAcqF,IAAoC,OAAfrF,EAAOqF,GAC3CrF,EAAOqF,GAAO8I,KAAWE,GAEzBrO,EAAOqF,GAAOgJ,CXk3BjB,OWj3BDrO,IAEIhF,EAAA,WXk3BH,QAASA,KACPU,KAAK8R,aAAelT,EAAKoB,KAAK8R,aAAc9R,MA6D9C,MW/6BDV,GAACsT,UACCC,OACEhB,YAAatS,GACf+S,SACET,YAAaS,GACfH,OACEN,YAAaM,GACfI,OACEV,YAAaU,GACfH,QACEP,YAAaO,GACfU,KACEjB,YAAaW,GACfH,QACER,YAAaQ,IAdjB/S,EAAAwE,UAgBAgO,aAAc,SAACiB,GX83BZ,MW73BDzT,GAAesT,SAASG,GAAUlB,aAEpCvS,EAAC0T,kBAAmB,SAACC,GACnB,GAAAC,GAAA3B,EAAA5H,EAAAwJ,EAAAC,EAAAV,EAAAjG,CACA,IADA8E,EAAOjS,EAAesT,SAASK,GAC5B1B,IACD2B,EAAgB3B,EAAKM,aACrB,CACEa,KACAjG,EAAA8E,EAAAM,YAAAa,UAAA,KAAA/I,IAAA8C,GXi4BG2G,EAAkB3G,EAAI9C,GWh4BvBwJ,EAAOV,KAAWW,GAClBD,EAAKE,QACLX,EAAWtF,KAAK+F,EAElB,OADAlS,SAAQC,IAAIwR,GACLA,IA9BbpT,EAAAwE,UAiCAiO,OAAQ,SAACkB,EAAUjB,EAAQrQ,GACzB,GAAA4P,EACA,OADAA,GAAOjS,EAAesT,SAASK,GAC5B1B,EAIQ,GAAAA,GAAKM,YAAYG,IAH1B/Q,QAAQqS,KAAK,sBAAwBL,IAC9B,IX04BH3T,KWt4BVS,OAAOT,eAAiBA,GA5D1Bf,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KX28BM,SAASP,EAAQD,EAASH,GAE/B,GAAIW,EY78BLA,GAAO,SAACM,GACN,GAAAI,GAAAC,EAAAuI,CZg9BC,OYh9BDA,GAAI7J,EAAQ,IACZsB,EAAiBtB,EAAQ,IAEnBqB,EAAA,WZ88BH,QAASA,MAwCT,MYr/BDA,GAACkU,cAAgB,SAACC,EAAW1S,GAC3B,GAAA2S,GAAA9J,EAAA+J,EAAAC,EAAAC,EAAAC,EAAAC,CAIA,IAJGN,EAAW3B,cACZ2B,EAAU3B,YAAc/Q,EAAQgR,aAAa0B,EAAUnM,OACzDwM,EAAoBL,EAAU3B,YAAYa,WAC1CzR,QAAQC,IAAI2S,GACTA,EAAH,CACA,IAAAlK,IAAAkK,GAAA,CAGE,GZi9BCD,EAAcC,EAAkBlK,GYn9BjC8J,EAAgB5L,EAAEkM,KAAKP,EAAUd,WAAY,SAACS,GZq9B3C,MYr9BoDA,GAAKa,OAAQJ,EAAYI,QAE7EP,EAAH,CACEE,IAEA,KAAAD,IAAAE,GZq9BGE,EAASF,EAAYF,GYp9BtBC,EAASD,GAAQI,CAEnBH,GAASN,QACTG,EAAUd,WAAWtF,KAAKuG,GAEzBF,IAAiBA,EAAeQ,OAASL,EAAYK,QACtDR,EAAcQ,MAAQL,EAAYK,OACtC,MAAOT,KAETnU,EAACgC,cAAgB,SAACD,EAAMN,GAItB,MAHAM,GAAOyG,EAAEoH,IAAI7N,EAAM,SAACmQ,GZy9BjB,MYx9BDlS,GAAekU,cAAchC,EAAMzQ,MZ69B/BzB,MY1/BZd,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KZkgCM,SAASP,EAAQD,EAASH,GAE/B,GAAIW,EapgCLA,GAAO,SAACM,GACN,GAAAE,GAAA+U,EAAA1U,EAAAI,EAAAiI,CbygCC,OazgCDA,GAAI7J,EAAQ,IACZ4B,EAAQ5B,EAAQ,GAEhBmB,EAAQnB,EAAQ,GAChBkW,EAASlW,EAAQ,IAEXwB,EAAA,WAOS,QAAAA,GAAC2U,EAAcxS,EAAUyS,GAEpC,GAAAC,GAAAtJ,EAAAwG,EAAAxE,EAAApD,EAAAtF,EAAAiQ,EAAAnB,EAAA1G,EAAA8H,CAFYvU,MAACgS,OAAA,MAAAmC,EAADA,Kb6gCC,MAARxS,Ia7gCqBA,EAAO,GbghCnB,MAATyS,IahhC+BA,EAAQ,GAE5C3H,EAAAjN,EAAAkT,UAAA,KAAA/I,IAAA8C,GbmhCG0G,EAAO1G,EAAI9C,GalhCR,MAAA3J,KAAAgS,OAAArI,KACF3J,KAACgS,OAAOrI,GAAOwJ,EAAKR,IA6BxB,IA3BA3S,KAACS,UAAgB,GAAAb,GAAM4U,SACX,IAATJ,GACDpU,KAACS,UAAUyB,SAASwB,IAAI,EAAG,EAAG,KAChC1D,KAACyU,SAEDzU,KAAC2N,MAAwB,EAAhBhI,KAAKiI,SAAe,EAC7B5N,KAAC0U,MAAwB,EAAhB/O,KAAKiI,SAAe,GAE7BvJ,EAAe,GAAAzE,GAAM6E,mBAAoBkQ,QAAS,OAAUjQ,MAAO,SAAUC,SAAU,SAAUC,UAAW,GAAIC,QAASjF,EAAMqN,cAC/H5I,EAASkB,SAAW3F,EAAM2O,iBAE1B8F,EAAO7U,EAAUoV,WACdjP,KAAKiI,SAAW,KACjByG,EAAO7U,EAAUqV,UAEnB7U,KAACsR,GAAS,GAAA1R,GAAMmF,KAAKsP,EAAOhQ,GAEzB+P,EAAQ,IACTpU,KAACsR,GAAGpP,SAAS4S,EAAoB,GAAhBnP,KAAKiI,SAAgB,GACtC5N,KAACsR,GAAGpP,SAAS6S,EAAoB,GAAhBpP,KAAKiI,SAAgB,GACtC5N,KAACsR,GAAGpP,SAASC,EAAoB,GAAhBwD,KAAKiI,SAAgB,IAIxC5N,KAACsR,GAAGoD,MAAMhR,IAAI1D,KAAC0U,MAAO1U,KAAC0U,MAAO1U,KAAC0U,OAC/B1U,KAACS,UAAUgB,IAAIzB,KAACsR,IAEL,EAAR8C,EACD,IAASrJ,EAAAgC,EAAA,EAAAwH,EAAAvU,KAAAgS,OAAAgD,SAAA,EAAAT,GAAA,EAAAA,GAAAxH,KAAAwH,EAAAxJ,EAAAwJ,GAAA,IAAAxH,MACPuH,EAAa,EACV3O,KAAKiI,SAAW,KACjB0G,EAAaW,SAAuB,EAAdtP,KAAKiI,OAAY,IAAM,GAC/C2D,EAAW,GAAA/R,IAAWwV,SAAUV,GAAa,EAAGF,EAAQ,GAExDpU,KAACsR,GAAG7P,IAAK8P,EAAK9Q,WACdT,KAACyU,MAAMrH,KAAKmE,GbmjCjB,MalmCD/R,GAACoV,WAAiB,GAAAhV,GAAM8F,eAAgB,GAAI,GAAI,EAAa,EAAVC,KAAKC,IACxDpG,EAACqV,SAAe,GAAAjV,GAAMiG,aAAc,EAAQ,GAAQ,GAAI,EAAG,EAAa,EAAVF,KAAKC,IAEnEpG,EAACkT,YACCsC,UAAWhB,KAAM,WAAYkB,MAAO,YAAavC,IAAK,EAAGwC,gBAAgB,IAJ3E3V,EAAAsE,UAkDA4C,OAAQ,SAAC4E,EAAS0G,EAAgBoD,GAGhC,GAAAC,GAAA9D,EAAAxE,EAAAO,EAAAb,EAAAc,EAAA+H,CbsiCC,KAfc,MAAVtD,Ia1hCWA,GAAS,Gb6hCX,MAAToD,Ia7hC2BA,GAAQ,GAGxCE,EAASnW,EAAM0L,SAASlC,IACxB0M,EAAUrV,KAACsR,GAAGoD,MAAMI,EACjBQ,EAAS,IAAO3P,KAAKiI,SAAW,KACjCyH,GAAoB,GAATC,GAEbD,GAAyC,MAApBrV,KAAC0U,MAAQW,GAC9BrV,KAACsR,GAAGoD,MAAMhR,IAAI2R,EAASA,EAASA,GAGhC5I,EAAAzM,KAAAyU,MAAAlH,KAAAR,EAAA,EAAAO,EAAAb,EAAAE,OAAAW,EAAAP,Mb8hCGwE,EAAO9E,EAAIM,Ga7hCZQ,EAAAH,KAAAmE,EAAK7K,SbgiCN,OAAO6G,IAGF/N,Ma1mCZjB,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KbknCM,SAASP,EAAQD,EAASH,GclnChC,GAAAW,GAAA8T,EAAA,SAAA8C,EAAAC,GAAA,QAAAC,KAAAzV,KAAA0V,YAAAH,EAAA,OAAA5L,KAAA6L,GAAAG,EAAApX,KAAAiX,EAAA7L,KAAA4L,EAAA5L,GAAA6L,EAAA7L,GAAA,OAAA8L,GAAA3R,UAAA0R,EAAA1R,UAAAyR,EAAAzR,UAAA,GAAA2R,GAAAF,EAAAK,UAAAJ,EAAA1R,UAAAyR,GdqnCGI,KAAaE,ccrnChBlX,GAAO,SAACM,GACN,GAAAE,GAAA2W,EAAA5B,EAAA6B,EAAAxW,EAAAyW,EAAAC,EAAAnJ,EAAAlN,EAAAiI,CdioCC,OcjoCDA,GAAI7J,EAAQ,IACZ4B,EAAQ5B,EAAQ,GAChBgY,EAAMhY,EAAQ,IACd+X,EAAc/X,EAAQ,IAEtBmB,EAAQnB,EAAQ,GAChBkW,EAASlW,EAAQ,IAEjB8X,EAAkB9X,EAAQ,IAC1B8O,EAAe9O,EAAQ,IACvBiY,EAAkBjY,EAAQ,IAKpBuB,EAAA,SAAA2W,GAmCS,QAAA3W,GAAC4U,EAAcxS,GAE1B,GAAAgI,GAAAwJ,EAAA1G,CAFYzM,MAACgS,OAAA,MAAAmC,EAADA,KdswCC,MAARxS,IctwCqBA,EAAO,GAEjC8K,EAAAlN,EAAAmT,UAAA,KAAA/I,IAAA8C,GdywCG0G,EAAO1G,EAAI9C,GcxwCR,MAAA3J,KAAAgS,OAAArI,KACF3J,KAACgS,OAAOrI,GAAOwJ,EAAKR,IAGxBpT,GAAAqW,UAAAF,YAAA3W,MAAAiB,KAAAhB,WAEAgB,KAACS,UAAgB,GAAAb,GAAM4U,SACvBxU,KAACS,UAAUyB,SAASwB,IAAI,EAAG,EAAG,GAC9B1D,KAACyU,SACDzU,KAACmW,Qdy9CF,McvgDD1D,GAAAlT,EAAA2W,GAAA3W,EAAC6W,SAAe,GAAAxW,GAAMsP,cAAe,IAAK,GAC1C3P,EAACqV,WAAiB,GAAAhV,GAAM8F,eAAgB,GAAI,GAAI,EAAa,EAAVC,KAAKC,IACxDrG,EAACsV,SAAe,GAAAjV,GAAMiG,aAAc,EAAQ,GAAQ,GAAI,EAAG,EAAa,EAAVF,KAAKC,IACnErG,EAAC8W,UAAgB,GAAAP,GAAiB,GAAI,GAAI,EAAa,EAAVnQ,KAAKC,IAElDrG,EAAC+W,UAAY,EACb/W,EAACgX,YAAc,EACfhX,EAACiX,YAAc,EAEfjX,EAACmT,YACCsC,UAAWhB,KAAM,WAAYkB,MAAO,YAAavC,IAAK,GAAIwC,gBAAgB,EAAMlB,MAAO,UACvFwC,MAAOzC,KAAM,OAAQkB,MAAO,OAAQvC,IAAK,MAAOwC,gBAAgB,EAAMlB,MAAO,UAC7EyC,OAAQ1C,KAAM,QAASkB,MAAO,QAASvC,IAAK,GAAIwC,gBAAgB,EAAMlB,MAAO,UAC7E0C,QAAS3C,KAAM,SAAUkB,MAAO,SAAUvC,IAAK,IAAKwC,gBAAgB,EAAMlB,MAAO,UACjF2C,SAAU5C,KAAM,UAAWkB,MAAO,UAAWvC,IAAK,IAAKwC,gBAAgB,EAAMlB,MAAO,UACpF4C,WAAY7C,KAAM,YAAakB,MAAO,YAAavC,IAAK,EAAGwC,gBAAgB,EAAMlB,MAAO,UACxFa,GAAId,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,EAAGsB,MAAO,YAC1Cc,GAAIf,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,EAAGsB,MAAO,YAC1C9R,GAAI6R,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,EAAGsB,MAAO,YAC1C6C,WAAY9C,KAAM,YAAakB,MAAO,IAAKvC,IAAK,EAAGoE,IAAK,EAAGrJ,IAAK,EAAGuG,MAAO,WAAYkB,gBAAgB,GACtG6B,WAAYhD,KAAM,YAAakB,MAAO,IAAKvC,IAAK,EAAGoE,IAAK,EAAGrJ,IAAK,EAAGuG,MAAO,WAAYkB,gBAAgB,GACtG8B,WAAYjD,KAAM,YAAakB,MAAO,IAAKvC,IAAK,EAAGoE,IAAK,EAAGrJ,IAAK,EAAGuG,MAAO,WAAYkB,gBAAgB,GACtG+B,eAAgBlD,KAAM,gBAAiBkB,MAAO,SAAUvC,IAAK,EAAGoE,IAAK,EAAGrJ,IAAK,EAAGuG,MAAO,WAAYkB,gBAAgB,GACnHgC,eAAgBnD,KAAM,gBAAiBkB,MAAO,SAAUvC,IAAK,EAAGoE,IAAK,EAAGrJ,IAAK,EAAGuG,MAAO,WAAYkB,gBAAgB,GACnHiC,eAAgBpD,KAAM,gBAAiBkB,MAAO,SAAUvC,IAAK,EAAGoE,IAAK,EAAGrJ,IAAK,EAAGuG,MAAO,WAAYkB,gBAAgB,GACnHkC,SAAUrD,KAAM,UAAWkB,MAAO,UAAWvC,IAAK,EAAGwC,gBAAgB,EAAMlB,MAAO,YAClFqD,SAAUtD,KAAM,UAAWkB,MAAO,UAAWvC,IAAK,EAAGwC,gBAAgB,EAAMlB,MAAO,YAClFsD,WAAYvD,KAAM,YAAakB,MAAO,aAAcvC,IAAK,EAAGwC,gBAAgB,EAAMlB,MAAO,QACzFuD,eAAgBxD,KAAM,gBAAiBkB,MAAO,wBAAyBvC,IAAK,EAAGwC,gBAAgB,EAAMlB,MAAO,QAC5GwD,gBAAiBzD,KAAM,iBAAkBkB,MAAO,iBAAkBvC,IAAK,EAAGwC,gBAAgB,EAAMlB,MAAO,YACvGyD,kBAAmB1D,KAAM,mBAAoBkB,MAAO,mBAAoBvC,IAAK,EAAGwC,gBAAgB,EAAMlB,MAAO,aA9B/G1U,EAAAuE,UAgCA6T,qBAAsB,WdkwCnB,MclwCyBpY,GAAemT,YAhC3CnT,EAAAuE,UAgDA8T,QAAS,SAACjW,Gd2wCP,Mc1wCD3B,MAAC6X,QACD7X,KAACmW,MAAMxU,IAlDTpC,EAAAuE,UAoDA+T,MAAO,WACL,GAAAtG,GAAAxE,EAAAO,EAAAb,CAAA,IAAGzM,KAAEyU,OAASzU,KAAEyU,MAAM9H,OAAtB,CAEA,IAAAF,EAAAzM,KAAAyU,MAAA1H,EAAA,EAAAO,EAAAb,EAAAE,OAAAW,EAAAP,Md8wCGwE,EAAO9E,EAAIM,Gc7wCZ/M,KAACS,UAAUkR,OAAOJ,EdgxCnB,Oc9wCDvR,MAACyU,WA1DHlV,EAAAuE,UA4DAgU,YAAa,SAACC,GACZ,GAAAhF,EAEA,OAFAA,GAAWgF,EAAInK,OAAO,EAAG,KAAQ,IAE9BmF,EAAW/S,KAACgS,OAAOqF,QACb9X,EAAeiX,YAErBzD,EAAW/S,KAACgS,OAAOqF,QAAUrX,KAACgS,OAAOsF,QAC/B/X,EAAegX,YAEjBhX,EAAe+W,WArExB/W,EAAAuE,UAuEAqS,MAAO,SAACxU,GACN,GAAAmM,GAAAuG,EAAAtJ,EAAAiN,EAAAjF,EAAAhG,EAAA1I,EAAAiQ,EAAA2D,EAAAC,EAAAC,EAAAC,EAAAlW,EAAAuK,EAAAc,EAAA8K,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9T,EAAA6R,EAAAE,EAAAC,EAAAvC,EAAAsE,EAAArC,EAAAC,EAAAqC,EAAAC,CdqyCC,KApBY,MAARvX,IclxCCA,EAAO,GACbmX,EAAW,GAAA9C,GAAIhW,KAACgS,OAAOyE,KAAO,KAC9BsC,EAAW,GAAA/C,GAAIhW,KAACgS,OAAOyE,KAAO,KAC9B6B,EAAmB,GAAAtC,GAAIhW,KAACgS,OAAOyE,KAAO,aACtC8B,EAAmB,GAAAvC,GAAIhW,KAACgS,OAAOyE,KAAO,aACtC+B,EAAmB,GAAAxC,GAAIhW,KAACgS,OAAOyE,KAAO,aACtCgC,EAAe,GAAAzC,GAAIhW,KAACgS,OAAOyE,KAAO,SAClCiC,EAAmB,GAAA1C,GAAIhW,KAACgS,OAAOyE,KAAO,aACtC4B,EAAgB,GAAArC,GAAIhW,KAACgS,OAAOyE,KAAO,UACnCmC,EAAiB,GAAA5C,GAAIhW,KAACgS,OAAOyE,KAAO,WACpCoC,EAAc,GAAA7C,GAAIhW,KAACgS,OAAOyE,KAAO,QACjCkC,EAAoB,GAAA3C,GAAIhW,KAACgS,OAAOyE,KAAO,cAMvCpC,EAAO9U,EAAeqV,WAEtB+B,EAAS3W,KAACgS,OAAO2E,OACjBuC,EAAcvC,EAAS,EAEvBC,EAAU5W,KAACgS,OAAO4E,QAClBqC,EAAerC,EAAU,EAIzBrJ,KAASxC,EAAAgC,EAAA,EAAAN,EAAAzM,KAAAgS,OAAAgD,SAAAvI,GAAA,EAAAA,EAAAM,IAAAN,EAAA1B,EAAA0B,GAAA,IAAAM,MACPe,GAAW,EACR6K,EAAc/K,OAAO,KAAO,IAAM5N,KAACgS,OAAO0F,mBAC3C5J,GAAW,GACbzJ,EAAWtE,OAAOa,QAAQiN,gBAAgBC,GAC1CwG,EAAa,EACbI,EAAQ+D,EAAS7K,OAAO,EAAG,KAAO,IAAM,GAExCuK,EAAmC,IAA5BW,EAAKlL,OAAgB,IAAT+I,GAAuBuC,EAC1Cd,EAAoC,IAA7BW,EAAKnL,OAAiB,IAAVgJ,GAAwBqC,EAC3C/W,EAAe,GAAAtC,GAAMuZ,QAAQhB,EAAMC,EAAMrN,GAAI/K,KAAEgS,OAAO0E,OACtDI,EAAawB,EAAa1K,OAAO,EAAG,KAAQ,IAAOjI,KAAKC,GAAM5F,KAACgS,OAAOkF,cAAgBlX,KAACgS,OAAO8E,UAAYnR,KAAKC,GAC/GoR,EAAauB,EAAa3K,OAAO,EAAG,KAAQ,IAAOjI,KAAKC,GAAM5F,KAACgS,OAAOmF,cAAgBnX,KAACgS,OAAOgF,UAAYrR,KAAKC,GAC/GqR,EAAauB,EAAa5K,OAAO,EAAG,KAAQ,IAAOjI,KAAKC,GAAM5F,KAACgS,OAAOoF,cAAgBpX,KAACgS,OAAOiF,UAAYtR,KAAKC,GAC/GX,EAAe,GAAArF,GAAMuZ,QAAQrC,EAAWE,EAAWC,GACnDvC,EAAY,GAAA9U,GAAMuZ,QAAQzE,EAAOA,EAAOA,GAKxCJ,EAAaW,SAASoD,EAAUzK,OAAO,EAAG5N,KAACgS,OAAO6E,WAAY,IAQ9D9D,EAAW/S,KAAC8X,YAAYe,GAKxBxE,EAAO9U,EAAe6W,SAEnBrD,IAAYxT,EAAe+W,YAC5B5B,EAAMK,EAAKL,EAAMK,EAAI/U,KAACgS,OAAOuF,WAAcmB,EAAa9K,OAAO,EAAG,KAAO,MAAQ5N,KAACgS,OAAOwF,cAAgB,IAExGzE,IAAYxT,EAAeiX,cAC5BnC,EAAO9U,EAAesV,UAIxB7U,KAACoZ,QAAQ/E,EAAMhQ,EAAU0G,EAAG2J,EAAOxS,EAAU+C,GAE1CqP,EAAa,GACd0E,EAAU,GAAiC,GAA5BJ,EAAWhL,OAAO,EAAG,KACpCqK,EAAS/V,EAASmX,QAAQC,YAAYC,eAAeP,GACrDf,EAAO9V,EAAI,EAFXoL,EAAAH,KAAA,Wd4vCG,GAAIoM,GAAGjF,EAAMkF,CAEb,KczvCHA,KAAUzB,EAAAwB,EAAA,EAAAjF,EAAAD,EAAA,EAAAC,GAAA,EAAAA,GAAAiF,KAAAjF,EAAAyD,EAAAzD,GAAA,IAAAiF,MACRtB,EAAOhW,EAASmX,QAAQ5X,IAAIwW,EAAOsB,eAAevB,EAAK,IAAvDyB,EAAArM,KACApN,KAACoZ,QAAQ/E,EAAMhQ,EAAU0G,EAAG2J,EAAOwD,EAAMjT,Gd2vCxC,OAAOwU,IACNlb,KAAKyB,QAERuN,EAAQH,KAAK,OAGjB,OAAOG,Icx5CVhO,EAAAuE,UAyJAsV,QAAS,SAAC/E,EAAMhQ,EAAU0G,EAAG2J,EAAOxS,EAAU+C,GAG5C,GAAAsM,GAAAmI,EAAAC,EAAAC,CduxCC,OcvxCDA,GAAiB,GAAAha,GAAMia,WACvBD,EAAWE,iBAAqB,GAAAla,GAAMuZ,QAAQlU,EAAS6P,EAAG7P,EAAS8P,EAAG9P,EAAS9C,GAAIwD,KAAKC,GAAK,GAC7F2L,EAAW,GAAA3R,GAAMmF,KAAKsP,EAAOhQ,GAE7BkN,EAAKrP,SAAS4S,EAAI5S,EAAS4S,EAC3BvD,EAAKrP,SAAS6S,EAAI7S,EAAS6S,EAC3BxD,EAAKrP,SAASC,EAAID,EAASC,EAC3BoP,EAAKtM,SAAS8U,kBAAkBH,GAEhCrI,EAAKmD,MAAMsF,KAAKtF,GAChBnD,EAAK0I,eACLja,KAACS,UAAUgB,IAAI8P,GACfvR,KAACyU,MAAMrH,KAAKmE,GAGZoI,EAAqB,GAAA/Z,GAAM4U,SAE3BxU,KAACS,UAAUgB,IAAIkY,GACfD,EAAY,GAAA9Z,GAAMmF,KAAKsP,EAAOhQ,GAE9BqV,EAAMxX,SAAS4S,EAAI5S,EAAS4S,EAC5B4E,EAAMxX,SAAS6S,EAAI7S,EAAS6S,EAC5B2E,EAAMxX,SAASC,EAAID,EAASC,EAE5BuX,EAAMzU,SAAS8U,kBAAkBH,GAKjCF,EAAMhF,MAAMsF,KAAKtF,GACjBgF,EAAMO,eAENN,EAAelY,IAAIiY,GACnBC,EAAejF,MAAMI,EAAI,GAEzB9U,KAACyU,MAAMrH,KAAKuM,IA/Ldpa,EAAAuE,UAiMAoW,YAAa,SAACxV,GACZ,GAAAL,GAAA8C,CAiCA,OAjCAA,IACExF,MACE0F,KAAM,IACNC,MAAO,GAETmP,MACEpP,KAAM,IACNC,MAAuB,IAAhB3B,KAAKiI,UAEduM,UACE9S,KAAM,IACNC,MAAO,IAET5C,OACE2C,KAAM,IACNC,MAAW,GAAA1H,GAAMoO,MAAMtJ,IAEzBuJ,UAAe5G,KAAM,IAAKC,MAAW,GAAA1H,GAAMoO,MAAM,UACjDE,YAAmB7G,KAAM,IAAK8G,MAAA,QAEhC9J,EAAe,GAAAzE,GAAMwO,gBACnB3G,aAAcqF,EACdnF,eAAgBsO,EAChB/I,KAAMtN,EAAMuN,WACZhG,SAAUA,EACV7B,aAAa,EACb+I,YAAY,EACZC,WAAW,EACX/L,KAAK,IAIP8B,EAASkB,SAAW3F,EAAM2O,iBACnBlK,GAnOT9E,EAAAuE,UAqOA4C,OAAQ,SAAC4E,EAAS0G,EAAgBoD,GAChC,GAAAzL,GAAAyQ,EAAAjH,EAAA1G,EAAA6I,Cd4vCe,OAAVtD,Ic7vCWA,GAAS,GdgwCX,MAAToD,IchwC2BA,GAAQ,GACrCpD,KAAU,IAAWA,EAAShS,KAACgS,QAClCoI,GAAgB,EAGhB3N,EAAAlN,EAAAmT,UAAA,KAAA/I,IAAA8C,GdowCG0G,EAAO1G,EAAI9C,GcnwCTwJ,EAAKgC,gBAAkBnV,KAACqa,aAAa1Q,EAAKqI,KAC3CoI,GAAgB,EAEpB9E,GAASnW,EAAM0L,SAASlC,KAErByM,GAASpV,KAACqa,aAAa,IAAKrI,IAAWhS,KAACqa,aAAa,IAAKrI,IAAWhS,KAACqa,aAAa,IAAKrI,KACzFhS,KAACS,UAAUyB,SAASwB,IAAIsO,EAAO8C,EAAG9C,EAAO+C,EAAG/C,EAAO7P,GAYrDnC,KAACgS,OAASnK,EAAEyS,MAAMta,KAACgS,OAAQA,GAExBoI,KAAiB,GAClBpa,KAAC4X,QAAQtM,IAhQb/L,EAAAuE,UAmQA8N,QAAS,WACP,GAAA2D,GAAAxI,EAAAO,EAAAb,CAAA,KAAAA,EAAAzM,KAAAS,UAAA8Z,SAAAxN,EAAA,EAAAO,EAAAb,EAAAE,OAAAW,EAAAP,Md6vCGwI,EAAQ9I,EAAIM,Gc5vCb/M,KAACS,UAAUkR,OAAO4D,Ed+vCnB,Oc7vCDvV,MAACS,UAAY,MdgwCPlB,GcxgDmBwW,IAhB/BxX,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,Kd+hDQ,CAEF,SAASP,EAAQD,EAASH,GejiDhCI,EAAAD,QAAA;EfuiDM,SAASC,EAAQD,EAASH,GgBviDhCI,EAAAD,QAAA0J,GhB6iDM,SAASzJ,EAAQD,EAASH,GiB7iDhCI,EAAAD,QAAA8I,QjBmjDM,SAAS7I,EAAQD,EAASH,GkBnjDhC4B,MAAAyQ,YAAA,SAAAmK,GAEAvT,SAAArH,MAAA6a,gBAAAxZ,QAAAyZ,MAAA,iDAEA,IAAAlN,GAAA5N,MAAA6a,cACAza,MAAAmH,SAAAvH,MAAA+a,cAAAtB,MAAA7L,EAAArG,UAEAF,QAAAuT,MAAA,IAEAxa,KAAAsQ,UAAA,EACAtQ,KAAAmH,SAAA,MAAAG,MAAAtH,KAAA4a,kBAAAJ,GAGAxa,KAAAqE,SAAA,GAAAzE,OAAAwO,gBACAjH,SAAAnH,KAAAmH,SACAM,aAAA+F,EAAA/F,aACAE,eAAA6F,EAAA7F,iBAGA3H,KAAA6a,SAAA,EACA7a,KAAA4Q,gBAAA,EACA5Q,KAAA8a,WAAA,EAEA9a,KAAA8B,OAAA,GAAAlC,OAAAmb,mBAAA,eACA/a,KAAAqC,MAAA,GAAAzC,OAAA0C,MAEAtC,KAAAgb,KAAA,GAAApb,OAAAmF,KAAA,GAAAnF,OAAAsP,cAAA,WACAlP,KAAAqC,MAAAZ,IAAAzB,KAAAgb,MAEAhb,KAAAib,QAAA,EACAjb,KAAAkb,KAAA,EACAlb,KAAAmb,mBAIAvb,MAAAyQ,YAAAvM,WAEA6C,OAAA,SAAA1D,EAAAmY,EAAAC,EAAAzU,GAEA5G,KAAAmH,SAAA,SAAAG,MAAA+T,EACArb,KAAAmH,SAAA,KAAAG,MAAA3B,KAAAiI,SAGA5N,KAAAmH,SAAA,OAAAG,MAAA3B,KAAAiI,SAAA,IAAA5N,KAAAsQ,UACAtQ,KAAAmH,SAAA,MAAAG,MAAA1H,MAAA+F,KAAA2V,WAAA3V,KAAAC,GAAAD,KAAAC,IACA5F,KAAAmH,SAAA,OAAAG,MAAA1H,MAAA+F,KAAA2V,UAAA,MACAtb,KAAAmH,SAAA,OAAAG,MAAA1H,MAAA+F,KAAA2V,UAAA,MACAtb,KAAAmH,SAAA,OAAAG,OAAA,KACAtH,KAAAmH,SAAA,OAAAG,OAAA,KACAtH,KAAAmH,SAAA,aAAAG,MAAA1H,MAAA+F,KAAA2V,UAAA,QACAtb,KAAAmH,SAAA,aAAAG,MAAA1H,MAAA+F,KAAA2V,UAAA,QAEAtb,KAAAmb,kBAEAnb,KAAAmH,SAAA,IAAAG,MAAA,EACAtH,KAAAkb,OAEAlb,KAAAgb,KAAA3W,SAAArE,KAAAqE,SACArE,KAAA4Q,eAEA3N,EAAA0D,OAAA3G,KAAAqC,MAAArC,KAAA8B,QAIAmB,EAAA0D,OAAA3G,KAAAqC,MAAArC,KAAA8B,OAAAsZ,GAAA,IAGAD,gBAAA,WAEAnb,KAAAub,MAAA3b,MAAA+F,KAAA6V,QAAA,UAEAZ,kBAAA,SAAAJ,GAKA,OAHAiB,GAAA,GAAAC,cAAAlB,IAAA,GACA7N,EAAA6N,IAEAzP,EAAA,EAAoB4B,EAAA5B,EAAYA,IAChC,CACA,GAAA4H,GAAA/S,MAAA+F,KAAA2V,UAAA,IACAG,GAAA,EAAA1Q,EAAA,GAAA4H,EACA8I,EAAA,EAAA1Q,EAAA,GAAA4H,EACA8I,EAAA,EAAA1Q,EAAA,GAAA4H,EAGA,GAAAjE,GAAA,GAAA9O,OAAA+b,YAAAF,EAAAjB,IAAA5a,MAAAgQ,UAAAhQ,MAAAgc,UAKA,OAJAlN,GAAAc,UAAA5P,MAAAic,cACAnN,EAAAgB,UAAA9P,MAAAic,cACAnN,EAAAoN,aAAA,EACApN,EAAAqN,OAAA,EACArN,KlB6jDM,SAAStQ,EAAQD,EAASH,GmBlpDhC4B,MAAAkR,eAAA,SAAA7N,EAAA6M,GAIA,GAFA9P,KAAAiD,WAEAgE,SAAA6I,EAAA,CAEA,GAAA9N,GAAAjC,OAAAmG,YAAA,EACAjE,EAAAlC,OAAAoG,aAAA,EACA+B,GAAoBsH,UAAA5P,MAAA6P,aAAAC,UAAA9P,MAAA6P,aAAAE,OAAA/P,MAAAgQ,UAAAoM,eAAA,EAEpBlM,GAAA,GAAAlQ,OAAAmQ,kBAAA/N,EAAAC,EAAAiG,GAIAlI,KAAAic,cAAAnM,EACA9P,KAAAkc,cAAApM,EAAAuJ,QAEArZ,KAAAob,YAAApb,KAAAic,cACAjc,KAAAqb,WAAArb,KAAAkc,cAEAlc,KAAAmc,UAEAlV,SAAArH,MAAAwc,YACAnb,QAAAyZ,MAAA,mDAEA1a,KAAAqc,SAAA,GAAAzc,OAAAqQ,WAAArQ,MAAAwc,aAIAxc,MAAAkR,eAAAhN,WAEAwY,YAAA,WAEA,GAAAC,GAAAvc,KAAAqb,UACArb,MAAAqb,WAAArb,KAAAob,YACApb,KAAAob,YAAAmB,GAIAxL,QAAA,SAAAyL,GAEAxc,KAAAmc,OAAA/O,KAAAoP,IAIAC,WAAA,SAAAD,EAAApI,GAEApU,KAAAmc,OAAAO,OAAAtI,EAAA,EAAAoI,IAIA7V,OAAA,SAAAC,GAEA5G,KAAAob,YAAApb,KAAAic,cACAjc,KAAAqb,WAAArb,KAAAkc,aAEA,IAEAM,GAAAzR,EAFA4R,GAAA,EAEAC,EAAA5c,KAAAmc,OAAAxP,MAEA,KAAA5B,EAAA,EAAc6R,EAAA7R,EAAQA,IAItB,GAFAyR,EAAAxc,KAAAmc,OAAApR,GAEAyR,EAAA3B,QAAA,CAIA,GAFA2B,EAAA7V,OAAA3G,KAAAiD,SAAAjD,KAAAob,YAAApb,KAAAqb,WAAAzU,EAAA+V,GAEAH,EAAA1B,UAAA,CAEA,GAAA6B,EAAA,CAEA,GAAA9T,GAAA7I,KAAAiD,SAAA4F,OAEAA,GAAAgU,YAAAhU,EAAAiU,SAAA,cAEA9c,KAAAqc,SAAA1V,OAAA3G,KAAAiD,SAAAjD,KAAAob,YAAApb,KAAAqb,WAAAzU,GAEAiC,EAAAgU,YAAAhU,EAAAkU,MAAA,cAIA/c,KAAAsc,cAIAE,YAAA5c,OAAAod,SAEAL,GAAA,EAEIH,YAAA5c,OAAAqd,gBAEJN,GAAA,KAQA3L,MAAA,SAAAlB,GAEA7I,SAAA6I,IAEAA,EAAA9P,KAAAic,cAAA5C,QAEAvJ,EAAA9N,MAAAjC,OAAAmG,WACA4J,EAAA7N,OAAAlC,OAAAoG,aAIAnG,KAAAic,cAAAnM,EACA9P,KAAAkc,cAAApM,EAAAuJ,QAEArZ,KAAAob,YAAApb,KAAAic,cACAjc,KAAAqb,WAAArb,KAAAkc,eAIA3Y,QAAA,SAAAvB,EAAAC,GAEA,GAAA6N,GAAA9P,KAAAic,cAAA5C,OAEAvJ,GAAA9N,QACA8N,EAAA7N,SAEAjC,KAAAgR,MAAAlB,MnBiqDM,SAAS1R,EAAQD,EAASH,GoB/xDhC4B,MAAAod,SAAA,SAAA3a,EAAAP,GAEA9B,KAAAqC,QACArC,KAAA8B,SAEA9B,KAAA6a,SAAA,EACA7a,KAAAiR,OAAA,EACAjR,KAAA8a,WAAA,EAEA9a,KAAAkd,SAAA,GAIAtd,MAAAod,SAAAlZ,WAEA6C,OAAA,SAAA1D,EAAAmY,EAAAC,EAAAzU,GAEA,GAAAiC,GAAA5F,EAAA4F,OAIAA,GAAAsU,WAAA,YACAtU,EAAAuU,WAAA,EAIA,IAAAC,GAAAC,CAEAtd,MAAAkd,SAEAG,EAAA,EACAC,EAAA,IAIAD,EAAA,EACAC,EAAA,GAIAzU,EAAA0U,OAAA1U,EAAA2U,cACA3U,EAAA4U,UAAA5U,EAAA6U,QAAA7U,EAAA6U,QAAA7U,EAAA6U,SACA7U,EAAAgU,YAAAhU,EAAA8U,OAAAN,EAAA,YACAxU,EAAA+U,aAAAN,GAIAra,EAAA0D,OAAA3G,KAAAqC,MAAArC,KAAA8B,OAAAuZ,EAAArb,KAAAiR,OACAhO,EAAA0D,OAAA3G,KAAAqC,MAAArC,KAAA8B,OAAAsZ,EAAApb,KAAAiR,OAIApI,EAAAsU,WAAA,YACAtU,EAAAuU,WAAA,GAIAvU,EAAAgU,YAAAhU,EAAAkU,MAAA,cACAlU,EAAA4U,UAAA5U,EAAAgV,KAAAhV,EAAAgV,KAAAhV,EAAAgV,QAOAje,MAAAqd,cAAA,WAEAjd,KAAA6a,SAAA,GAIAjb,MAAAqd,cAAAnZ,WAEA6C,OAAA,SAAA1D,EAAAmY,EAAAC,EAAAzU,GAEA,GAAAiC,GAAA5F,EAAA4F,OAEAA,GAAAiV,QAAAjV,EAAA2U,iBpB8yDM,SAASpf,EAAQD,EAASH,GqB33DhC4B,MAAAuQ,UAAA,SAAAgK,EAAA4D,EAAAC,EAAAzW,GAEA4S,EAAAlT,SAAAkT,IAAA,EACA4D,EAAA9W,SAAA8W,IAAA,GACAC,EAAA/W,SAAA+W,IAAA,EACAzW,EAAAN,SAAAM,IAAA,GAIA,IAAA0W,IAAazO,UAAA5P,MAAA6P,aAAAC,UAAA9P,MAAA6P,aAAAE,OAAA/P,MAAAgQ,UAEb5P,MAAAke,cAAA,GAAAte,OAAAmQ,kBAAAxI,IAAA0W,GACAje,KAAAme,cAAA,GAAAve,OAAAmQ,kBAAAxI,IAAA0W,GAIAhX,SAAArH,MAAAwc,YACAnb,QAAAyZ,MAAA,6CAEA,IAAA0D,GAAAxe,MAAAwc,UAEApc,MAAAqe,aAAAze,MAAA+a,cAAAtB,MAAA+E,EAAAjX,UAEAnH,KAAAqe,aAAA,QAAA/W,MAAA6S,EAEAna,KAAAse,aAAA,GAAA1e,OAAAwO,gBAEAjH,SAAAnH,KAAAqe,aACA5W,aAAA2W,EAAA3W,aACAE,eAAAyW,EAAAzW,eACApC,SAAA3F,MAAA2O,iBACAjJ,aAAA,IAMA2B,SAAArH,MAAA2e,mBACAtd,QAAAyZ,MAAA,oDAEA,IAAA8D,GAAA5e,MAAA2e,iBAEAve,MAAAye,oBAAA7e,MAAA+a,cAAAtB,MAAAmF,EAAArX,UAEAnH,KAAAye,oBAAA,gBAAAnX,MAAA1H,MAAAuQ,UAAAuO,MACA1e,KAAAye,oBAAA,QAAAnX,MAAA1H,MAAA2e,kBAAAI,YAAAX,GAEAhe,KAAA4e,oBAAA,GAAAhf,OAAAwO,gBAEAjH,SAAAnH,KAAAye,oBACAhX,aAAA+W,EAAA/W,aACAE,eAAA6W,EAAA7W,eACAkX,SACAC,kBAAAf,EAAAgB,QAAA,GACAC,gBAAAjB,EAAAgB,QAAA,MAKA/e,KAAA6a,SAAA,EACA7a,KAAA8a,WAAA,EACA9a,KAAAiR,OAAA,EAGAjR,KAAA8B,OAAA,GAAAlC,OAAAmb,mBAAA,eACA/a,KAAAqC,MAAA,GAAAzC,OAAA0C,MAEAtC,KAAAgb,KAAA,GAAApb,OAAAmF,KAAA,GAAAnF,OAAAsP,cAAA,WACAlP,KAAAqC,MAAAZ,IAAAzB,KAAAgb,OAIApb,MAAAuQ,UAAArM,WAEA6C,OAAA,SAAA1D,EAAAmY,EAAAC,EAAAzU,EAAA+V,GAEAA,GAAA1Z,EAAA4F,QAAAiV,QAAA7a,EAAA4F,QAAA2U,cAIAxd,KAAAgb,KAAA3W,SAAArE,KAAA4e,oBAEA5e,KAAAye,oBAAA,SAAAnX,MAAA+T,EACArb,KAAAye,oBAAA,gBAAAnX,MAAA1H,MAAAuQ,UAAA8O,MAEAhc,EAAA0D,OAAA3G,KAAAqC,MAAArC,KAAA8B,OAAA9B,KAAAke,eAAA,GAKAle,KAAAye,oBAAA,SAAAnX,MAAAtH,KAAAke,cACAle,KAAAye,oBAAA,gBAAAnX,MAAA1H,MAAAuQ,UAAA+O,MAEAjc,EAAA0D,OAAA3G,KAAAqC,MAAArC,KAAA8B,OAAA9B,KAAAme,eAAA,GAIAne,KAAAgb,KAAA3W,SAAArE,KAAAse,aAEAte,KAAAqe,aAAA,SAAA/W,MAAAtH,KAAAme,cAEAxB,GAAA1Z,EAAA4F,QAAA0U,OAAAta,EAAA4F,QAAA2U,cAEAva,EAAA0D,OAAA3G,KAAAqC,MAAArC,KAAA8B,OAAAuZ,EAAArb,KAAAiR,SAMArR,MAAAuQ,UAAA8O,MAAA,GAAArf,OAAA4H,QAAA,cACA5H,MAAAuQ,UAAA+O,MAAA,GAAAtf,OAAA4H,QAAA,erBs4DM,SAASpJ,EAAQD,EAASH,GsBp/DhC4B,MAAAqQ,WAAA,SAAAzC,EAAA2R,GAEAnf,KAAAmf,UAAAlY,SAAAkY,IAAA,WAEAnf,KAAAmH,SAAAvH,MAAA+a,cAAAtB,MAAA7L,EAAArG,UAEAnH,KAAAqE,SAAA,GAAAzE,OAAAwO,gBAEAjH,SAAAnH,KAAAmH,SACAM,aAAA+F,EAAA/F,aACAE,eAAA6F,EAAA7F,iBAIA3H,KAAA4Q,gBAAA,EAEA5Q,KAAA6a,SAAA,EACA7a,KAAA8a,WAAA,EACA9a,KAAAiR,OAAA,EAGAjR,KAAA8B,OAAA,GAAAlC,OAAAmb,mBAAA,eACA/a,KAAAqC,MAAA,GAAAzC,OAAA0C,MAEAtC,KAAAgb,KAAA,GAAApb,OAAAmF,KAAA,GAAAnF,OAAAsP,cAAA,WACAlP,KAAAqC,MAAAZ,IAAAzB,KAAAgb,OAIApb,MAAAqQ,WAAAnM,WAEA6C,OAAA,SAAA1D,EAAAmY,EAAAC,EAAAzU,GAEA5G,KAAAmH,SAAAnH,KAAAmf,aAEAnf,KAAAmH,SAAAnH,KAAAmf,WAAA7X,MAAA+T,GAIArb,KAAAgb,KAAA3W,SAAArE,KAAAqE,SAEArE,KAAA4Q,eAEA3N,EAAA0D,OAAA3G,KAAAqC,MAAArC,KAAA8B,QAIAmB,EAAA0D,OAAA3G,KAAAqC,MAAArC,KAAA8B,OAAAsZ,EAAApb,KAAAiR,UtBqgEM,SAAS7S,EAAQD,EAASH,GuBpjEhC4B,MAAA0P,WAAA,SAAAjN,EAAAP,EAAAsd,EAAAC,EAAAC,GAEAtf,KAAAqC,QACArC,KAAA8B,SAEA9B,KAAAof,mBAEApf,KAAAqf,aACArf,KAAAsf,WAAArY,SAAAqY,IAAA,EAEAtf,KAAAuf,cAAA,GAAA3f,OAAAoO,MACAhO,KAAAwf,cAAA,EAEAxf,KAAA6a,SAAA,EACA7a,KAAAiR,OAAA,EACAjR,KAAA8a,WAAA,GAIAlb,MAAA0P,WAAAxL,WAEA6C,OAAA,SAAA1D,EAAAmY,EAAAC,EAAAzU,GAEA5G,KAAAqC,MAAA+c,iBAAApf,KAAAof,iBAEApf,KAAAqf,aAEArf,KAAAuf,cAAAvF,KAAA/W,EAAAwc,iBACAzf,KAAAwf,cAAAvc,EAAAyc,gBAEAzc,EAAAO,cAAAxD,KAAAqf,WAAArf,KAAAsf,aAIArc,EAAA0D,OAAA3G,KAAAqC,MAAArC,KAAA8B,OAAAuZ,EAAArb,KAAAiR,OAEAjR,KAAAqf,YAEApc,EAAAO,cAAAxD,KAAAuf,cAAAvf,KAAAwf,eAIAxf,KAAAqC,MAAA+c,iBAAA,QvBmkEM,SAAShhB,EAAQD,EAASH,GwB7mEhC4B,MAAA+Q,SAAA,SAAAgP,EAAAC,EAAAC,EAAAC,GAEA7Y,SAAArH,MAAAmgB,YACA9e,QAAAyZ,MAAA,4CAEA,IAAAlN,GAAA5N,MAAAmgB,UAEA/f,MAAAmH,SAAAvH,MAAA+a,cAAAtB,MAAA7L,EAAArG,UAEAnH,KAAAqE,SAAA,GAAAzE,OAAAwO,gBAEAjH,SAAAnH,KAAAmH,SACAM,aAAA+F,EAAA/F,aACAE,eAAA6F,EAAA7F,iBAIAV,SAAA6Y,IAAA9f,KAAAmH,SAAA2Y,UAAAxY,MAAAwY,GACA7Y,SAAA0Y,IAAA3f,KAAAmH,SAAA6Y,WAAA1Y,MAAAqY,GACA1Y,SAAA2Y,IAAA5f,KAAAmH,SAAA8Y,WAAA3Y,MAAAsY,GACA3Y,SAAA4Y,IAAA7f,KAAAmH,SAAA+Y,OAAA5Y,MAAAuY,GAEA7f,KAAA6a,SAAA,EACA7a,KAAA4Q,gBAAA,EACA5Q,KAAA8a,WAAA,EAGA9a,KAAA8B,OAAA,GAAAlC,OAAAmb,mBAAA,eACA/a,KAAAqC,MAAA,GAAAzC,OAAA0C,MAEAtC,KAAAgb,KAAA,GAAApb,OAAAmF,KAAA,GAAAnF,OAAAsP,cAAA,WACAlP,KAAAqC,MAAAZ,IAAAzB,KAAAgb,OAIApb,MAAA+Q,SAAA7M,WAEA6C,OAAA,SAAA1D,EAAAmY,EAAAC,EAAAzU,GAEA5G,KAAAmH,SAAA,SAAAG,MAAA+T,EACArb,KAAAmH,SAAA,KAAAG,OAAAV,EAEA5G,KAAAgb,KAAA3W,SAAArE,KAAAqE,SAEArE,KAAA4Q,eAEA3N,EAAA0D,OAAA3G,KAAAqC,MAAArC,KAAA8B,QAIAmB,EAAA0D,OAAA3G,KAAAqC,MAAArC,KAAA8B,OAAAsZ,GAAA,MxB8nEM,SAAShd,EAAQD,EAASH,GyB9qEhC4B,MAAAwc,YAEAjV,UAEAC,UAAeC,KAAA,IAAAC,MAAA,MACf6Y,SAAe9Y,KAAA,IAAAC,MAAA,IAIfG,cAEA,oBAEA,gBAEA,YACA,4EAEA,KAEAC,KAAA,MAEAC,gBAEA,yBAEA,8BAEA,oBAEA,gBAEA,2CACA,kCAEA,KAEAD,KAAA,QzB6rEM,SAAStJ,EAAQD,EAASH,G0BltEhC4B,MAAAmgB,YAEA5Y,UAEAC,UAAiBC,KAAA,IAAAC,MAAA,MACjB3F,MAAiB0F,KAAA,IAAAC,MAAA,GACjB0Y,YAAiB3Y,KAAA,IAAAC,MAAA,IACjB2Y,YAAiB5Y,KAAA,IAAAC,MAAA,KACjB4Y,QAAiB7Y,KAAA,IAAAC,MAAA,MACjBwY,WAAiBzY,KAAA,IAAAC,MAAA,IAIjBG,cAEA,oBAEA,gBAEA,YACA,4EAEA,KAEAC,KAAA,MAEAC,gBAGA,sBAEA,0BAGA,4BAGA,4BAGA,wBAEA,8BAEA,oBAEA,gBAGA,oDAGA,4CACA,wCACA,6BAGA,gGAGA,kEAGA,yEAGA,kGAGA,oBAEA,2EAEA,IAEA,qDAEA,KAEAD,KAAA,Q1BivEM,SAAStJ,EAAQD,EAASH,G2B90EhC4B,MAAA2e,mBAEAM,SAEAC,kBAAA,OACAE,gBAAA,MAIA7X,UAEAC,UAAsBC,KAAA,IAAAC,MAAA,MACtB8Y,iBAAsB/Y,KAAA,KAAAC,MAAA,GAAA1H,OAAA4H,QAAA,eACtB6Y,SAAsBhZ,KAAA,MAAAC,WAItBG,cAEA,gCAEA,oBAEA,gBAEA,sEACA,4EAEA,KAEAC,KAAA,MAEAC,gBAEA,4CAEA,8BACA,gCAEA,oBAEA,gBAEA,yBACA,yCAEA,gDAEA,2DACA,iCAEA,IAEA,sBAEA,KAGAD,KAAA,MAEAiX,YAAA,SAAAX,GAIA,QAAAsC,GAAAxL,EAAAkJ,GAEA,MAAArY,MAAA4a,MAAAzL,MAAA,EAAAkJ,MAIA,GAAAjT,GAAAiH,EAAAwO,EAAAC,EAAAC,EAAA,GAAA3C,EAAA,EAAApY,KAAAgb,KAAA,EAAA3C,GAAA,CAOA,KALAD,EAAA2C,IAAA3C,EAAA2C,GACAD,EAAA,IAAA1C,EAAA,GAEA/L,EAAA,GAAA4O,OAAA7C,GACAyC,EAAA,EACAzV,EAAA,EAAcgT,EAAAhT,IAAgBA,EAE9BiH,EAAAjH,GAAAuV,EAAAvV,EAAA0V,EAAAzC,GACAwC,GAAAxO,EAAAjH,EAMA,KAAAA,EAAA,EAAcgT,EAAAhT,IAAgBA,EAAAiH,EAAAjH,IAAAyV,CAE9B,OAAAxO,M3Bi2EM,SAAS5T,EAAQD,EAASH,G4Bz7EhC4B,MAAA6Q,gBAEAtJ,UAEAC,UAAiBC,KAAA,IAAAC,MAAA,MACjB2Q,QAAiB5Q,KAAA,IAAAC,MAAA,GACjBuZ,UAAiBxZ,KAAA,IAAAC,MAAA,IAIjBG,cAEA,oBAEA,gBAEA,YACA,4EAEA,KAEAC,KAAA,MAEAC,gBAEA,wBACA,0BAEA,8BAEA,oBAEA,gBAIA,2CACA,oDACA,2FAYA,KAEAD,KAAA,Q5B28EM,SAAStJ,EAAQD,EAASH,G6B3/EhC4B,MAAA6a,gBAEAtT,UAEAC,UAAmBC,KAAA,IAAAC,MAAA,MACnBwZ,OAAiBzZ,KAAA,IAAAC,MAAA,MACjBiJ,UAAmBlJ,KAAA,IAAAC,MAAA,MACnByZ,KAAiB1Z,KAAA,IAAAC,MAAA,GACjB0Z,QAAiB3Z,KAAA,IAAAC,MAAA,KACjB2Z,OAAiB5Z,KAAA,IAAAC,MAAA,KACjBmP,MAAiBpP,KAAA,IAAAC,MAAA,KACjB4Z,QAAiB7Z,KAAA,IAAAC,MAAA,KACjB6Z,QAAiB9Z,KAAA,IAAAC,MAAA,KACjB8Z,cAAqB/Z,KAAA,IAAAC,MAAA,IACrB+Z,cAAqBha,KAAA,IAAAC,MAAA,IACrBga,OAAiBja,KAAA,IAAAC,MAAA,MAGjBG,cAEA,oBACA,gBACA,YACA,4EACA,KACAC,KAAA,MAEAC,gBACA,mBAEA,8BACA,2BACA,8BAEA,wBACA,uBACA,sBACA,wBACA,wBACA,8BACA,8BACA,uBAEA,oBAGA,uBACA,oEACA,IAEA,2BACA,gDACA,IAEA,2BACA,oDACA,IAEA,gBAEA,gBACA,2CAIA,cACA,0CACA,0CAEA,gDACA,8DACA,iBACA,mCACA,IACA,SACA,sBACA,IACA,IACA,8DACA,iBACA,oBACA,IACA,SACA,mCACA,IACA,IACA,kCACA,kCAEA,wDACA,6CACA,qCACA,6CAEA,iDAEA,yEACA,qCACA,IACA,SACA,0CACA,IAEA,wDAEA,wDACA,4CACA,mEACA,yEACA,KAEAD,KAAA,Q7BihFM,SAAStJ,EAAQD,EAASH,GAE/B,GAAIW,E8B9oFLA,GAAO,SAACM,GACN,GAAAmT,GAAAxS,C9BgpFC,O8BhpFDA,GAAQ5B,EAAQ,GAEVoU,EAAA,WAUS,QAAAA,GAAC+B,EAAcxS,GAAd3B,KAACgS,OAAA,MAAAmC,EAADA,K9B6qFC,MAARxS,I8B7qFqBA,EAAO,GACjC3B,KAACkS,UAAW,EACZlS,KAACuhB,OAAa,GAAA3hB,GAAMuZ,QAAQnZ,KAACgS,OAAOwP,SAAUxhB,KAACgS,OAAOyP,SAAUzhB,KAACgS,OAAO0P,UACxE1hB,KAACS,UAAgB,GAAAb,GAAMmC,kBAAmB/B,KAACgS,OAAO2P,IAAK5hB,OAAOmG,WAAanG,OAAOoG,YAAa,EAAG,KAClGnG,KAACS,UAAUyB,SAASwB,IAAI1D,KAACgS,OAAO8C,EAAG9U,KAACgS,OAAO+C,EAAG/U,KAACgS,OAAO7P,G9BssFvD,M8BntFDiQ,GAACM,YACCoC,GAAId,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,GAChCoC,GAAIf,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,GAChCxQ,GAAI6R,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,KAChC6O,UAAWxN,KAAM,WAAYkB,MAAO,WAAYvC,IAAK,GACrD8O,UAAWzN,KAAM,WAAYkB,MAAO,WAAYvC,IAAK,GACrD+O,UAAW1N,KAAM,WAAYkB,MAAO,WAAYvC,IAAK,GACrDgP,KAAM3N,KAAM,MAAOkB,MAAO,MAAOvC,IAAK,KAPxCP,EAAAtO,UAeA4C,OAAQ,SAAC4E,EAAS0G,EAAgBoD,G9B4rF/B,MAXc,OAAVpD,I8BjrFWA,GAAS,G9BorFX,MAAToD,I8BprF2BA,GAAQ,GACrC,MAAApD,EAAA2P,MAAiB3hB,KAACS,UAAUkhB,IAAM3P,EAAO2P,KAC5C3hB,KAACS,UAAUyB,SAASwB,IAAIsO,EAAO8C,EAAG9C,EAAO+C,EAAG/C,EAAO7P,GACnDnC,KAACuhB,OAAO7d,IAAIsO,EAAOwP,SAAUxP,EAAOyP,SAAUzP,EAAO0P,UACrD1hB,KAACS,UAAUuG,OAAQhH,KAACuhB,SAnBtBnP,EAAAtO,UAqBA8N,QAAS,W9B2rFN,a8B1rFD5R,MAAQS,gBACRT,MAAQkS,U9B4rFFE,M8BvtFZ7T,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,K9B+tFM,SAASP,EAAQD,EAASH,G+B/tFhC,GAAAW,GAAA8T,EAAA,SAAA8C,EAAAC,GAAA,QAAAC,KAAAzV,KAAA0V,YAAAH,EAAA,OAAA5L,KAAA6L,GAAAG,EAAApX,KAAAiX,EAAA7L,KAAA4L,EAAA5L,GAAA6L,EAAA7L,GAAA,OAAA8L,GAAA3R,UAAA0R,EAAA1R,UAAAyR,EAAAzR,UAAA,GAAA2R,GAAAF,EAAAK,UAAAJ,EAAA1R,UAAAyR,G/BkuFGI,KAAaE,c+BluFhBlX,GAAO,SAACM,GACN,GAAA2iB,GAAAtP,EAAAuP,C/BuuFC,O+BvuFDD,GAAiB5jB,EAAQ,IACzB6jB,EAAkB7jB,EAAQ,IAEpBsU,EAAA,SAAA4D,G/BuuFH,QAAS5D,KACP,MAAOA,GAAQsD,UAAUF,YAAY3W,MAAMiB,KAAMhB,WAOnD,M+B9uFDyT,GAAAH,EAAA4D,GAAA5D,EAAAxO,UAAAge,aAAc,WAAM,MAAOF,I/B8uFnBtP,G+B/uFYuP,IAJxBtjB,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,K/B2vFM,SAASP,EAAQD,EAASH,GgC3vFhC,GAAAW,GAAA8T,EAAA,SAAA8C,EAAAC,GAAA,QAAAC,KAAAzV,KAAA0V,YAAAH,EAAA,OAAA5L,KAAA6L,GAAAG,EAAApX,KAAAiX,EAAA7L,KAAA4L,EAAA5L,GAAA6L,EAAA7L,GAAA,OAAA8L,GAAA3R,UAAA0R,EAAA1R,UAAAyR,EAAAzR,UAAA,GAAA2R,GAAAF,EAAAK,UAAAJ,EAAA1R,UAAAyR,GhC8vFGI,KAAaE,cgC9vFhBlX,GAAO,SAACM,GACN,GAAA8iB,GAAA5P,EAAA0P,ChCmwFC,OgCnwFDE,GAAc/jB,EAAQ,IACtB6jB,EAAkB7jB,EAAQ,IAEpBmU,EAAA,SAAA+D,GhCmwFH,QAAS/D,KACP,MAAOA,GAAMyD,UAAUF,YAAY3W,MAAMiB,KAAMhB,WAOjD,MgC1wFDyT,GAAAN,EAAA+D,GAAA/D,EAAArO,UAAAge,aAAc,WAAM,MAAOC,IhC0wFnB5P,GgC3wFU0P,IAJtBtjB,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KhCuxFM,SAASP,EAAQD,EAASH,GiCvxFhC,GAAAW,GAAA8T,EAAA,SAAA8C,EAAAC,GAAA,QAAAC,KAAAzV,KAAA0V,YAAAH,EAAA,OAAA5L,KAAA6L,GAAAG,EAAApX,KAAAiX,EAAA7L,KAAA4L,EAAA5L,GAAA6L,EAAA7L,GAAA,OAAA8L,GAAA3R,UAAA0R,EAAA1R,UAAAyR,EAAAzR,UAAA,GAAA2R,GAAAF,EAAAK,UAAAJ,EAAA1R,UAAAyR,GjC0xFGI,KAAaE,ciC1xFhBlX,GAAO,SAACM,GACN,GAAA+iB,GAAAzP,EAAAsP,CjC+xFC,OiC/xFDG,GAAehkB,EAAQ,IACvB6jB,EAAkB7jB,EAAQ,IAEpBuU,EAAA,SAAA2D,GjC+xFH,QAAS3D,KACP,MAAOA,GAAMqD,UAAUF,YAAY3W,MAAMiB,KAAMhB,WAOjD,MiCtyFDyT,GAAAF,EAAA2D,GAAA3D,EAAAzO,UAAAge,aAAc,WAAM,MAAOE,IjCsyFnBzP,GiCvyFUsP,IAJtBtjB,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KjCmzFM,SAASP,EAAQD,EAASH,GkCnzFhC,GAAAW,GAAAC,EAAA,SAAAC,EAAAC,GAAA,wBAAAD,GAAAE,MAAAD,EAAAE,alCszFGyT,EAAS,SAAS8C,EAAOC,GAA+F,QAASC,KAASzV,KAAK0V,YAAcH,EAA1H,IAAK,GAAI5L,KAAO6L,GAAcG,EAAQpX,KAAKiX,EAAQ7L,KAAM4L,EAAM5L,GAAO6L,EAAO7L,GAA2J,OAArG8L,GAAK3R,UAAY0R,EAAO1R,UAAWyR,EAAMzR,UAAY,GAAI2R,GAAQF,EAAMK,UAAYJ,EAAO1R,UAAkByR,GAClRI,KAAaE,ckCvzFhBlX,GAAO,SAACM,GACN,GAAAiV,GAAA6B,EAAAC,EAAAC,EAAAnJ,EAAA0F,EAAA5S,EAAAiI,ClCi0FC,OkCj0FDA,GAAI7J,EAAQ,IACZ4B,EAAQ5B,EAAQ,GAChBgY,EAAMhY,EAAQ,IACd+X,EAAc/X,EAAQ,IACtBkW,EAASlW,EAAQ,IAEjB8O,EAAe9O,EAAQ,IACvBiY,EAAkBjY,EAAQ,IAEpBwU,EAAA,SAAA0D,GAcS,QAAA1D,GAAC2B,EAAcxS,GAE1B,GAAA+C,GAAAiF,EAAAwJ,EAAA1G,CAFYzM,MAACgS,OAAA,MAAAmC,EAADA,KlC62FC,MAARxS,IkC72FqBA,EAAO,GAEjC3B,KAAAiiB,YAAArjB,EAAAoB,KAAAiiB,YAAAjiB,MAAAyM,EAAAzM,KAAA2X,sBAAA,KAAAhO,IAAA8C,GlCi3FG0G,EAAO1G,EAAI9C,GkCh3FR,MAAA3J,KAAAgS,OAAArI,KACF3J,KAACgS,OAAOrI,GAAOwJ,EAAKR,IAGxBH,GAAAoD,UAAAF,YAAA3W,MAAAiB,KAAAhB,WAEAgB,KAACkiB,SAAe,GAAAC,aAEhBzd,EAAY,GAAA9E,GAAMoO,MAAMgE,OAAOtN,OAC/B1E,KAACqE,SAAWrE,KAACka,YAAYxV,GACzB1E,KAACS,UAAgB,GAAAb,GAAMmF,KAAK/E,KAACiiB,cAAgBjiB,KAACqE,UlCq7F/C,MkC/8FDoO,GAAAD,EAAA0D,GAAA1D,EAACE,YACCoC,GAAId,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,GAChCoC,GAAIf,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,GAChCxQ,GAAI6R,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,GAChCyP,MAAOpO,KAAM,OAAQkB,MAAO,aAAcvC,IAAK,GAC/C0P,MAAOrO,KAAM,OAAQkB,MAAO,aAAcvC,IAAK,GAC/C2P,MAAOtO,KAAM,OAAQkB,MAAO,aAAcvC,IAAK,GAC/C4P,QAASvO,KAAM,SAAUkB,MAAO,UAAWvC,IAAK,GAChD6P,QAASxO,KAAM,SAAUkB,MAAO,UAAWvC,IAAK,GAChD8P,QAASzO,KAAM,SAAUkB,MAAO,UAAWvC,IAAK,GAChDjO,OAAQsP,KAAM,QAASkB,MAAO,QAAS7N,KAAQ,QAASsL,IAAK,WAC7DwN,SAAUnM,KAAM,UAAWkB,MAAO,UAAWvC,IAAK,EAAGoE,IAAK,EAAGrJ,IAAK,IAXpE8E,EAAA1O,UA4BA6T,qBAAsB,WlCi3FnB,MkCj3FyBnF,GAAaE,YA5BzCF,EAAA1O,UA8BAme,YAAa,WACX,MAAW,IAAAriB,GAAMsP,cAAe,IAAK,MA/BvCsD,EAAA1O,UAiCA8N,QAAS,WlC43FN,MkC33FDY,GAAAoD,UAAAhE,QAAA7S,MAAAiB,KAAAhB,WAEGgB,KAACS,YACCT,KAACS,UAAU+U,QAAYxV,KAACS,UAAU+U,OAAO7D,OAAO3R,KAACS,iBACpDT,MAAQS,iBAEVT,MAAQ0iB,eACR1iB,MAAQkiB,UAzCV1P,EAAA1O,UA2CA4C,OAAQ,SAAC4E,EAAS0G,EAAgBoD,GlCs3FjB,MAAVpD,IkCt3FWA,GAAS,GlCy3FX,MAAToD,IkCz3F2BA,GAAQ,GACrCpD,KAAU,IAAWA,EAAShS,KAACgS,SAE/BoD,GAASpV,KAACqa,aAAa,IAAKrI,IAAWhS,KAACqa,aAAa,IAAKrI,IAAWhS,KAACqa,aAAa,IAAKrI,KACzFhS,KAACS,UAAUyB,SAASwB,IAAIsO,EAAO8C,EAAG9C,EAAO+C,EAAG/C,EAAO7P,IAElDiT,GAASpV,KAACqa,aAAa,OAAQrI,IAAWhS,KAACqa,aAAa,OAAQrI,IAAWhS,KAACqa,aAAa,OAAQrI,KAClGhS,KAACS,UAAUwE,SAASvB,IAAI1D,KAAC2iB,eAAe3Q,EAAOoQ,MAAOpiB,KAAC2iB,eAAe3Q,EAAOqQ,MAAOriB,KAAC2iB,eAAe3Q,EAAOsQ,QAC1GlN,GAASpV,KAACqa,aAAa,SAAUrI,IAAWhS,KAACqa,aAAa,SAAUrI,IAAWhS,KAACqa,aAAa,SAAUrI,MAExGA,EAAOuQ,OAASvQ,EAAOuQ,QAAU,KACjCvQ,EAAOwQ,OAASxQ,EAAOwQ,QAAU,KACjCxQ,EAAOyQ,OAASzQ,EAAOyQ,QAAU,KACjCziB,KAACS,UAAUiU,MAAMhR,IAAIsO,EAAOuQ,OAAQvQ,EAAOwQ,OAAQxQ,EAAOyQ,UAEzDrN,GAASpV,KAACqa,aAAa,QAASrI,MACjChS,KAACqE,SAASK,MAAY,GAAA9E,GAAMoO,MAAMgE,EAAOtN,SACxC0Q,GAASpV,KAACqa,aAAa,UAAWrI,MACnChS,KAACqE,SAAS8b,QAAUnO,EAAOmO,UA7D/B3N,EAAA1O,UAgEAoW,YAAa,SAACxV,GACZ,GAAAL,EAOA,OAPAA,GAAe,GAAAzE,GAAM6E,mBAAoBkQ,QAAS,OAAUjQ,MAAO,SAAUC,SAAU,QAAUC,UAAW,GAAIC,QAASjF,EAAMqN,cAC/H5I,EAASiB,aAAc,EACvBjB,EAASgK,YAAa,EACtBhK,EAASiK,WAAY,EACrBjK,EAAS6I,KAAOtN,EAAMuN,WAEtB9I,EAASkB,SAAW3F,EAAM2O,iBACnBlK,GlCu4FDmO,GkCh9FiBuD,IAV7BxX,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KlCk+FM,SAASP,EAAQD,EAASH,GmCl+FhC,GAAAW,GAAAC,EAAA,SAAAC,EAAAC,GAAA,wBAAAD,GAAAE,MAAAD,EAAAE,anCq+FGyT,EAAS,SAAS8C,EAAOC,GAA+F,QAASC,KAASzV,KAAK0V,YAAcH,EAA1H,IAAK,GAAI5L,KAAO6L,GAAcG,EAAQpX,KAAKiX,EAAQ7L,KAAM4L,EAAM5L,GAAO6L,EAAO7L,GAA2J,OAArG8L,GAAK3R,UAAY0R,EAAO1R,UAAWyR,EAAMzR,UAAY,GAAI2R,GAAQF,EAAMK,UAAYJ,EAAO1R,UAAkByR,GAClRI,KAAaE,cmCt+FhBlX,GAAO,SAACM,GACN,GAAAoT,GAAA6B,EAAA8B,EAAA4M,EAAA3M,EAAAnJ,EAAA0F,EAAA5S,EAAAiI,CnCi/FC,OmCj/FDA,GAAI7J,EAAQ,IACZ4B,EAAQ5B,EAAQ,GAChBgY,EAAMhY,EAAQ,IACdwU,EAAexU,EAAQ,IACvBkW,EAASlW,EAAQ,IACjB4kB,EAAgB5kB,EAAQ,IAExB8O,EAAe9O,EAAQ,IACvBiY,EAAkBjY,EAAQ,IAEpBqU,EAAA,SAAA6D,GnC0+FH,QAAS7D,KAEP,MADArS,MAAKiiB,YAAcrjB,EAAKoB,KAAKiiB,YAAajiB,MACnCqS,EAAOuD,UAAUF,YAAY3W,MAAMiB,KAAMhB,WA6GlD,MmCxlGDyT,GAAAJ,EAAA6D,GAAA7D,EAACK,YACCoC,GAAId,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,GAChCoC,GAAIf,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,GAChCxQ,GAAI6R,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,GAChCyP,MAAOpO,KAAM,OAAQkB,MAAO,aAAcvC,IAAK,GAC/C0P,MAAOrO,KAAM,OAAQkB,MAAO,aAAcvC,IAAK,GAC/C2P,MAAOtO,KAAM,OAAQkB,MAAO,aAAcvC,IAAK,GAC/C4P,QAASvO,KAAM,SAAUkB,MAAO,UAAWvC,IAAK,GAChD6P,QAASxO,KAAM,SAAUkB,MAAO,UAAWvC,IAAK,GAChD8P,QAASzO,KAAM,SAAUkB,MAAO,UAAWvC,IAAK,GAChDkQ,aAAc7O,KAAM,cAAekB,MAAO,cAAevC,IAAK,GAAKoE,IAAK,EAAGrJ,IAAK,GAChFuT,OAAQjN,KAAM,QAASkB,MAAO,QAASvC,IAAK,EAAGoE,IAAK,EAAGrJ,IAAK,GAC5DhJ,OAAQsP,KAAM,QAASkB,MAAO,QAAS7N,KAAQ,QAASsL,IAAK,WAC7DwN,SAAUnM,KAAM,UAAWkB,MAAO,UAAWvC,IAAK,EAAGoE,IAAK,EAAGrJ,IAAK,IAbpE2E,EAAAvO,UAeA6T,qBAAsB,WnC2iGnB,MmC3iGyBtF,GAAOK,YAfnCL,EAAAvO,UAiBAme,YAAa,WAEX,GAAAhB,GAAA6B,EAAAC,CAKA,OALAD,GAAe9iB,KAACgS,OAAO6Q,aAAe,KAEtCC,EAAend,KAAKoR,IAAI,WAAa+L,GACrCC,EAAgB,EAAVpd,KAAKC,GACXqb,EAAQjhB,KAACgS,OAAOiP,MAAQ8B,EACb,GAAAH,GAAe,IAAME,EAAc,IAAK,GAAI,EAAG,EAAG7B,IAxB/D5O,EAAAvO,UA0BA4C,OAAQ,SAAC4E,EAAS0G,EAAgBoD,GAChC,GAAAf,EnC6iGe,OAAVrC,ImC9iGWA,GAAS,GnCijGX,MAAToD,ImCjjG2BA,GAAQ,GACxC/C,EAAAuD,UAAAlP,OAAA3H,MAAAiB,KAAAhB,YAEGoW,GAASpV,KAACqa,aAAa,cAAerI,IAAWhS,KAACqa,aAAa,QAASrI,MACzEqC,EAAOrU,KAACiiB,cACRjiB,KAACS,UAAUiiB,SAASM,SAAU,EAC9BhjB,KAACS,UAAUiiB,SAASO,SAAW5O,EAAK4O,SACpCjjB,KAACS,UAAUiiB,SAASQ,oBAAqB,EAEzC7O,EAAK8O,YnCqjGD9Q,GmCzlGWG,IAXvBjU,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KnC4mGM,SAASP,EAAQD,EAASH,GAE/B,GAAIW,EoC7mGLA,GAAO,SAACM,GACN,GAAAiV,GAAAtU,EAAA6U,EAAA2O,EAAAzW,CpCknGC,OoClnGD/M,GAAQ5B,EAAQ,GAEhByW,GACM,GAAA7U,GAAMoO,MAAM,UACZ,GAAApO,GAAMoO,MAAM,SACZ,GAAApO,GAAMoO,MAAM,UAGlBoV,GACM,GAAAxjB,GAAMoO,MAAM,UACZ,GAAApO,GAAMoO,MAAM,QACZ,GAAApO,GAAMoO,MAAM,QACZ,GAAApO,GAAMoO,MAAM,QACZ,GAAApO,GAAMoO,MAAM,UACZ,GAAApO,GAAMoO,MAAM,WAIlBrB,EAAS8H,EAAM9H,OAETuH,EAAA,WpC+lGH,QAASA,MAOT,MoCrmGDA,GAACmP,IAAM,SAACjP,GAEN,MADAA,GAAQzO,KAAK2d,IAAIrO,SAASb,EAAO,KAC1BK,EAAML,EAAQzH,IpCmmGfuH,MoC3nGZ3V,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KpCmoGM,SAASP,EAAQD,EAASH,GqCpoGhC,GAAAW,GAAAC,EAAA,SAAAC,EAAAC,GAAA,wBAAAD,GAAAE,MAAAD,EAAAE,YAAAL,GAAO,SAACM,GAEN,GAAA8W,ErCwoGC,OqCxoGKA,GAAA,WACS,QAAAA,GAAC5B,EAAcxS,GAAd3B,KAACgS,OAAA,MAAAmC,EAADA,KrC0oGC,MAARxS,IqC1oGqBA,EAAO,GACjC3B,KAAA4R,QAAAhT,EAAAoB,KAAA4R,QAAA5R,WAACujB,MAAQvjB,KAACwjB,arCirGX,MqClrGDzN,GAAAjS,UAGA0f,WAAY,WACV,GAAAD,GAAA5Z,EAAAwJ,EAAA1G,CAAA8W,MACA9W,EAAAzM,KAAAgS,MAAA,KAAArI,IAAA8C,GrCipGG0G,EAAO1G,EAAI9C,GqChpGZ4Z,EAAM5Z,GAAOwJ,EAAKR,GACpB,OAAO4Q,IAPTxN,EAAAjS,UASAuW,aAAc,SAAC1Q,EAAKqI,GAElB,GAAAyR,GAAAC,CAAA,OAAI,OAAA1R,EAAArI,IAAyB,GAC7B+Z,EAAU1R,EAAOrI,GACjB8Z,GAAc,EACX,MAAAzjB,KAAAujB,MAAA5Z,IAAgB3J,KAACujB,MAAM5Z,KAAQ+Z,IAAaD,GAAc,GAG7DzjB,KAACujB,MAAM5Z,GAAO+Z,EACPD,IAlBT1N,EAAAjS,UAoBA6e,eAAgB,SAACgB,GrCupGd,MqCvpGyBhe,MAAKC,GAAK+d,EAAS,KApB/C5N,EAAAjS,UAsBA8N,QAAS,WrCypGN,aqCxpGD5R,MAAQujB,OrC2pGFxN,MqCrrGZxX,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KrC6rGM,SAASP,EAAQD,EAASH,GsC7rGhC,GAAAW,EAEAA,GAAA,SAAAM,GACA,GAAAW,GAAA5B,EAAA,EA8DA,OA5DA4B,GAAAkW,gBAAA,SAAA8N,EAAAC,EAAAC,EAAAC,GAEAnkB,EAAAokB,SAAAzlB,KAAAyB,MAEAA,KAAAqH,KAAA,kBAEArH,KAAAkI,YACA0b,SACAC,WACAC,aACAC,eAGAH,KAAA,GACAC,EAAA5c,SAAA4c,EAAAle,KAAA+H,IAAA,EAAAmW,GAAA,EAEAC,EAAA7c,SAAA6c,IAAA,EACAC,EAAA9c,SAAA8c,IAAA,EAAApe,KAAAC,EAEA,IAAAmF,GAAAkZ,KACAC,EAAA,GAAAtkB,GAAAuZ,QACAgL,EAAA,GAAAvkB,GAAA4H,QAAA,IAMA,KAHAxH,KAAAijB,SAAA7V,KAAA8W,GACAD,EAAA7W,KAAA+W,GAEApZ,EAAA,EAAa8Y,GAAA9Y,EAAeA,IAAA,CAE5B,GAAAqZ,GAAA,GAAAxkB,GAAAuZ,QACAkL,EAAAP,EAAA/Y,EAAA8Y,EAAAE,CAEAK,GAAAtP,EAAA8O,EAAAje,KAAA2e,IAAAD,GACAD,EAAArP,EAAA6O,EAAAje,KAAA4e,IAAAF,GAEArkB,KAAAijB,SAAA7V,KAAAgX,GAGAH,EAAA7W,KAAA,GAAAxN,GAAA4H,QAAA,EAAAuD,EAAA8Y,IAGA,GAAAW,GAAA,GAAA5kB,GAAAuZ,QAAA,MAEA,KAAApO,EAAA,EAAa8Y,GAAA9Y,EAAeA,IAE5B/K,KAAAykB,MAAArX,KAAA,GAAAxN,GAAA8kB,MAAA3Z,IAAA,KAAAyZ,EAAAnL,QAAAmL,EAAAnL,QAAAmL,EAAAnL,WAEArZ,KAAA2kB,cAAA,GAAAvX,MAAA6W,EAAAlZ,GAAAsO,QAAA4K,EAAAlZ,EAAA,GAAAsO,QAAA,GAAAzZ,GAAA4H,QAAA,EAAAuD,EAAA8Y,IAIA7jB,MAAA4kB,qBAEA5kB,KAAA6kB,eAAA,GAAAjlB,GAAAklB,OAAA,GAAAllB,GAAAuZ,QAAAyK,IAIAhkB,EAAAkW,gBAAAhS,UAAAihB,OAAAhT,OAAAnS,EAAAokB,SAAAlgB,WACAlE,EAAAkW,gBAAAhS,UAAA4R,YAAA9V,EAAAkW,gBAEAlW,EAAAkW,iBACCvX,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KtCosGK,SAASP,EAAQD,EAASH;;;;;;;;;;;;;;AuCnvGhC,QAAAgnB,GAAAvO,GACAzW,KAAA0M,EAAA,GAAAkU,OAAA,KACA5gB,KAAA+K,EAAA,EACA/K,KAAA+M,EAAA,CACA,QAAAhC,GAAA,EAAmB,IAAAA,EAASA,IAC5B/K,KAAA0M,EAAA3B,IAEA0L,IACAzW,KAAAilB,IAAAxO,GA4DA,QAAAT,GAAAS,GACA,MAAAA,EACAA,GAAA9Q,KAAAiI,SAAAlL,KAAAC,OAAAuiB,WACK,kBAAAzO,IAELzW,KAAAmlB,QAAA1O,EACAzW,KAAAolB,SAAA,WACA,aAAAplB,KAAAmlB,YAEA1O,EAAA,MACK,oBAAAsO,OAAAjhB,UAAAohB,SAAA3mB,KAAAkY,KACLA,EAAA1V,KAAAskB,UAAA5O,IAEAzW,KAAAslB,QAAA,KACA7O,EACAzW,KAAAulB,OAAA,GAAAP,GAAAvO,GAEAzW,KAAAulB,OAAA,KApEAP,EAAAQ,eAAA,SAAAC,GAEA,OADAC,MACA3a,EAAA,EAAmBA,EAAA0a,EAAA9Y,OAAmB5B,IAAA,CACtC,GAAAtM,GAAAgnB,EAAAE,WAAA5a,GACA6a,IACA,GACAA,GAAAxY,KAAA,IAAA3O,GACAA,IAAA,QACSA,EAAA,EACTinB,KAAAG,OAAAD,EAAAE,WAEA,MAAAJ,IAGAV,EAAAlhB,UAAAiiB,MAAA,SAAAhb,EAAAgC,GACA,GAAAwP,GAAAvc,KAAA0M,EAAA3B,EACA/K,MAAA0M,EAAA3B,GAAA/K,KAAA0M,EAAAK,GACA/M,KAAA0M,EAAAK,GAAAwP,GAOAyI,EAAAlhB,UAAAmhB,IAAA,SAAAxO,GAGA,OAFAuP,GAAAhB,EAAAQ,eAAA/O,GACA1J,EAAA,EACAhC,EAAA,EAAmBA,EAAA/K,KAAA0M,EAAAC,OAAmB5B,IACtCgC,GAAA/M,KAAA0M,EAAA3B,GAAAib,EAAAjb,EAAAib,EAAArZ,QACAI,GAAA,IACA/M,KAAA+lB,MAAAhb,EAAAgC,IAOAiY,EAAAlhB,UAAAmiB,KAAA,WAIA,MAHAjmB,MAAA+K,GAAA/K,KAAA+K,EAAA,OACA/K,KAAA+M,GAAA/M,KAAA+M,EAAA/M,KAAA0M,EAAA1M,KAAA+K,IAAA,IACA/K,KAAA+lB,MAAA/lB,KAAA+K,EAAA/K,KAAA+M,GACA/M,KAAA0M,GAAA1M,KAAA0M,EAAA1M,KAAA+K,GAAA/K,KAAA0M,EAAA1M,KAAA+M,IAAA,MAkCAiJ,EAAAlS,UAAAshB,SAAA,WACA,MAAAplB,MAAAulB,OAAAU,QAMAjQ,EAAAlS,UAAAqhB,QAAA,WAGA,OAFAe,GAAA,EACAR,EAAA,EACA3a,EAAA,EAAmBmb,EAAAnb,EAAWA,IAC9B2a,GAAA,IACAA,GAAA1lB,KAAAolB,UAEA,OAAAM,IAAA/f,KAAAwgB,IAAA,IAAAD,GAAA,IASAlQ,EAAAlS,UAAA8J,OAAA,SAAA4W,EAAAhmB,GACA,aAAAgmB,EACAxkB,KAAAmlB,WACK,MAAA3mB,IACLA,EAAAgmB,EACAA,EAAA,GAEAA,EAAA7e,KAAAoI,MAAA/N,KAAAmlB,WAAA3mB,EAAAgmB,MAOAxO,EAAAlS,UAAAsiB,OAAA,WACA,UAAApmB,KAAAslB,QAAA,CACA,GAAAd,GAAAxkB,KAAAslB,OAEA,OADAtlB,MAAAslB,QAAA,KACAd,EAEA,GAAA1P,GAAA9U,KAAAmlB,WAAAxf,KAAAwgB,IAAA,OACApR,EAAA/U,KAAAmlB,SAEA,OADAnlB,MAAAslB,QAAA3f,KAAAiH,KAAA,GAAAjH,KAAAzE,IAAA4T,IAAAnP,KAAA4e,IAAA,EAAA5e,KAAAC,GAAAmP,GACApP,KAAAiH,KAAA,GAAAjH,KAAAzE,IAAA4T,IAAAnP,KAAA2e,IAAA,EAAA3e,KAAAC,GAAAmP,IAQAiB,EAAAlS,UAAAuiB,YAAA,WACA,OAAA1gB,KAAAzE,IAAAlB,KAAAmlB,WAAAxf,KAAAwgB,IAAA,SAQAnQ,EAAAlS,UAAAwiB,QAAA,SAAAC,GACA,GAAAC,GAAA7gB,KAAA4a,MAAAgG,GAAA,IACA/M,EAAA,EAAA9a,EAAA,CACA,GACA8a,KACA9a,GAAAsB,KAAAmlB,gBACKzmB,EAAA8nB,EACL,OAAAhN,GAAA,GASAxD,EAAAlS,UAAA2iB,MAAA,SAAAC,GACA,GAAAC,IAAA,EAAAD,EAAA,EAAAA,KAAA,IACAjoB,EAAA,EAAAkH,KAAAiH,KAAA,EAAA+Z,EACA,IACA,EACA,IAAA7R,GAAA9U,KAAAomB,SACAQ,EAAAjhB,KAAAwgB,IAAA1nB,EAAAqW,EAAA,WACS,GAAA8R,EACT,IAAAC,GAAA7mB,KAAAmlB,UACA2B,EAAAnhB,KAAAwgB,IAAArR,EAAA,SACK+R,GAAA,QAAAC,KACLnhB,KAAAzE,IAAA2lB,IAAA,GAAAC,EAAAH,GAAA,EAAAC,EAAAjhB,KAAAzE,IAAA0lB,IACA,UAAAF,EACAC,EAAAC,EAAAjhB,KAAA4a,IAAAvgB,KAAAqmB,eAAAK,GAEAC,EAAAC,GAWA5Q,EAAA+Q,OAAA,SAAAC,EAAAjP,GACA,GAAAkP,GAAAD,EAAAE,MAAA,0BAAAC,MAAA,GACAC,EAAAC,WAAAJ,EAAA,OACAK,EAAAD,WAAAJ,EAAA,IACAM,EAAAF,WAAAJ,EAAA,MAEA,OADAlP,MAAA,GAAA/B,GACA,WAEA,OADAwR,GAAAJ,EAAAG,EACAxc,EAAA,EAAuBqc,EAAArc,EAAUA,IACjCyc,GAAAzP,EAAAnK,OAAA0Z,EAEA,OAAAE,KAKAxR,EAAA9R,EAAA,GAAA8R,GAIA5X,EAAAD,QAAA6X,GvC4wGM,SAAS5X,EAAQD,EAASH;;;;;;;;;;;;;;AwCr+GhC,QAAAgnB,GAAAvO,GACAzW,KAAA0M,EAAA,GAAAkU,OAAA,KACA5gB,KAAA+K,EAAA,EACA/K,KAAA+M,EAAA,CACA,QAAAhC,GAAA,EAAmB,IAAAA,EAASA,IAC5B/K,KAAA0M,EAAA3B,IAEA0L,IACAzW,KAAAilB,IAAAxO,GA4DA,QAAAT,GAAAS,GACA,MAAAA,EACAA,GAAA9Q,KAAAiI,SAAAlL,KAAAC,OAAAuiB,WACK,kBAAAzO,IAELzW,KAAAmlB,QAAA1O,EACAzW,KAAAolB,SAAA,WACA,aAAAplB,KAAAmlB,YAEA1O,EAAA,MACK,oBAAAsO,OAAAjhB,UAAAohB,SAAA3mB,KAAAkY,KACLA,EAAA1V,KAAAskB,UAAA5O,IAEAzW,KAAAslB,QAAA,KACA7O,EACAzW,KAAAulB,OAAA,GAAAP,GAAAvO,GAEAzW,KAAAulB,OAAA,KApEAP,EAAAQ,eAAA,SAAAC,GAEA,OADAC,MACA3a,EAAA,EAAmBA,EAAA0a,EAAA9Y,OAAmB5B,IAAA,CACtC,GAAAtM,GAAAgnB,EAAAE,WAAA5a,GACA6a,IACA,GACAA,GAAAxY,KAAA,IAAA3O,GACAA,IAAA,QACSA,EAAA,EACTinB,KAAAG,OAAAD,EAAAE,WAEA,MAAAJ,IAGAV,EAAAlhB,UAAAiiB,MAAA,SAAAhb,EAAAgC,GACA,GAAAwP,GAAAvc,KAAA0M,EAAA3B,EACA/K,MAAA0M,EAAA3B,GAAA/K,KAAA0M,EAAAK,GACA/M,KAAA0M,EAAAK,GAAAwP,GAOAyI,EAAAlhB,UAAAmhB,IAAA,SAAAxO,GAGA,OAFAuP,GAAAhB,EAAAQ,eAAA/O,GACA1J,EAAA,EACAhC,EAAA,EAAmBA,EAAA/K,KAAA0M,EAAAC,OAAmB5B,IACtCgC,GAAA/M,KAAA0M,EAAA3B,GAAAib,EAAAjb,EAAAib,EAAArZ,QACAI,GAAA,IACA/M,KAAA+lB,MAAAhb,EAAAgC,IAOAiY,EAAAlhB,UAAAmiB,KAAA,WAIA,MAHAjmB,MAAA+K,GAAA/K,KAAA+K,EAAA,OACA/K,KAAA+M,GAAA/M,KAAA+M,EAAA/M,KAAA0M,EAAA1M,KAAA+K,IAAA,IACA/K,KAAA+lB,MAAA/lB,KAAA+K,EAAA/K,KAAA+M,GACA/M,KAAA0M,GAAA1M,KAAA0M,EAAA1M,KAAA+K,GAAA/K,KAAA0M,EAAA1M,KAAA+M,IAAA,MAkCAiJ,EAAAlS,UAAAshB,SAAA,WACA,MAAAplB,MAAAulB,OAAAU,QAMAjQ,EAAAlS,UAAAqhB,QAAA,WAGA,OAFAe,GAAA,EACAR,EAAA,EACA3a,EAAA,EAAmBmb,EAAAnb,EAAWA,IAC9B2a,GAAA,IACAA,GAAA1lB,KAAAolB,UAEA,OAAAM,IAAA/f,KAAAwgB,IAAA,IAAAD,GAAA,IASAlQ,EAAAlS,UAAA8J,OAAA,SAAA4W,EAAAhmB,GACA,aAAAgmB,EACAxkB,KAAAmlB,WACK,MAAA3mB,IACLA,EAAAgmB,EACAA,EAAA,GAEAA,EAAA7e,KAAAoI,MAAA/N,KAAAmlB,WAAA3mB,EAAAgmB,MAOAxO,EAAAlS,UAAAsiB,OAAA,WACA,UAAApmB,KAAAslB,QAAA,CACA,GAAAd,GAAAxkB,KAAAslB,OAEA,OADAtlB,MAAAslB,QAAA,KACAd,EAEA,GAAA1P,GAAA9U,KAAAmlB,WAAAxf,KAAAwgB,IAAA,OACApR,EAAA/U,KAAAmlB,SAEA,OADAnlB,MAAAslB,QAAA3f,KAAAiH,KAAA,GAAAjH,KAAAzE,IAAA4T,IAAAnP,KAAA4e,IAAA,EAAA5e,KAAAC,GAAAmP,GACApP,KAAAiH,KAAA,GAAAjH,KAAAzE,IAAA4T,IAAAnP,KAAA2e,IAAA,EAAA3e,KAAAC,GAAAmP,IAQAiB,EAAAlS,UAAAuiB,YAAA,WACA,OAAA1gB,KAAAzE,IAAAlB,KAAAmlB,WAAAxf,KAAAwgB,IAAA,SAQAnQ,EAAAlS,UAAAwiB,QAAA,SAAAC,GACA,GAAAC,GAAA7gB,KAAA4a,MAAAgG,GAAA,IACA/M,EAAA,EAAA9a,EAAA,CACA,GACA8a,KACA9a,GAAAsB,KAAAmlB,gBACKzmB,EAAA8nB,EACL,OAAAhN,GAAA,GASAxD,EAAAlS,UAAA2iB,MAAA,SAAAC,GACA,GAAAC,IAAA,EAAAD,EAAA,EAAAA,KAAA,IACAjoB,EAAA,EAAAkH,KAAAiH,KAAA,EAAA+Z,EACA,IACA,EACA,IAAA7R,GAAA9U,KAAAomB,SACAQ,EAAAjhB,KAAAwgB,IAAA1nB,EAAAqW,EAAA,WACS,GAAA8R,EACT,IAAAC,GAAA7mB,KAAAmlB,UACA2B,EAAAnhB,KAAAwgB,IAAArR,EAAA,SACK+R,GAAA,QAAAC,KACLnhB,KAAAzE,IAAA2lB,IAAA,GAAAC,EAAAH,GAAA,EAAAC,EAAAjhB,KAAAzE,IAAA0lB,IACA,UAAAF,EACAC,EAAAC,EAAAjhB,KAAA4a,IAAAvgB,KAAAqmB,eAAAK,GAEAC,EAAAC,GAWA5Q,EAAA+Q,OAAA,SAAAC,EAAAjP,GACA,GAAAkP,GAAAD,EAAAE,MAAA,0BAAAC,MAAA,GACAC,EAAAC,WAAAJ,EAAA,OACAK,EAAAD,WAAAJ,EAAA,IACAM,EAAAF,WAAAJ,EAAA,MAEA,OADAlP,MAAA,GAAA/B,GACA,WAEA,OADAwR,GAAAJ,EAAAG,EACAxc,EAAA,EAAuBqc,EAAArc,EAAUA,IACjCyc,GAAAzP,EAAAnK,OAAA0Z,EAEA,OAAAE,KAKAxR,EAAA9R,EAAA,GAAA8R,IxC+/GM,SAAS5X,EAAQD,EAASH,GyCvuHhCI,EAAAD,QAAA,0JzC6uHM,SAASC,EAAQD,EAASH,G0C7uHhCI,EAAAD,QAAA,m8E1CmvHM,SAASC,EAAQD,EAASH,G2CnvHhCI,EAAAD,QAAA,8jJ3CyvHM,SAASC,EAAQD,EAASH,G4CzvHhCI,EAAAD,QAAA,s/F5C+vHM,SAASC,EAAQD,EAASH,G6C/vHhC,GAAAW,GAAA8T,EAAA,SAAA8C,EAAAC,GAAA,QAAAC,KAAAzV,KAAA0V,YAAAH,EAAA,OAAA5L,KAAA6L,GAAAG,EAAApX,KAAAiX,EAAA7L,KAAA4L,EAAA5L,GAAA6L,EAAA7L,GAAA,OAAA8L,GAAA3R,UAAA0R,EAAA1R,UAAAyR,EAAAzR,UAAA,GAAA2R,GAAAF,EAAAK,UAAAJ,EAAA1R,UAAAyR,G7CkwHGI,KAAaE,c6ClwHhBlX,GAAO,SAACM,GACN,GAAA2iB,GAAA6F,EAAA3R,EAAA8M,EAAAhjB,EAAAiI,C7C0wHC,O6C1wHDA,GAAI7J,EAAQ,IACZ4B,EAAQ5B,EAAQ,GAEhBypB,EAAiBzpB,EAAQ,IACzB8X,EAAkB9X,EAAQ,IAC1B4kB,EAAgB5kB,EAAQ,IAElB4jB,EAAA,SAAA1L,GAKS,QAAA0L,KACXA,EAAAhM,UAAAF,YAAA3W,MAAAiB,KAAAhB,W7CqxHD,M6C1xHDyT,GAAAmP,EAAA1L,GAAA0L,EAAChN,WAAiB,GAAAkB,GAAiB,GAAI,GAAI,EAAa,EAAVnQ,KAAKC,IACnDgc,EAAC/M,SAAe,GAAA+N,GAAe,EAAQ,GAAQ,GAAI,EAAG,EAAa,EAAVjd,KAAKC,IAC9Dgc,EAACvL,UAAgB,GAAAuM,GAAe,EAAQ,GAAI,GAAI,EAAG,EAAa,EAAVjd,KAAKC,IAF3Dgc,EAAA9d,UAOAme,YAAa,WACX,MAAOL,GAAehN,YARxBgN,EAAA9d,UAUA4jB,mBAAoB,SAACC,GACnB,MAAkB,GAAfA,EAA6B/F,EAAe/M,SACxC+M,EAAevL,W7C8wHhBuL,G6C3xHmB6F,IAR/BlpB,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,K7C2yHM,SAASP,EAAQD,EAASH,G8C3yHhC,GAAAW,GAAA8T,EAAA,SAAA8C,EAAAC,GAAA,QAAAC,KAAAzV,KAAA0V,YAAAH,EAAA,OAAA5L,KAAA6L,GAAAG,EAAApX,KAAAiX,EAAA7L,KAAA4L,EAAA5L,GAAA6L,EAAA7L,GAAA,OAAA8L,GAAA3R,UAAA0R,EAAA1R,UAAAyR,EAAAzR,UAAA,GAAA2R,GAAAF,EAAAK,UAAAJ,EAAA1R,UAAAyR,G9C8yHGI,KAAaE,c8C9yHhBlX,GAAO,SAACM,GACN,GAAAiV,GAAA6B,EAAAC,EAAA6L,EAAAjiB,EAAAgoB,EAAA/f,C9CuzHC,O8CvzHDA,GAAI7J,EAAQ,IACZ4B,EAAQ5B,EAAQ,GAChBgY,EAAMhY,EAAQ,IACd4pB,EAAW5pB,EAAQ,IACnB+X,EAAc/X,EAAQ,IACtBkW,EAASlW,EAAQ,IAGX6jB,EAAA,SAAA3L,GAsBS,QAAA2L,GAAC1N,EAAcxS,GAE1B,GAAAgI,GAAAwJ,EAAA1G,CAFYzM,MAACgS,OAAA,MAAAmC,EAADA,K9C44HC,MAARxS,I8C54HqBA,EAAO,GAEjC8K,EAAAoV,EAAAnP,UAAA,KAAA/I,IAAA8C,G9C+4HG0G,EAAO1G,EAAI9C,G8C94HR,MAAA3J,KAAAgS,OAAArI,KACF3J,KAACgS,OAAOrI,GAAOwJ,EAAKR,IAGxBkP,GAAAjM,UAAAF,YAAA3W,MAAAiB,KAAAhB,WAEAgB,KAACkiB,SAAe,GAAAC,aAChBniB,KAACS,UAAgB,GAAAb,GAAM4U,SACvBxU,KAAC6nB,cAAgB,EACjB7nB,KAACyU,SACDzU,KAAC8nB,kBACD9nB,KAACmW,MAAMxU,G9CojIR,M8CvlID8Q,GAAAoP,EAAA3L,GAAA2L,EAACnP,YACCsC,UAAWhB,KAAM,WAAYkB,MAAO,YAAavC,IAAK,GAAIwC,gBAAgB,GAC1EsB,MAAOzC,KAAM,OAAQkB,MAAO,OAAQvC,IAAK,MAAOwC,gBAAgB,GAChEoG,OAAQvH,KAAM,QAASkB,MAAO,WAAYvC,IAAK,GAAIwC,gBAAgB,GACnE4S,OAAQ/T,KAAM,QAASkB,MAAO,WAAYvC,IAAK,GAAIwC,gBAAgB,GACnE6S,OAAQhU,KAAM,QAASkB,MAAO,WAAYvC,IAAK,EAAGwC,gBAAgB,GAClE8S,UAAWjU,KAAM,WAAYkB,MAAO,oBAAqBvC,IAAK,EAAGwC,gBAAgB,GACjF+S,YAAalU,KAAM,aAAckB,MAAO,iBAAkBvC,IAAK,EAAGwC,gBAAgB,GAClFgT,YAAanU,KAAM,aAAckB,MAAO,iBAAkBvC,IAAK,EAAGwC,gBAAgB,GAClFiT,cAAepU,KAAM,eAAgBkB,MAAO,gBAAiBvC,IAAK,IAClE0V,iBAAkBrU,KAAM,kBAAmBkB,MAAO,oBAAqBvC,IAAK,IAC5E2V,aAActU,KAAM,cAAekB,MAAO,cAAevC,IAAK,EAAGoE,IAAK,EAAGrJ,IAAK,GAC9EgJ,OAAQ1C,KAAM,QAASkB,MAAO,QAASvC,IAAK,GAC5C4V,eAAgBvU,KAAM,gBAAiBkB,MAAO,gBAAiBvC,IAAK,GAAKwC,gBAAgB,GACzFL,GAAId,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,GAChCoC,GAAIf,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,GAChCxQ,GAAI6R,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,GAChCyP,MAAOpO,KAAM,OAAQkB,MAAO,aAAcvC,IAAK,GAC/C0P,MAAOrO,KAAM,OAAQkB,MAAO,aAAcvC,IAAK,GAC/C2P,MAAOtO,KAAM,OAAQkB,MAAO,aAAcvC,IAAK,IAnBjDkP,EAAA/d,UAqCAge,aAAc,WAAM,MAAOF,iBArC3BC,EAAA/d,UAuCA8T,QAAS,SAACjW,G9Cm5HP,M8Cl5HD3B,MAAC6X,QACD7X,KAACmW,MAAMxU,IAzCTkgB,EAAA/d,UA2CA+T,MAAO,WACL,GAAAtG,GAAAxE,EAAAO,EAAAb,CAAA,IAAGzM,KAAEyU,OAASzU,KAAEyU,MAAM9H,OAAtB,CAIA,IAHA3M,KAACkiB,SAASjR,QACVjR,KAAC8nB,kBAEDrb,EAAAzM,KAAAyU,MAAA1H,EAAA,EAAAO,EAAAb,EAAAE,OAAAW,EAAAP,M9Cs5HGwE,EAAO9E,EAAIM,G8Cr5HZ/M,KAACS,UAAUkR,OAAOJ,EAAK9Q,WACvB8Q,EAAKK,S9Cw5HN,O8Cv5HD5R,MAACyU,WAnDHoN,EAAA/d,UAqDAqS,MAAO,SAACxU,GACN,GAAA6mB,GAAA9jB,EAAA2F,EAAAoe,EAAAC,EAAAnc,EAAAoc,EAAA5d,EAAAwG,EAAAqX,EAAA7b,EAAA8b,EAAAZ,EAAAC,EAAAC,EAAA1b,EAAAqc,EAAAnoB,EAAAmU,EAAAC,EAAA5S,CAIA,K9Cq5Ha,MAARR,I8C15HCA,EAAO,GACb3B,KAAC+X,IAAU,GAAA/B,GAAIhW,KAACgS,OAAOyE,MACvBzW,KAAC+oB,aAAmB,GAAA/S,GAAIhW,KAACgS,OAAOyE,KAAO,SACvCzW,KAACgpB,WAAiB,GAAAhT,GAAIhW,KAACgS,OAAOyE,MAErB1L,EAAAgC,EAAA,EAAAN,EAAAzM,KAAAgS,OAAAgD,SAAA,EAAAvI,GAAA,EAAAA,GAAAM,KAAAN,EAAA1B,EAAA0B,GAAA,IAAAM,MACP6b,EAAY5oB,KAAC8hB,eACbgH,EAAU9oB,KAAC+X,IAAInK,OAAO,EAAG,KAAQ,IACjC8a,EAA4B,GAAVI,GAAmB,GAAU,EAC/CL,EAAiBK,EAAU,IAAS,GAAU,EAE3CF,EAAUK,YACXP,GAAe,EACfD,GAAc,GAEhB/jB,EAAQwP,EAAOmP,IAAIrjB,KAAC+X,IAAInK,OAAO,EAAG,MAC/B5N,KAAC+X,IAAInK,OAAO,EAAG,KAAgC,IAAxB5N,KAACgS,OAAOuW,gBAChC7jB,EAAQwP,EAAOmP,IAAI,IAErBsF,EAAYjkB,EAAM2U,QACfqP,GACDC,EAAUpP,eAAevZ,KAAC+X,IAAInK,OAAO,GAAK,KAE5CjN,EAAOX,KAAC+X,IAAInK,OAAO5N,KAACgS,OAAOoW,aAAcpoB,KAACgS,OAAOqW,iBACjDvT,EAAI9U,KAACkpB,kBAAkBlpB,KAACgS,OAAOuJ,OAC/BxG,EAAI/U,KAACkpB,kBAAkBlpB,KAACgS,OAAO+V,OAC/B5lB,EAAInC,KAACkpB,kBAAkBlpB,KAACgS,OAAOgW,OAC/BC,EAAWjoB,KAAC+X,IAAInK,OAAO,EAAG,KAAQ,IAAOjI,KAAKC,GAAK5F,KAACgS,OAAOiW,SAC3DC,EAAaloB,KAAC+X,IAAInK,OAAO,EAAG,KAAQ,IAAO5N,KAACgS,OAAOkW,WACnDC,EAAanoB,KAAC+X,IAAInK,OAAO,EAAG,KAAQ,IAAO5N,KAACgS,OAAOmW,WACnDU,GAAO/T,EAAGA,EAAGC,EAAGA,EAAG5S,EAAGA,GAEtBkI,EAAQrK,KAAC+oB,aAAanb,OAAO,EAAG,MAAQ,IACxCrB,EAAWvM,KAAC+oB,aAAanb,OAAO,IAAK,KAAO,IAC5CrB,GAAY,EACZic,EAAgBxoB,KAACgpB,WAAWpb,OAAO,EAAG,KAAO,IAG1C8a,KAAgB,GAEjBC,EAAUpP,eAAe,GAE3BhI,EAAW,GAAAqX,IACTjoB,KAAMA,EACNgnB,aAAca,EACdW,YAAaT,EACbU,WAAYX,EACZ/jB,MAAOA,EACPikB,UAAWA,EACXte,MAAOA,EACPkC,SAAUA,EACVmK,MAAO1W,KAACgS,OAAO0E,MACf5B,EAAG+T,EAAI/T,EACPC,EAAG8T,EAAI9T,EACP5S,EAAG0mB,EAAI1mB,EACP8lB,SAAUA,EACVC,WAAYA,EACZC,WAAYA,IAEdnoB,KAACS,UAAUgB,IAAI8P,EAAK9Q,WACpBT,KAACkiB,SAASzgB,IAAI8P,EAAK2Q,SAAU,GAC7BliB,KAACyU,MAAMrH,KAAKmE,GACZvR,KAAC8nB,eAAe1a,KAAKyb,E9C65HtB,O8C35HD7oB,MAAC6nB,cAAgB7nB,KAACkiB,SAAS3V,WAG3BvM,KAAC0G,OAAO/E,EAAM3B,KAACgS,QAAQ,IAxHzB6P,EAAA/d,UA0HA4C,OAAQ,SAAC4E,EAAS0G,EAAgBoD,GAChC,GAAA7D,GAAAxE,EAAAyM,EAAA7P,EAAA2D,EAAA+b,EAAAjP,EAAAyO,EAAAP,EAAAnV,EAAA1G,EAAA8H,EAAA+U,C9C05He,OAAVtX,I8C35HWA,GAAS,G9C85HX,MAAToD,I8C95H2BA,GAAQ,GACrCpD,KAAU,IAAWA,EAAShS,KAACgS,QAClCoI,GAAgB,EAGhB3N,EAAAoV,EAAAnP,UAAA,KAAA/I,IAAA8C,G9Ck6HG0G,EAAO1G,EAAI9C,G8Cj6HTwJ,EAAKgC,gBAAkBnV,KAACqa,aAAa1Q,EAAKqI,KAC3CoI,GAAgB,EAWpB,MATGhF,GAASpV,KAACqa,aAAa,IAAKrI,IAAWhS,KAACqa,aAAa,IAAKrI,IAAWhS,KAACqa,aAAa,IAAKrI,KACzFhS,KAACS,UAAUyB,SAASwB,IAAIsO,EAAO8C,EAAG9C,EAAO+C,EAAG/C,EAAO7P,IAElDiT,GAASpV,KAACqa,aAAa,OAAQrI,IAAWhS,KAACqa,aAAa,OAAQrI,IAAWhS,KAACqa,aAAa,OAAQrI,KAClGhS,KAACS,UAAUwE,SAASvB,IAAI1D,KAAC2iB,eAAe3Q,EAAOoQ,MAAOpiB,KAAC2iB,eAAe3Q,EAAOqQ,MAAOriB,KAAC2iB,eAAe3Q,EAAOsQ,OAG7GgG,EAActW,EAAOsW,YAAc,EACnCtoB,KAACkiB,SAAStgB,KAAK5B,KAAC6nB,cAAgBS,GAChC/T,EAAAvU,KAAAyU,MAAA1H,EAAA,EAAAO,EAAAiH,EAAA5H,OAAAW,EAAAP,M9Co6HGwE,EAAOgD,EAAKxH,G8Cn6HbwE,EAAK7K,OAAO4E,GAAUgd,YAAatW,EAAOsW,aAE5C,IAAGlT,GAASpV,KAACqa,aAAa,QAASrI,GACjC,IAAAsX,EAAAtpB,KAAAyU,MAAA9K,EAAA6P,EAAA,EAAA6P,EAAAC,EAAA3c,OAAA0c,EAAA7P,EAAA7P,IAAA6P,E9Cw6HGjI,EAAO+X,EAAK3f,G8Cv6Hbkf,EAAM7oB,KAAC8nB,eAAene,GACtB4H,EAAK9Q,UAAUyB,SAASwB,IAAImlB,EAAI/T,EAAG+T,EAAI9T,EAAG8T,EAAI1mB,EAAI6P,EAAO0E,MAK7D,OAFA1W,MAACgS,OAASnK,EAAEyS,MAAMta,KAACgS,OAAQA,GAExBoI,KAAiB,EAClBpa,KAAC4X,QAAQtM,GADX,QAvJFuW,EAAA/d,UA0JAolB,kBAAmB,SAACxU,GAClB,M9Cy6Hc,OAATA,I8C16HaA,EAAQ,GACnB1U,KAAC+X,IAAInK,QAAO8G,EAAQA,IA3J7BmN,EAAA/d,UA6JA8N,QAAS,W9Cu7HN,M8Ct7HDiQ,GAAAjM,UAAAhE,QAAA7S,MAAAiB,KAAAhB,WAEGgB,KAACS,YACCT,KAACS,UAAU+U,QAAYxV,KAACS,UAAU+U,OAAO7D,OAAO3R,KAACS,iBACpDT,MAAQS,iBACVT,MAAQ+X,UACR/X,MAAQgpB,iBACRhpB,MAAQujB,O9Ck7HF1B,G8CxlIoB9L,IAThCxX,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,K9CymIM,SAASP,EAAQD,EAASH,G+CzmIhC,GAAAW,GAAA8T,EAAA,SAAA8C,EAAAC,GAAA,QAAAC,KAAAzV,KAAA0V,YAAAH,EAAA,OAAA5L,KAAA6L,GAAAG,EAAApX,KAAAiX,EAAA7L,KAAA4L,EAAA5L,GAAA6L,EAAA7L,GAAA,OAAA8L,GAAA3R,UAAA0R,EAAA1R,UAAAyR,EAAAzR,UAAA,GAAA2R,GAAAF,EAAAK,UAAAJ,EAAA1R,UAAAyR,G/C4mIGI,KAAaE,c+C5mIhBlX,GAAO,SAACM,GACN,GAAA8iB,GAAA0F,EAAA7nB,EAAAiI,C/CknIC,O+ClnIDA,GAAI7J,EAAQ,IACZ4B,EAAQ5B,EAAQ,GAEhBypB,EAAiBzpB,EAAQ,IACnB+jB,EAAA,SAAA7L,GAKS,QAAA6L,KACXA,EAAAnM,UAAAF,YAAA3W,MAAAiB,KAAAhB,W/CgoID,M+CroIDyT,GAAAsP,EAAA7L,GAAA6L,EAACnN,WAAiB,GAAAhV,GAAM8F,eAAgB,GAAI,EAAG,EAAa,EAAVC,KAAKC,IACvDmc,EAAClN,SAAe,GAAAjV,GAAMiG,aAAc,EAAQ,GAAQ,EAAG,EAAG,EAAa,EAAVF,KAAKC,IAClEmc,EAAC1L,UAAgB,GAAAzW,GAAMiG,aAAc,EAAQ,GAAI,EAAG,EAAG,EAAa,EAAVF,KAAKC,IAF/Dmc,EAAAje,UAOAme,YAAa,WACX,MAAOF,GAAYnN,YARrBmN,EAAAje,UAUA4jB,mBAAoB,SAACC,GACnB,MAAkB,GAAfA,EAA6B5F,EAAYlN,SACrCkN,EAAY1L,W/CynIb0L,G+CtoIgB0F,IAL5BlpB,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,K/CmpIM,SAASP,EAAQD,EAASH,GgDnpIhC,GAAAW,GAAA8T,EAAA,SAAA8C,EAAAC,GAAA,QAAAC,KAAAzV,KAAA0V,YAAAH,EAAA,OAAA5L,KAAA6L,GAAAG,EAAApX,KAAAiX,EAAA7L,KAAA4L,EAAA5L,GAAA6L,EAAA7L,GAAA,OAAA8L,GAAA3R,UAAA0R,EAAA1R,UAAAyR,EAAAzR,UAAA,GAAA2R,GAAAF,EAAAK,UAAAJ,EAAA1R,UAAAyR,GhDspIGI,KAAaE,cgDtpIhBlX,GAAO,SAACM,GACN,GAAA+iB,GAAAyF,EAAA7nB,EAAAiI,ChD4pIC,OgD5pIDA,GAAI7J,EAAQ,IACZ4B,EAAQ5B,EAAQ,GAEhBypB,EAAiBzpB,EAAQ,IACnBgkB,EAAA,SAAA9L,GAMS,QAAA8L,KACXA,EAAApM,UAAAF,YAAA3W,MAAAiB,KAAAhB,WhDsrID,MgD5rIDyT,GAAAuP,EAAA9L,GAAA8L,EAACpN,WAAiB,GAAAhV,GAAMsP,cAAe,IAAK,GAC5C8S,EAACnN,UAAW,EACZmN,EAAC3L,WAAY,EACb2L,EAACiH,WAAY,EAHbjH,EAAAle,UAQAme,YAAa,WAAM,MAAOD,GAAapN,YARvCoN,EAAAle,UAUA4jB,mBAAoB,SAACC,GAAiB,OAAO,GAV7C3F,EAAAle,UAYA4C,OAAQ,SAAC4E,EAASgd,GAOhB,GAAAvd,GAAAuC,EAAAjJ,EAAAoI,EAAAiI,EAAA6U,CAKA,KALAvpB,KAACS,UAAUyB,SAAST,IAAIzB,KAACwpB,UAEzBxpB,KAACwpB,SAAWxpB,KAACwpB,SAASjQ,eAAe,KAErCgQ,EAAW7mB,KAAKC,MAAQ3C,KAACsM,MACzBG,EAAAzM,KAAAypB,UAAA1e,EAAA,EAAAuC,EAAAb,EAAAE,OAAAW,EAAAvC,MhD6pIG1G,EAAWoI,EAAI1B,GgD5pIhB1G,EAAS8C,SAAS,KAAQG,MAAQ,MAAYiiB,ChDgqI/C,OgD9pID7U,GAAQ1U,KAAC0pB,mBAAmBhV,MAAQ1U,KAACgS,OAAOrR,KAAO,GACnDX,KAACS,UAAUiU,MAAMhR,IAAI,EAAGgR,EAAO,IhDgqIzBsN,GgD7rIiByF,IAL7BlpB,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KhD0sIM,SAASP,EAAQD,EAASH,GiD1sIhC,GAAAW,EAEAA,GAAA,SAAAM,GACA,GAAAW,GAAA5B,EAAA,EAsFA,OApFA4B,GAAAgjB,cAAA,SAAAC,EAAA8G,EAAAC,EAAAC,EAAA/F,EAAAC,GAEAnkB,EAAAokB,SAAAzlB,KAAAyB,MAEAA,KAAAqH,KAAA,gBAEArH,KAAAkI,YACA2a,cACA8G,cACAC,gBACAC,cACA/F,aACAC,eAGAlB,KAAA,EACA8G,KAAA,GAEA7F,EAAA7c,SAAA6c,IAAA,EACAC,EAAA9c,SAAA8c,IAAA,EAAApe,KAAAC,GAEAgkB,EAAA3iB,SAAA2iB,EAAAjkB,KAAA+H,IAAA,EAAAkc,GAAA,EACAC,EAAA5iB,SAAA4iB,EAAAlkB,KAAA+H,IAAA,EAAAmc,GAAA,CAEA,IAAA9e,GAAA+e,EAAA7F,KAAAL,EAAAf,EAAAkH,GAAAJ,EAAA9G,GAAAgH,CAEA,KAAA9e,EAAA,EAAa8e,EAAA,EAAA9e,EAAqBA,IAAA,CAElC,IAAA+e,EAAA,EAAcF,EAAA,EAAAE,EAAuBA,IAAA,CAErC,GAAA1F,GAAA,GAAAxkB,GAAAuZ,QACAkL,EAAAP,EAAAgG,EAAAF,EAAA7F,CACAK,GAAAtP,EAAA8O,EAAAje,KAAA2e,IAAAD,GACAD,EAAArP,EAAA6O,EAAAje,KAAA4e,IAAAF,GAEArkB,KAAAijB,SAAA7V,KAAAgX,EAEA,IAAA4F,IACAlV,EAAA/J,EAAA8e,EACA9U,EAAA+U,EAAAF,EAEA3F,GAAA7W,KAAA,GAAAxN,GAAA4H,QAAAwiB,EAAAlV,EAAAkV,EAAAjV,IAGA6O,GAAAmG,EAIA,GAAAvF,GAAA,GAAA5kB,GAAAuZ,QAAA,MAEA,KAAApO,EAAA,EAAa8e,EAAA9e,EAAiBA,IAAA,CAE9B,GAAAkf,GAAAlf,GAAA6e,EAAA,EAEA,KAAAE,EAAA,EAAcF,EAAAE,EAAoBA,IAAA,CAElC,GAAAzF,GAAAyF,EAAAG,EAEAC,EAAA7F,EACA8F,EAAA9F,EAAAuF,EAAA,EACAQ,EAAA/F,EAAAuF,EAAA,CAEA5pB,MAAAykB,MAAArX,KAAA,GAAAxN,GAAA8kB,MAAAwF,EAAAC,EAAAC,GAAA5F,EAAAnL,QAAAmL,EAAAnL,QAAAmL,EAAAnL,WACArZ,KAAA2kB,cAAA,GAAAvX,MAAA6W,EAAAiG,GAAA7Q,QAAA4K,EAAAkG,GAAA9Q,QAAA4K,EAAAmG,GAAA/Q,UAEA6Q,EAAA7F,EACA8F,EAAA9F,EAAAuF,EAAA,EACAQ,EAAA/F,EAAA,EAEArkB,KAAAykB,MAAArX,KAAA,GAAAxN,GAAA8kB,MAAAwF,EAAAC,EAAAC,GAAA5F,EAAAnL,QAAAmL,EAAAnL,QAAAmL,EAAAnL,WACArZ,KAAA2kB,cAAA,GAAAvX,MAAA6W,EAAAiG,GAAA7Q,QAAA4K,EAAAkG,GAAA9Q,QAAA4K,EAAAmG,GAAA/Q,WAKArZ,KAAA4kB,qBAEA5kB,KAAA6kB,eAAA,GAAAjlB,GAAAklB,OAAA,GAAAllB,GAAAuZ,QAAAyK,IAIAhkB,EAAAgjB,cAAA9e,UAAAihB,OAAAhT,OAAAnS,EAAAokB,SAAAlgB,WACAlE,EAAAgjB,cAAA9e,UAAA4R,YAAA9V,EAAAgjB,cAEAhjB,EAAAgjB,eACCrkB,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ,KjDitIK,SAASP,EAAQD,EAASH,GkD3yIhCI,EAAAD,QAAAypB,UlDizIM,SAASxpB,EAAQD,EAASH,GmDjzIhC,GAAAW,GAAAC,EAAA,SAAAC,EAAAC,GAAA,wBAAAD,GAAAE,MAAAD,EAAAE,YAAAL,GAAO,SAACM,GACN,GAAAwoB,GAAAtoB,EAAA+U,EAAA8B,EAAAC,EAAAnJ,EAAAlN,EAAAgoB,EAAA/f,CnD8zIC,OmD9zIDA,GAAI7J,EAAQ,IACZ4B,EAAQ5B,EAAQ,GAChBgY,EAAMhY,EAAQ,IACd4pB,EAAW5pB,EAAQ,IAEnBkW,EAASlW,EAAQ,IAGjBmB,EAAQnB,EAAQ,GAEhB8O,EAAe9O,EAAQ,IACvBiY,EAAkBjY,EAAQ,IAEpBypB,EAAA,WAqBS,QAAAA,GAACzV,EAAcrQ,GAC1B,GAAAgI,GAAAwJ,EAAA1G,EAAA4d,CADYrqB,MAACgS,OAAA,MAAAA,EAADA,KnD+2IC,MAARrQ,ImD/2IqBA,EAAO,GACjC3B,KAAAsqB,cAAA1rB,EAAAoB,KAAAsqB,cAAAtqB,WAAAuqB,aAAA3rB,EAAAoB,KAAAuqB,aAAAvqB,MAAAyM,EAAAgb,EAAA/U,UAAA,KAAA/I,IAAA8C,GnDq3IG0G,EAAO1G,EAAI9C,GmDp3IR,MAAA3J,KAAAgS,OAAArI,KACF3J,KAACgS,OAAOrI,GAAOwJ,EAAKR,IAExB3S,MAACS,UAAgB,GAAAb,GAAM4U,SACvBxU,KAACS,UAAUiU,MAAMhR,IAAI,KAAM,KAAM,MACjC1D,KAACS,UAAUyB,SAASwB,IAAI1D,KAACgS,OAAO8C,EAAG9U,KAACgS,OAAO+C,EAAG/U,KAACgS,OAAO7P,GACtDnC,KAACS,UAAUwE,SAASvB,IAAI,EAAG,EAAG1D,KAACgS,OAAOiW,UACtCjoB,KAACypB,aACDzpB,KAACsM,MAAQ5J,KAAKC,MAEd3C,KAACiY,OAAa,GAAArY,GAAMuZ,QACpBnZ,KAACwpB,SAAe,GAAA5pB,GAAMuZ,QACtBnZ,KAACwqB,OAAyB,GAAhB7kB,KAAKiI,SAAiB,GAChC5N,KAACyqB,UAAgB,GAAA7qB,GAAMuZ,QAAwB,EAAhBxT,KAAKiI,SAAe,EAAmB,EAAhBjI,KAAKiI,SAAe,EAAG,GAC7E5N,KAAC2N,MAAQ,EACT3N,KAAC0pB,oBACChV,MAAO,MACT1U,KAACkiB,SAAe,GAAAC,aAEhBkI,EAAQK,UAAUC,GAAG3qB,KAAC0pB,mBAAoB,GAAIhV,MAAO,KAASkW,KAAMC,OAAOC,WAC3E9qB,KAACkiB,SAASzgB,IAAI4oB,EAAO,GAErBA,EAAQK,UAAUC,GAAG3qB,KAAC0pB,mBAAoB1pB,KAACgS,OAAOzF,UAAWmI,MAAO,EAAGrK,MAAOrK,KAACgS,OAAO3H,MAAOugB,KAAMG,MAAMC,UACzGhrB,KAACkiB,SAASzgB,IAAI4oB,GAGdA,EAAQK,UAAUC,GAAG3qB,KAAC0pB,mBAAuC,GAAnB1pB,KAACgS,OAAOzF,UAAiBmI,MAAO,EAAGkW,KAAMG,MAAMC,UACzFhrB,KAACkiB,SAASzgB,IAAI4oB,GAGdA,EAAQK,UAAUC,GAAG3qB,KAAC0pB,mBAAoB1pB,KAACgS,OAAOzF,UAAWmI,MAAO,KAASkW,KAAMG,MAAME,SACzFjrB,KAACkiB,SAASzgB,IAAI4oB,GAIdrqB,KAACuqB,aAAavqB,KAACgS,OAAOrR,KAAMX,KAACgS,OAAO2W,WnDm9IrC,MmD5gJDlB,GAAC7S,WAAiB,GAAAhV,GAAM8F,eAAgB,GAAI,GAAI,EAAa,EAAVC,KAAKC,IACxD6hB,EAAC5S,SAAe,GAAAjV,GAAMiG,aAAc,EAAQ,GAAQ,GAAI,EAAG,EAAa,EAAVF,KAAKC,IACnE6hB,EAACpR,UAAgB,GAAAzW,GAAMiG,aAAc,EAAQ,GAAI,GAAI,EAAG,EAAa,EAAVF,KAAKC,IAEhE6hB,EAAC/U,YACC/R,MAAOqT,KAAM,OAAQkB,MAAO,OAAQvC,IAAK,IACzCgV,cAAe3T,KAAM,eAAgBkB,MAAO,gBAAiBvC,IAAK,GAClEwW,aAAcnV,KAAM,cAAekB,MAAO,eAAgBvC,KAAK,GAC/DyW,YAAapV,KAAM,aAAckB,MAAO,cAAevC,KAAK,GAC5DjO,OAAQsP,KAAM,QAASkB,MAAO,QAASvC,KAAK,GAC5CgW,WAAY3U,KAAM,YAAakB,MAAO,aAAcvC,KAAK,GACzDtI,OAAQ2J,KAAM,QAASkB,MAAO,QAASvC,IAAK,GAC5CpG,UAAWyH,KAAM,WAAYkB,MAAO,WAAYvC,IAAK,IACrDmC,GAAId,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,GAChCoC,GAAIf,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,GAChCxQ,GAAI6R,KAAM,IAAKkB,MAAO,IAAKvC,IAAK,GAChCsV,UAAWjU,KAAM,WAAYkB,MAAO,oBAAqBvC,IAAK,GAC9DuV,YAAalU,KAAM,aAAckB,MAAO,iBAAkBvC,IAAK,GAC/DwV,YAAanU,KAAM,aAAckB,MAAO,iBAAkBvC,IAAK,IAlBjE8U,EAAA3jB,UA2DAme,YAAa,WACX,MAAOwF,GAAe7S,YA5DxB6S,EAAA3jB,UA8DA4jB,mBAAoB,SAACC,GACnB,MAAkB,GAAfA,EAA6BF,EAAe5S,SACxC4S,EAAepR,WAhExBoR,EAAA3jB,UAkEA8N,QAAS,WACP,GAAA2D,GAAAxK,EAAAuC,EAAAb,CAEA,KAFAzM,KAACkiB,SAASjR,QAEVxE,EAAAzM,KAAAS,UAAA8Z,SAAAxP,EAAA,EAAAuC,EAAAb,EAAAE,OAAAW,EAAAvC,MnDi4IGwK,EAAQ9I,EAAI1B,GmDh4Ib/K,KAACS,UAAUkR,OAAO4D,EnDm4InB,OmDj4IDvV,MAACS,UAAY,MAxEfgnB,EAAA3jB,UA0EAoW,YAAa,SAACxV,GACZ,GAAAL,GAAA8C,CA6BA,OA7BAA,IACExF,MACE0F,KAAM,IACNC,MAAO,GAETmP,MACEpP,KAAM,IACNC,MAAuB,IAAhB3B,KAAKiI,UAEduM,UACE9S,KAAM,IACNC,MAAO,IAET5C,OACE2C,KAAM,IACNC,MAAO5C,IAGXL,EAAe,GAAAzE,GAAMwO,gBACnB3G,aAAcqF,EACdnF,eAAgBsO,EAChB9O,SAAUA,EACV7B,aAAa,EACb+I,YAAY,EACZC,WAAW,IAIbjK,EAASkB,SAAW3F,EAAM2O,iBACnBlK,GAxGTojB,EAAA3jB,UA0GA4C,OAAQ,SAAC4E,EAASgd,GAOhB,GAAAvd,GAAAuC,EAAAjJ,EAAAoI,EAAAiI,EAAA6U,CAKA,KALAvpB,KAACS,UAAUyB,SAAST,IAAIzB,KAACwpB,UAEzBxpB,KAACwpB,SAAWxpB,KAACwpB,SAASjQ,eAAe,KAErCgQ,EAAW7mB,KAAKC,MAAQ3C,KAACsM,MACzBG,EAAAzM,KAAAypB,UAAA1e,EAAA,EAAAuC,EAAAb,EAAAE,OAAAW,EAAAvC,MnD63IG1G,EAAWoI,EAAI1B,GmD53IhB1G,EAAS8C,SAAS,KAAQG,MAAQ,MAAYiiB,EAC9CllB,EAAS8C,SAAS,SAAYG,MAAQvH,OAAOc,MAAM8H,GnDg4IpD,OmD93ID+L,GAAQ1U,KAAC0pB,mBAAmBhV,MAAQ1U,KAACgS,OAAOrR,KAAO,GACnDX,KAACS,UAAUiU,MAAMhR,IAAIgR,GAAS,EAAI1U,KAACgS,OAAOkW,YAAaxT,GAAS,EAAI1U,KAACgS,OAAOmW,YAAazT,IA3H3F+S,EAAA3jB,UA6HAymB,aAAc,SAAC5pB,EAAM+D,GACnB,GAAAL,GAAAC,CnDk4IC,OmDl4IDD,GAAWrE,KAACka,YAAYxV,GACxB1E,KAACypB,UAAUrc,KAAK/I,GAEhBC,EAAa,GAAA1E,GAAMmF,KAAK/E,KAACiiB,cAAgB5d,GACzCrE,KAACS,UAAUgB,IAAK6C,IAlIlBmjB,EAAA3jB,UAoIAwmB,cAAe,SAAC3pB,EAAM+D,EAAOijB,GAC3B,GAAAtT,GAAAhQ,EAAAC,CnDo4IC,OmDp4ID+P,GAAOrU,KAAC0nB,mBAAmBC,GAE3BtjB,EAAWrE,KAACka,YAAYxV,GACxB1E,KAACypB,UAAUrc,KAAK/I,GAChBC,EAAa,GAAA1E,GAAMmF,KAAMsP,EAAMhQ,GAC/BrE,KAACS,UAAUgB,IAAK6C,InDk4IVmjB,MmD3hJZlpB,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA6I,SAAAtI,IAAAP,EAAAD,QAAAQ","file":"App.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var App, Audio, Background, DataNormalizer, ElementFactory, OrganizedChaos, Particles, PostFX, SceneManager, Shaders, THREE, TweenTime, dataJson;\n\t  THREE = __webpack_require__(2);\n\t  TweenTime = __webpack_require__(3);\n\t  Shaders = __webpack_require__(7);\n\t  Background = __webpack_require__(8);\n\t  PostFX = __webpack_require__(9);\n\t  SceneManager = __webpack_require__(10);\n\t  Audio = __webpack_require__(6);\n\t  ElementFactory = __webpack_require__(11);\n\t  DataNormalizer = __webpack_require__(12);\n\t  dataJson = __webpack_require__(16);\n\t  Particles = __webpack_require__(13);\n\t  OrganizedChaos = __webpack_require__(14);\n\t  return window.App = App = (function() {\n\t    function App() {\n\t      this.animate = bind(this.animate, this);\n\t      this.onWindowResize = bind(this.onWindowResize, this);\n\t      this.updateCameraAspect = bind(this.updateCameraAspect, this);\n\t      this.onAudioLoaded = bind(this.onAudioLoaded, this);\n\t      this.onTimerSeeked = bind(this.onTimerSeeked, this);\n\t      this.onTimerStatusChanged = bind(this.onTimerStatusChanged, this);\n\t      var audio_url, conf, container, light1, size;\n\t      window.updateCameraAspect = this.updateCameraAspect;\n\t      this.shaders = new Shaders();\n\t      audio_url = './assets/08 - Space Tron On The Grid.mp3';\n\t      this.audio = new Audio(audio_url, this.onAudioLoaded);\n\t      this.factory = new ElementFactory();\n\t      conf = JSON.parse(dataJson);\n\t      console.log(conf);\n\t      this.settings = conf.settings;\n\t      this.data = DataNormalizer.normalizeData(conf.data, this.factory);\n\t      this.tweenTime = new TweenTime(this.data);\n\t      this.tweenTime.timer.statusChanged.add(this.onTimerStatusChanged);\n\t      this.tweenTime.timer.seeked.add(this.onTimerSeeked);\n\t      if (this.settings.time) {\n\t        this.tweenTime.timer.seek([this.settings.time]);\n\t      }\n\t      size = this.getScreenSize();\n\t      this.camera = new THREE.PerspectiveCamera(45, size.width / size.height, 1, 2000);\n\t      this.camera.position.z = 600;\n\t      window.activeCamera = this.camera;\n\t      this.scene = new THREE.Scene();\n\t      this.scene.fog = new THREE.FogExp2(0x111111, 0.0045);\n\t      this.sceneManager = new SceneManager(this.tweenTime, this.data, this.scene, this.camera, this.factory);\n\t      this.time = Date.now() * 0.0001;\n\t      container = document.createElement('div');\n\t      this.containerWebgl = container;\n\t      document.body.appendChild(container);\n\t      this.renderer = new THREE.WebGLRenderer({\n\t        antialias: true,\n\t        alpha: false\n\t      });\n\t      this.renderer.setPixelRatio(window.devicePixelRatio);\n\t      this.renderer.setSize(size.width, size.height);\n\t      this.renderer.setClearColor(0x111111, 1);\n\t      light1 = new THREE.DirectionalLight(0xffffff, 0.4);\n\t      light1.position.set(100, 300, 700);\n\t      this.scene.add(light1);\n\t      container.appendChild(this.renderer.domElement);\n\t      window.addEventListener('resize', this.onWindowResize, false);\n\t      this.postfx = new PostFX(this.scene, this.camera, this.renderer, size);\n\t      this.animate();\n\t    }\n\t\n\t    App.prototype.onTimerStatusChanged = function(is_playing) {\n\t      if (is_playing) {\n\t        return this.audio.play();\n\t      } else {\n\t        return this.audio.pause();\n\t      }\n\t    };\n\t\n\t    App.prototype.onTimerSeeked = function(time) {\n\t      return this.audio.seek(time / 1000);\n\t    };\n\t\n\t    App.prototype.onAudioLoaded = function() {\n\t      console.log(\"audio loaded\");\n\t      return $('body').addClass('is-audio-loaded');\n\t    };\n\t\n\t    App.prototype.createElements = function() {\n\t      var material, object, object2, object3;\n\t      material = new THREE.MeshPhongMaterial({\n\t        color: 0x111111,\n\t        specular: 0x666666,\n\t        shininess: 30,\n\t        shading: THREE.SmoothShading\n\t      });\n\t      object = new THREE.Mesh(new THREE.PlaneBufferGeometry(2000, 650, 1, 1), material);\n\t      object.position.set(420, 0, -350);\n\t      object.rotation.set(0.1, 0.8, 0.7);\n\t      this.scene.add(object);\n\t      object2 = new THREE.Mesh(new THREE.PlaneBufferGeometry(2000, 650, 1, 1), material);\n\t      object2.position.set(320, 0, -450);\n\t      object2.rotation.set(0.17, 0.85, 0.78);\n\t      this.scene.add(object2);\n\t      object3 = new THREE.Mesh(new THREE.PlaneBufferGeometry(2000, 650, 1, 1), material);\n\t      object3.position.set(-120, -600, -950);\n\t      object3.rotation.set(0.17, 0.35, -0.38);\n\t      return this.scene.add(object3);\n\t    };\n\t\n\t    App.prototype.__createElementsBackup = function() {\n\t      var material, material2, materialBlack, object;\n\t      material = new THREE.MeshBasicMaterial({\n\t        color: 0xd7888e,\n\t        transparent: true\n\t      });\n\t      material.blending = THREE.MultiplyBlending;\n\t      materialBlack = new THREE.MeshBasicMaterial({\n\t        color: 0x222222,\n\t        transparent: true,\n\t        wireframe: false\n\t      });\n\t      materialBlack.blending = THREE.MultiplyBlending;\n\t      material2 = new THREE.MeshBasicMaterial({\n\t        color: 0x406872,\n\t        transparent: true\n\t      });\n\t      material2.blending = THREE.MultiplyBlending;\n\t      object = new THREE.Mesh(new THREE.CircleGeometry(50, 50, 0, Math.PI * 2), material);\n\t      object.position.set(20, 0, 0);\n\t      this.scene.add(object);\n\t      object = new THREE.Mesh(new THREE.RingGeometry(43, 50, 50, 1, 0, Math.PI * 2), materialBlack);\n\t      object.position.set(20, 0, 0);\n\t      this.scene.add(object);\n\t      object = new THREE.Mesh(new THREE.RingGeometry(40, 50, 4, 1, 0, Math.PI * 2), material2);\n\t      object.position.set(-20, 0, 0);\n\t      object.rotation.set(0, 0, Math.PI / 4);\n\t      return this.scene.add(object);\n\t    };\n\t\n\t    App.prototype.getScreenSize = function() {\n\t      var SCREEN_HEIGHT, SCREEN_WIDTH, propertieswidth, timelineheight;\n\t      SCREEN_WIDTH = window.innerWidth;\n\t      SCREEN_HEIGHT = window.innerHeight;\n\t      if (window.editorEnabled) {\n\t        timelineheight = 295;\n\t        if ($('body').hasClass('timeline-is-closed')) {\n\t          timelineheight = 95;\n\t        }\n\t        propertieswidth = 279;\n\t        if ($('body').hasClass('properties-is-closed')) {\n\t          propertieswidth = 0;\n\t        }\n\t        SCREEN_HEIGHT -= timelineheight;\n\t        SCREEN_WIDTH -= propertieswidth;\n\t      }\n\t      return {\n\t        width: SCREEN_WIDTH,\n\t        height: SCREEN_HEIGHT\n\t      };\n\t    };\n\t\n\t    App.prototype.updateCameraAspect = function(camera, size) {\n\t      if (size == null) {\n\t        size = false;\n\t      }\n\t      if (size === false) {\n\t        size = this.getScreenSize();\n\t      }\n\t      camera.aspect = size.width / size.height;\n\t      return camera.updateProjectionMatrix();\n\t    };\n\t\n\t    App.prototype.onWindowResize = function() {\n\t      var size;\n\t      size = this.getScreenSize();\n\t      this.updateCameraAspect(this.camera, size);\n\t      this.updateCameraAspect(window.activeCamera, size);\n\t      this.renderer.setSize(size.width, size.height);\n\t      return this.postfx.resize(size.width, size.height);\n\t    };\n\t\n\t    App.prototype.animate = function() {\n\t      requestAnimationFrame(this.animate);\n\t      this.audio.update();\n\t      this.shaders.update();\n\t      return this.render();\n\t    };\n\t\n\t    App.prototype.render = function() {\n\t      var delta, newTime;\n\t      newTime = Date.now() * 0.0001;\n\t      delta = newTime - this.time;\n\t      if (this.particles) {\n\t        this.particles.update();\n\t      }\n\t      if (this.chaos) {\n\t        this.chaos.update();\n\t      }\n\t      this.camera.lookAt(this.scene.position);\n\t      this.postfx.render(delta);\n\t      return this.time = newTime;\n\t    };\n\t\n\t    return App;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author davidedc / http://www.sketchpatch.net/\n\t *\n\t * NVIDIA FXAA by Timothy Lottes\n\t * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\n\t * - WebGL port by @supereggbert\n\t * http://www.glge.org/demos/fxaa/\n\t */\n\t\n\tTHREE.FXAAShader = {\n\t\n\t\tuniforms: {\n\t\n\t\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\t\"resolution\": { type: \"v2\", value: new THREE.Vector2( 1 / 1024, 1 / 512 )  }\n\t\n\t\t},\n\t\n\t\tvertexShader: [\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tfragmentShader: [\n\t\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform vec2 resolution;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"#define FXAA_REDUCE_MIN   (1.0/128.0)\",\n\t\t\t\"#define FXAA_REDUCE_MUL   (1.0/8.0)\",\n\t\t\t\"#define FXAA_SPAN_MAX     8.0\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\t\"vec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );\",\n\t\t\t\t\"vec3 rgbM  = rgbaM.xyz;\",\n\t\t\t\t\"float opacity  = rgbaM.w;\",\n\t\n\t\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\t\n\t\t\t\t\"float lumaNW = dot( rgbNW, luma );\",\n\t\t\t\t\"float lumaNE = dot( rgbNE, luma );\",\n\t\t\t\t\"float lumaSW = dot( rgbSW, luma );\",\n\t\t\t\t\"float lumaSE = dot( rgbSE, luma );\",\n\t\t\t\t\"float lumaM  = dot( rgbM,  luma );\",\n\t\t\t\t\"float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\",\n\t\t\t\t\"float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\",\n\t\n\t\t\t\t\"vec2 dir;\",\n\t\t\t\t\"dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\",\n\t\t\t\t\"dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\",\n\t\n\t\t\t\t\"float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\",\n\t\n\t\t\t\t\"float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\",\n\t\t\t\t\"dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\",\n\t\t\t\t\t  \"max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\",\n\t\t\t\t\t\t\t\"dir * rcpDirMin)) * resolution;\",\n\t\n\t\t\t\t\"vec3 rgbA = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\t\"rgbA += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\t\"rgbA *= 0.5;\",\n\t\n\t\t\t\t\"vec3 rgbB = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz;\",\n\t\t\t\t\"rgbB += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz;\",\n\t\t\t\t\"rgbB *= 0.25;\",\n\t\t\t\t\"rgbB += rgbA * 0.5;\",\n\t\n\t\t\t\t\"float lumaB = dot( rgbB, luma );\",\n\t\n\t\t\t\t\"if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\",\n\t\n\t\t\t\t\t\"gl_FragColor = vec4( rgbA, opacity );\",\n\t\n\t\t\t\t\"} else {\",\n\t\n\t\t\t\t\t\"gl_FragColor = vec4( rgbB, opacity );\",\n\t\n\t\t\t\t\"}\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\")\n\t\n\t};\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = THREE;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = TweenTime.Core;\n\n/***/ },\n/* 4 */,\n/* 5 */,\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Audio, _;\n\t  _ = __webpack_require__(17);\n\t  return Audio = (function() {\n\t    Audio.instance = false;\n\t\n\t    function Audio(mp3Url, onLoadedCallback) {\n\t      var gain2, muted, parameters;\n\t      this.onLoadedCallback = onLoadedCallback;\n\t      this.rms = bind(this.rms, this);\n\t      this.play = bind(this.play, this);\n\t      this.pause = bind(this.pause, this);\n\t      this.createSound = bind(this.createSound, this);\n\t      this.load = bind(this.load, this);\n\t      this.seek = bind(this.seek, this);\n\t      this.update = bind(this.update, this);\n\t      window.audio = this;\n\t      muted = true;\n\t      this.fftSize = 512;\n\t      this.filters = {};\n\t      this.playing = false;\n\t      this.now = 0.0;\n\t      this.timeDelay = 0.0;\n\t      this.bass = 0;\n\t      this.mid = 0;\n\t      this.high = 0;\n\t      this.context = false;\n\t      if (typeof AudioContext !== \"undefined\") {\n\t        this.context = new AudioContext();\n\t      } else if (typeof webkitAudioContext !== \"undefined\") {\n\t        this.context = new webkitAudioContext();\n\t      }\n\t      this.analyser = this.context.createAnalyser();\n\t      this.analyser.fftSize = this.fftSize;\n\t      this.source = this.context.createBufferSource();\n\t      parameters = {\n\t        bass: {\n\t          type: 0,\n\t          frequency: 120,\n\t          Q: 1.2,\n\t          gain: 2.0\n\t        },\n\t        mid: {\n\t          type: 2,\n\t          frequency: 400,\n\t          Q: 1.2,\n\t          gain: 4.0\n\t        },\n\t        treble: {\n\t          type: 1,\n\t          frequency: 2000,\n\t          Q: 1.2,\n\t          gain: 3.0\n\t        }\n\t      };\n\t      _.each(parameters, (function(_this) {\n\t        return function(spec, key) {\n\t          var filter;\n\t          filter = _this.context.createBiquadFilter();\n\t          filter.key = key;\n\t          filter.type = spec.type;\n\t          filter.frequency = spec.frequency;\n\t          filter.Q.value = spec.Q;\n\t          filter.analyser = _this.context.createAnalyser();\n\t          filter.analyser.fftSize = _this.fftSize;\n\t          if (_this.context.createDelay != null) {\n\t            filter.delayNode = _this.context.createDelay();\n\t          } else {\n\t            filter.delayNode = _this.context.createDelayNode();\n\t          }\n\t          filter.delayNode.delayTime.value = 0;\n\t          if (_this.context.createGain != null) {\n\t            filter.gainNode = _this.context.createGain();\n\t          } else {\n\t            filter.gainNode = _this.context.createGainNode();\n\t          }\n\t          filter.gainNode.gain.value = spec.gain;\n\t          return _this.filters[key] = filter;\n\t        };\n\t      })(this));\n\t      if (this.context.createDelay != null) {\n\t        this.delay = this.context.createDelay();\n\t      } else {\n\t        this.delay = this.context.createDelayNode();\n\t      }\n\t      this.delay.delayTime.value = this.fftSize * 2 / this.context.sampleRate;\n\t      this.source.connect(this.analyser);\n\t      this.analyser.connect(this.delay);\n\t      if (muted) {\n\t        gain2 = this.context.createGain();\n\t        this.delay.connect(gain2);\n\t        gain2.gain.value = 0.00;\n\t        gain2.connect(this.context.destination);\n\t      } else {\n\t        this.delay.connect(this.context.destination);\n\t      }\n\t      _.each(this.filters, (function(_this) {\n\t        return function(filter) {\n\t          _this.source.connect(filter.delayNode);\n\t          filter.delayNode.connect(filter);\n\t          filter.connect(filter.gainNode);\n\t          return filter.gainNode.connect(filter.analyser);\n\t        };\n\t      })(this));\n\t      this.samples = this.analyser.frequencyBinCount;\n\t      this.data = {\n\t        freq: new Uint8Array(this.samples),\n\t        time: new Uint8Array(this.samples),\n\t        filter: {\n\t          bass: new Uint8Array(256),\n\t          mid: new Uint8Array(256),\n\t          treble: new Uint8Array(256)\n\t        }\n\t      };\n\t      this.load(mp3Url);\n\t      Audio.instance = this;\n\t    }\n\t\n\t    Audio.prototype.update = function() {\n\t      var bins, i, num, waveforms;\n\t      if (this.playing === false) {\n\t        return;\n\t      }\n\t      this.analyser.smoothingTimeConstant = 0;\n\t      this.analyser.getByteFrequencyData(this.data.freq);\n\t      this.analyser.getByteTimeDomainData(this.data.time);\n\t      _.each(this.filters, (function(_this) {\n\t        return function(filter) {\n\t          return filter.analyser.getByteTimeDomainData(_this.data.filter[filter.key]);\n\t        };\n\t      })(this));\n\t      bins = [0, 0, 0, 0];\n\t      waveforms = [this.data.time, this.data.filter.bass, this.data.filter.mid, this.data.filter.treble];\n\t      for (num = i = 0; i <= 3; num = ++i) {\n\t        bins[num] = this.rms(waveforms[num]);\n\t      }\n\t      this.bass = bins[1];\n\t      this.mid = bins[2];\n\t      this.high = bins[3];\n\t      return this.now = this.context.currentTime - this.timeDelay;\n\t    };\n\t\n\t    Audio.prototype.seek = function(seconds) {\n\t      this.now = seconds;\n\t      if (this.source.buffer) {\n\t        if (this.playing) {\n\t          this.pause();\n\t          return this.play();\n\t        }\n\t      }\n\t    };\n\t\n\t    Audio.prototype.load = function(url) {\n\t      var request;\n\t      request = new XMLHttpRequest();\n\t      request.open(\"GET\", url, true);\n\t      request.responseType = \"arraybuffer\";\n\t      request.onload = (function(_this) {\n\t        return function() {\n\t          return _this.context.decodeAudioData(request.response, function(buff) {\n\t            _this.buffer = buff;\n\t            _this.source.buffer = _this.buffer;\n\t            _this.source.loop = false;\n\t            if (_this.onLoadedCallback) {\n\t              return _this.onLoadedCallback();\n\t            }\n\t          });\n\t        };\n\t      })(this);\n\t      return request.send();\n\t    };\n\t\n\t    Audio.prototype.createSound = function() {\n\t      var src;\n\t      src = this.context.createBufferSource();\n\t      if (this.buffer) {\n\t        src.buffer = this.buffer;\n\t      }\n\t      src.connect(this.analyser);\n\t      _.each(this.filters, (function(_this) {\n\t        return function(filter) {\n\t          return src.connect(filter.delayNode);\n\t        };\n\t      })(this));\n\t      return src;\n\t    };\n\t\n\t    Audio.prototype.pause = function() {\n\t      if (this.source) {\n\t        if (this.playing) {\n\t          this.source.stop(0);\n\t        }\n\t        this.source.disconnect(0);\n\t        this.source = false;\n\t      }\n\t      return this.playing = false;\n\t    };\n\t\n\t    Audio.prototype.play = function() {\n\t      this.playing = true;\n\t      this.timeDelay = this.context.currentTime - this.now;\n\t      if (!this.source) {\n\t        this.source = this.createSound();\n\t      }\n\t      if (this.source.buffer) {\n\t        return this.source.start(0, this.now, this.buffer.duration - this.now);\n\t      }\n\t    };\n\t\n\t    Audio.prototype.rms = function(data) {\n\t      var accum, i, num, ref, s, size;\n\t      size = data.length;\n\t      accum = 0;\n\t      for (num = i = 0, ref = size - 1; 0 <= ref ? i <= ref : i >= ref; num = 0 <= ref ? ++i : --i) {\n\t        s = (data[num] - 128) / 128;\n\t        accum += s * s;\n\t      }\n\t      return Math.sqrt(accum / size);\n\t    };\n\t\n\t    return Audio;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Audio, LineFragement, ShaderVertex, Shaders, THREE;\n\t  THREE = __webpack_require__(2);\n\t  Audio = __webpack_require__(6);\n\t  ShaderVertex = __webpack_require__(42);\n\t  LineFragement = __webpack_require__(43);\n\t  return Shaders = (function() {\n\t    function Shaders() {\n\t      var i, j;\n\t      window.shaders = this;\n\t      this.shaders = [];\n\t      this.simpleMaterial = new THREE.MeshBasicMaterial({\n\t        color: 0xdddddd,\n\t        shading: THREE.FlatShading,\n\t        side: THREE.DoubleSide\n\t      });\n\t      for (i = j = 0; j < 50; i = ++j) {\n\t        this.shaders.push(this.createMaterialLine(0xdddddd));\n\t      }\n\t      console.log(this.shaders);\n\t    }\n\t\n\t    Shaders.prototype.update = function() {\n\t      var j, len, ref, results, shader;\n\t      ref = this.shaders;\n\t      results = [];\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        shader = ref[j];\n\t        shader.uniforms.percent.value = Math.max(0, shader.uniforms.percent.value - shader.speed * 0.03);\n\t        if (window.audio.mid > 0.8 && Math.random() < 0.02) {\n\t          results.push(shader.uniforms.percent.value = 2);\n\t        } else {\n\t          results.push(void 0);\n\t        }\n\t      }\n\t      return results;\n\t    };\n\t\n\t    Shaders.prototype.getMaterialLine = function(animated) {\n\t      if (animated === false) {\n\t        return this.simpleMaterial;\n\t      }\n\t      return this.shaders[Math.floor(Math.random() * this.shaders.length)];\n\t    };\n\t\n\t    Shaders.prototype.createMaterialLine = function(color) {\n\t      var material, uniforms;\n\t      uniforms = {\n\t        percent: {\n\t          type: 'f',\n\t          value: 1.0\n\t        },\n\t        color: {\n\t          type: 'c',\n\t          value: new THREE.Color(color)\n\t        },\n\t        fogColor: {\n\t          type: \"c\",\n\t          value: new THREE.Color(0x111111)\n\t        },\n\t        fogDensity: {\n\t          type: \"f\",\n\t          0.2045: 0.2045\n\t        }\n\t      };\n\t      material = new THREE.ShaderMaterial({\n\t        vertexShader: ShaderVertex,\n\t        fragmentShader: LineFragement,\n\t        side: THREE.DoubleSide,\n\t        shading: THREE.FlatShading,\n\t        uniforms: uniforms,\n\t        transparent: true,\n\t        depthWrite: false,\n\t        depthTest: false,\n\t        fog: true\n\t      });\n\t      material.speed = Math.random() + 0.5;\n\t      material.blending = THREE.AdditiveBlending;\n\t      return material;\n\t    };\n\t\n\t    return Shaders;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Background, THREE;\n\t  THREE = __webpack_require__(2);\n\t  return Background = (function() {\n\t    function Background(scene) {\n\t      var bg, bgMat, texture;\n\t      this.scene = scene;\n\t      texture = THREE.ImageUtils.loadTexture('src/images/background.jpg');\n\t      texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n\t      texture.repeat.set(2, 2);\n\t      bgMat = new THREE.MeshBasicMaterial({\n\t        map: texture\n\t      });\n\t      bg = new THREE.Mesh(new THREE.PlaneGeometry(1600, 1600, 4, 4), bgMat);\n\t      bg.material.depthTest = false;\n\t      bg.material.depthWrite = false;\n\t      bg.position.set(0, 0, -10);\n\t      this.scene.add(bg);\n\t    }\n\t\n\t    return Background;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var PostFX, THREE;\n\t  THREE = __webpack_require__(2);\n\t  __webpack_require__(20);\n\t  __webpack_require__(21);\n\t  __webpack_require__(22);\n\t  __webpack_require__(23);\n\t  __webpack_require__(24);\n\t  __webpack_require__(25);\n\t  __webpack_require__(19);\n\t  __webpack_require__(26);\n\t  __webpack_require__(1);\n\t  __webpack_require__(27);\n\t  __webpack_require__(28);\n\t  __webpack_require__(29);\n\t  __webpack_require__(30);\n\t  return PostFX = (function() {\n\t    function PostFX(scene, camera, renderer, size) {\n\t      var dpr, renderModel;\n\t      this.scene = scene;\n\t      this.camera = camera;\n\t      this.renderer = renderer;\n\t      this.renderer.autoClear = false;\n\t      renderModel = new THREE.RenderPass(this.scene, this.camera);\n\t      window.renderModel = renderModel;\n\t      dpr = window.devicePixelRatio != null ? window.devicePixelRatio : 1;\n\t      this.renderTargetParameters = {\n\t        minFilter: THREE.LinearFilter,\n\t        magFilter: THREE.LinearFilter,\n\t        format: THREE.RGBFormat,\n\t        stencilBufer: false\n\t      };\n\t      this.renderTarget = new THREE.WebGLRenderTarget(size.width * dpr, size.height * dpr, this.renderTargetParameters);\n\t      this.effectFXAA = new THREE.ShaderPass(THREE.FXAAShader);\n\t      this.effectFXAA.uniforms['resolution'].value.set(1 / (size.width * dpr), 1 / (size.height * dpr));\n\t      this.bloom = new THREE.BloomPass(0.6, 25, 4);\n\t      this.glitchPass = new THREE.GlitchPass2();\n\t      this.glitchPass.intensity = 0.3;\n\t      this.glitchPass.uniforms.tScratch.value = THREE.ImageUtils.loadTexture(\"src/images/lensflare_dirt.jpg\");\n\t      this.vignettePass = new THREE.ShaderPass(THREE.VignetteShader);\n\t      this.vignettePass.uniforms['darkness'].value = 2;\n\t      this.filmShader = new THREE.FilmPass(0.34, 0.01, 648, false);\n\t      this.filmShader.renderToScreen = true;\n\t      this.composer = new THREE.EffectComposer(this.renderer, this.renderTarget);\n\t      this.composer.setSize(size.width * dpr, size.height * dpr);\n\t      this.composer.addPass(renderModel);\n\t      this.composer.addPass(this.effectFXAA);\n\t      this.composer.addPass(this.bloom);\n\t      this.composer.addPass(this.vignettePass);\n\t      this.composer.addPass(this.filmShader);\n\t    }\n\t\n\t    PostFX.prototype.resize = function(SCREEN_WIDTH, SCREEN_HEIGHT) {\n\t      var dpr;\n\t      dpr = window.devicePixelRatio != null ? window.devicePixelRatio : 1;\n\t      this.renderTarget = new THREE.WebGLRenderTarget(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr, this.renderTargetParameters);\n\t      this.composer.reset(this.renderTarget);\n\t      return this.effectFXAA.uniforms['resolution'].value.set(1 / (SCREEN_WIDTH * dpr), 1 / (SCREEN_HEIGHT * dpr));\n\t    };\n\t\n\t    PostFX.prototype.render = function(delta) {\n\t      this.renderer.clear();\n\t      return this.composer.render(delta);\n\t    };\n\t\n\t    return PostFX;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var SceneManager, Signals, _;\n\t  _ = __webpack_require__(17);\n\t  Signals = __webpack_require__(18);\n\t  return SceneManager = (function() {\n\t    function SceneManager(tweenTime, data, scene, defaultCamera, factory) {\n\t      this.tweenTime = tweenTime;\n\t      this.data = data;\n\t      this.scene = scene;\n\t      this.defaultCamera = defaultCamera;\n\t      this.factory = factory;\n\t      this.update = bind(this.update, this);\n\t      this.timer = this.tweenTime.timer;\n\t      this.timer.updated.add(this.update);\n\t      this.update(0);\n\t    }\n\t\n\t    SceneManager.prototype.update = function(timestamp) {\n\t      var activeCamera, el, i, item, len, ref, seconds, should_exist, type;\n\t      activeCamera = this.defaultCamera;\n\t      seconds = timestamp / 1000;\n\t      ref = this.data;\n\t      for (i = 0, len = ref.length; i < len; i++) {\n\t        item = ref[i];\n\t        should_exist = seconds >= item.start && seconds <= item.end ? true : false;\n\t        if ((item.object && should_exist === false) || item.isDirtyObject) {\n\t          item.isDirtyObject = false;\n\t          if (item.object) {\n\t            this.scene.remove(item.object.container);\n\t            item.object.destroy();\n\t            delete item.object;\n\t          }\n\t        }\n\t        if (!item.classObject) {\n\t          item.classObject = this.factory.getTypeClass(item.type);\n\t        }\n\t        if (should_exist === false) {\n\t          continue;\n\t        }\n\t        if (should_exist && !item.object) {\n\t          type = item.type;\n\t          el = this.factory.create(type, item.values, seconds - item.start);\n\t          this.scene.add(el.container);\n\t          item.object = el;\n\t          el.container._data = item;\n\t        }\n\t        if (item.object && item.object.isCamera) {\n\t          activeCamera = item.object.container;\n\t          window.updateCameraAspect(activeCamera);\n\t        }\n\t        if (item.object) {\n\t          item.object.update(seconds - item.start, item.values);\n\t        }\n\t      }\n\t      window.activeCamera = activeCamera;\n\t      if (window.renderModel) {\n\t        return window.renderModel.camera = activeCamera;\n\t      }\n\t    };\n\t\n\t    return SceneManager;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Boxes, Camera, Circle, Circles, ElementFactory, Lines, OrganizedChaos, SingleObject, extend;\n\t  Camera = __webpack_require__(31);\n\t  Circles = __webpack_require__(32);\n\t  Boxes = __webpack_require__(33);\n\t  Lines = __webpack_require__(34);\n\t  SingleObject = __webpack_require__(35);\n\t  Circle = __webpack_require__(36);\n\t  OrganizedChaos = __webpack_require__(14);\n\t  extend = function(object, properties) {\n\t    var key, val;\n\t    for (key in properties) {\n\t      val = properties[key];\n\t      if (typeof object[key] === 'object' && object[key] !== null) {\n\t        object[key] = extend({}, val);\n\t      } else {\n\t        object[key] = val;\n\t      }\n\t    }\n\t    return object;\n\t  };\n\t  ElementFactory = (function() {\n\t    function ElementFactory() {\n\t      this.getTypeClass = bind(this.getTypeClass, this);\n\t    }\n\t\n\t    ElementFactory.elements = {\n\t      Chaos: {\n\t        classObject: OrganizedChaos\n\t      },\n\t      Circles: {\n\t        classObject: Circles\n\t      },\n\t      Boxes: {\n\t        classObject: Boxes\n\t      },\n\t      Lines: {\n\t        classObject: Lines\n\t      },\n\t      Camera: {\n\t        classObject: Camera\n\t      },\n\t      Box: {\n\t        classObject: SingleObject\n\t      },\n\t      Circle: {\n\t        classObject: Circle\n\t      }\n\t    };\n\t\n\t    ElementFactory.prototype.getTypeClass = function(itemType) {\n\t      return ElementFactory.elements[itemType].classObject;\n\t    };\n\t\n\t    ElementFactory.getTypeProperties = function(itemName) {\n\t      var element_class, item, key, prop, prop_definition, properties, ref;\n\t      item = ElementFactory.elements[itemName];\n\t      if (item) {\n\t        element_class = item.classObject;\n\t        if (element_class) {\n\t          properties = [];\n\t          ref = item.classObject.properties;\n\t          for (key in ref) {\n\t            prop_definition = ref[key];\n\t            prop = extend({}, prop_definition);\n\t            prop.keys = [];\n\t            properties.push(prop);\n\t          }\n\t          console.log(properties);\n\t          return properties;\n\t        }\n\t      }\n\t    };\n\t\n\t    ElementFactory.prototype.create = function(itemName, values, time) {\n\t      var item;\n\t      item = ElementFactory.elements[itemName];\n\t      if (!item) {\n\t        console.warn(\"Can't create item: \" + itemName);\n\t        return false;\n\t      }\n\t      return new item.classObject(values);\n\t    };\n\t\n\t    return ElementFactory;\n\t\n\t  })();\n\t  return window.ElementFactory = ElementFactory;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var DataNormalizer, ElementFactory, _;\n\t  _ = __webpack_require__(17);\n\t  ElementFactory = __webpack_require__(11);\n\t  return DataNormalizer = (function() {\n\t    function DataNormalizer() {}\n\t\n\t    DataNormalizer.normalizeItem = function(data_item, factory) {\n\t      var existing_prop, key, key2, new_prop, static_prop, static_properties, value2;\n\t      if (!data_item.classObject) {\n\t        data_item.classObject = factory.getTypeClass(data_item.type);\n\t      }\n\t      static_properties = data_item.classObject.properties;\n\t      console.log(static_properties);\n\t      if (!static_properties) {\n\t        return;\n\t      }\n\t      for (key in static_properties) {\n\t        static_prop = static_properties[key];\n\t        existing_prop = _.find(data_item.properties, function(prop) {\n\t          return prop.name === static_prop.name;\n\t        });\n\t        if (!existing_prop) {\n\t          new_prop = {};\n\t          for (key2 in static_prop) {\n\t            value2 = static_prop[key2];\n\t            new_prop[key2] = value2;\n\t          }\n\t          new_prop.keys = [];\n\t          data_item.properties.push(new_prop);\n\t        }\n\t        if (existing_prop && !existing_prop.group && static_prop.group) {\n\t          existing_prop.group = static_prop.group;\n\t        }\n\t      }\n\t      return data_item;\n\t    };\n\t\n\t    DataNormalizer.normalizeData = function(data, factory) {\n\t      data = _.map(data, function(item) {\n\t        return DataNormalizer.normalizeItem(item, factory);\n\t      });\n\t      return data;\n\t    };\n\t\n\t    return DataNormalizer;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Audio, Colors, Particles, THREE, _;\n\t  _ = __webpack_require__(17);\n\t  THREE = __webpack_require__(2);\n\t  Audio = __webpack_require__(6);\n\t  Colors = __webpack_require__(37);\n\t  return Particles = (function() {\n\t    Particles.circleGeom = new THREE.CircleGeometry(10, 30, 0, Math.PI * 2);\n\t\n\t    Particles.ringGeom = new THREE.RingGeometry(10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2);\n\t\n\t    Particles.properties = {\n\t      numItems: {\n\t        name: 'numItems',\n\t        label: 'num items',\n\t        val: 5,\n\t        triggerRebuild: true\n\t      }\n\t    };\n\t\n\t    function Particles(values1, time, index) {\n\t      var geom, i, item, j, key, material, num_childs, prop, ref, ref1;\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      if (index == null) {\n\t        index = 0;\n\t      }\n\t      ref = Particles.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      this.container = new THREE.Object3D();\n\t      if (index === 0) {\n\t        this.container.position.set(0, 0, 100);\n\t      }\n\t      this.items = [];\n\t      this.speed = Math.random() * 2 - 1;\n\t      this.scale = Math.random() * 2 + 0.1;\n\t      material = new THREE.MeshPhongMaterial({\n\t        ambient: 0x030303,\n\t        color: 0xdddddd,\n\t        specular: 0xffffff,\n\t        shininess: 10,\n\t        shading: THREE.FlatShading\n\t      });\n\t      material.blending = THREE.AdditiveBlending;\n\t      geom = Particles.circleGeom;\n\t      if (Math.random() < 0.7) {\n\t        geom = Particles.ringGeom;\n\t      }\n\t      this.el = new THREE.Mesh(geom, material);\n\t      if (index > 0) {\n\t        this.el.position.x = Math.random() * 60 + 10;\n\t        this.el.position.y = Math.random() * 60 + 10;\n\t        this.el.position.z = Math.random() * 60 + 10;\n\t      }\n\t      this.el.scale.set(this.scale, this.scale, this.scale);\n\t      this.container.add(this.el);\n\t      if (index < 5) {\n\t        for (i = j = 0, ref1 = this.values.numItems - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {\n\t          num_childs = 1;\n\t          if (Math.random() > 0.7) {\n\t            num_childs = parseInt(Math.random * 3, 10) + 1;\n\t          }\n\t          item = new Particles({\n\t            numItems: num_childs\n\t          }, 0, index + 1);\n\t          this.el.add(item.container);\n\t          this.items.push(item);\n\t        }\n\t      }\n\t    }\n\t\n\t    Particles.prototype.update = function(seconds, values, force) {\n\t      var current, item, j, len, ref, results, volume;\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      volume = Audio.instance.mid;\n\t      current = this.el.scale.x;\n\t      if (volume > 0.2 && Math.random() < 0.1) {\n\t        current += volume * 10;\n\t      }\n\t      current = current + (this.scale - current) * 0.992;\n\t      this.el.scale.set(current, current, current);\n\t      ref = this.items;\n\t      results = [];\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        item = ref[j];\n\t        results.push(item.update());\n\t      }\n\t      return results;\n\t    };\n\t\n\t    return Particles;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Audio, CircleGeometry2, Colors, ElementBase, OrganizedChaos, RNG, ShaderFragement, ShaderVertex, THREE, _;\n\t  _ = __webpack_require__(17);\n\t  THREE = __webpack_require__(2);\n\t  RNG = __webpack_require__(40);\n\t  ElementBase = __webpack_require__(38);\n\t  Audio = __webpack_require__(6);\n\t  Colors = __webpack_require__(37);\n\t  CircleGeometry2 = __webpack_require__(39);\n\t  ShaderVertex = __webpack_require__(44);\n\t  ShaderFragement = __webpack_require__(45);\n\t  return OrganizedChaos = (function(superClass) {\n\t    extend(OrganizedChaos, superClass);\n\t\n\t    OrganizedChaos.lineGeom = new THREE.PlaneGeometry(100, 1);\n\t\n\t    OrganizedChaos.circleGeom = new THREE.CircleGeometry(10, 30, 0, Math.PI * 2);\n\t\n\t    OrganizedChaos.ringGeom = new THREE.RingGeometry(10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2);\n\t\n\t    OrganizedChaos.ringGeom2 = new CircleGeometry2(10, 30, 0, Math.PI * 2);\n\t\n\t    OrganizedChaos.TYPE_LINE = 0;\n\t\n\t    OrganizedChaos.TYPE_SQUARE = 1;\n\t\n\t    OrganizedChaos.TYPE_CIRCLE = 2;\n\t\n\t    OrganizedChaos.properties = {\n\t      numItems: {\n\t        name: 'numItems',\n\t        label: 'num items',\n\t        val: 10,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      seed: {\n\t        name: 'seed',\n\t        label: 'seed',\n\t        val: 10042,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      depth: {\n\t        name: 'depth',\n\t        label: 'depth',\n\t        val: 20,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      spread: {\n\t        name: 'spread',\n\t        label: 'spread',\n\t        val: 300,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      spreadY: {\n\t        name: 'spreadY',\n\t        label: 'spreadY',\n\t        val: 300,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      maxChilds: {\n\t        name: 'maxChilds',\n\t        label: 'maxChilds',\n\t        val: 8,\n\t        triggerRebuild: true,\n\t        group: \"global\"\n\t      },\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0,\n\t        group: \"position\"\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0,\n\t        group: \"position\"\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0,\n\t        group: \"position\"\n\t      },\n\t      rotationX: {\n\t        name: 'rotationX',\n\t        label: 'x',\n\t        val: 0,\n\t        min: 0,\n\t        max: 2,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      rotationY: {\n\t        name: 'rotationY',\n\t        label: 'y',\n\t        val: 0,\n\t        min: 0,\n\t        max: 2,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      rotationZ: {\n\t        name: 'rotationZ',\n\t        label: 'z',\n\t        val: 0,\n\t        min: 0,\n\t        max: 2,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      rotationRandX: {\n\t        name: 'rotationRandX',\n\t        label: 'rand x',\n\t        val: 0,\n\t        min: 0,\n\t        max: 1,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      rotationRandY: {\n\t        name: 'rotationRandY',\n\t        label: 'rand y',\n\t        val: 0,\n\t        min: 0,\n\t        max: 1,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      rotationRandZ: {\n\t        name: 'rotationRandZ',\n\t        label: 'rand z',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1,\n\t        group: \"rotation\",\n\t        triggerRebuild: true\n\t      },\n\t      circles: {\n\t        name: 'circles',\n\t        label: 'circles',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"geometry\"\n\t      },\n\t      squares: {\n\t        name: 'squares',\n\t        label: 'squares',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"geometry\"\n\t      },\n\t      lineWidth: {\n\t        name: 'lineWidth',\n\t        label: 'line width',\n\t        val: 1,\n\t        triggerRebuild: true,\n\t        group: \"line\"\n\t      },\n\t      lineWidthRand: {\n\t        name: 'lineWidthRand',\n\t        label: 'line width randomness',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"line\"\n\t      },\n\t      materialColors: {\n\t        name: 'materialColors',\n\t        label: 'percent colors',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"material\"\n\t      },\n\t      materialAnimated: {\n\t        name: 'materialAnimated',\n\t        label: 'percent animated',\n\t        val: 0,\n\t        triggerRebuild: true,\n\t        group: \"material\"\n\t      }\n\t    };\n\t\n\t    OrganizedChaos.prototype.getDefaultProperties = function() {\n\t      return OrganizedChaos.properties;\n\t    };\n\t\n\t    function OrganizedChaos(values1, time) {\n\t      var key, prop, ref;\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      ref = OrganizedChaos.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      OrganizedChaos.__super__.constructor.apply(this, arguments);\n\t      this.container = new THREE.Object3D();\n\t      this.container.position.set(0, 0, 0);\n\t      this.items = [];\n\t      this.build();\n\t    }\n\t\n\t    OrganizedChaos.prototype.rebuild = function(time) {\n\t      this.empty();\n\t      return this.build(time);\n\t    };\n\t\n\t    OrganizedChaos.prototype.empty = function() {\n\t      var item, j, len, ref;\n\t      if (!this.items || !this.items.length) {\n\t        return;\n\t      }\n\t      ref = this.items;\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        item = ref[j];\n\t        this.container.remove(item);\n\t      }\n\t      return this.items = [];\n\t    };\n\t\n\t    OrganizedChaos.prototype.getItemType = function(rng) {\n\t      var itemType;\n\t      itemType = rng.random(0, 1000) / 1000;\n\t      if (itemType < this.values.circles) {\n\t        return OrganizedChaos.TYPE_CIRCLE;\n\t      }\n\t      if (itemType < this.values.circles + this.values.squares) {\n\t        return OrganizedChaos.TYPE_SQUARE;\n\t      }\n\t      return OrganizedChaos.TYPE_LINE;\n\t    };\n\t\n\t    OrganizedChaos.prototype.build = function(time) {\n\t      var animated, geom, i, ii, itemType, j, material, num_childs, offset, pos2, posX, posY, position, ref, results, rngChilds, rngRotationX, rngRotationY, rngRotationZ, rngScale, rngScaleLine, rngShaderAnim, rngSpacing, rngType, rngX, rngY, rotation, rotationX, rotationY, rotationZ, scale, spacing, spread, spreadY, spreadY_half, spread_half;\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      rngX = new RNG(this.values.seed + \"x\");\n\t      rngY = new RNG(this.values.seed + \"y\");\n\t      rngRotationX = new RNG(this.values.seed + \"rotationX\");\n\t      rngRotationY = new RNG(this.values.seed + \"rotationY\");\n\t      rngRotationZ = new RNG(this.values.seed + \"rotationZ\");\n\t      rngScale = new RNG(this.values.seed + \"scale\");\n\t      rngScaleLine = new RNG(this.values.seed + \"scaleLine\");\n\t      rngChilds = new RNG(this.values.seed + \"childs\");\n\t      rngSpacing = new RNG(this.values.seed + \"spacing\");\n\t      rngType = new RNG(this.values.seed + \"type\");\n\t      rngShaderAnim = new RNG(this.values.seed + \"shaderAnim\");\n\t      geom = OrganizedChaos.circleGeom;\n\t      spread = this.values.spread;\n\t      spread_half = spread / 2;\n\t      spreadY = this.values.spreadY;\n\t      spreadY_half = spreadY / 2;\n\t      results = [];\n\t      for (i = j = 0, ref = this.values.numItems; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n\t        animated = false;\n\t        if (rngShaderAnim.random(100) / 100 < this.values.materialAnimated) {\n\t          animated = true;\n\t        }\n\t        material = window.shaders.getMaterialLine(animated);\n\t        num_childs = 1;\n\t        scale = rngScale.random(0, 100) / 100 + 0.2;\n\t        posX = rngX.random(spread * 100) * 0.01 - spread_half;\n\t        posY = rngY.random(spreadY * 100) * 0.01 - spreadY_half;\n\t        position = new THREE.Vector3(posX, posY, i * -this.values.depth);\n\t        rotationX = (rngRotationX.random(0, 1000) / 1000 * Math.PI) * this.values.rotationRandX + this.values.rotationX * Math.PI;\n\t        rotationY = (rngRotationY.random(0, 1000) / 1000 * Math.PI) * this.values.rotationRandY + this.values.rotationY * Math.PI;\n\t        rotationZ = (rngRotationZ.random(0, 1000) / 1000 * Math.PI) * this.values.rotationRandZ + this.values.rotationZ * Math.PI;\n\t        rotation = new THREE.Vector3(rotationX, rotationY, rotationZ);\n\t        scale = new THREE.Vector3(scale, scale, scale);\n\t        num_childs = parseInt(rngChilds.random(0, this.values.maxChilds), 10);\n\t        itemType = this.getItemType(rngType);\n\t        geom = OrganizedChaos.lineGeom;\n\t        if (itemType === OrganizedChaos.TYPE_LINE) {\n\t          scale.y = (scale.y * this.values.lineWidth) * (rngScaleLine.random(1, 100) / 100) * (this.values.lineWidthRand + 1);\n\t        }\n\t        if (itemType === OrganizedChaos.TYPE_CIRCLE) {\n\t          geom = OrganizedChaos.ringGeom;\n\t        }\n\t        this.addItem(geom, material, i, scale, position, rotation);\n\t        if (num_childs > 1) {\n\t          spacing = 30 + rngSpacing.random(0, 100) * 0.4;\n\t          offset = position.clone().normalize().multiplyScalar(spacing);\n\t          offset.z = 0;\n\t          results.push((function() {\n\t            var k, ref1, results1;\n\t            results1 = [];\n\t            for (ii = k = 0, ref1 = num_childs - 1; 0 <= ref1 ? k <= ref1 : k >= ref1; ii = 0 <= ref1 ? ++k : --k) {\n\t              pos2 = position.clone().add(offset.multiplyScalar(ii + 1));\n\t              results1.push(this.addItem(geom, material, i, scale, pos2, rotation));\n\t            }\n\t            return results1;\n\t          }).call(this));\n\t        } else {\n\t          results.push(void 0);\n\t        }\n\t      }\n\t      return results;\n\t    };\n\t\n\t    OrganizedChaos.prototype.addItem = function(geom, material, i, scale, position, rotation) {\n\t      var item, item2, item2Container, quaternion;\n\t      quaternion = new THREE.Quaternion();\n\t      quaternion.setFromAxisAngle(new THREE.Vector3(rotation.x, rotation.y, rotation.z), Math.PI / 2);\n\t      item = new THREE.Mesh(geom, material);\n\t      item.position.x = position.x;\n\t      item.position.y = position.y;\n\t      item.position.z = position.z;\n\t      item.rotation.setFromQuaternion(quaternion);\n\t      item.scale.copy(scale);\n\t      item.updateMatrix();\n\t      this.container.add(item);\n\t      this.items.push(item);\n\t      item2Container = new THREE.Object3D();\n\t      this.container.add(item2Container);\n\t      item2 = new THREE.Mesh(geom, material);\n\t      item2.position.x = position.x;\n\t      item2.position.y = position.y;\n\t      item2.position.z = position.z;\n\t      item2.rotation.setFromQuaternion(quaternion);\n\t      item2.scale.copy(scale);\n\t      item2.updateMatrix();\n\t      item2Container.add(item2);\n\t      item2Container.scale.x = -1;\n\t      return this.items.push(item2Container);\n\t    };\n\t\n\t    OrganizedChaos.prototype.getMaterial = function(color) {\n\t      var material, uniforms;\n\t      uniforms = {\n\t        time: {\n\t          type: 'f',\n\t          value: 0.0\n\t        },\n\t        seed: {\n\t          type: 'f',\n\t          value: Math.random() * 1000\n\t        },\n\t        strength: {\n\t          type: 'f',\n\t          value: 0.2\n\t        },\n\t        color: {\n\t          type: 'c',\n\t          value: new THREE.Color(color)\n\t        },\n\t        fogColor: {\n\t          type: \"c\",\n\t          value: new THREE.Color(0x111111)\n\t        },\n\t        fogDensity: {\n\t          type: \"f\",\n\t          0.2045: 0.2045\n\t        }\n\t      };\n\t      material = new THREE.ShaderMaterial({\n\t        vertexShader: ShaderVertex,\n\t        fragmentShader: ShaderFragement,\n\t        side: THREE.DoubleSide,\n\t        uniforms: uniforms,\n\t        transparent: true,\n\t        depthWrite: false,\n\t        depthTest: false,\n\t        fog: true\n\t      });\n\t      material.blending = THREE.AdditiveBlending;\n\t      return material;\n\t    };\n\t\n\t    OrganizedChaos.prototype.update = function(seconds, values, force) {\n\t      var key, needs_rebuild, prop, ref, volume;\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values === false) {\n\t        values = this.values;\n\t      }\n\t      needs_rebuild = false;\n\t      ref = OrganizedChaos.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (prop.triggerRebuild && this.valueChanged(key, values)) {\n\t          needs_rebuild = true;\n\t        }\n\t      }\n\t      volume = Audio.instance.mid;\n\t      if (force || this.valueChanged(\"x\", values) || this.valueChanged(\"y\", values) || this.valueChanged(\"z\", values)) {\n\t        this.container.position.set(values.x, values.y, values.z);\n\t      }\n\t      this.values = _.merge(this.values, values);\n\t      if (needs_rebuild === true) {\n\t        this.rebuild(seconds);\n\t      }\n\t    };\n\t\n\t    OrganizedChaos.prototype.destroy = function() {\n\t      var child, j, len, ref;\n\t      ref = this.container.children;\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        child = ref[j];\n\t        this.container.remove(child);\n\t      }\n\t      return this.container = null;\n\t    };\n\t\n\t    return OrganizedChaos;\n\t\n\t  })(ElementBase);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 15 */,\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"{\\n  \\\"settings\\\": {\\n    \\\"time\\\": 21875,\\n    \\\"duration\\\": 240,\\n    \\\"domain\\\": [\\n      0,\\n      78843\\n    ]\\n  },\\n  \\\"data\\\": [\\n    {\\n      \\\"id\\\": \\\"camera1\\\",\\n      \\\"type\\\": \\\"Camera\\\",\\n      \\\"label\\\": \\\"Camera 1\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 240,\\n      \\\"collapsed\\\": true,\\n      \\\"properties\\\": [\\n        {\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 0,\\n              \\\"val\\\": 200,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 240,\\n              \\\"val\\\": -3850,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            }\\n          ],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 600\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"fov\\\",\\n          \\\"label\\\": \\\"fov\\\",\\n          \\\"val\\\": 45,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"target_x\\\",\\n          \\\"label\\\": \\\"target x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"target_z\\\",\\n          \\\"label\\\": \\\"target z\\\",\\n          \\\"val\\\": -10000,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -504.6356201171877,\\n        \\\"target_x\\\": 0,\\n        \\\"target_y\\\": 0,\\n        \\\"target_z\\\": -10000,\\n        \\\"fov\\\": 45\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item2\\\",\\n      \\\"label\\\": \\\"Chaos 2\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 3.086,\\n      \\\"end\\\": 41.33200000000003,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 18.8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 85,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 17.6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 182.7,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -418,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.318,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialColors\\\",\\n          \\\"label\\\": \\\"percent colors\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 18.8,\\n        \\\"seed\\\": 85,\\n        \\\"depth\\\": 17.6,\\n        \\\"spread\\\": 182.7,\\n        \\\"maxChilds\\\": 2,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -418,\\n        \\\"spreadY\\\": 0,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.318,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialColors\\\": 0,\\n        \\\"materialAnimated\\\": 0.1,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item3\\\",\\n      \\\"label\\\": \\\"Chaos 3\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": -0.035,\\n      \\\"end\\\": 37.43900000000004,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 26042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 22,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 20,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -80,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.318,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialColors\\\",\\n          \\\"label\\\": \\\"percent colors\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 2.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 1,\\n        \\\"seed\\\": 26042,\\n        \\\"depth\\\": 22,\\n        \\\"spread\\\": 20,\\n        \\\"maxChilds\\\": 1,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -80,\\n        \\\"spreadY\\\": 0,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.318,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialColors\\\": 0,\\n        \\\"materialAnimated\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 2.3,\\n        \\\"lineWidthRand\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item4\\\",\\n      \\\"label\\\": \\\"Chaos 4\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 12.727,\\n      \\\"end\\\": 39.6,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 29,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 66042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 450,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -640,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.05,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialColors\\\",\\n          \\\"label\\\": \\\"percent colors\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.62,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 4.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 29,\\n        \\\"seed\\\": 66042,\\n        \\\"depth\\\": 12,\\n        \\\"spread\\\": 450,\\n        \\\"maxChilds\\\": 3,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -640,\\n        \\\"spreadY\\\": 0,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.3,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0.05,\\n        \\\"circles\\\": 0,\\n        \\\"materialColors\\\": 0,\\n        \\\"materialAnimated\\\": 0.1,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.62,\\n        \\\"lineWidthRand\\\": 4.3\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item5\\\",\\n      \\\"label\\\": \\\"Chaos 5\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 23.284,\\n      \\\"end\\\": 52.301,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 21,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 34042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 140,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1054,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.7,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.56,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialColors\\\",\\n          \\\"label\\\": \\\"percent colors\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 21,\\n        \\\"seed\\\": 34042,\\n        \\\"depth\\\": 8,\\n        \\\"spread\\\": 300,\\n        \\\"spreadY\\\": 140,\\n        \\\"maxChilds\\\": 8,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -1054,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.7,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0.56,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"materialColors\\\": 0,\\n        \\\"materialAnimated\\\": 0.5\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item6\\\",\\n      \\\"label\\\": \\\"Chaos 6\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 35.08,\\n      \\\"end\\\": 62.643,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 40,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 7042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 6.6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 270,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 15,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1220,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 1.1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.7,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.9,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialColors\\\",\\n          \\\"label\\\": \\\"percent colors\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 40,\\n        \\\"seed\\\": 7042,\\n        \\\"depth\\\": 6.6,\\n        \\\"spread\\\": 270,\\n        \\\"spreadY\\\": 300,\\n        \\\"maxChilds\\\": 15,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -1220,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0.1,\\n        \\\"rotationZ\\\": 1.1,\\n        \\\"rotationRandX\\\": 0.7,\\n        \\\"rotationRandY\\\": 0.2,\\n        \\\"rotationRandZ\\\": 1,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.9,\\n        \\\"lineWidthRand\\\": 2,\\n        \\\"materialColors\\\": 0,\\n        \\\"materialAnimated\\\": 0.5\\n      },\\n      \\\"isDirtyObject\\\": false\\n    }\\n  ]\\n}\\n\"\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = _;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = undefined;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tTHREE.GlitchPass2 = function ( dt_size ) {\n\t\n\t  if ( THREE.DigitalGlitch2 === undefined ) console.error( \"THREE.GlitchPass relies on THREE.DigitalGlitch\" );\n\t\n\t  var shader = THREE.DigitalGlitch2;\n\t  this.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\t\n\t  if(dt_size==undefined) dt_size=64;\n\t\n\t  this.intensity = 1;\n\t  this.uniforms[\"tDisp\"].value=this.generateHeightmap(dt_size);\n\t\n\t\n\t  this.material = new THREE.ShaderMaterial({\n\t    uniforms: this.uniforms,\n\t    vertexShader: shader.vertexShader,\n\t    fragmentShader: shader.fragmentShader\n\t  });\n\t\n\t  this.enabled = true;\n\t  this.renderToScreen = false;\n\t  this.needsSwap = true;\n\t\n\t  this.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t  this.scene  = new THREE.Scene();\n\t\n\t  this.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t  this.scene.add( this.quad );\n\t\n\t  this.goWild=false;\n\t  this.curF=0;\n\t  this.generateTrigger();\n\t\n\t};\n\t\n\tTHREE.GlitchPass2.prototype = {\n\t\n\t  render: function ( renderer, writeBuffer, readBuffer, delta )\n\t  {\n\t    this.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t    this.uniforms[ 'seed' ].value=Math.random();//default seeding\n\t    //this.uniforms[ 'byp' ].value=0;\n\t\n\t    this.uniforms[ 'amount' ].value = (Math.random()/420) * this.intensity;\n\t    this.uniforms[ 'angle' ].value=THREE.Math.randFloat(-Math.PI,Math.PI);\n\t    this.uniforms[ 'seed_x' ].value=THREE.Math.randFloat(-1,1);\n\t    this.uniforms[ 'seed_y' ].value=THREE.Math.randFloat(-1,1);\n\t    this.uniforms[ 'seed_x' ].value *= 0.001;\n\t    this.uniforms[ 'seed_y' ].value *= 0.001;\n\t    this.uniforms[ 'distortion_x' ].value=THREE.Math.randFloat(0,0.001);\n\t    this.uniforms[ 'distortion_y' ].value=THREE.Math.randFloat(0,0.001);\n\t    //this.curF=0;\n\t    this.generateTrigger();\n\t\n\t    this.uniforms[ 'byp' ].value=0;\n\t    this.curF++;\n\t\n\t    this.quad.material = this.material;\n\t    if ( this.renderToScreen )\n\t    {\n\t      renderer.render( this.scene, this.camera );\n\t    }\n\t    else\n\t    {\n\t      renderer.render( this.scene, this.camera, writeBuffer, false );\n\t    }\n\t  },\n\t  generateTrigger:function()\n\t  {\n\t    this.randX=THREE.Math.randInt(120,240);\n\t  },\n\t  generateHeightmap:function(dt_size)\n\t  {\n\t    var data_arr = new Float32Array( dt_size*dt_size * 3 );\n\t    var length=dt_size*dt_size;\n\t\n\t    for ( var i = 0; i < length; i++)\n\t    {\n\t      var val=THREE.Math.randFloat(0,1);\n\t      data_arr[ i*3 + 0 ] = val;\n\t      data_arr[ i*3 + 1 ] = val;\n\t      data_arr[ i*3 + 2 ] = val;\n\t    }\n\t\n\t    var texture = new THREE.DataTexture( data_arr, dt_size, dt_size, THREE.RGBFormat, THREE.FloatType );\n\t    texture.minFilter = THREE.NearestFilter;\n\t    texture.magFilter = THREE.NearestFilter;\n\t    texture.needsUpdate = true;\n\t    texture.flipY = false;\n\t    return texture;\n\t  }\n\t};\n\t\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\t\n\t\tthis.renderer = renderer;\n\t\n\t\tif ( renderTarget === undefined ) {\n\t\n\t\t\tvar width = window.innerWidth || 1;\n\t\t\tvar height = window.innerHeight || 1;\n\t\t\tvar parameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\n\t\n\t\t\trenderTarget = new THREE.WebGLRenderTarget( width, height, parameters );\n\t\n\t\t}\n\t\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\t\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\t\n\t\tthis.passes = [];\n\t\n\t\tif ( THREE.CopyShader === undefined )\n\t\t\tconsole.error( \"THREE.EffectComposer relies on THREE.CopyShader\" );\n\t\n\t\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\t\n\t};\n\t\n\tTHREE.EffectComposer.prototype = {\n\t\n\t\tswapBuffers: function() {\n\t\n\t\t\tvar tmp = this.readBuffer;\n\t\t\tthis.readBuffer = this.writeBuffer;\n\t\t\tthis.writeBuffer = tmp;\n\t\n\t\t},\n\t\n\t\taddPass: function ( pass ) {\n\t\n\t\t\tthis.passes.push( pass );\n\t\n\t\t},\n\t\n\t\tinsertPass: function ( pass, index ) {\n\t\n\t\t\tthis.passes.splice( index, 0, pass );\n\t\n\t\t},\n\t\n\t\trender: function ( delta ) {\n\t\n\t\t\tthis.writeBuffer = this.renderTarget1;\n\t\t\tthis.readBuffer = this.renderTarget2;\n\t\n\t\t\tvar maskActive = false;\n\t\n\t\t\tvar pass, i, il = this.passes.length;\n\t\n\t\t\tfor ( i = 0; i < il; i ++ ) {\n\t\n\t\t\t\tpass = this.passes[ i ];\n\t\n\t\t\t\tif ( !pass.enabled ) continue;\n\t\n\t\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\n\t\n\t\t\t\tif ( pass.needsSwap ) {\n\t\n\t\t\t\t\tif ( maskActive ) {\n\t\n\t\t\t\t\t\tvar context = this.renderer.context;\n\t\n\t\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\t\n\t\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\n\t\n\t\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.swapBuffers();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\t\n\t\t\t\t\tmaskActive = true;\n\t\n\t\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\t\n\t\t\t\t\tmaskActive = false;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t},\n\t\n\t\treset: function ( renderTarget ) {\n\t\n\t\t\tif ( renderTarget === undefined ) {\n\t\n\t\t\t\trenderTarget = this.renderTarget1.clone();\n\t\n\t\t\t\trenderTarget.width = window.innerWidth;\n\t\t\t\trenderTarget.height = window.innerHeight;\n\t\n\t\t\t}\n\t\n\t\t\tthis.renderTarget1 = renderTarget;\n\t\t\tthis.renderTarget2 = renderTarget.clone();\n\t\n\t\t\tthis.writeBuffer = this.renderTarget1;\n\t\t\tthis.readBuffer = this.renderTarget2;\n\t\n\t\t},\n\t\n\t\tsetSize: function ( width, height ) {\n\t\n\t\t\tvar renderTarget = this.renderTarget1.clone();\n\t\n\t\t\trenderTarget.width = width;\n\t\t\trenderTarget.height = height;\n\t\n\t\t\tthis.reset( renderTarget );\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.MaskPass = function ( scene, camera ) {\n\t\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\t\n\t\tthis.enabled = true;\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\t\n\t\tthis.inverse = false;\n\t\n\t};\n\t\n\tTHREE.MaskPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tvar context = renderer.context;\n\t\n\t\t\t// don't update color or depth\n\t\n\t\t\tcontext.colorMask( false, false, false, false );\n\t\t\tcontext.depthMask( false );\n\t\n\t\t\t// set up stencil\n\t\n\t\t\tvar writeValue, clearValue;\n\t\n\t\t\tif ( this.inverse ) {\n\t\n\t\t\t\twriteValue = 0;\n\t\t\t\tclearValue = 1;\n\t\n\t\t\t} else {\n\t\n\t\t\t\twriteValue = 1;\n\t\t\t\tclearValue = 0;\n\t\n\t\t\t}\n\t\n\t\t\tcontext.enable( context.STENCIL_TEST );\n\t\t\tcontext.stencilOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\t\tcontext.stencilFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\t\tcontext.clearStencil( clearValue );\n\t\n\t\t\t// draw into the stencil buffer\n\t\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\t\n\t\t\t// re-enable update of color and depth\n\t\n\t\t\tcontext.colorMask( true, true, true, true );\n\t\t\tcontext.depthMask( true );\n\t\n\t\t\t// only render where stencil is set to 1\n\t\n\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );  // draw if == 1\n\t\t\tcontext.stencilOp( context.KEEP, context.KEEP, context.KEEP );\n\t\n\t\t}\n\t\n\t};\n\t\n\t\n\tTHREE.ClearMaskPass = function () {\n\t\n\t\tthis.enabled = true;\n\t\n\t};\n\t\n\tTHREE.ClearMaskPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tvar context = renderer.context;\n\t\n\t\t\tcontext.disable( context.STENCIL_TEST );\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.BloomPass = function ( strength, kernelSize, sigma, resolution ) {\n\t\n\t\tstrength = ( strength !== undefined ) ? strength : 1;\n\t\tkernelSize = ( kernelSize !== undefined ) ? kernelSize : 25;\n\t\tsigma = ( sigma !== undefined ) ? sigma : 4.0;\n\t\tresolution = ( resolution !== undefined ) ? resolution : 256;\n\t\n\t\t// render targets\n\t\n\t\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\t\n\t\tthis.renderTargetX = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\t\tthis.renderTargetY = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\t\n\t\t// copy material\n\t\n\t\tif ( THREE.CopyShader === undefined )\n\t\t\tconsole.error( \"THREE.BloomPass relies on THREE.CopyShader\" );\n\t\n\t\tvar copyShader = THREE.CopyShader;\n\t\n\t\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\t\n\t\tthis.copyUniforms[ \"opacity\" ].value = strength;\n\t\n\t\tthis.materialCopy = new THREE.ShaderMaterial( {\n\t\n\t\t\tuniforms: this.copyUniforms,\n\t\t\tvertexShader: copyShader.vertexShader,\n\t\t\tfragmentShader: copyShader.fragmentShader,\n\t\t\tblending: THREE.AdditiveBlending,\n\t\t\ttransparent: true\n\t\n\t\t} );\n\t\n\t\t// convolution material\n\t\n\t\tif ( THREE.ConvolutionShader === undefined )\n\t\t\tconsole.error( \"THREE.BloomPass relies on THREE.ConvolutionShader\" );\n\t\n\t\tvar convolutionShader = THREE.ConvolutionShader;\n\t\n\t\tthis.convolutionUniforms = THREE.UniformsUtils.clone( convolutionShader.uniforms );\n\t\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurx;\n\t\tthis.convolutionUniforms[ \"cKernel\" ].value = THREE.ConvolutionShader.buildKernel( sigma );\n\t\n\t\tthis.materialConvolution = new THREE.ShaderMaterial( {\n\t\n\t\t\tuniforms: this.convolutionUniforms,\n\t\t\tvertexShader:  convolutionShader.vertexShader,\n\t\t\tfragmentShader: convolutionShader.fragmentShader,\n\t\t\tdefines: {\n\t\t\t\t\"KERNEL_SIZE_FLOAT\": kernelSize.toFixed( 1 ),\n\t\t\t\t\"KERNEL_SIZE_INT\": kernelSize.toFixed( 0 )\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = false;\n\t\tthis.clear = false;\n\t\n\t\n\t\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\t\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\t\n\t};\n\t\n\tTHREE.BloomPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\t\n\t\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\n\t\n\t\t\t// Render quad with blured scene into texture (convolution pass 1)\n\t\n\t\t\tthis.quad.material = this.materialConvolution;\n\t\n\t\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\t\n\t\t\trenderer.render( this.scene, this.camera, this.renderTargetX, true );\n\t\n\t\n\t\t\t// Render quad with blured scene into texture (convolution pass 2)\n\t\n\t\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = this.renderTargetX;\n\t\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurY;\n\t\n\t\t\trenderer.render( this.scene, this.camera, this.renderTargetY, true );\n\t\n\t\t\t// Render original scene with superimposed blur to texture\n\t\n\t\t\tthis.quad.material = this.materialCopy;\n\t\n\t\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetY;\n\t\n\t\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\n\t\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\n\t\t}\n\t\n\t};\n\t\n\tTHREE.BloomPass.blurX = new THREE.Vector2( 0.001953125, 0.0 );\n\tTHREE.BloomPass.blurY = new THREE.Vector2( 0.0, 0.001953125 );\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.ShaderPass = function ( shader, textureID ) {\n\t\n\t\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\t\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\t\n\t\tthis.material = new THREE.ShaderMaterial( {\n\t\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\t\n\t\t} );\n\t\n\t\tthis.renderToScreen = false;\n\t\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = true;\n\t\tthis.clear = false;\n\t\n\t\n\t\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\t\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\t\n\t};\n\t\n\tTHREE.ShaderPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tif ( this.uniforms[ this.textureID ] ) {\n\t\n\t\t\t\tthis.uniforms[ this.textureID ].value = readBuffer;\n\t\n\t\t\t}\n\t\n\t\t\tthis.quad.material = this.material;\n\t\n\t\t\tif ( this.renderToScreen ) {\n\t\n\t\t\t\trenderer.render( this.scene, this.camera );\n\t\n\t\t\t} else {\n\t\n\t\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\t\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\t\n\t\tthis.overrideMaterial = overrideMaterial;\n\t\n\t\tthis.clearColor = clearColor;\n\t\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 1;\n\t\n\t\tthis.oldClearColor = new THREE.Color();\n\t\tthis.oldClearAlpha = 1;\n\t\n\t\tthis.enabled = true;\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\t\n\t};\n\t\n\tTHREE.RenderPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\t\n\t\t\tif ( this.clearColor ) {\n\t\n\t\t\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\t\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\n\t\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\t\n\t\t\t}\n\t\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\n\t\t\tif ( this.clearColor ) {\n\t\n\t\t\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\t\n\t\t\t}\n\t\n\t\t\tthis.scene.overrideMaterial = null;\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\t\n\tTHREE.FilmPass = function ( noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale ) {\n\t\n\t\tif ( THREE.FilmShader === undefined )\n\t\t\tconsole.error( \"THREE.FilmPass relies on THREE.FilmShader\" );\n\t\n\t\tvar shader = THREE.FilmShader;\n\t\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\t\n\t\tthis.material = new THREE.ShaderMaterial( {\n\t\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\t\n\t\t} );\n\t\n\t\tif ( grayscale !== undefined )\tthis.uniforms.grayscale.value = grayscale;\n\t\tif ( noiseIntensity !== undefined ) this.uniforms.nIntensity.value = noiseIntensity;\n\t\tif ( scanlinesIntensity !== undefined ) this.uniforms.sIntensity.value = scanlinesIntensity;\n\t\tif ( scanlinesCount !== undefined ) this.uniforms.sCount.value = scanlinesCount;\n\t\n\t\tthis.enabled = true;\n\t\tthis.renderToScreen = false;\n\t\tthis.needsSwap = true;\n\t\n\t\n\t\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\t\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\t\n\t};\n\t\n\tTHREE.FilmPass.prototype = {\n\t\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\t\n\t\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\t\tthis.uniforms[ \"time\" ].value += delta;\n\t\n\t\t\tthis.quad.material = this.material;\n\t\n\t\t\tif ( this.renderToScreen ) {\n\t\n\t\t\t\trenderer.render( this.scene, this.camera );\n\t\n\t\t\t} else {\n\t\n\t\t\t\trenderer.render( this.scene, this.camera, writeBuffer, false );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Full-screen textured quad shader\n\t */\n\t\n\tTHREE.CopyShader = {\n\t\n\t\tuniforms: {\n\t\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\t\n\t\t},\n\t\n\t\tvertexShader: [\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tfragmentShader: [\n\t\n\t\t\t\"uniform float opacity;\",\n\t\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\t\"gl_FragColor = opacity * texel;\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\")\n\t\n\t};\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Film grain & scanlines shader\n\t *\n\t * - ported from HLSL to WebGL / GLSL\n\t * http://www.truevision3d.com/forums/showcase/staticnoise_colorblackwhite_scanline_shaders-t18698.0.html\n\t *\n\t * Screen Space Static Postprocessor\n\t *\n\t * Produces an analogue noise overlay similar to a film grain / TV static\n\t *\n\t * Original implementation and noise algorithm\n\t * Pat 'Hawthorne' Shearon\n\t *\n\t * Optimized scanlines + noise version with intensity scaling\n\t * Georg 'Leviathan' Steinrohder\n\t *\n\t * This version is provided under a Creative Commons Attribution 3.0 License\n\t * http://creativecommons.org/licenses/by/3.0/\n\t */\n\t\n\tTHREE.FilmShader = {\n\t\n\t\tuniforms: {\n\t\n\t\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\t\"time\":       { type: \"f\", value: 0.0 },\n\t\t\t\"nIntensity\": { type: \"f\", value: 0.5 },\n\t\t\t\"sIntensity\": { type: \"f\", value: 0.05 },\n\t\t\t\"sCount\":     { type: \"f\", value: 4096 },\n\t\t\t\"grayscale\":  { type: \"i\", value: 1 }\n\t\n\t\t},\n\t\n\t\tvertexShader: [\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tfragmentShader: [\n\t\n\t\t\t// control parameter\n\t\t\t\"uniform float time;\",\n\t\n\t\t\t\"uniform bool grayscale;\",\n\t\n\t\t\t// noise effect intensity value (0 = no effect, 1 = full effect)\n\t\t\t\"uniform float nIntensity;\",\n\t\n\t\t\t// scanlines effect intensity value (0 = no effect, 1 = full effect)\n\t\t\t\"uniform float sIntensity;\",\n\t\n\t\t\t// scanlines effect count value (0 = no effect, 4096 = full effect)\n\t\t\t\"uniform float sCount;\",\n\t\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t// sample the source\n\t\t\t\t\"vec4 cTextureScreen = texture2D( tDiffuse, vUv );\",\n\t\n\t\t\t\t// make some noise\n\t\t\t\t\"float x = vUv.x * vUv.y * time *  1000.0;\",\n\t\t\t\t\"x = mod( x, 13.0 ) * mod( x, 123.0 );\",\n\t\t\t\t\"float dx = mod( x, 0.01 );\",\n\t\n\t\t\t\t// add noise\n\t\t\t\t\"vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\",\n\t\n\t\t\t\t// get us a sine and cosine\n\t\t\t\t\"vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\",\n\t\n\t\t\t\t// add scanlines\n\t\t\t\t\"cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\",\n\t\n\t\t\t\t// interpolate between source and result by intensity\n\t\t\t\t\"cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\",\n\t\n\t\t\t\t// convert to grayscale if desired\n\t\t\t\t\"if( grayscale ) {\",\n\t\n\t\t\t\t\t\"cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\",\n\t\n\t\t\t\t\"}\",\n\t\n\t\t\t\t\"gl_FragColor =  vec4( cResult, cTextureScreen.a );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\")\n\t\n\t};\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Convolution shader\n\t * ported from o3d sample to WebGL / GLSL\n\t * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\n\t */\n\t\n\tTHREE.ConvolutionShader = {\n\t\n\t\tdefines: {\n\t\n\t\t\t\"KERNEL_SIZE_FLOAT\": \"25.0\",\n\t\t\t\"KERNEL_SIZE_INT\": \"25\",\n\t\n\t\t},\n\t\n\t\tuniforms: {\n\t\n\t\t\t\"tDiffuse\":        { type: \"t\", value: null },\n\t\t\t\"uImageIncrement\": { type: \"v2\", value: new THREE.Vector2( 0.001953125, 0.0 ) },\n\t\t\t\"cKernel\":         { type: \"fv1\", value: [] }\n\t\n\t\t},\n\t\n\t\tvertexShader: [\n\t\n\t\t\t\"uniform vec2 uImageIncrement;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t\t\t\"}\"\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tfragmentShader: [\n\t\n\t\t\t\"uniform float cKernel[ KERNEL_SIZE_INT ];\",\n\t\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform vec2 uImageIncrement;\",\n\t\n\t\t\t\"varying vec2 vUv;\",\n\t\n\t\t\t\"void main() {\",\n\t\n\t\t\t\t\"vec2 imageCoord = vUv;\",\n\t\t\t\t\"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\n\t\n\t\t\t\t\"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\n\t\n\t\t\t\t\t\"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\n\t\t\t\t\t\"imageCoord += uImageIncrement;\",\n\t\n\t\t\t\t\"}\",\n\t\n\t\t\t\t\"gl_FragColor = sum;\",\n\t\n\t\t\t\"}\"\n\t\n\t\n\t\t].join(\"\\n\"),\n\t\n\t\tbuildKernel: function ( sigma ) {\n\t\n\t\t\t// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\n\t\n\t\t\tfunction gauss( x, sigma ) {\n\t\n\t\t\t\treturn Math.exp( - ( x * x ) / ( 2.0 * sigma * sigma ) );\n\t\n\t\t\t}\n\t\n\t\t\tvar i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil( sigma * 3.0 ) + 1;\n\t\n\t\t\tif ( kernelSize > kMaxKernelSize ) kernelSize = kMaxKernelSize;\n\t\t\thalfWidth = ( kernelSize - 1 ) * 0.5;\n\t\n\t\t\tvalues = new Array( kernelSize );\n\t\t\tsum = 0.0;\n\t\t\tfor ( i = 0; i < kernelSize; ++i ) {\n\t\n\t\t\t\tvalues[ i ] = gauss( i - halfWidth, sigma );\n\t\t\t\tsum += values[ i ];\n\t\n\t\t\t}\n\t\n\t\t\t// normalize the kernel\n\t\n\t\t\tfor ( i = 0; i < kernelSize; ++i ) values[ i ] /= sum;\n\t\n\t\t\treturn values;\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Vignette shader\n\t * based on PaintEffect postprocess from ro.me\n\t * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\n\t */\n\t\n\tTHREE.VignetteShader = {\n\t\n\t  uniforms: {\n\t\n\t    \"tDiffuse\": { type: \"t\", value: null },\n\t    \"offset\":   { type: \"f\", value: 1.0 },\n\t    \"darkness\": { type: \"f\", value: 1.0 }\n\t\n\t  },\n\t\n\t  vertexShader: [\n\t\n\t    \"varying vec2 vUv;\",\n\t\n\t    \"void main() {\",\n\t\n\t      \"vUv = uv;\",\n\t      \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\n\t    \"}\"\n\t\n\t  ].join(\"\\n\"),\n\t\n\t  fragmentShader: [\n\t\n\t    \"uniform float offset;\",\n\t    \"uniform float darkness;\",\n\t\n\t    \"uniform sampler2D tDiffuse;\",\n\t\n\t    \"varying vec2 vUv;\",\n\t\n\t    \"void main() {\",\n\t\n\t      // Eskil's vignette\n\t\n\t      \"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t      \"vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\",\n\t      \"gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\",\n\t\n\t      /*\n\t      // alternative version from glfx.js\n\t      // this one makes more \"dusty\" look (as opposed to \"burned\")\n\t\n\t      \"vec4 color = texture2D( tDiffuse, vUv );\",\n\t      \"float dist = distance( vUv, vec2( 0.5 ) );\",\n\t      \"color.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\n\t      \"gl_FragColor = color;\",\n\t      */\n\t\n\t    \"}\"\n\t\n\t  ].join(\"\\n\")\n\t\n\t};\n\t\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author felixturner / http://airtight.cc/\n\t *\n\t * RGB Shift Shader\n\t * Shifts red and blue channels from center in opposite directions\n\t * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n\t * by Tom Butterworth / http://kriss.cx/tom/\n\t *\n\t * amount: shift distance (1 is width of input)\n\t * angle: shift angle in radians\n\t */\n\t\n\tTHREE.DigitalGlitch2 = {\n\t\n\t  uniforms: {\n\t\n\t    \"tDiffuse\":   { type: \"t\", value: null },//diffuse texture\n\t    \"tDisp\":    { type: \"t\", value: null },//displacement texture for digital glitch squares\n\t    \"tScratch\":   { type: \"t\", value: null },//scratch texture\n\t    \"byp\":      { type: \"i\", value: 0 },//apply the glitch ?\n\t    \"amount\":   { type: \"f\", value: 0.08 },\n\t    \"angle\":    { type: \"f\", value: 0.02 },\n\t    \"seed\":     { type: \"f\", value: 0.02 },\n\t    \"seed_x\":   { type: \"f\", value: 0.02 },//-1,1\n\t    \"seed_y\":   { type: \"f\", value: 0.02 },//-1,1\n\t    \"distortion_x\": { type: \"f\", value: 0.5 },\n\t    \"distortion_y\": { type: \"f\", value: 0.6 },\n\t    \"col_s\":    { type: \"f\", value: 0.05 }\n\t  },\n\t\n\t  vertexShader: [\n\t\n\t    \"varying vec2 vUv;\",\n\t    \"void main() {\",\n\t      \"vUv = uv;\",\n\t      \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t    \"}\"\n\t  ].join(\"\\n\"),\n\t\n\t  fragmentShader: [\n\t    \"uniform int byp;\",//should we apply the glitch ?\n\t\n\t    \"uniform sampler2D tDiffuse;\",\n\t    \"uniform sampler2D tDisp;\",\n\t    \"uniform sampler2D tScratch;\",\n\t\n\t    \"uniform float amount;\",\n\t    \"uniform float angle;\",\n\t    \"uniform float seed;\",\n\t    \"uniform float seed_x;\",\n\t    \"uniform float seed_y;\",\n\t    \"uniform float distortion_x;\",\n\t    \"uniform float distortion_y;\",\n\t    \"uniform float col_s;\",\n\t\n\t    \"varying vec2 vUv;\",\n\t\n\t\n\t    \"float rand(vec2 co){\",\n\t      \"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\n\t    \"}\",\n\t\n\t    \"float luma(vec3 color) {\",\n\t      \"return dot(color, vec3(0.299, 0.587, 0.114));\",\n\t    \"}\",\n\t\n\t    \"float luma(vec4 color) {\",\n\t      \"return dot(color.rgb, vec3(0.299, 0.587, 0.114));\",\n\t    \"}\",\n\t\n\t    \"void main() {\",\n\t      // ref for dust/scratch: https://gist.github.com/mattdesl/253aece2d3eaac505823\n\t      \"vec2 p = vUv;\",\n\t      \"vec4 scratches = texture2D(tScratch, p);\",\n\t\n\t\n\t      // https://github.com/mattdesl/lwjgl-basics/wiki/ShaderLesson3\n\t      \"if(byp<1) {\",\n\t        \"float xs = floor(gl_FragCoord.x / 0.5);\",\n\t        \"float ys = floor(gl_FragCoord.y / 0.5);\",\n\t        //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n\t        \"vec4 normal = texture2D (tDisp, p*seed*seed);\",\n\t        \"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\",\n\t          \"if(seed_x>0.){\",\n\t            \"p.y = 1. - (p.y + distortion_y);\",\n\t          \"}\",\n\t          \"else {\",\n\t            \"p.y = distortion_y;\",\n\t          \"}\",\n\t        \"}\",\n\t        \"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\",\n\t          \"if(seed_y>0.){\",\n\t            \"p.x=distortion_x;\",\n\t          \"}\",\n\t          \"else {\",\n\t            \"p.x = 1. - (p.x + distortion_x);\",\n\t          \"}\",\n\t        \"}\",\n\t        \"p.x+=normal.x*seed_x*(seed/5.);\",\n\t        \"p.y+=normal.y*seed_y*(seed/5.);\",\n\t        //base from RGB shift shader\n\t        \"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\n\t        \"vec4 cr = texture2D(tDiffuse, p + offset);\",\n\t        \"vec4 cga = texture2D(tDiffuse, p);\",\n\t        \"vec4 cb = texture2D(tDiffuse, p - offset);\",\n\t\n\t        \"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\n\t        //add noise\n\t        \"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\",\n\t        \"gl_FragColor = gl_FragColor+ snow;\",\n\t      \"}\",\n\t      \"else {\",\n\t        \"gl_FragColor=texture2D (tDiffuse, vUv);\",\n\t      \"}\",\n\t\n\t      \"vec3 scratchBlend = gl_FragColor.rgb + scratches.rgb;\",\n\t      // vignette scratch so that it affect only edges.\n\t      \"float center = smoothstep(0.0, 0.5, length(vUv-0.5));\",\n\t      \"float luminance = luma(gl_FragColor.rgb);\",\n\t      \"float brightnessMap = smoothstep(0.1, 0.4, luminance * center );\",\n\t      \"gl_FragColor.rgb = mix(gl_FragColor.rgb, scratchBlend, brightnessMap);\",\n\t    \"}\"\n\t\n\t  ].join(\"\\n\")\n\t\n\t};\n\t\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Camera, THREE;\n\t  THREE = __webpack_require__(2);\n\t  return Camera = (function() {\n\t    Camera.properties = {\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 700\n\t      },\n\t      target_x: {\n\t        name: 'target_x',\n\t        label: 'target x',\n\t        val: 0\n\t      },\n\t      target_y: {\n\t        name: 'target_y',\n\t        label: 'target y',\n\t        val: 0\n\t      },\n\t      target_z: {\n\t        name: 'target_z',\n\t        label: 'target z',\n\t        val: 0\n\t      },\n\t      fov: {\n\t        name: 'fov',\n\t        label: 'fov',\n\t        val: 45\n\t      }\n\t    };\n\t\n\t    function Camera(values1, time) {\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.isCamera = true;\n\t      this.target = new THREE.Vector3(this.values.target_x, this.values.target_y, this.values.target_z);\n\t      this.container = new THREE.PerspectiveCamera(this.values.fov, window.innerWidth / window.innerHeight, 1, 2000);\n\t      this.container.position.set(this.values.x, this.values.y, this.values.z);\n\t    }\n\t\n\t    Camera.prototype.update = function(seconds, values, force) {\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values.fov != null) {\n\t        this.container.fov = values.fov;\n\t      }\n\t      this.container.position.set(values.x, values.y, values.z);\n\t      this.target.set(values.target_x, values.target_y, values.target_z);\n\t      return this.container.lookAt(this.target);\n\t    };\n\t\n\t    Camera.prototype.destroy = function() {\n\t      delete this.container;\n\t      return delete this.isCamera;\n\t    };\n\t\n\t    return Camera;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedCircle, Circles, SpreadedObjects;\n\t  AnimatedCircle = __webpack_require__(46);\n\t  SpreadedObjects = __webpack_require__(47);\n\t  return Circles = (function(superClass) {\n\t    extend(Circles, superClass);\n\t\n\t    function Circles() {\n\t      return Circles.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Circles.prototype.getItemClass = function() {\n\t      return AnimatedCircle;\n\t    };\n\t\n\t    return Circles;\n\t\n\t  })(SpreadedObjects);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedBox, Boxes, SpreadedObjects;\n\t  AnimatedBox = __webpack_require__(48);\n\t  SpreadedObjects = __webpack_require__(47);\n\t  return Boxes = (function(superClass) {\n\t    extend(Boxes, superClass);\n\t\n\t    function Boxes() {\n\t      return Boxes.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Boxes.prototype.getItemClass = function() {\n\t      return AnimatedBox;\n\t    };\n\t\n\t    return Boxes;\n\t\n\t  })(SpreadedObjects);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedLine, Lines, SpreadedObjects;\n\t  AnimatedLine = __webpack_require__(49);\n\t  SpreadedObjects = __webpack_require__(47);\n\t  return Lines = (function(superClass) {\n\t    extend(Lines, superClass);\n\t\n\t    function Lines() {\n\t      return Lines.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Lines.prototype.getItemClass = function() {\n\t      return AnimatedLine;\n\t    };\n\t\n\t    return Lines;\n\t\n\t  })(SpreadedObjects);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Colors, ElementBase, RNG, ShaderFragement, ShaderVertex, SingleObject, THREE, _;\n\t  _ = __webpack_require__(17);\n\t  THREE = __webpack_require__(2);\n\t  RNG = __webpack_require__(41);\n\t  ElementBase = __webpack_require__(38);\n\t  Colors = __webpack_require__(37);\n\t  ShaderVertex = __webpack_require__(44);\n\t  ShaderFragement = __webpack_require__(45);\n\t  return SingleObject = (function(superClass) {\n\t    extend(SingleObject, superClass);\n\t\n\t    SingleObject.properties = {\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      rotX: {\n\t        name: 'rotX',\n\t        label: 'rotation x',\n\t        val: 0\n\t      },\n\t      rotY: {\n\t        name: 'rotY',\n\t        label: 'rotation y',\n\t        val: 0\n\t      },\n\t      rotZ: {\n\t        name: 'rotZ',\n\t        label: 'rotation z',\n\t        val: 0\n\t      },\n\t      scaleX: {\n\t        name: 'scaleX',\n\t        label: 'scale x',\n\t        val: 1\n\t      },\n\t      scaleY: {\n\t        name: 'scaleY',\n\t        label: 'scale y',\n\t        val: 1\n\t      },\n\t      scaleZ: {\n\t        name: 'scaleZ',\n\t        label: 'scale z',\n\t        val: 1\n\t      },\n\t      color: {\n\t        name: 'color',\n\t        label: 'color',\n\t        'type': 'color',\n\t        val: \"#888888\"\n\t      },\n\t      opacity: {\n\t        name: 'opacity',\n\t        label: 'opacity',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1\n\t      }\n\t    };\n\t\n\t    function SingleObject(values1, time) {\n\t      var color, key, prop, ref;\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.getGeometry = bind(this.getGeometry, this);\n\t      ref = this.getDefaultProperties();\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      SingleObject.__super__.constructor.apply(this, arguments);\n\t      this.timeline = new TimelineMax();\n\t      color = new THREE.Color(values.color);\n\t      this.material = this.getMaterial(color);\n\t      this.container = new THREE.Mesh(this.getGeometry(), this.material);\n\t    }\n\t\n\t    SingleObject.prototype.getDefaultProperties = function() {\n\t      return SingleObject.properties;\n\t    };\n\t\n\t    SingleObject.prototype.getGeometry = function() {\n\t      return new THREE.PlaneGeometry(100, 100);\n\t    };\n\t\n\t    SingleObject.prototype.destroy = function() {\n\t      SingleObject.__super__.destroy.apply(this, arguments);\n\t      if (this.container) {\n\t        if (this.container.parent) {\n\t          this.container.parent.remove(this.container);\n\t        }\n\t        delete this.container;\n\t      }\n\t      delete this.geometry;\n\t      return delete this.timeline;\n\t    };\n\t\n\t    SingleObject.prototype.update = function(seconds, values, force) {\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values === false) {\n\t        values = this.values;\n\t      }\n\t      if (force || this.valueChanged(\"x\", values) || this.valueChanged(\"y\", values) || this.valueChanged(\"z\", values)) {\n\t        this.container.position.set(values.x, values.y, values.z);\n\t      }\n\t      if (force || this.valueChanged(\"rotX\", values) || this.valueChanged(\"rotY\", values) || this.valueChanged(\"rotZ\", values)) {\n\t        this.container.rotation.set(this.degreeToRadian(values.rotX), this.degreeToRadian(values.rotY), this.degreeToRadian(values.rotZ));\n\t      }\n\t      if (force || this.valueChanged(\"scaleX\", values) || this.valueChanged(\"scaleY\", values) || this.valueChanged(\"scaleZ\", values)) {\n\t        values.scaleX = values.scaleX || 0.000000001;\n\t        values.scaleY = values.scaleY || 0.000000001;\n\t        values.scaleZ = values.scaleZ || 0.000000001;\n\t        this.container.scale.set(values.scaleX, values.scaleY, values.scaleZ);\n\t      }\n\t      if (force || this.valueChanged(\"color\", values)) {\n\t        this.material.color = new THREE.Color(values.color);\n\t      }\n\t      if (force || this.valueChanged(\"opacity\", values)) {\n\t        this.material.opacity = values.opacity;\n\t      }\n\t    };\n\t\n\t    SingleObject.prototype.getMaterial = function(color) {\n\t      var material;\n\t      material = new THREE.MeshPhongMaterial({\n\t        ambient: 0x030303,\n\t        color: 0xdddddd,\n\t        specular: 0x888888,\n\t        shininess: 30,\n\t        shading: THREE.FlatShading\n\t      });\n\t      material.transparent = true;\n\t      material.depthWrite = false;\n\t      material.depthTest = false;\n\t      material.side = THREE.DoubleSide;\n\t      material.blending = THREE.AdditiveBlending;\n\t      return material;\n\t    };\n\t\n\t    return SingleObject;\n\t\n\t  })(ElementBase);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n\t  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Circle, Colors, RNG, RingGeometry2, ShaderFragement, ShaderVertex, SingleObject, THREE, _;\n\t  _ = __webpack_require__(17);\n\t  THREE = __webpack_require__(2);\n\t  RNG = __webpack_require__(41);\n\t  SingleObject = __webpack_require__(35);\n\t  Colors = __webpack_require__(37);\n\t  RingGeometry2 = __webpack_require__(50);\n\t  ShaderVertex = __webpack_require__(44);\n\t  ShaderFragement = __webpack_require__(45);\n\t  return Circle = (function(superClass) {\n\t    extend(Circle, superClass);\n\t\n\t    function Circle() {\n\t      this.getGeometry = bind(this.getGeometry, this);\n\t      return Circle.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    Circle.properties = {\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      rotX: {\n\t        name: 'rotX',\n\t        label: 'rotation x',\n\t        val: 0\n\t      },\n\t      rotY: {\n\t        name: 'rotY',\n\t        label: 'rotation y',\n\t        val: 0\n\t      },\n\t      rotZ: {\n\t        name: 'rotZ',\n\t        label: 'rotation z',\n\t        val: 0\n\t      },\n\t      scaleX: {\n\t        name: 'scaleX',\n\t        label: 'scale x',\n\t        val: 1\n\t      },\n\t      scaleY: {\n\t        name: 'scaleY',\n\t        label: 'scale y',\n\t        val: 1\n\t      },\n\t      scaleZ: {\n\t        name: 'scaleZ',\n\t        label: 'scale z',\n\t        val: 1\n\t      },\n\t      innerRadius: {\n\t        name: 'innerRadius',\n\t        label: 'innerRadius',\n\t        val: 0.7,\n\t        min: 0,\n\t        max: 1\n\t      },\n\t      angle: {\n\t        name: 'angle',\n\t        label: 'angle',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1\n\t      },\n\t      color: {\n\t        name: 'color',\n\t        label: 'color',\n\t        'type': 'color',\n\t        val: \"#888888\"\n\t      },\n\t      opacity: {\n\t        name: 'opacity',\n\t        label: 'opacity',\n\t        val: 1,\n\t        min: 0,\n\t        max: 1\n\t      }\n\t    };\n\t\n\t    Circle.prototype.getDefaultProperties = function() {\n\t      return Circle.properties;\n\t    };\n\t\n\t    Circle.prototype.getGeometry = function() {\n\t      var angle, inner_radius, pi2;\n\t      inner_radius = this.values.innerRadius || 0.000000001;\n\t      inner_radius = Math.min(0.999999999, inner_radius);\n\t      pi2 = Math.PI * 2;\n\t      angle = this.values.angle * pi2;\n\t      return new RingGeometry2(100 * inner_radius, 100, 30, 1, 0, angle);\n\t    };\n\t\n\t    Circle.prototype.update = function(seconds, values, force) {\n\t      var geom;\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      Circle.__super__.update.apply(this, arguments);\n\t      if (force || this.valueChanged(\"innerRadius\", values) || this.valueChanged(\"angle\", values)) {\n\t        geom = this.getGeometry();\n\t        this.container.geometry.dynamic = true;\n\t        this.container.geometry.vertices = geom.vertices;\n\t        this.container.geometry.verticesNeedUpdate = true;\n\t        geom.dispose();\n\t      }\n\t    };\n\t\n\t    return Circle;\n\t\n\t  })(SingleObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Colors, THREE, items, items2, length;\n\t  THREE = __webpack_require__(2);\n\t  items = [new THREE.Color(0xffffff), new THREE.Color(0x86d1b8), new THREE.Color(0x65c282)];\n\t  items2 = [new THREE.Color(0xffffff), new THREE.Color(0x023750), new THREE.Color(0x028A9E), new THREE.Color(0x0EBFA9), new THREE.Color(0xF2C01D), new THREE.Color(0xD93024)];\n\t  length = items.length;\n\t  return Colors = (function() {\n\t    function Colors() {}\n\t\n\t    Colors.get = function(index) {\n\t      index = Math.abs(parseInt(index, 10));\n\t      return items[index % length];\n\t    };\n\t\n\t    return Colors;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var ElementBase;\n\t  return ElementBase = (function() {\n\t    function ElementBase(values1, time) {\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.destroy = bind(this.destroy, this);\n\t      this.cache = this.buildCache();\n\t    }\n\t\n\t    ElementBase.prototype.buildCache = function() {\n\t      var cache, key, prop, ref;\n\t      cache = {};\n\t      ref = this.values;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        cache[key] = prop.val;\n\t      }\n\t      return cache;\n\t    };\n\t\n\t    ElementBase.prototype.valueChanged = function(key, values) {\n\t      var has_changed, new_val;\n\t      if (values[key] == null) {\n\t        return false;\n\t      }\n\t      new_val = values[key];\n\t      has_changed = true;\n\t      if ((this.cache[key] != null) && this.cache[key] === new_val) {\n\t        has_changed = false;\n\t      }\n\t      this.cache[key] = new_val;\n\t      return has_changed;\n\t    };\n\t\n\t    ElementBase.prototype.degreeToRadian = function(degree) {\n\t      return Math.PI * degree / 180;\n\t    };\n\t\n\t    ElementBase.prototype.destroy = function() {\n\t      return delete this.cache;\n\t    };\n\t\n\t    return ElementBase;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;// Modified to have uv on the edges.\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var THREE = __webpack_require__(2);\n\t\n\tTHREE.CircleGeometry2 = function ( radius, segments, thetaStart, thetaLength ) {\n\t\n\t\tTHREE.Geometry.call( this );\n\t\n\t\tthis.type = 'CircleGeometry2';\n\t\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\t\n\t\tradius = radius || 50;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\t\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\t\n\t\tvar i, uvs = [],\n\t\tcenter = new THREE.Vector3(),\n\t  centerUV = new THREE.Vector2( 0, 0 );\n\t  //centerUV = new THREE.Vector2( 0.5, 0.5 );\n\t\n\t\tthis.vertices.push(center);\n\t\tuvs.push( centerUV );\n\t\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\t\n\t\t\tvar vertex = new THREE.Vector3();\n\t\t\tvar segment = thetaStart + i / segments * thetaLength;\n\t\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\t\n\t\t\tthis.vertices.push( vertex );\n\t\t\t//uvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\n\t\n\t    uvs.push(new THREE.Vector2(1, i / segments));\n\t\t}\n\t\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\n\t\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\t\n\t\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\t//this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\n\t    this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), new THREE.Vector2(0, i / segments) ] );\n\t\n\t\t}\n\t\n\t\tthis.computeFaceNormals();\n\t\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\t\n\t};\n\t\n\tTHREE.CircleGeometry2.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.CircleGeometry2.prototype.constructor = THREE.CircleGeometry2;\n\t\n\treturn THREE.CircleGeometry2;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Seedable random number generator functions.\n\t * @version 1.0.0\n\t * @license Public Domain\n\t *\n\t * @example\n\t * var rng = new RNG('Example');\n\t * rng.random(40, 50);  // =>  42\n\t * rng.uniform();       // =>  0.7972798995050903\n\t * rng.normal();        // => -0.6698504543216376\n\t * rng.exponential();   // =>  1.0547367609131555\n\t * rng.poisson(4);      // =>  2\n\t * rng.gamma(4);        // =>  2.781724687386858\n\t */\n\t\n\t/**\n\t * @param {String} seed A string to seed the generator.\n\t * @constructor\n\t */\n\tfunction RC4(seed) {\n\t    this.s = new Array(256);\n\t    this.i = 0;\n\t    this.j = 0;\n\t    for (var i = 0; i < 256; i++) {\n\t        this.s[i] = i;\n\t    }\n\t    if (seed) {\n\t        this.mix(seed);\n\t    }\n\t}\n\t\n\t/**\n\t * Get the underlying bytes of a string.\n\t * @param {string} string\n\t * @returns {Array} An array of bytes\n\t */\n\tRC4.getStringBytes = function(string) {\n\t    var output = [];\n\t    for (var i = 0; i < string.length; i++) {\n\t        var c = string.charCodeAt(i);\n\t        var bytes = [];\n\t        do {\n\t            bytes.push(c & 0xFF);\n\t            c = c >> 8;\n\t        } while (c > 0);\n\t        output = output.concat(bytes.reverse());\n\t    }\n\t    return output;\n\t};\n\t\n\tRC4.prototype._swap = function(i, j) {\n\t    var tmp = this.s[i];\n\t    this.s[i] = this.s[j];\n\t    this.s[j] = tmp;\n\t};\n\t\n\t/**\n\t * Mix additional entropy into this generator.\n\t * @param {String} seed\n\t */\n\tRC4.prototype.mix = function(seed) {\n\t    var input = RC4.getStringBytes(seed);\n\t    var j = 0;\n\t    for (var i = 0; i < this.s.length; i++) {\n\t        j += this.s[i] + input[i % input.length];\n\t        j %= 256;\n\t        this._swap(i, j);\n\t    }\n\t};\n\t\n\t/**\n\t * @returns {number} The next byte of output from the generator.\n\t */\n\tRC4.prototype.next = function() {\n\t    this.i = (this.i + 1) % 256;\n\t    this.j = (this.j + this.s[this.i]) % 256;\n\t    this._swap(this.i, this.j);\n\t    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n\t};\n\t\n\t/**\n\t * Create a new random number generator with optional seed. If the\n\t * provided seed is a function (i.e. Math.random) it will be used as\n\t * the uniform number generator.\n\t * @param seed An arbitrary object used to seed the generator.\n\t * @constructor\n\t */\n\tfunction RNG(seed) {\n\t    if (seed == null) {\n\t        seed = (Math.random() + Date.now()).toString();\n\t    } else if (typeof seed === \"function\") {\n\t        // Use it as a uniform number generator\n\t        this.uniform = seed;\n\t        this.nextByte = function() {\n\t            return ~~(this.uniform() * 256);\n\t        };\n\t        seed = null;\n\t    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n\t        seed = JSON.stringify(seed);\n\t    }\n\t    this._normal = null;\n\t    if (seed) {\n\t        this._state = new RC4(seed);\n\t    } else {\n\t        this._state = null;\n\t    }\n\t}\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 255.\n\t */\n\tRNG.prototype.nextByte = function() {\n\t    return this._state.next();\n\t};\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 1.\n\t */\n\tRNG.prototype.uniform = function() {\n\t    var BYTES = 7; // 56 bits to make a 53-bit double\n\t    var output = 0;\n\t    for (var i = 0; i < BYTES; i++) {\n\t        output *= 256;\n\t        output += this.nextByte();\n\t    }\n\t    return output / (Math.pow(2, BYTES * 8) - 1);\n\t};\n\t\n\t/**\n\t * Produce a random integer within [n, m).\n\t * @param {number} [n=0]\n\t * @param {number} m\n\t *\n\t */\n\tRNG.prototype.random = function(n, m) {\n\t    if (n == null) {\n\t        return this.uniform();\n\t    } else if (m == null) {\n\t        m = n;\n\t        n = 0;\n\t    }\n\t    return n + Math.floor(this.uniform() * (m - n));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() with the Box-Muller transform.\n\t * @returns {number} Normally-distributed random number of mean 0, variance 1.\n\t */\n\tRNG.prototype.normal = function() {\n\t    if (this._normal !== null) {\n\t        var n = this._normal;\n\t        this._normal = null;\n\t        return n;\n\t    } else {\n\t        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n\t        var y = this.uniform();\n\t        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n\t        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n\t    }\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform().\n\t * @returns {number} Number from the exponential distribution, lambda = 1.\n\t */\n\tRNG.prototype.exponential = function() {\n\t    return -Math.log(this.uniform() || Math.pow(2, -53));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() and Knuth's method.\n\t * @param {number} [mean=1]\n\t * @returns {number} Number from the Poisson distribution.\n\t */\n\tRNG.prototype.poisson = function(mean) {\n\t    var L = Math.exp(-(mean || 1));\n\t    var k = 0, p = 1;\n\t    do {\n\t        k++;\n\t        p *= this.uniform();\n\t    } while (p > L);\n\t    return k - 1;\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform(), this.normal(),\n\t * this.exponential(), and the Marsaglia-Tsang method.\n\t * @param {number} a\n\t * @returns {number} Number from the gamma distribution.\n\t */\n\tRNG.prototype.gamma = function(a) {\n\t    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n\t    var c = 1 / Math.sqrt(9 * d);\n\t    do {\n\t        do {\n\t            var x = this.normal();\n\t            var v = Math.pow(c * x + 1, 3);\n\t        } while (v <= 0);\n\t        var u = this.uniform();\n\t        var x2 = Math.pow(x, 2);\n\t    } while (u >= 1 - 0.0331 * x2 * x2 &&\n\t             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n\t    if (a < 1) {\n\t        return d * v * Math.exp(this.exponential() / -a);\n\t    } else {\n\t        return d * v;\n\t    }\n\t};\n\t\n\t/**\n\t * Accepts a dice rolling notation string and returns a generator\n\t * function for that distribution. The parser is quite flexible.\n\t * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n\t * @param {RNG} rng An optional RNG object.\n\t * @returns {Function}\n\t */\n\tRNG.roller = function(expr, rng) {\n\t    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n\t    var dice = parseFloat(parts[0]) || 1;\n\t    var sides = parseFloat(parts[1]);\n\t    var mod = parseFloat(parts[2]) || 0;\n\t    rng = rng || new RNG();\n\t    return function() {\n\t        var total = dice + mod;\n\t        for (var i = 0; i < dice; i++) {\n\t            total += rng.random(sides);\n\t        }\n\t        return total;\n\t    };\n\t};\n\t\n\t/* Provide a pre-made generator instance. */\n\tRNG.$ = new RNG();\n\t\n\t\n\t/*** EXPORTS FROM exports-loader ***/\n\tmodule.exports = RNG\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Seedable random number generator functions.\n\t * @version 1.0.0\n\t * @license Public Domain\n\t *\n\t * @example\n\t * var rng = new RNG('Example');\n\t * rng.random(40, 50);  // =>  42\n\t * rng.uniform();       // =>  0.7972798995050903\n\t * rng.normal();        // => -0.6698504543216376\n\t * rng.exponential();   // =>  1.0547367609131555\n\t * rng.poisson(4);      // =>  2\n\t * rng.gamma(4);        // =>  2.781724687386858\n\t */\n\t\n\t/**\n\t * @param {String} seed A string to seed the generator.\n\t * @constructor\n\t */\n\tfunction RC4(seed) {\n\t    this.s = new Array(256);\n\t    this.i = 0;\n\t    this.j = 0;\n\t    for (var i = 0; i < 256; i++) {\n\t        this.s[i] = i;\n\t    }\n\t    if (seed) {\n\t        this.mix(seed);\n\t    }\n\t}\n\t\n\t/**\n\t * Get the underlying bytes of a string.\n\t * @param {string} string\n\t * @returns {Array} An array of bytes\n\t */\n\tRC4.getStringBytes = function(string) {\n\t    var output = [];\n\t    for (var i = 0; i < string.length; i++) {\n\t        var c = string.charCodeAt(i);\n\t        var bytes = [];\n\t        do {\n\t            bytes.push(c & 0xFF);\n\t            c = c >> 8;\n\t        } while (c > 0);\n\t        output = output.concat(bytes.reverse());\n\t    }\n\t    return output;\n\t};\n\t\n\tRC4.prototype._swap = function(i, j) {\n\t    var tmp = this.s[i];\n\t    this.s[i] = this.s[j];\n\t    this.s[j] = tmp;\n\t};\n\t\n\t/**\n\t * Mix additional entropy into this generator.\n\t * @param {String} seed\n\t */\n\tRC4.prototype.mix = function(seed) {\n\t    var input = RC4.getStringBytes(seed);\n\t    var j = 0;\n\t    for (var i = 0; i < this.s.length; i++) {\n\t        j += this.s[i] + input[i % input.length];\n\t        j %= 256;\n\t        this._swap(i, j);\n\t    }\n\t};\n\t\n\t/**\n\t * @returns {number} The next byte of output from the generator.\n\t */\n\tRC4.prototype.next = function() {\n\t    this.i = (this.i + 1) % 256;\n\t    this.j = (this.j + this.s[this.i]) % 256;\n\t    this._swap(this.i, this.j);\n\t    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n\t};\n\t\n\t/**\n\t * Create a new random number generator with optional seed. If the\n\t * provided seed is a function (i.e. Math.random) it will be used as\n\t * the uniform number generator.\n\t * @param seed An arbitrary object used to seed the generator.\n\t * @constructor\n\t */\n\tfunction RNG(seed) {\n\t    if (seed == null) {\n\t        seed = (Math.random() + Date.now()).toString();\n\t    } else if (typeof seed === \"function\") {\n\t        // Use it as a uniform number generator\n\t        this.uniform = seed;\n\t        this.nextByte = function() {\n\t            return ~~(this.uniform() * 256);\n\t        };\n\t        seed = null;\n\t    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n\t        seed = JSON.stringify(seed);\n\t    }\n\t    this._normal = null;\n\t    if (seed) {\n\t        this._state = new RC4(seed);\n\t    } else {\n\t        this._state = null;\n\t    }\n\t}\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 255.\n\t */\n\tRNG.prototype.nextByte = function() {\n\t    return this._state.next();\n\t};\n\t\n\t/**\n\t * @returns {number} Uniform random number between 0 and 1.\n\t */\n\tRNG.prototype.uniform = function() {\n\t    var BYTES = 7; // 56 bits to make a 53-bit double\n\t    var output = 0;\n\t    for (var i = 0; i < BYTES; i++) {\n\t        output *= 256;\n\t        output += this.nextByte();\n\t    }\n\t    return output / (Math.pow(2, BYTES * 8) - 1);\n\t};\n\t\n\t/**\n\t * Produce a random integer within [n, m).\n\t * @param {number} [n=0]\n\t * @param {number} m\n\t *\n\t */\n\tRNG.prototype.random = function(n, m) {\n\t    if (n == null) {\n\t        return this.uniform();\n\t    } else if (m == null) {\n\t        m = n;\n\t        n = 0;\n\t    }\n\t    return n + Math.floor(this.uniform() * (m - n));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() with the Box-Muller transform.\n\t * @returns {number} Normally-distributed random number of mean 0, variance 1.\n\t */\n\tRNG.prototype.normal = function() {\n\t    if (this._normal !== null) {\n\t        var n = this._normal;\n\t        this._normal = null;\n\t        return n;\n\t    } else {\n\t        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n\t        var y = this.uniform();\n\t        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n\t        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n\t    }\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform().\n\t * @returns {number} Number from the exponential distribution, lambda = 1.\n\t */\n\tRNG.prototype.exponential = function() {\n\t    return -Math.log(this.uniform() || Math.pow(2, -53));\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform() and Knuth's method.\n\t * @param {number} [mean=1]\n\t * @returns {number} Number from the Poisson distribution.\n\t */\n\tRNG.prototype.poisson = function(mean) {\n\t    var L = Math.exp(-(mean || 1));\n\t    var k = 0, p = 1;\n\t    do {\n\t        k++;\n\t        p *= this.uniform();\n\t    } while (p > L);\n\t    return k - 1;\n\t};\n\t\n\t/**\n\t * Generates numbers using this.uniform(), this.normal(),\n\t * this.exponential(), and the Marsaglia-Tsang method.\n\t * @param {number} a\n\t * @returns {number} Number from the gamma distribution.\n\t */\n\tRNG.prototype.gamma = function(a) {\n\t    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n\t    var c = 1 / Math.sqrt(9 * d);\n\t    do {\n\t        do {\n\t            var x = this.normal();\n\t            var v = Math.pow(c * x + 1, 3);\n\t        } while (v <= 0);\n\t        var u = this.uniform();\n\t        var x2 = Math.pow(x, 2);\n\t    } while (u >= 1 - 0.0331 * x2 * x2 &&\n\t             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n\t    if (a < 1) {\n\t        return d * v * Math.exp(this.exponential() / -a);\n\t    } else {\n\t        return d * v;\n\t    }\n\t};\n\t\n\t/**\n\t * Accepts a dice rolling notation string and returns a generator\n\t * function for that distribution. The parser is quite flexible.\n\t * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n\t * @param {RNG} rng An optional RNG object.\n\t * @returns {Function}\n\t */\n\tRNG.roller = function(expr, rng) {\n\t    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n\t    var dice = parseFloat(parts[0]) || 1;\n\t    var sides = parseFloat(parts[1]);\n\t    var mod = parseFloat(parts[2]) || 0;\n\t    rng = rng || new RNG();\n\t    return function() {\n\t        var total = dice + mod;\n\t        for (var i = 0; i < dice; i++) {\n\t            total += rng.random(sides);\n\t        }\n\t        return total;\n\t    };\n\t};\n\t\n\t/* Provide a pre-made generator instance. */\n\tRNG.$ = new RNG();\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nprecision highp float;\\n\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nfloat aastep_1_0(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\n\\n\\nvarying vec2 vUv;\\nuniform vec3 color;\\n// 0 hidden, 1 full, 2 hidden\\nuniform float percent;\\n\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\n\\n// Common\\n#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\n\\nvec3 inputToLinear( in vec3 a ) {\\n  return a;\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n  return a;\\n}\\n\\nvoid main() {\\n  // For fog\\n  vec3 outgoingLight = vec3( 0.0 );\\t// outgoing light does not have an alpha, the surface does\\n  vec4 diffuseColor = vec4( color, 1.0 );\\n\\n  float alpha = 0.0;\\n\\n  if (vUv.x < percent && vUv.x >= percent - 1.0) {\\n    alpha = 1.0;\\n  }\\n\\n\\n  outgoingLight = diffuseColor.rgb;\\n\\n  float depth = gl_FragCoord.z / gl_FragCoord.w;\\n  float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n  fogFactor = whiteCompliment( fogFactor );\\n\\n  outgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n  gl_FragColor = vec4(outgoingLight, alpha);\\n}\\n\"\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\nvarying float noise;\\nuniform float time;\\nuniform float strength;\\nuniform float seed;\\n\\n//\\n// GLSL textureless classic 3D noise \\\"cnoise\\\",\\n// with an RSL-style periodic variant \\\"pnoise\\\".\\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\\n// Version: 2011-10-11\\n//\\n// Many thanks to Ian McEwan of Ashima Arts for the\\n// ideas for permutation and gradient selection.\\n//\\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\\n// Distributed under the MIT license. See LICENSE file.\\n// https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_1_0(vec3 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_1_0(vec4 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_1_1(vec4 x)\\n{\\n  return mod289_1_0(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_1_2(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nvec3 fade_1_3(vec3 t) {\\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\\n}\\n\\n// Classic Perlin noise, periodic variant\\nfloat pnoise_1_4(vec3 P, vec3 rep)\\n{\\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\\n  Pi0 = mod289_1_0(Pi0);\\n  Pi1 = mod289_1_0(Pi1);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute_1_1(permute_1_1(ix) + iy);\\n  vec4 ixy0 = permute_1_1(ixy + iz0);\\n  vec4 ixy1 = permute_1_1(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt_1_2(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt_1_2(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade_1_3(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n  return 2.2 * n_xyz;\\n}\\n\\n\\n\\n\\nfloat turbulence( vec3 p ) {\\n    float w = 100.0;\\n    float t = -.5;\\n    for (float f = 1.0 ; f <= 10.0 ; f++ ){\\n        float power = pow( 2.0, f );\\n        t += abs( pnoise_1_4( vec3( power * p ), vec3( 10.0, 10.0, 10.0 ) ) / power );\\n    }\\n    return t;\\n}\\n\\nvoid main() {\\n    vUv = uv;\\n\\n\\n    float time2 = time + seed;\\n\\n    // add time to the noise parameters so it's animated\\n    noise = 10.0 *  -.10 * turbulence( 10.5 * normal + time2 );\\n    float b = 5.0 * pnoise_1_4( 0.2 * position + vec3( 2.0 * time2 ), vec3( 100.0 ) );\\n    float displacement = - noise + b;\\n\\n    // Less displacement on center.\\n    displacement = displacement * vUv.x;\\n\\n    //vec3 newPosition = position + normal * displacement * strength * 30.0;\\n    //vec2 normal2 = normalize(uv - 0.5);\\n    vec3 normal2 = normalize(position - 0.5);\\n    float strengthMultiplier = 15.0;\\n    vec3 newPosition = position + vec3(normal2.x, normal2.y, 0.0) * displacement * strength * strengthMultiplier;\\n    //gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"#define GLSLIFY 1\\n\\nprecision highp float;\\n\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nfloat aastep_1_0(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\n\\n\\nvarying vec2 vUv;\\nuniform vec3 color;\\n\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\n\\n// Common\\n#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\n\\nvec3 inputToLinear( in vec3 a ) {\\n  return a;\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n  return a;\\n}\\n\\nvoid main() {\\n  // For fog\\n  vec3 outgoingLight = vec3( 0.0 );\\t// outgoing light does not have an alpha, the surface does\\n  vec4 diffuseColor = vec4( color, 1.0 );\\n\\n  float alpha = 0.0;\\n  float wireframe_size = 0.01;\\n  float min_x = 0.0;\\n  float max_x = 1.0;\\n\\n  // If max is 1 then wireframe is is only half size.\\n  //max_x = max_x * 0.98;\\n\\n  // Get distance from edges.\\n  vec2 edgeX = abs(vec2(vUv.x - min_x, vUv.x - max_x));\\n  // Add the wireframe.\\n  edgeX = max(vec2(0.0, 0.0), edgeX - wireframe_size);\\n\\n  // Get the smallest distance from edges.\\n  float distance_x = min(edgeX.x, edgeX.y);\\n\\n\\n  alpha = aastep_1_0(distance_x, 0.01);\\n\\n\\n  // Add the fill alpha.\\n  if (vUv.x > min_x && vUv.x < max_x) {\\n    alpha = max(0.1, alpha);\\n  }\\n\\n  outgoingLight = diffuseColor.rgb;\\n\\n  float depth = gl_FragCoord.z / gl_FragCoord.w;\\n  float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n  fogFactor = whiteCompliment( fogFactor );\\n\\n  outgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n  gl_FragColor = vec4(outgoingLight, alpha);\\n  //vec3 k = vec3(1.0, 1.0, 1.0);\\n  //gl_FragColor = vec4( vec3( vUv, 0. ), 1. );\\n  //gl_FragColor = vec4( color, 1.0 );\\n}\\n\"\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedCircle, AnimatedObject, CircleGeometry2, RingGeometry2, THREE, _;\n\t  _ = __webpack_require__(17);\n\t  THREE = __webpack_require__(2);\n\t  AnimatedObject = __webpack_require__(52);\n\t  CircleGeometry2 = __webpack_require__(39);\n\t  RingGeometry2 = __webpack_require__(50);\n\t  return AnimatedCircle = (function(superClass) {\n\t    extend(AnimatedCircle, superClass);\n\t\n\t    AnimatedCircle.circleGeom = new CircleGeometry2(10, 30, 0, Math.PI * 2);\n\t\n\t    AnimatedCircle.ringGeom = new RingGeometry2(10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedCircle.ringGeom2 = new RingGeometry2(10 - 1, 10, 30, 1, 0, Math.PI * 2);\n\t\n\t    function AnimatedCircle() {\n\t      AnimatedCircle.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    AnimatedCircle.prototype.getGeometry = function() {\n\t      return AnimatedCircle.circleGeom;\n\t    };\n\t\n\t    AnimatedCircle.prototype.getGeometryOutline = function(outlineWidth) {\n\t      if (outlineWidth < 1) {\n\t        return AnimatedCircle.ringGeom;\n\t      }\n\t      return AnimatedCircle.ringGeom2;\n\t    };\n\t\n\t    return AnimatedCircle;\n\t\n\t  })(AnimatedObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var Colors, ElementBase, RNG, SpreadedObjects, THREE, TweenMax, _;\n\t  _ = __webpack_require__(17);\n\t  THREE = __webpack_require__(2);\n\t  RNG = __webpack_require__(40);\n\t  TweenMax = __webpack_require__(51);\n\t  ElementBase = __webpack_require__(38);\n\t  Colors = __webpack_require__(37);\n\t  return SpreadedObjects = (function(superClass) {\n\t    extend(SpreadedObjects, superClass);\n\t\n\t    SpreadedObjects.properties = {\n\t      numItems: {\n\t        name: 'numItems',\n\t        label: 'num items',\n\t        val: 20,\n\t        triggerRebuild: true\n\t      },\n\t      seed: {\n\t        name: 'seed',\n\t        label: 'seed',\n\t        val: 12002,\n\t        triggerRebuild: true\n\t      },\n\t      randX: {\n\t        name: 'randX',\n\t        label: 'random x',\n\t        val: 80,\n\t        triggerRebuild: true\n\t      },\n\t      randY: {\n\t        name: 'randY',\n\t        label: 'random y',\n\t        val: 80,\n\t        triggerRebuild: true\n\t      },\n\t      randZ: {\n\t        name: 'randZ',\n\t        label: 'random z',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      randRotZ: {\n\t        name: 'randRotZ',\n\t        label: 'random rotation z',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      randScaleX: {\n\t        name: 'randScaleX',\n\t        label: 'random scale x',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      randScaleY: {\n\t        name: 'randScaleY',\n\t        label: 'random scale y',\n\t        val: 0,\n\t        triggerRebuild: true\n\t      },\n\t      circleRadius: {\n\t        name: 'circleRadius',\n\t        label: 'circle radius',\n\t        val: 20\n\t      },\n\t      circleRadiusMax: {\n\t        name: 'circleRadiusMax',\n\t        label: 'circle radius max',\n\t        val: 20\n\t      },\n\t      progression: {\n\t        name: 'progression',\n\t        label: 'progression',\n\t        val: 1,\n\t        min: 0,\n\t        max: 2\n\t      },\n\t      depth: {\n\t        name: 'depth',\n\t        label: 'depth',\n\t        val: 0\n\t      },\n\t      percent_color: {\n\t        name: 'percent_color',\n\t        label: 'percent color',\n\t        val: 0.4,\n\t        triggerRebuild: true\n\t      },\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      rotX: {\n\t        name: 'rotX',\n\t        label: 'rotation x',\n\t        val: 0\n\t      },\n\t      rotY: {\n\t        name: 'rotY',\n\t        label: 'rotation y',\n\t        val: 0\n\t      },\n\t      rotZ: {\n\t        name: 'rotZ',\n\t        label: 'rotation z',\n\t        val: 0\n\t      }\n\t    };\n\t\n\t    function SpreadedObjects(values1, time) {\n\t      var key, prop, ref;\n\t      this.values = values1 != null ? values1 : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      ref = SpreadedObjects.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      SpreadedObjects.__super__.constructor.apply(this, arguments);\n\t      this.timeline = new TimelineMax();\n\t      this.container = new THREE.Object3D();\n\t      this.totalDuration = 0;\n\t      this.items = [];\n\t      this.items_position = [];\n\t      this.build(time);\n\t    }\n\t\n\t    SpreadedObjects.prototype.getItemClass = function() {\n\t      return AnimatedCircle;\n\t    };\n\t\n\t    SpreadedObjects.prototype.rebuild = function(time) {\n\t      this.empty();\n\t      return this.build(time);\n\t    };\n\t\n\t    SpreadedObjects.prototype.empty = function() {\n\t      var item, j, len, ref;\n\t      if (!this.items || !this.items.length) {\n\t        return;\n\t      }\n\t      this.timeline.clear();\n\t      this.items_position = [];\n\t      ref = this.items;\n\t      for (j = 0, len = ref.length; j < len; j++) {\n\t        item = ref[j];\n\t        this.container.remove(item.container);\n\t        item.destroy();\n\t      }\n\t      return this.items = [];\n\t    };\n\t\n\t    SpreadedObjects.prototype.build = function(time) {\n\t      var border_radius, color, delay, draw_circle, draw_outline, duration, fillColor, i, item, itemClass, j, pos, randRotZ, randScaleX, randScaleY, ref, rndtype, size, x, y, z;\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.rng = new RNG(this.values.seed);\n\t      this.rngAnimation = new RNG(this.values.seed + \"lorem\");\n\t      this.rngOutline = new RNG(this.values.seed);\n\t      for (i = j = 0, ref = this.values.numItems - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {\n\t        itemClass = this.getItemClass();\n\t        rndtype = this.rng.random(0, 1000) / 1000;\n\t        draw_outline = rndtype < 0.8 ? true : false;\n\t        draw_circle = rndtype > 0.5 ? true : false;\n\t        if (itemClass.noOutline) {\n\t          draw_outline = false;\n\t          draw_circle = true;\n\t        }\n\t        color = Colors.get(this.rng.random(0, 1000));\n\t        if (this.rng.random(0, 1000) > this.values.percent_color * 1000) {\n\t          color = Colors.get(0);\n\t        }\n\t        fillColor = color.clone();\n\t        if (draw_outline) {\n\t          fillColor.multiplyScalar(this.rng.random(0.1, 0.5));\n\t        }\n\t        size = this.rng.random(this.values.circleRadius, this.values.circleRadiusMax);\n\t        x = this.getRandomPosition(this.values.randX);\n\t        y = this.getRandomPosition(this.values.randY);\n\t        z = this.getRandomPosition(this.values.randZ);\n\t        randRotZ = this.rng.random(0, 1000) / 1000 * Math.PI * this.values.randRotZ;\n\t        randScaleX = this.rng.random(0, 1000) / 1000 * this.values.randScaleX;\n\t        randScaleY = this.rng.random(0, 1000) / 1000 * this.values.randScaleY;\n\t        pos = {\n\t          x: x,\n\t          y: y,\n\t          z: z\n\t        };\n\t        delay = this.rngAnimation.random(0, 2400) / 1000;\n\t        duration = this.rngAnimation.random(600, 800) / 1000;\n\t        duration *= 4;\n\t        border_radius = this.rngOutline.random(1, 400) / 100;\n\t        if (draw_outline === false) {\n\t          fillColor.multiplyScalar(3);\n\t        }\n\t        item = new itemClass({\n\t          size: size,\n\t          outlineWidth: border_radius,\n\t          drawOutline: draw_outline,\n\t          drawCircle: draw_circle,\n\t          color: color,\n\t          fillColor: fillColor,\n\t          delay: delay,\n\t          duration: duration,\n\t          depth: this.values.depth,\n\t          x: pos.x,\n\t          y: pos.y,\n\t          z: pos.z,\n\t          randRotZ: randRotZ,\n\t          randScaleX: randScaleX,\n\t          randScaleY: randScaleY\n\t        });\n\t        this.container.add(item.container);\n\t        this.timeline.add(item.timeline, 0);\n\t        this.items.push(item);\n\t        this.items_position.push(pos);\n\t      }\n\t      this.totalDuration = this.timeline.duration();\n\t      return this.update(time, this.values, true);\n\t    };\n\t\n\t    SpreadedObjects.prototype.update = function(seconds, values, force) {\n\t      var item, j, k, key, len, len1, needs_rebuild, pos, progression, prop, ref, ref1, ref2;\n\t      if (values == null) {\n\t        values = false;\n\t      }\n\t      if (force == null) {\n\t        force = false;\n\t      }\n\t      if (values === false) {\n\t        values = this.values;\n\t      }\n\t      needs_rebuild = false;\n\t      ref = SpreadedObjects.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (prop.triggerRebuild && this.valueChanged(key, values)) {\n\t          needs_rebuild = true;\n\t        }\n\t      }\n\t      if (force || this.valueChanged(\"x\", values) || this.valueChanged(\"y\", values) || this.valueChanged(\"z\", values)) {\n\t        this.container.position.set(values.x, values.y, values.z);\n\t      }\n\t      if (force || this.valueChanged(\"rotX\", values) || this.valueChanged(\"rotY\", values) || this.valueChanged(\"rotZ\", values)) {\n\t        this.container.rotation.set(this.degreeToRadian(values.rotX), this.degreeToRadian(values.rotY), this.degreeToRadian(values.rotZ));\n\t      }\n\t      progression = values.progression / 2;\n\t      this.timeline.seek(this.totalDuration * progression);\n\t      ref1 = this.items;\n\t      for (j = 0, len = ref1.length; j < len; j++) {\n\t        item = ref1[j];\n\t        item.update(seconds, {\n\t          progression: values.progression\n\t        });\n\t      }\n\t      if (force || this.valueChanged(\"depth\", values)) {\n\t        ref2 = this.items;\n\t        for (key = k = 0, len1 = ref2.length; k < len1; key = ++k) {\n\t          item = ref2[key];\n\t          pos = this.items_position[key];\n\t          item.container.position.set(pos.x, pos.y, pos.z * values.depth);\n\t        }\n\t      }\n\t      this.values = _.merge(this.values, values);\n\t      if (needs_rebuild === true) {\n\t        return this.rebuild(seconds);\n\t      }\n\t    };\n\t\n\t    SpreadedObjects.prototype.getRandomPosition = function(scale) {\n\t      if (scale == null) {\n\t        scale = 1;\n\t      }\n\t      return this.rng.random(-scale, scale);\n\t    };\n\t\n\t    SpreadedObjects.prototype.destroy = function() {\n\t      SpreadedObjects.__super__.destroy.apply(this, arguments);\n\t      if (this.container) {\n\t        if (this.container.parent) {\n\t          this.container.parent.remove(this.container);\n\t        }\n\t        delete this.container;\n\t      }\n\t      delete this.rng;\n\t      delete this.rngOutline;\n\t      return delete this.cache;\n\t    };\n\t\n\t    return SpreadedObjects;\n\t\n\t  })(ElementBase);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedBox, AnimatedObject, THREE, _;\n\t  _ = __webpack_require__(17);\n\t  THREE = __webpack_require__(2);\n\t  AnimatedObject = __webpack_require__(52);\n\t  return AnimatedBox = (function(superClass) {\n\t    extend(AnimatedBox, superClass);\n\t\n\t    AnimatedBox.circleGeom = new THREE.CircleGeometry(10, 4, 0, Math.PI * 2);\n\t\n\t    AnimatedBox.ringGeom = new THREE.RingGeometry(10 - 1, 10 + 1, 4, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedBox.ringGeom2 = new THREE.RingGeometry(10 - 1, 10, 4, 1, 0, Math.PI * 2);\n\t\n\t    function AnimatedBox() {\n\t      AnimatedBox.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    AnimatedBox.prototype.getGeometry = function() {\n\t      return AnimatedBox.circleGeom;\n\t    };\n\t\n\t    AnimatedBox.prototype.getGeometryOutline = function(outlineWidth) {\n\t      if (outlineWidth < 1) {\n\t        return AnimatedBox.ringGeom;\n\t      }\n\t      return AnimatedBox.ringGeom2;\n\t    };\n\t\n\t    return AnimatedBox;\n\t\n\t  })(AnimatedObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n\t  hasProp = {}.hasOwnProperty;\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedLine, AnimatedObject, THREE, _;\n\t  _ = __webpack_require__(17);\n\t  THREE = __webpack_require__(2);\n\t  AnimatedObject = __webpack_require__(52);\n\t  return AnimatedLine = (function(superClass) {\n\t    extend(AnimatedLine, superClass);\n\t\n\t    AnimatedLine.circleGeom = new THREE.PlaneGeometry(100, 1);\n\t\n\t    AnimatedLine.ringGeom = false;\n\t\n\t    AnimatedLine.ringGeom2 = false;\n\t\n\t    AnimatedLine.noOutline = true;\n\t\n\t    function AnimatedLine() {\n\t      AnimatedLine.__super__.constructor.apply(this, arguments);\n\t    }\n\t\n\t    AnimatedLine.prototype.getGeometry = function() {\n\t      return AnimatedLine.circleGeom;\n\t    };\n\t\n\t    AnimatedLine.prototype.getGeometryOutline = function(outlineWidth) {\n\t      return false;\n\t    };\n\t\n\t    AnimatedLine.prototype.update = function(seconds, progression) {\n\t      var i, len, material, ref, scale, timeDiff;\n\t      this.container.position.add(this.velocity);\n\t      this.velocity = this.velocity.multiplyScalar(0.94);\n\t      timeDiff = Date.now() - this.start;\n\t      ref = this.materials;\n\t      for (i = 0, len = ref.length; i < len; i++) {\n\t        material = ref[i];\n\t        material.uniforms['time'].value = 0.00025 * timeDiff;\n\t      }\n\t      scale = this.animatedProperties.scale * this.values.size * 0.1;\n\t      return this.container.scale.set(1, scale, 1);\n\t    };\n\t\n\t    return AnimatedLine;\n\t\n\t  })(AnimatedObject);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;// Modified to have uv on the edges.\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var THREE = __webpack_require__(2);\n\t\n\tTHREE.RingGeometry2 = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\t\n\t\tTHREE.Geometry.call( this );\n\t\n\t\tthis.type = 'RingGeometry2';\n\t\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\t\n\t\tinnerRadius = innerRadius || 0;\n\t\touterRadius = outerRadius || 50;\n\t\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\t\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\n\t\n\t\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\n\t\tfor ( i = 0; i < phiSegments + 1; i ++ ) { // concentric circles inside ring\n\t\n\t\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) { // number of segments per circle\n\t\n\t\t\t\tvar vertex = new THREE.Vector3();\n\t\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\t\n\t\t\t\tthis.vertices.push( vertex );\n\t\t\t\t//uvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\n\t\t\t  var uv = {\n\t        x: (i / phiSegments),\n\t        y: (o / thetaSegments)\n\t      };\n\t      uvs.push(new THREE.Vector2(uv.x, uv.y));\n\t    }\n\t\n\t\t\tradius += radiusStep;\n\t\n\t\t}\n\t\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\n\t\n\t\tfor ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring\n\t\n\t\t\tvar thetaSegment = i * (thetaSegments + 1);\n\t\n\t\t\tfor ( o = 0; o < thetaSegments ; o ++ ) { // number of segments per circle\n\t\n\t\t\t\tvar segment = o + thetaSegment;\n\t\n\t\t\t\tvar v1 = segment;\n\t\t\t\tvar v2 = segment + thetaSegments + 1;\n\t\t\t\tvar v3 = segment + thetaSegments + 2;\n\t\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\t\n\t\t\t\tv1 = segment;\n\t\t\t\tv2 = segment + thetaSegments + 2;\n\t\t\t\tv3 = segment + 1;\n\t\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\t\n\t\t\t}\n\t\t}\n\t\n\t\tthis.computeFaceNormals();\n\t\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\t\n\t};\n\t\n\tTHREE.RingGeometry2.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.RingGeometry2.prototype.constructor = THREE.RingGeometry2;\n\t\n\treturn THREE.RingGeometry2;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = TweenMax;\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {\n\t  var AnimatedObject, Audio, Colors, RNG, ShaderFragement, ShaderVertex, THREE, TweenMax, _;\n\t  _ = __webpack_require__(17);\n\t  THREE = __webpack_require__(2);\n\t  RNG = __webpack_require__(41);\n\t  TweenMax = __webpack_require__(51);\n\t  Colors = __webpack_require__(37);\n\t  Audio = __webpack_require__(6);\n\t  ShaderVertex = __webpack_require__(44);\n\t  ShaderFragement = __webpack_require__(45);\n\t  return AnimatedObject = (function() {\n\t    AnimatedObject.circleGeom = new THREE.CircleGeometry(10, 30, 0, Math.PI * 2);\n\t\n\t    AnimatedObject.ringGeom = new THREE.RingGeometry(10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedObject.ringGeom2 = new THREE.RingGeometry(10 - 1, 10, 30, 1, 0, Math.PI * 2);\n\t\n\t    AnimatedObject.properties = {\n\t      size: {\n\t        name: 'size',\n\t        label: 'size',\n\t        val: 80\n\t      },\n\t      outlineWidth: {\n\t        name: 'outlineWidth',\n\t        label: 'outline width',\n\t        val: 2\n\t      },\n\t      drawOutline: {\n\t        name: 'drawOutline',\n\t        label: 'draw outline',\n\t        val: true\n\t      },\n\t      drawCircle: {\n\t        name: 'drawCircle',\n\t        label: 'draw circle',\n\t        val: false\n\t      },\n\t      color: {\n\t        name: 'color',\n\t        label: 'color',\n\t        val: false\n\t      },\n\t      fillColor: {\n\t        name: 'fillColor',\n\t        label: 'fill color',\n\t        val: false\n\t      },\n\t      delay: {\n\t        name: 'delay',\n\t        label: 'delay',\n\t        val: 0\n\t      },\n\t      duration: {\n\t        name: 'duration',\n\t        label: 'duration',\n\t        val: 0.5\n\t      },\n\t      x: {\n\t        name: 'x',\n\t        label: 'x',\n\t        val: 0\n\t      },\n\t      y: {\n\t        name: 'y',\n\t        label: 'y',\n\t        val: 0\n\t      },\n\t      z: {\n\t        name: 'z',\n\t        label: 'z',\n\t        val: 0\n\t      },\n\t      randRotZ: {\n\t        name: 'randRotZ',\n\t        label: 'random rotation z',\n\t        val: 0\n\t      },\n\t      randScaleX: {\n\t        name: 'randScaleX',\n\t        label: 'random scale x',\n\t        val: 0\n\t      },\n\t      randScaleY: {\n\t        name: 'randScaleY',\n\t        label: 'random scale y',\n\t        val: 0\n\t      }\n\t    };\n\t\n\t    function AnimatedObject(values, time) {\n\t      var key, prop, ref, tween;\n\t      this.values = values != null ? values : {};\n\t      if (time == null) {\n\t        time = 0;\n\t      }\n\t      this.renderOutline = bind(this.renderOutline, this);\n\t      this.renderCircle = bind(this.renderCircle, this);\n\t      ref = AnimatedObject.properties;\n\t      for (key in ref) {\n\t        prop = ref[key];\n\t        if (this.values[key] == null) {\n\t          this.values[key] = prop.val;\n\t        }\n\t      }\n\t      this.container = new THREE.Object3D();\n\t      this.container.scale.set(0.001, 0.001, 0.001);\n\t      this.container.position.set(this.values.x, this.values.y, this.values.z);\n\t      this.container.rotation.set(0, 0, this.values.randRotZ);\n\t      this.materials = [];\n\t      this.start = Date.now();\n\t      this.offset = new THREE.Vector3();\n\t      this.velocity = new THREE.Vector3();\n\t      this.weight = Math.random() * 0.5 + 0.5;\n\t      this.direction = new THREE.Vector3(Math.random() * 2 - 1, Math.random() * 2 - 1, 0);\n\t      this.speed = 0;\n\t      this.animatedProperties = {\n\t        scale: 0.001\n\t      };\n\t      this.timeline = new TimelineMax();\n\t      tween = TweenLite.to(this.animatedProperties, 0, {\n\t        scale: 0.00001,\n\t        ease: Linear.easeNone\n\t      });\n\t      this.timeline.add(tween, 0);\n\t      tween = TweenLite.to(this.animatedProperties, this.values.duration, {\n\t        scale: 1,\n\t        delay: this.values.delay,\n\t        ease: Cubic.easeOut\n\t      });\n\t      this.timeline.add(tween);\n\t      tween = TweenLite.to(this.animatedProperties, this.values.duration * 0.5, {\n\t        scale: 1,\n\t        ease: Cubic.easeOut\n\t      });\n\t      this.timeline.add(tween);\n\t      tween = TweenLite.to(this.animatedProperties, this.values.duration, {\n\t        scale: 0.00001,\n\t        ease: Cubic.easeIn\n\t      });\n\t      this.timeline.add(tween);\n\t      this.renderCircle(this.values.size, this.values.fillColor);\n\t    }\n\t\n\t    AnimatedObject.prototype.getGeometry = function() {\n\t      return AnimatedObject.circleGeom;\n\t    };\n\t\n\t    AnimatedObject.prototype.getGeometryOutline = function(outlineWidth) {\n\t      if (outlineWidth < 1) {\n\t        return AnimatedObject.ringGeom;\n\t      }\n\t      return AnimatedObject.ringGeom2;\n\t    };\n\t\n\t    AnimatedObject.prototype.destroy = function() {\n\t      var child, i, len, ref;\n\t      this.timeline.clear();\n\t      ref = this.container.children;\n\t      for (i = 0, len = ref.length; i < len; i++) {\n\t        child = ref[i];\n\t        this.container.remove(child);\n\t      }\n\t      return this.container = null;\n\t    };\n\t\n\t    AnimatedObject.prototype.getMaterial = function(color) {\n\t      var material, uniforms;\n\t      uniforms = {\n\t        time: {\n\t          type: 'f',\n\t          value: 0.0\n\t        },\n\t        seed: {\n\t          type: 'f',\n\t          value: Math.random() * 1000\n\t        },\n\t        strength: {\n\t          type: 'f',\n\t          value: 0.2\n\t        },\n\t        color: {\n\t          type: 'c',\n\t          value: color\n\t        }\n\t      };\n\t      material = new THREE.ShaderMaterial({\n\t        vertexShader: ShaderVertex,\n\t        fragmentShader: ShaderFragement,\n\t        uniforms: uniforms,\n\t        transparent: true,\n\t        depthWrite: false,\n\t        depthTest: false\n\t      });\n\t      material.blending = THREE.AdditiveBlending;\n\t      return material;\n\t    };\n\t\n\t    AnimatedObject.prototype.update = function(seconds, progression) {\n\t      var i, len, material, ref, scale, timeDiff;\n\t      this.container.position.add(this.velocity);\n\t      this.velocity = this.velocity.multiplyScalar(0.94);\n\t      timeDiff = Date.now() - this.start;\n\t      ref = this.materials;\n\t      for (i = 0, len = ref.length; i < len; i++) {\n\t        material = ref[i];\n\t        material.uniforms['time'].value = 0.00025 * timeDiff;\n\t        material.uniforms['strength'].value = window.audio.mid;\n\t      }\n\t      scale = this.animatedProperties.scale * this.values.size * 0.1;\n\t      return this.container.scale.set(scale * (1 + this.values.randScaleX), scale * (1 + this.values.randScaleY), scale);\n\t    };\n\t\n\t    AnimatedObject.prototype.renderCircle = function(size, color) {\n\t      var material, object;\n\t      material = this.getMaterial(color);\n\t      this.materials.push(material);\n\t      object = new THREE.Mesh(this.getGeometry(), material);\n\t      return this.container.add(object);\n\t    };\n\t\n\t    AnimatedObject.prototype.renderOutline = function(size, color, outlineWidth) {\n\t      var geom, material, object;\n\t      geom = this.getGeometryOutline(outlineWidth);\n\t      material = this.getMaterial(color);\n\t      this.materials.push(material);\n\t      object = new THREE.Mesh(geom, material);\n\t      return this.container.add(object);\n\t    };\n\t\n\t    return AnimatedObject;\n\t\n\t  })();\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** App.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a77038209ac687b469b6\n **/","# green: 567c6d\n# yellow: e2cb7b\n# brownish: cbad7b\n# red: af1925\n# pink: ddb3b4\n# purple: 715160\n# blue: 406872\n\n\ndefine (require) ->\n  THREE = require 'Three'\n\n  TweenTime = require 'TweenTime'\n\n  Shaders = require 'app/components/Shaders'\n  Background = require 'app/components/Background'\n  PostFX = require 'app/components/PostFX'\n  SceneManager = require 'app/components/SceneManager'\n  Audio = require 'app/components/Audio'\n  ElementFactory = require 'app/components/ElementFactory'\n  DataNormalizer = require 'app/components/DataNormalizer'\n\n  dataJson = require 'raw!app/data.json'\n\n  #Circles = require 'app/elements/Circles'\n\n  Particles = require 'app/elements/Particles'\n  OrganizedChaos = require 'app/elements/OrganizedChaos'\n\n  window.App = class App\n    constructor: () ->\n      window.updateCameraAspect = @updateCameraAspect\n\n      @shaders = new Shaders()\n\n      audio_url = './assets/08 - Space Tron On The Grid.mp3'\n      @audio = new Audio(audio_url, @onAudioLoaded)\n      @factory = new ElementFactory()\n\n      # Convert loaded data\n      conf = JSON.parse(dataJson)\n      console.log conf\n      @settings = conf.settings\n      @data = DataNormalizer.normalizeData(conf.data, @factory)\n\n      @tweenTime = new TweenTime(@data)\n      @tweenTime.timer.statusChanged.add(@onTimerStatusChanged)\n      @tweenTime.timer.seeked.add(@onTimerSeeked)\n\n      if @settings.time\n        @tweenTime.timer.seek([@settings.time])\n\n      size = @getScreenSize()\n      @camera = new THREE.PerspectiveCamera( 45, size.width / size.height, 1, 2000 )\n      @camera.position.z = 600\n      window.activeCamera = @camera\n\n      @scene = new THREE.Scene()\n      @scene.fog = new THREE.FogExp2( 0x111111, 0.0045 )\n      #@orchestrator = new Orchestrator(@timer, @data, @scene, @camera)\n      @sceneManager = new SceneManager(@tweenTime, @data, @scene, @camera, @factory)\n\n      @time = Date.now() * 0.0001\n      container = document.createElement( 'div' )\n      @containerWebgl = container # Save for use in EditorUI for object picking.\n      document.body.appendChild( container )\n\n      @renderer = new THREE.WebGLRenderer( { antialias: true, alpha: false } )\n      @renderer.setPixelRatio( window.devicePixelRatio )\n      @renderer.setSize(size.width, size.height)\n\n      #@renderer.setClearColor( 0xe1d8c7, 1)\n      @renderer.setClearColor( 0x111111, 1)\n\n      #circles = new Circles(@scene, 10, 4323, 130, 20, 50)\n      #circles2 = new Circles(@scene, 20, 51232, 180, 4, 10)\n\n      light1 = new THREE.DirectionalLight( 0xffffff, 0.4 )\n      light1.position.set(100, 300, 700)\n      @scene.add(light1)\n\n      #@createElements()\n\n      container.appendChild( @renderer.domElement )\n\n      window.addEventListener('resize', @onWindowResize, false)\n\n      @postfx = new PostFX(@scene, @camera, @renderer, size)\n      #new Background(@scene)\n\n      #@particles = new Particles()\n      #@scene.add(@particles.container)\n\n      #@chaos = new OrganizedChaos()\n      #@chaos.container.position.z = 300\n      #@scene.add(@chaos.container)\n\n      @animate()\n\n    onTimerStatusChanged: (is_playing) =>\n      if is_playing\n        @audio.play()\n      else\n        @audio.pause()\n\n    onTimerSeeked: (time) =>\n      @audio.seek(time / 1000)\n\n    onAudioLoaded: () =>\n      console.log \"audio loaded\"\n      $('body').addClass('is-audio-loaded')\n\n    createElements: () ->\n      material = new THREE.MeshPhongMaterial({color: 0x111111, specular: 0x666666, shininess: 30, shading: THREE.SmoothShading})\n      #material.blending = THREE.AdditiveBlending\n\n      object = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2000, 650, 1, 1 ), material )\n      object.position.set( 420, 0, -350 )\n      object.rotation.set(0.1, 0.8, 0.7)\n      @scene.add( object )\n\n      object2 = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2000, 650, 1, 1 ), material )\n      object2.position.set( 320, 0, -450 )\n      object2.rotation.set(0.17, 0.85, 0.78)\n      @scene.add( object2 )\n\n      object3 = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2000, 650, 1, 1 ), material )\n      object3.position.set( -120, -600, -950 )\n      object3.rotation.set(0.17, 0.35, -0.38)\n      @scene.add( object3 )\n\n\n    __createElementsBackup: () ->\n      #material = new THREE.MeshBasicMaterial( { color: 0xffffff, side: THREE.DoubleSide } )\n      #material = new THREE.MeshBasicMaterial({color: 0xaf1925, transparent: true})\n      material = new THREE.MeshBasicMaterial({color: 0xd7888e, transparent: true})\n      material.blending = THREE.MultiplyBlending\n\n      materialBlack = new THREE.MeshBasicMaterial({color: 0x222222, transparent: true, wireframe: false})\n      materialBlack.blending = THREE.MultiplyBlending\n\n      material2 = new THREE.MeshBasicMaterial({color: 0x406872, transparent: true})\n      material2.blending = THREE.MultiplyBlending\n\n      object = new THREE.Mesh( new THREE.CircleGeometry( 50, 50, 0, Math.PI * 2 ), material )\n      #object = new THREE.Mesh( new THREE.BoxGeometry(30, 30, 30 , 2, 2, 2), material )\n      object.position.set( 20, 0, 0 )\n      #object.rotation.set(Math.PI / -2, 0, 0)\n      @scene.add( object )\n\n      object = new THREE.Mesh( new THREE.RingGeometry( 43, 50, 50, 1, 0, Math.PI * 2 ), materialBlack )\n      #object = new THREE.Mesh( new THREE.BoxGeometry(30, 30, 30 , 2, 2, 2), material )\n      object.position.set( 20, 0, 0 )\n      #object.rotation.set(Math.PI / -2, 0, 0)\n      @scene.add( object )\n\n      #object = new THREE.Mesh( new THREE.SphereGeometry( 75, 20, 10 ), material );\n      #object = new THREE.Mesh( new THREE.PlaneGeometry( 100, 100, 2, 2 ), material2 );\n      object = new THREE.Mesh( new THREE.RingGeometry( 40, 50, 4, 1, 0, Math.PI * 2 ), material2 );\n      object.position.set( -20, 0, 0 );\n      object.rotation.set(0, 0, Math.PI / 4)\n      @scene.add( object )\n\n    getScreenSize: () ->\n      SCREEN_WIDTH = window.innerWidth\n      SCREEN_HEIGHT = window.innerHeight\n      if window.editorEnabled\n        timelineheight = 295\n        if $('body').hasClass('timeline-is-closed') then timelineheight = 95\n        propertieswidth = 279\n        if $('body').hasClass('properties-is-closed') then propertieswidth = 0\n        SCREEN_HEIGHT -= timelineheight\n        SCREEN_WIDTH -= propertieswidth\n\n      #console.log {width: SCREEN_WIDTH, height: SCREEN_HEIGHT}\n      return {width: SCREEN_WIDTH, height: SCREEN_HEIGHT}\n\n    updateCameraAspect: (camera, size = false) =>\n      if size == false\n        size = @getScreenSize()\n      camera.aspect = size.width / size.height\n      camera.updateProjectionMatrix()\n\n    onWindowResize: () =>\n      size = @getScreenSize()\n\n      @updateCameraAspect(@camera, size)\n      @updateCameraAspect(window.activeCamera, size)\n\n      @renderer.setSize(size.width, size.height)\n      @postfx.resize(size.width, size.height)\n\n    animate: () =>\n      requestAnimationFrame(@animate)\n      @audio.update()\n      @shaders.update()\n      @render()\n\n    render: () ->\n      newTime = Date.now() * 0.0001\n      delta = newTime - @time\n\n      if @particles then @particles.update()\n      if @chaos then @chaos.update()\n      @camera.lookAt( @scene.position )\n      @postfx.render(delta)\n\n      @time = newTime\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/App.coffee\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n * @author davidedc / http://www.sketchpatch.net/\n *\n * NVIDIA FXAA by Timothy Lottes\n * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\n * - WebGL port by @supereggbert\n * http://www.glge.org/demos/fxaa/\n */\n\nTHREE.FXAAShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\"resolution\": { type: \"v2\", value: new THREE.Vector2( 1 / 1024, 1 / 512 )  }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec2 resolution;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"#define FXAA_REDUCE_MIN   (1.0/128.0)\",\n\t\t\"#define FXAA_REDUCE_MUL   (1.0/8.0)\",\n\t\t\"#define FXAA_SPAN_MAX     8.0\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );\",\n\t\t\t\"vec3 rgbM  = rgbaM.xyz;\",\n\t\t\t\"float opacity  = rgbaM.w;\",\n\n\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\n\t\t\t\"float lumaNW = dot( rgbNW, luma );\",\n\t\t\t\"float lumaNE = dot( rgbNE, luma );\",\n\t\t\t\"float lumaSW = dot( rgbSW, luma );\",\n\t\t\t\"float lumaSE = dot( rgbSE, luma );\",\n\t\t\t\"float lumaM  = dot( rgbM,  luma );\",\n\t\t\t\"float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\",\n\t\t\t\"float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\",\n\n\t\t\t\"vec2 dir;\",\n\t\t\t\"dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\",\n\t\t\t\"dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\",\n\n\t\t\t\"float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\",\n\n\t\t\t\"float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\",\n\t\t\t\"dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\",\n\t\t\t\t  \"max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\",\n\t\t\t\t\t\t\"dir * rcpDirMin)) * resolution;\",\n\n\t\t\t\"vec3 rgbA = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\"rgbA += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\"rgbA *= 0.5;\",\n\n\t\t\t\"vec3 rgbB = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz;\",\n\t\t\t\"rgbB += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz;\",\n\t\t\t\"rgbB *= 0.25;\",\n\t\t\t\"rgbB += rgbA * 0.5;\",\n\n\t\t\t\"float lumaB = dot( rgbB, luma );\",\n\n\t\t\t\"if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\",\n\n\t\t\t\t\"gl_FragColor = vec4( rgbA, opacity );\",\n\n\t\t\t\"} else {\",\n\n\t\t\t\t\"gl_FragColor = vec4( rgbB, opacity );\",\n\n\t\t\t\"}\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/FXAAShader.js\n ** module id = 1\n ** module chunks = 1\n **/","module.exports = THREE;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"THREE\"\n ** module id = 2\n ** module chunks = 1\n **/","module.exports = TweenTime.Core;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"TweenTime.Core\"\n ** module id = 3\n ** module chunks = 1\n **/","#https://github.com/geluso/delight/commit/2575886522227c34c0d3d77f795f5d00acce284b\ndefine (require) ->\n  _ = require 'lodash'\n\n  class Audio\n    @instance = false\n\n    constructor: (mp3Url, @onLoadedCallback) ->\n      window.audio = this\n      muted = true\n      @fftSize = 512\n      @filters = {}\n      @playing = false\n      @now = 0.0\n      @timeDelay = 0.0\n\n      @bass = 0\n      @mid = 0\n      @high = 0\n\n      @context = false\n      if typeof AudioContext != \"undefined\"\n        @context = new AudioContext()\n      else if typeof webkitAudioContext != \"undefined\"\n        @context = new webkitAudioContext()\n\n      # create analyser\n      @analyser = @context.createAnalyser()\n      @analyser.fftSize = @fftSize\n\n      @source = @context.createBufferSource()\n\n      # create bass/mid/treble filters\n      parameters =\n        bass:\n          type: 0 #lowpass\n          frequency: 120\n          Q: 1.2\n          gain: 2.0\n        mid:\n          type: 2 #bandpass\n          frequency: 400\n          Q: 1.2\n          gain: 4.0\n        treble:\n          type: 1 #highpass\n          frequency: 2000\n          Q: 1.2\n          gain: 3.0\n      _.each parameters, (spec, key) =>\n        filter = @context.createBiquadFilter()\n        filter.key = key\n        filter.type = spec.type\n        filter.frequency = spec.frequency\n        filter.Q.value = spec.Q\n\n        # create analyser for filtered signal\n        filter.analyser = @context.createAnalyser()\n        filter.analyser.fftSize = @fftSize\n\n        # create delay to compensate fftSize lag\n        if @context.createDelay?\n          filter.delayNode = @context.createDelay()\n        else\n          filter.delayNode = @context.createDelayNode()\n        filter.delayNode.delayTime.value = 0\n\n        # create gain node to offset filter loss\n        if @context.createGain?\n          filter.gainNode = @context.createGain()\n        else\n          filter.gainNode = @context.createGainNode()\n        filter.gainNode.gain.value = spec.gain\n\n        @filters[key] = filter\n\n      # create delay to compensate fftSize lag\n      if @context.createDelay?\n        @delay = @context.createDelay()\n      else\n        @delay = @context.createDelayNode()\n      @delay.delayTime.value = @fftSize * 2 / @context.sampleRate\n\n      # connect audio processing pipe\n      @source.connect(@analyser)\n      @analyser.connect(@delay)\n\n\n      if muted\n        gain2 = @context.createGain()\n        @delay.connect(gain2)\n        gain2.gain.value = 0.00\n        gain2.connect(@context.destination)\n      else\n        @delay.connect(@context.destination)\n\n      # connect secondary filters + analysers + gain\n      _.each @filters, (filter) =>\n        @source.connect(filter.delayNode)\n        filter.delayNode.connect(filter)\n        filter.connect(filter.gainNode)\n        filter.gainNode.connect(filter.analyser)\n\n      # create buffers for time/freq data\n      @samples = @analyser.frequencyBinCount\n      @data =\n        freq: new Uint8Array(@samples)\n        time: new Uint8Array(@samples)\n        filter:\n          bass: new Uint8Array(256)\n          mid: new Uint8Array(256)\n          treble: new Uint8Array(256)\n\n      @load(mp3Url)\n\n      # i know, ....\n      Audio.instance = this\n\n    update: () =>\n      if @playing == false then return\n      @analyser.smoothingTimeConstant = 0\n      @analyser.getByteFrequencyData(@data.freq)\n      @analyser.getByteTimeDomainData(@data.time)\n\n      _.each @filters, (filter) =>\n        filter.analyser.getByteTimeDomainData(@data.filter[filter.key])\n\n      # calculate rms\n      bins = [0, 0, 0, 0]\n      waveforms = [@data.time, @data.filter.bass, @data.filter.mid, @data.filter.treble]\n      for num in [0..3]\n        bins[num] = @rms(waveforms[num])\n      @bass = bins[1]\n      @mid = bins[2]\n      @high = bins[3]\n      #if Math.random() < 0.04\n      #  console.log(@bass, @mid, @high)\n\n      @now = @context.currentTime - @timeDelay\n\n    seek: (seconds) =>\n      @now = seconds\n      #@context.currentTime = @now\n\n      if @source.buffer\n        #@source.noteOn(0)\n        if @playing\n          @pause()\n          @play()\n          #@source.stop(0)\n          #@source.start(0, @now, @buffer.duration - @now)\n\n\n    load: (url) =>\n      request = new XMLHttpRequest()\n      request.open(\"GET\", url, true)\n      request.responseType = \"arraybuffer\"\n\n      request.onload = () =>\n        #@buffer = @context.createBuffer(request.response, false)\n        @context.decodeAudioData request.response, (buff) =>\n          @buffer = buff\n          @source.buffer = @buffer\n          @source.loop = false\n          if @onLoadedCallback then @onLoadedCallback()\n          #@play()\n\n      request.send()\n\n    createSound: () =>\n      src = @context.createBufferSource()\n      if @buffer\n        src.buffer = @buffer\n      src.connect(@analyser)\n      _.each @filters, (filter) =>\n        src.connect(filter.delayNode)\n      return src\n\n    pause: () =>\n      if @source\n        if @playing\n          @source.stop(0)\n        @source.disconnect(0)\n        @source = false\n      @playing = false\n\n    play: () =>\n      @playing = true\n      @timeDelay = @context.currentTime - @now\n      #console.log @now\n      if !@source\n        @source = @createSound()\n      if @source.buffer\n        #@source.noteOn(0)\n        @source.start(0, @now, @buffer.duration - @now)\n\n\n    rms: (data) =>\n      size = data.length\n      accum = 0\n      for num in [0..size - 1]\n        s = (data[num] - 128) / 128\n        accum += s * s\n      return Math.sqrt(accum / size)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/Audio.coffee\n **/","define (require) ->\n  THREE = require 'Three'\n  Audio = require 'app/components/Audio'\n\n  ShaderVertex = require 'app/shaders/Basic.vert'\n  LineFragement = require 'app/shaders/Line.frag'\n\n  class Shaders\n    constructor: () ->\n      window.shaders = this\n      @shaders = []\n\n      # A non dynamic shader, can be used for all geometries\n      @simpleMaterial = new THREE.MeshBasicMaterial({color: 0xdddddd, shading: THREE.FlatShading, side: THREE.DoubleSide})\n\n      for i in [0...50]\n\n        @shaders.push(@createMaterialLine(0xdddddd))\n      console.log @shaders\n\n    update: () ->\n\n      for shader in @shaders\n        #shader.uniforms.percent.value = (shader.uniforms.percent.value + 0.01) % 2\n\n        shader.uniforms.percent.value = Math.max(0, shader.uniforms.percent.value - shader.speed * 0.03)\n        if window.audio.mid > 0.8 && Math.random() < 0.02\n          shader.uniforms.percent.value = 2\n      #console.log @lineMaterial1.uniforms.percent.value\n\n    getMaterialLine: (animated) ->\n      if animated == false\n        return @simpleMaterial\n      return @shaders[Math.floor(Math.random() * @shaders.length)]\n\n    createMaterialLine: (color) ->\n      uniforms = {\n        percent: {\n          type: 'f',\n          value: 1.0\n        },\n        color: {\n          type: 'c',\n          value: new THREE.Color(color)\n        },\n        fogColor: {type: \"c\", value: new THREE.Color(0x111111)},\n        fogDensity: {type: \"f\", 0.2045}\n      }\n      material = new THREE.ShaderMaterial({\n        vertexShader: ShaderVertex,\n        fragmentShader: LineFragement,\n        side: THREE.DoubleSide,\n        shading: THREE.FlatShading,\n        uniforms: uniforms,\n        transparent: true,\n        depthWrite: false,\n        depthTest: false,\n        fog: true\n        })\n\n      material.speed = Math.random() + 0.5 # custom property for per shader transition speed\n      material.blending = THREE.AdditiveBlending\n      return material\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/Shaders.coffee\n **/","define (require) ->\n  THREE = require 'Three'\n\n  class Background\n    constructor: (@scene) ->\n      texture = THREE.ImageUtils.loadTexture('src/images/background.jpg')\n      texture.wrapS = texture.wrapT = THREE.RepeatWrapping\n      texture.repeat.set( 2, 2 )\n      bgMat = new THREE.MeshBasicMaterial({map: texture})\n      bg = new THREE.Mesh(new THREE.PlaneGeometry(1600, 1600, 4, 4), bgMat)\n      bg.material.depthTest = false\n      bg.material.depthWrite = false\n      bg.position.set(0, 0, -10)\n      @scene.add(bg)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/Background.coffee\n **/","define (require) ->\n  THREE = require 'Three'\n\n  require 'vendors/three.js-extras/postprocessing/EffectComposer'\n  require 'vendors/three.js-extras/postprocessing/MaskPass'\n  require 'vendors/three.js-extras/postprocessing/BloomPass'\n  require 'vendors/three.js-extras/postprocessing/ShaderPass'\n  require 'vendors/three.js-extras/postprocessing/RenderPass'\n  require 'vendors/three.js-extras/postprocessing/FilmPass'\n  require 'app/postprocessing/GlitchPass2'\n\n  require 'vendors/three.js-extras/shaders/CopyShader'\n  require 'vendors/three.js-extras/shaders/FXAAShader'\n  require 'vendors/three.js-extras/shaders/FilmShader'\n  require 'vendors/three.js-extras/shaders/ConvolutionShader'\n  require 'vendors/three.js-extras/shaders/VignetteShader'\n  require 'app/shaders/DigitalGlitch2'\n\n  class PostFX\n    constructor: (@scene, @camera, @renderer, size) ->\n      @renderer.autoClear = false\n\n      renderModel = new THREE.RenderPass( @scene, @camera )\n      # There will only be 1 rendermodel and we need to be able\n      # to swith camera from the orchestrator.\n      window.renderModel = renderModel\n\n      dpr = if window.devicePixelRatio? then window.devicePixelRatio else 1\n\n      @renderTargetParameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBufer: false }\n      @renderTarget = new THREE.WebGLRenderTarget(size.width * dpr, size.height * dpr, @renderTargetParameters)\n\n      @effectFXAA = new THREE.ShaderPass( THREE.FXAAShader )\n      @effectFXAA.uniforms[ 'resolution' ].value.set(1 / (size.width * dpr), 1 / (size.height * dpr))\n\n      @bloom = new THREE.BloomPass(0.6, 25, 4)\n\n      @glitchPass = new THREE.GlitchPass2()\n      @glitchPass.intensity = 0.3;\n      @glitchPass.uniforms.tScratch.value = THREE.ImageUtils.loadTexture( \"src/images/lensflare_dirt.jpg\" )\n\n      @vignettePass = new THREE.ShaderPass(THREE.VignetteShader)\n      @vignettePass.uniforms['darkness'].value = 2\n\n      @filmShader = new THREE.FilmPass( 0.34, 0.01, 648, false )\n      @filmShader.renderToScreen = true\n\n      @composer = new THREE.EffectComposer( @renderer, @renderTarget )\n      @composer.setSize(size.width * dpr, size.height * dpr)\n      @composer.addPass( renderModel )\n      @composer.addPass( @effectFXAA )\n      @composer.addPass( @bloom )\n      #@composer.addPass( @glitchPass )\n      @composer.addPass( @vignettePass )\n      @composer.addPass( @filmShader )\n\n    resize: (SCREEN_WIDTH, SCREEN_HEIGHT) ->\n      dpr = if window.devicePixelRatio? then window.devicePixelRatio else 1\n      #@composer.setSize(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr)\n      @renderTarget = new THREE.WebGLRenderTarget(SCREEN_WIDTH * dpr, SCREEN_HEIGHT * dpr, @renderTargetParameters)\n      @composer.reset(@renderTarget)\n      @effectFXAA.uniforms[ 'resolution' ].value.set(1 / (SCREEN_WIDTH * dpr), 1 / (SCREEN_HEIGHT * dpr))\n\n    render: (delta) ->\n      @renderer.clear()\n      @composer.render(delta)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/PostFX.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  Signals = require 'js-signals'\n\n  class SceneManager\n    constructor: (@tweenTime, @data, @scene, @defaultCamera, @factory) ->\n      @timer = @tweenTime.timer\n      @timer.updated.add(@update)\n      @update(0)\n\n    update: (timestamp) =>\n      activeCamera = @defaultCamera\n      seconds = timestamp / 1000\n\n      for item in @data\n        should_exist = if seconds >= item.start && seconds <= item.end then true else false\n\n        # Remove the item\n        if (item.object && should_exist == false) || item.isDirtyObject\n          item.isDirtyObject = false\n          if item.object\n            @scene.remove(item.object.container)\n            item.object.destroy()\n            delete item.object\n\n        # Assign the object class to be able to access all object properties in propertiesEditor\n        if !item.classObject then item.classObject = @factory.getTypeClass(item.type)\n\n        # If object doesn't exist skip the update.\n        if should_exist == false then continue\n\n        # Create the item\n        if should_exist && !item.object\n          type = item.type\n          el = @factory.create(type, item.values, seconds - item.start)\n          @scene.add(el.container)\n          # Save reference to the custom object class in data\n          item.object = el\n          # And a reference to the data from the 3d container\n          el.container._data = item\n\n        # If this is a camera set it as the active camera.\n        if item.object && item.object.isCamera\n          activeCamera = item.object.container\n          window.updateCameraAspect(activeCamera)\n\n        # Update the item\n        if item.object then item.object.update(seconds - item.start, item.values)\n\n      # Set correct camera\n      window.activeCamera = activeCamera\n      if window.renderModel\n        window.renderModel.camera = activeCamera\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/SceneManager.coffee\n **/","define (require) ->\n  Camera = require 'app/elements/Camera'\n  Circles = require 'app/elements/Circles'\n  Boxes = require 'app/elements/Boxes'\n  Lines = require 'app/elements/Lines'\n\n  SingleObject = require 'app/elements/SingleObject'\n  Circle = require 'app/elements/Circle'\n  OrganizedChaos = require 'app/elements/OrganizedChaos'\n\n  extend = (object, properties) ->\n    for key, val of properties\n      if typeof(object[key]) == 'object' && object[key] != null\n        object[key] = extend({}, val)\n      else\n        object[key] = val\n    object\n\n  class ElementFactory\n    @elements:\n      Chaos:\n        classObject: OrganizedChaos\n      Circles:\n        classObject: Circles\n      Boxes:\n        classObject: Boxes\n      Lines:\n        classObject: Lines\n      Camera:\n        classObject: Camera\n      Box:\n        classObject: SingleObject\n      Circle:\n        classObject: Circle\n\n    getTypeClass: (itemType) =>\n      ElementFactory.elements[itemType].classObject\n\n    @getTypeProperties: (itemName) =>\n      item = ElementFactory.elements[itemName]\n      if item\n        element_class = item.classObject\n        if element_class\n          properties = []\n          for key, prop_definition of item.classObject.properties\n            prop = extend({}, prop_definition)\n            prop.keys = []\n            properties.push(prop)\n          console.log properties\n          return properties\n      return\n\n    create: (itemName, values, time) ->\n      item = ElementFactory.elements[itemName]\n      if !item\n        console.warn(\"Can't create item: \" + itemName)\n        return false\n\n      return new item.classObject(values)\n\n  window.ElementFactory = ElementFactory\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/ElementFactory.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  ElementFactory = require 'app/components/ElementFactory'\n\n  class DataNormalizer\n    @normalizeItem = (data_item, factory) ->\n      if !data_item.classObject\n        data_item.classObject = factory.getTypeClass(data_item.type)\n      static_properties = data_item.classObject.properties\n      console.log static_properties\n      if !static_properties then return\n      for key, static_prop of static_properties\n        existing_prop = _.find(data_item.properties, (prop) -> prop.name == static_prop.name)\n        # Create the property with default values if it doesn't exist in given data.\n        if !existing_prop\n          new_prop = {}\n          # clone static prop in new_prop\n          for key2, value2 of static_prop\n            new_prop[key2] = value2\n\n          new_prop.keys = []\n          data_item.properties.push(new_prop)\n        # Add the group information.\n        if existing_prop && !existing_prop.group && static_prop.group\n          existing_prop.group = static_prop.group\n      return data_item\n\n    @normalizeData = (data, factory) ->\n      data = _.map(data, (item) ->\n        DataNormalizer.normalizeItem(item, factory)\n      )\n      return data\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/DataNormalizer.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  Audio = require 'app/components/Audio'\n  Colors = require 'app/components/Colors'\n\n  class Particles\n    @circleGeom = new THREE.CircleGeometry( 10, 30, 0, Math.PI * 2 )\n    @ringGeom = new THREE.RingGeometry( 10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2 )\n\n    @properties:\n      numItems: {name: 'numItems', label: 'num items', val: 5, triggerRebuild: true}\n\n    constructor: (@values = {}, time = 0, index = 0) ->\n      # Set the default value of instance properties.\n      for key, prop of Particles.properties\n        if !@values[key]?\n          @values[key] = prop.val\n\n      @container = new THREE.Object3D()\n      if index == 0\n        @container.position.set(0, 0, 100)\n      @items = []\n\n      @speed = Math.random() * 2 - 1\n      @scale = Math.random() * 2 + 0.1\n\n      material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0xffffff, shininess: 10, shading: THREE.FlatShading })\n      material.blending = THREE.AdditiveBlending\n\n      geom = Particles.circleGeom\n      if Math.random() < 0.7\n        geom = Particles.ringGeom\n\n      @el = new THREE.Mesh(geom , material )\n      #@el.position.x = index * (Math.random() * 20 + 20)\n      if index > 0\n        @el.position.x = Math.random() * 60 + 10\n        @el.position.y = Math.random() * 60 + 10\n        @el.position.z = Math.random() * 60 + 10\n\n      #@el.rotation.x = Math.random() * 0.4 - 0.2\n\n      @el.scale.set(@scale, @scale, @scale)\n      @container.add(@el)\n\n      if index < 5\n        for i in [0..@values.numItems - 1]\n          num_childs = 1\n          if Math.random() > 0.7\n            num_childs = parseInt(Math.random * 3, 10) + 1\n          item = new Particles({numItems: num_childs}, 0, index + 1)\n\n          @el.add( item.container )\n          @items.push(item)\n\n\n    update: (seconds, values = false, force = false) ->\n      #@container.rotation.z += @speed / 100\n\n      volume = Audio.instance.mid\n      current = @el.scale.x\n      if volume > 0.2 && Math.random() < 0.1\n        current += volume * 10\n\n      current = current + (@scale - current) * 0.992\n      @el.scale.set(current, current, current)\n\n\n      for item in @items\n        item.update()\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Particles.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'exports?RNG!rng'\n  ElementBase = require 'app/elements/ElementBase'\n\n  Audio = require 'app/components/Audio'\n  Colors = require 'app/components/Colors'\n\n  CircleGeometry2 = require 'app/geometries/CircleGeometry2'\n  ShaderVertex = require 'app/shaders/BasicNoise.vert'\n  ShaderFragement = require 'app/shaders/BasicNoise.frag'\n\n\n\n\n  class OrganizedChaos extends ElementBase\n    @lineGeom = new THREE.PlaneGeometry( 100, 1)\n    @circleGeom = new THREE.CircleGeometry( 10, 30, 0, Math.PI * 2 )\n    @ringGeom = new THREE.RingGeometry( 10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2 )\n    @ringGeom2 = new CircleGeometry2( 10, 30, 0, Math.PI * 2 )\n\n    @TYPE_LINE = 0\n    @TYPE_SQUARE = 1\n    @TYPE_CIRCLE = 2\n\n    @properties:\n      numItems: {name: 'numItems', label: 'num items', val: 10, triggerRebuild: true, group: \"global\"}\n      seed: {name: 'seed', label: 'seed', val: 10042, triggerRebuild: true, group: \"global\"}\n      depth: {name: 'depth', label: 'depth', val: 20, triggerRebuild: true, group: \"global\"}\n      spread: {name: 'spread', label: 'spread', val: 300, triggerRebuild: true, group: \"global\"}\n      spreadY: {name: 'spreadY', label: 'spreadY', val: 300, triggerRebuild: true, group: \"global\"}\n      maxChilds: {name: 'maxChilds', label: 'maxChilds', val: 8, triggerRebuild: true, group: \"global\"}\n      x: {name: 'x', label: 'x', val: 0, group: \"position\"}\n      y: {name: 'y', label: 'y', val: 0, group: \"position\"}\n      z: {name: 'z', label: 'z', val: 0, group: \"position\"}\n      rotationX: {name: 'rotationX', label: 'x', val: 0, min: 0, max: 2, group: \"rotation\", triggerRebuild: true}\n      rotationY: {name: 'rotationY', label: 'y', val: 0, min: 0, max: 2, group: \"rotation\", triggerRebuild: true}\n      rotationZ: {name: 'rotationZ', label: 'z', val: 0, min: 0, max: 2, group: \"rotation\", triggerRebuild: true}\n      rotationRandX: {name: 'rotationRandX', label: 'rand x', val: 0, min: 0, max: 1, group: \"rotation\", triggerRebuild: true}\n      rotationRandY: {name: 'rotationRandY', label: 'rand y', val: 0, min: 0, max: 1, group: \"rotation\", triggerRebuild: true}\n      rotationRandZ: {name: 'rotationRandZ', label: 'rand z', val: 1, min: 0, max: 1, group: \"rotation\", triggerRebuild: true}\n      circles: {name: 'circles', label: 'circles', val: 0, triggerRebuild: true, group: \"geometry\"}\n      squares: {name: 'squares', label: 'squares', val: 0, triggerRebuild: true, group: \"geometry\"}\n      lineWidth: {name: 'lineWidth', label: 'line width', val: 1, triggerRebuild: true, group: \"line\"}\n      lineWidthRand: {name: 'lineWidthRand', label: 'line width randomness', val: 0, triggerRebuild: true, group: \"line\"}\n      materialColors: {name: 'materialColors', label: 'percent colors', val: 0, triggerRebuild: true, group: \"material\"}\n      materialAnimated: {name: 'materialAnimated', label: 'percent animated', val: 0, triggerRebuild: true, group: \"material\"}\n\n    getDefaultProperties: () -> OrganizedChaos.properties\n\n    constructor: (@values = {}, time = 0) ->\n      # Set the default value of instance properties.\n      for key, prop of OrganizedChaos.properties\n        if !@values[key]?\n          @values[key] = prop.val\n\n      # Set values cache\n      super\n\n      @container = new THREE.Object3D()\n      @container.position.set(0, 0, 0)\n      @items = []\n      @build()\n\n    rebuild: (time) ->\n      @empty()\n      @build(time)\n\n    empty: () ->\n      if !@items || !@items.length then return\n\n      for item in @items\n        @container.remove(item)\n        #item.destroy()\n      @items = []\n\n    getItemType: (rng) ->\n      itemType = rng.random(0, 1000) / 1000\n\n      if itemType < @values.circles\n        return OrganizedChaos.TYPE_CIRCLE\n\n      if itemType < @values.circles + @values.squares\n        return OrganizedChaos.TYPE_SQUARE\n\n      return OrganizedChaos.TYPE_LINE\n\n    build: (time = 0) ->\n      rngX = new RNG(@values.seed + \"x\")\n      rngY = new RNG(@values.seed + \"y\")\n      rngRotationX = new RNG(@values.seed + \"rotationX\")\n      rngRotationY = new RNG(@values.seed + \"rotationY\")\n      rngRotationZ = new RNG(@values.seed + \"rotationZ\")\n      rngScale = new RNG(@values.seed + \"scale\")\n      rngScaleLine = new RNG(@values.seed + \"scaleLine\")\n      rngChilds = new RNG(@values.seed + \"childs\")\n      rngSpacing = new RNG(@values.seed + \"spacing\")\n      rngType = new RNG(@values.seed + \"type\")\n      rngShaderAnim = new RNG(@values.seed + \"shaderAnim\")\n\n      #material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0xffffff, shininess: 10, shading: THREE.FlatShading, side: THREE.DoubleSide })\n      #material = new THREE.MeshBasicMaterial({color: 0xdddddd, shading: THREE.FlatShading, side: THREE.DoubleSide})\n      #material.blending = THREE.AdditiveBlending\n\n      geom = OrganizedChaos.circleGeom\n\n      spread = @values.spread\n      spread_half = spread / 2\n\n      spreadY = @values.spreadY\n      spreadY_half = spreadY / 2\n\n      #material = @getMaterial(0xffffff)\n\n      for i in [0...@values.numItems]\n        animated = false\n        if rngShaderAnim.random(100) / 100 < @values.materialAnimated\n          animated = true\n        material = window.shaders.getMaterialLine(animated)\n        num_childs = 1\n        scale = rngScale.random(0, 100) / 100 + 0.2\n\n        posX = rngX.random(spread * 100) * 0.01 - spread_half\n        posY = rngY.random(spreadY * 100) * 0.01 - spreadY_half\n        position = new THREE.Vector3(posX, posY, i * -@values.depth)\n        rotationX = (rngRotationX.random(0, 1000) / 1000 * Math.PI) * @values.rotationRandX + @values.rotationX * Math.PI\n        rotationY = (rngRotationY.random(0, 1000) / 1000 * Math.PI) * @values.rotationRandY + @values.rotationY * Math.PI\n        rotationZ = (rngRotationZ.random(0, 1000) / 1000 * Math.PI) * @values.rotationRandZ + @values.rotationZ * Math.PI\n        rotation = new THREE.Vector3(rotationX, rotationY, rotationZ)\n        scale = new THREE.Vector3(scale, scale, scale)\n\n        #if rngRotationZ.random(0, 1000) * 0.01 > 0.7\n        #  scale *= 0.3\n\n        num_childs = parseInt(rngChilds.random(0, @values.maxChilds), 10)\n        #num_childs = 6\n\n        #material = @getMaterial(0xffffff)\n        #geom = OrganizedChaos.circleGeom\n        #geom = OrganizedChaos.ringGeom2\n\n\n        itemType = @getItemType(rngType)\n\n\n        #if Math.random() < 0.7\n        #  geom = OrganizedChaos.lineGeom\n        geom = OrganizedChaos.lineGeom\n\n        if itemType == OrganizedChaos.TYPE_LINE\n          scale.y = (scale.y * @values.lineWidth) * (rngScaleLine.random(1, 100) / 100) * (@values.lineWidthRand + 1)\n\n        if itemType == OrganizedChaos.TYPE_CIRCLE\n          geom = OrganizedChaos.ringGeom\n\n\n\n        @addItem(geom, material, i, scale, position, rotation)\n\n        if num_childs > 1\n          spacing = 30 + rngSpacing.random(0, 100) * 0.4\n          offset = position.clone().normalize().multiplyScalar(spacing)\n          offset.z = 0\n\n\n          for ii in [0..num_childs - 1]\n            pos2 = position.clone().add(offset.multiplyScalar(ii + 1))\n            @addItem(geom, material, i, scale, pos2, rotation)\n\n    addItem: (geom, material, i, scale, position, rotation) ->\n      #position.y = position.y * 0.1\n\n      quaternion = new THREE.Quaternion()\n      quaternion.setFromAxisAngle(new THREE.Vector3(rotation.x, rotation.y, rotation.z), Math.PI / 2)\n      item = new THREE.Mesh(geom , material)\n      #item.useQuaternion = true\n      item.position.x = position.x\n      item.position.y = position.y\n      item.position.z = position.z\n      item.rotation.setFromQuaternion(quaternion)\n      #item.rotation.set(rotation.x, rotation.y, rotation.z)\n      item.scale.copy(scale)\n      item.updateMatrix()\n      @container.add(item)\n      @items.push(item)\n\n      # mirroring\n      item2Container = new THREE.Object3D()\n\n      @container.add(item2Container)\n      item2 = new THREE.Mesh(geom , material)\n      #item2.useQuaternion = true\n      item2.position.x = position.x\n      item2.position.y = position.y\n      item2.position.z = position.z\n      # mirror rotation\n      item2.rotation.setFromQuaternion(quaternion)\n      #item2.rotation.setFromQuaternion(new THREE.Quaternion(-quaternion.x, quaternion.y, quaternion.z, -quaternion.w))\n      #item2.rotation = new THREE.Quaternion(quaternion.x, -quaternion.y, -quaternion.z, quaternion.w)\n      #item2.rotation.set(rotation.x, rotation.y * -1, rotation.z * -1)\n      #item2.rotation.set(rotation.x, rotation.y, rotation.z * -1)\n      item2.scale.copy(scale)\n      item2.updateMatrix()\n      #@container.add(item2)\n      item2Container.add(item2)\n      item2Container.scale.x = -1\n      #@items.push(item2)\n      @items.push(item2Container)\n\n    getMaterial: (color) ->\n      uniforms = {\n        time: {\n          type: 'f',\n          value: 0.0\n        },\n        seed: {\n          type: 'f',\n          value: Math.random() * 1000\n        },\n        strength: {\n          type: 'f',\n          value: 0.2\n        },\n        color: {\n          type: 'c',\n          value: new THREE.Color(color)\n        },\n        fogColor:    { type: \"c\", value: new THREE.Color(0x111111) },\n        fogDensity:      { type: \"f\", 0.2045}\n      }\n      material = new THREE.ShaderMaterial({\n        vertexShader: ShaderVertex,\n        fragmentShader: ShaderFragement,\n        side: THREE.DoubleSide,\n        uniforms: uniforms,\n        transparent: true,\n        depthWrite: false,\n        depthTest: false,\n        fog: true\n        })\n\n      #material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0x009900, shininess: 30, shading: THREE.FlatShading })\n      material.blending = THREE.AdditiveBlending\n      return material\n\n    update: (seconds, values = false, force = false) ->\n      if values == false then values = @values\n      needs_rebuild = false\n\n      # Check if any of the invaldating property changed.\n      for key, prop of OrganizedChaos.properties\n        if prop.triggerRebuild && @valueChanged(key, values)\n          needs_rebuild = true\n\n      volume = Audio.instance.mid\n\n      if force || @valueChanged(\"x\", values) || @valueChanged(\"y\", values) || @valueChanged(\"z\", values)\n        @container.position.set(values.x, values.y, values.z)\n      #current = @el.scale.x\n      #if volume > 0.2 && Math.random() < 0.1\n      #  current += volume * 10\n\n      #current = current + (@scale - current) * 0.992\n      #@el.scale.set(current, current, current)\n\n\n      #for item in @items\n      #  item.update()\n      # save the new values\n      @values = _.merge(@values, values)\n\n      if needs_rebuild == true\n        @rebuild(seconds)\n      return\n\n    destroy: () ->\n      for child in @container.children\n        @container.remove(child)\n\n      @container = null\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/OrganizedChaos.coffee\n **/","module.exports = \"{\\n  \\\"settings\\\": {\\n    \\\"time\\\": 21875,\\n    \\\"duration\\\": 240,\\n    \\\"domain\\\": [\\n      0,\\n      78843\\n    ]\\n  },\\n  \\\"data\\\": [\\n    {\\n      \\\"id\\\": \\\"camera1\\\",\\n      \\\"type\\\": \\\"Camera\\\",\\n      \\\"label\\\": \\\"Camera 1\\\",\\n      \\\"start\\\": 0,\\n      \\\"end\\\": 240,\\n      \\\"collapsed\\\": true,\\n      \\\"properties\\\": [\\n        {\\n          \\\"keys\\\": [\\n            {\\n              \\\"time\\\": 0,\\n              \\\"val\\\": 200,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            },\\n            {\\n              \\\"time\\\": 240,\\n              \\\"val\\\": -3850,\\n              \\\"ease\\\": \\\"Quad.easeOut\\\"\\n            }\\n          ],\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"val\\\": 600\\n        },\\n        {\\n          \\\"keys\\\": [],\\n          \\\"name\\\": \\\"target_y\\\",\\n          \\\"val\\\": 0\\n        },\\n        {\\n          \\\"name\\\": \\\"fov\\\",\\n          \\\"label\\\": \\\"fov\\\",\\n          \\\"val\\\": 45,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"target_x\\\",\\n          \\\"label\\\": \\\"target x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"target_z\\\",\\n          \\\"label\\\": \\\"target z\\\",\\n          \\\"val\\\": -10000,\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -504.6356201171877,\\n        \\\"target_x\\\": 0,\\n        \\\"target_y\\\": 0,\\n        \\\"target_z\\\": -10000,\\n        \\\"fov\\\": 45\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item2\\\",\\n      \\\"label\\\": \\\"Chaos 2\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 3.086,\\n      \\\"end\\\": 41.33200000000003,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 18.8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 85,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 17.6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 182.7,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -418,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.318,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialColors\\\",\\n          \\\"label\\\": \\\"percent colors\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 18.8,\\n        \\\"seed\\\": 85,\\n        \\\"depth\\\": 17.6,\\n        \\\"spread\\\": 182.7,\\n        \\\"maxChilds\\\": 2,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -418,\\n        \\\"spreadY\\\": 0,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.318,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialColors\\\": 0,\\n        \\\"materialAnimated\\\": 0.1,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item3\\\",\\n      \\\"label\\\": \\\"Chaos 3\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": -0.035,\\n      \\\"end\\\": 37.43900000000004,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 26042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 22,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 20,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -80,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.318,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialColors\\\",\\n          \\\"label\\\": \\\"percent colors\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 2.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 1,\\n        \\\"seed\\\": 26042,\\n        \\\"depth\\\": 22,\\n        \\\"spread\\\": 20,\\n        \\\"maxChilds\\\": 1,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -80,\\n        \\\"spreadY\\\": 0,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.318,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0,\\n        \\\"circles\\\": 0,\\n        \\\"materialColors\\\": 0,\\n        \\\"materialAnimated\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 2.3,\\n        \\\"lineWidthRand\\\": 0\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item4\\\",\\n      \\\"label\\\": \\\"Chaos 4\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 12.727,\\n      \\\"end\\\": 39.6,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 29,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 66042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 12,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 450,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"global\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -640,\\n          \\\"keys\\\": [],\\n          \\\"group\\\": \\\"position\\\"\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0.3,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.05,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialColors\\\",\\n          \\\"label\\\": \\\"percent colors\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.62,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 4.3,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 29,\\n        \\\"seed\\\": 66042,\\n        \\\"depth\\\": 12,\\n        \\\"spread\\\": 450,\\n        \\\"maxChilds\\\": 3,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -640,\\n        \\\"spreadY\\\": 0,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0.3,\\n        \\\"rotationRandX\\\": 0,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0.05,\\n        \\\"circles\\\": 0,\\n        \\\"materialColors\\\": 0,\\n        \\\"materialAnimated\\\": 0.1,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.62,\\n        \\\"lineWidthRand\\\": 4.3\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item5\\\",\\n      \\\"label\\\": \\\"Chaos 5\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 23.284,\\n      \\\"end\\\": 52.301,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 21,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 34042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 140,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 8,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1054,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.7,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 0.56,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 1,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialColors\\\",\\n          \\\"label\\\": \\\"percent colors\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 21,\\n        \\\"seed\\\": 34042,\\n        \\\"depth\\\": 8,\\n        \\\"spread\\\": 300,\\n        \\\"spreadY\\\": 140,\\n        \\\"maxChilds\\\": 8,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -1054,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0,\\n        \\\"rotationZ\\\": 0,\\n        \\\"rotationRandX\\\": 0.7,\\n        \\\"rotationRandY\\\": 0,\\n        \\\"rotationRandZ\\\": 0.56,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 1,\\n        \\\"lineWidthRand\\\": 0,\\n        \\\"materialColors\\\": 0,\\n        \\\"materialAnimated\\\": 0.5\\n      },\\n      \\\"isDirtyObject\\\": false\\n    },\\n    {\\n      \\\"isDirty\\\": true,\\n      \\\"id\\\": \\\"item6\\\",\\n      \\\"label\\\": \\\"Chaos 6\\\",\\n      \\\"type\\\": \\\"Chaos\\\",\\n      \\\"start\\\": 35.08,\\n      \\\"end\\\": 62.643,\\n      \\\"collapsed\\\": false,\\n      \\\"properties\\\": [\\n        {\\n          \\\"name\\\": \\\"numItems\\\",\\n          \\\"label\\\": \\\"num items\\\",\\n          \\\"val\\\": 40,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"seed\\\",\\n          \\\"label\\\": \\\"seed\\\",\\n          \\\"val\\\": 7042,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"depth\\\",\\n          \\\"label\\\": \\\"depth\\\",\\n          \\\"val\\\": 6.6,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spread\\\",\\n          \\\"label\\\": \\\"spread\\\",\\n          \\\"val\\\": 270,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"spreadY\\\",\\n          \\\"label\\\": \\\"spreadY\\\",\\n          \\\"val\\\": 300,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"maxChilds\\\",\\n          \\\"label\\\": \\\"maxChilds\\\",\\n          \\\"val\\\": 15,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"global\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"x\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"y\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"z\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": -1220,\\n          \\\"group\\\": \\\"position\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationX\\\",\\n          \\\"label\\\": \\\"x\\\",\\n          \\\"val\\\": 0,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationY\\\",\\n          \\\"label\\\": \\\"y\\\",\\n          \\\"val\\\": 0.1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationZ\\\",\\n          \\\"label\\\": \\\"z\\\",\\n          \\\"val\\\": 1.1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 2,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandX\\\",\\n          \\\"label\\\": \\\"rand x\\\",\\n          \\\"val\\\": 0.7,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandY\\\",\\n          \\\"label\\\": \\\"rand y\\\",\\n          \\\"val\\\": 0.2,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"rotationRandZ\\\",\\n          \\\"label\\\": \\\"rand z\\\",\\n          \\\"val\\\": 1,\\n          \\\"min\\\": 0,\\n          \\\"max\\\": 1,\\n          \\\"group\\\": \\\"rotation\\\",\\n          \\\"triggerRebuild\\\": true,\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"circles\\\",\\n          \\\"label\\\": \\\"circles\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"squares\\\",\\n          \\\"label\\\": \\\"squares\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"geometry\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidth\\\",\\n          \\\"label\\\": \\\"line width\\\",\\n          \\\"val\\\": 0.9,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"lineWidthRand\\\",\\n          \\\"label\\\": \\\"line width randomness\\\",\\n          \\\"val\\\": 2,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"line\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialColors\\\",\\n          \\\"label\\\": \\\"percent colors\\\",\\n          \\\"val\\\": 0,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        },\\n        {\\n          \\\"name\\\": \\\"materialAnimated\\\",\\n          \\\"label\\\": \\\"percent animated\\\",\\n          \\\"val\\\": 0.5,\\n          \\\"triggerRebuild\\\": true,\\n          \\\"group\\\": \\\"material\\\",\\n          \\\"keys\\\": []\\n        }\\n      ],\\n      \\\"values\\\": {\\n        \\\"numItems\\\": 40,\\n        \\\"seed\\\": 7042,\\n        \\\"depth\\\": 6.6,\\n        \\\"spread\\\": 270,\\n        \\\"spreadY\\\": 300,\\n        \\\"maxChilds\\\": 15,\\n        \\\"x\\\": 0,\\n        \\\"y\\\": 0,\\n        \\\"z\\\": -1220,\\n        \\\"rotationX\\\": 0,\\n        \\\"rotationY\\\": 0.1,\\n        \\\"rotationZ\\\": 1.1,\\n        \\\"rotationRandX\\\": 0.7,\\n        \\\"rotationRandY\\\": 0.2,\\n        \\\"rotationRandZ\\\": 1,\\n        \\\"circles\\\": 0,\\n        \\\"squares\\\": 0,\\n        \\\"lineWidth\\\": 0.9,\\n        \\\"lineWidthRand\\\": 2,\\n        \\\"materialColors\\\": 0,\\n        \\\"materialAnimated\\\": 0.5\\n      },\\n      \\\"isDirtyObject\\\": false\\n    }\\n  ]\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/scripts/app/data.json\n ** module id = 16\n ** module chunks = 1\n **/","module.exports = _;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"_\"\n ** module id = 17\n ** module chunks = 1\n **/","module.exports = undefined;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"signals\",\"commonjs\":\"./signals\",\"amd\":\"signals\"}\n ** module id = 18\n ** module chunks = 1\n **/","THREE.GlitchPass2 = function ( dt_size ) {\n\n  if ( THREE.DigitalGlitch2 === undefined ) console.error( \"THREE.GlitchPass relies on THREE.DigitalGlitch\" );\n\n  var shader = THREE.DigitalGlitch2;\n  this.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n  if(dt_size==undefined) dt_size=64;\n\n  this.intensity = 1;\n  this.uniforms[\"tDisp\"].value=this.generateHeightmap(dt_size);\n\n\n  this.material = new THREE.ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader\n  });\n\n  this.enabled = true;\n  this.renderToScreen = false;\n  this.needsSwap = true;\n\n  this.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n  this.scene  = new THREE.Scene();\n\n  this.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n  this.scene.add( this.quad );\n\n  this.goWild=false;\n  this.curF=0;\n  this.generateTrigger();\n\n};\n\nTHREE.GlitchPass2.prototype = {\n\n  render: function ( renderer, writeBuffer, readBuffer, delta )\n  {\n    this.uniforms[ \"tDiffuse\" ].value = readBuffer;\n    this.uniforms[ 'seed' ].value=Math.random();//default seeding\n    //this.uniforms[ 'byp' ].value=0;\n\n    this.uniforms[ 'amount' ].value = (Math.random()/420) * this.intensity;\n    this.uniforms[ 'angle' ].value=THREE.Math.randFloat(-Math.PI,Math.PI);\n    this.uniforms[ 'seed_x' ].value=THREE.Math.randFloat(-1,1);\n    this.uniforms[ 'seed_y' ].value=THREE.Math.randFloat(-1,1);\n    this.uniforms[ 'seed_x' ].value *= 0.001;\n    this.uniforms[ 'seed_y' ].value *= 0.001;\n    this.uniforms[ 'distortion_x' ].value=THREE.Math.randFloat(0,0.001);\n    this.uniforms[ 'distortion_y' ].value=THREE.Math.randFloat(0,0.001);\n    //this.curF=0;\n    this.generateTrigger();\n\n    this.uniforms[ 'byp' ].value=0;\n    this.curF++;\n\n    this.quad.material = this.material;\n    if ( this.renderToScreen )\n    {\n      renderer.render( this.scene, this.camera );\n    }\n    else\n    {\n      renderer.render( this.scene, this.camera, writeBuffer, false );\n    }\n  },\n  generateTrigger:function()\n  {\n    this.randX=THREE.Math.randInt(120,240);\n  },\n  generateHeightmap:function(dt_size)\n  {\n    var data_arr = new Float32Array( dt_size*dt_size * 3 );\n    var length=dt_size*dt_size;\n\n    for ( var i = 0; i < length; i++)\n    {\n      var val=THREE.Math.randFloat(0,1);\n      data_arr[ i*3 + 0 ] = val;\n      data_arr[ i*3 + 1 ] = val;\n      data_arr[ i*3 + 2 ] = val;\n    }\n\n    var texture = new THREE.DataTexture( data_arr, dt_size, dt_size, THREE.RGBFormat, THREE.FloatType );\n    texture.minFilter = THREE.NearestFilter;\n    texture.magFilter = THREE.NearestFilter;\n    texture.needsUpdate = true;\n    texture.flipY = false;\n    return texture;\n  }\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/postprocessing/GlitchPass2.js\n ** module id = 19\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar width = window.innerWidth || 1;\n\t\tvar height = window.innerHeight || 1;\n\t\tvar parameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\n\n\t\trenderTarget = new THREE.WebGLRenderTarget( width, height, parameters );\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.passes = [];\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.EffectComposer relies on THREE.CopyShader\" );\n\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\n};\n\nTHREE.EffectComposer.prototype = {\n\n\tswapBuffers: function() {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\trender: function ( delta ) {\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( !pass.enabled ) continue;\n\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\n\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\tmaskActive = true;\n\n\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\tmaskActive = false;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\n\t\t\trenderTarget.width = window.innerWidth;\n\t\t\trenderTarget.height = window.innerHeight;\n\n\t\t}\n\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar renderTarget = this.renderTarget1.clone();\n\n\t\trenderTarget.width = width;\n\t\trenderTarget.height = height;\n\n\t\tthis.reset( renderTarget );\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/EffectComposer.js\n ** module id = 20\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MaskPass = function ( scene, camera ) {\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.enabled = true;\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nTHREE.MaskPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tvar context = renderer.context;\n\n\t\t// don't update color or depth\n\n\t\tcontext.colorMask( false, false, false, false );\n\t\tcontext.depthMask( false );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tcontext.enable( context.STENCIL_TEST );\n\t\tcontext.stencilOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tcontext.stencilFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tcontext.clearStencil( clearValue );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t// re-enable update of color and depth\n\n\t\tcontext.colorMask( true, true, true, true );\n\t\tcontext.depthMask( true );\n\n\t\t// only render where stencil is set to 1\n\n\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );  // draw if == 1\n\t\tcontext.stencilOp( context.KEEP, context.KEEP, context.KEEP );\n\n\t}\n\n};\n\n\nTHREE.ClearMaskPass = function () {\n\n\tthis.enabled = true;\n\n};\n\nTHREE.ClearMaskPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tvar context = renderer.context;\n\n\t\tcontext.disable( context.STENCIL_TEST );\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/MaskPass.js\n ** module id = 21\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.BloomPass = function ( strength, kernelSize, sigma, resolution ) {\n\n\tstrength = ( strength !== undefined ) ? strength : 1;\n\tkernelSize = ( kernelSize !== undefined ) ? kernelSize : 25;\n\tsigma = ( sigma !== undefined ) ? sigma : 4.0;\n\tresolution = ( resolution !== undefined ) ? resolution : 256;\n\n\t// render targets\n\n\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\n\tthis.renderTargetX = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\tthis.renderTargetY = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\n\t// copy material\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.CopyShader\" );\n\n\tvar copyShader = THREE.CopyShader;\n\n\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\n\tthis.copyUniforms[ \"opacity\" ].value = strength;\n\n\tthis.materialCopy = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: THREE.AdditiveBlending,\n\t\ttransparent: true\n\n\t} );\n\n\t// convolution material\n\n\tif ( THREE.ConvolutionShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.ConvolutionShader\" );\n\n\tvar convolutionShader = THREE.ConvolutionShader;\n\n\tthis.convolutionUniforms = THREE.UniformsUtils.clone( convolutionShader.uniforms );\n\n\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurx;\n\tthis.convolutionUniforms[ \"cKernel\" ].value = THREE.ConvolutionShader.buildKernel( sigma );\n\n\tthis.materialConvolution = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.convolutionUniforms,\n\t\tvertexShader:  convolutionShader.vertexShader,\n\t\tfragmentShader: convolutionShader.fragmentShader,\n\t\tdefines: {\n\t\t\t\"KERNEL_SIZE_FLOAT\": kernelSize.toFixed( 1 ),\n\t\t\t\"KERNEL_SIZE_INT\": kernelSize.toFixed( 0 )\n\t\t}\n\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\tthis.clear = false;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.BloomPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\n\n\t\t// Render quad with blured scene into texture (convolution pass 1)\n\n\t\tthis.quad.material = this.materialConvolution;\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\n\t\trenderer.render( this.scene, this.camera, this.renderTargetX, true );\n\n\n\t\t// Render quad with blured scene into texture (convolution pass 2)\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = this.renderTargetX;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurY;\n\n\t\trenderer.render( this.scene, this.camera, this.renderTargetY, true );\n\n\t\t// Render original scene with superimposed blur to texture\n\n\t\tthis.quad.material = this.materialCopy;\n\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetY;\n\n\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t}\n\n};\n\nTHREE.BloomPass.blurX = new THREE.Vector2( 0.001953125, 0.0 );\nTHREE.BloomPass.blurY = new THREE.Vector2( 0.0, 0.001953125 );\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/BloomPass.js\n ** module id = 22\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShaderPass = function ( shader, textureID ) {\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\tthis.material = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\n\t} );\n\n\tthis.renderToScreen = false;\n\n\tthis.enabled = true;\n\tthis.needsSwap = true;\n\tthis.clear = false;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.ShaderPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer;\n\n\t\t}\n\n\t\tthis.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t} else {\n\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/ShaderPass.js\n ** module id = 23\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 1;\n\n\tthis.oldClearColor = new THREE.Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.enabled = true;\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n};\n\nTHREE.RenderPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/RenderPass.js\n ** module id = 24\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.FilmPass = function ( noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale ) {\n\n\tif ( THREE.FilmShader === undefined )\n\t\tconsole.error( \"THREE.FilmPass relies on THREE.FilmShader\" );\n\n\tvar shader = THREE.FilmShader;\n\n\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\tthis.material = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\n\t} );\n\n\tif ( grayscale !== undefined )\tthis.uniforms.grayscale.value = grayscale;\n\tif ( noiseIntensity !== undefined ) this.uniforms.nIntensity.value = noiseIntensity;\n\tif ( scanlinesIntensity !== undefined ) this.uniforms.sIntensity.value = scanlinesIntensity;\n\tif ( scanlinesCount !== undefined ) this.uniforms.sCount.value = scanlinesCount;\n\n\tthis.enabled = true;\n\tthis.renderToScreen = false;\n\tthis.needsSwap = true;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.FilmPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\tthis.uniforms[ \"time\" ].value += delta;\n\n\t\tthis.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t} else {\n\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, false );\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/postprocessing/FilmPass.js\n ** module id = 25\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nTHREE.CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/CopyShader.js\n ** module id = 26\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Film grain & scanlines shader\n *\n * - ported from HLSL to WebGL / GLSL\n * http://www.truevision3d.com/forums/showcase/staticnoise_colorblackwhite_scanline_shaders-t18698.0.html\n *\n * Screen Space Static Postprocessor\n *\n * Produces an analogue noise overlay similar to a film grain / TV static\n *\n * Original implementation and noise algorithm\n * Pat 'Hawthorne' Shearon\n *\n * Optimized scanlines + noise version with intensity scaling\n * Georg 'Leviathan' Steinrohder\n *\n * This version is provided under a Creative Commons Attribution 3.0 License\n * http://creativecommons.org/licenses/by/3.0/\n */\n\nTHREE.FilmShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\"time\":       { type: \"f\", value: 0.0 },\n\t\t\"nIntensity\": { type: \"f\", value: 0.5 },\n\t\t\"sIntensity\": { type: \"f\", value: 0.05 },\n\t\t\"sCount\":     { type: \"f\", value: 4096 },\n\t\t\"grayscale\":  { type: \"i\", value: 1 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t// control parameter\n\t\t\"uniform float time;\",\n\n\t\t\"uniform bool grayscale;\",\n\n\t\t// noise effect intensity value (0 = no effect, 1 = full effect)\n\t\t\"uniform float nIntensity;\",\n\n\t\t// scanlines effect intensity value (0 = no effect, 1 = full effect)\n\t\t\"uniform float sIntensity;\",\n\n\t\t// scanlines effect count value (0 = no effect, 4096 = full effect)\n\t\t\"uniform float sCount;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t// sample the source\n\t\t\t\"vec4 cTextureScreen = texture2D( tDiffuse, vUv );\",\n\n\t\t\t// make some noise\n\t\t\t\"float x = vUv.x * vUv.y * time *  1000.0;\",\n\t\t\t\"x = mod( x, 13.0 ) * mod( x, 123.0 );\",\n\t\t\t\"float dx = mod( x, 0.01 );\",\n\n\t\t\t// add noise\n\t\t\t\"vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\",\n\n\t\t\t// get us a sine and cosine\n\t\t\t\"vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\",\n\n\t\t\t// add scanlines\n\t\t\t\"cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\",\n\n\t\t\t// interpolate between source and result by intensity\n\t\t\t\"cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\",\n\n\t\t\t// convert to grayscale if desired\n\t\t\t\"if( grayscale ) {\",\n\n\t\t\t\t\"cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\",\n\n\t\t\t\"}\",\n\n\t\t\t\"gl_FragColor =  vec4( cResult, cTextureScreen.a );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/FilmShader.js\n ** module id = 27\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Convolution shader\n * ported from o3d sample to WebGL / GLSL\n * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\n */\n\nTHREE.ConvolutionShader = {\n\n\tdefines: {\n\n\t\t\"KERNEL_SIZE_FLOAT\": \"25.0\",\n\t\t\"KERNEL_SIZE_INT\": \"25\",\n\n\t},\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":        { type: \"t\", value: null },\n\t\t\"uImageIncrement\": { type: \"v2\", value: new THREE.Vector2( 0.001953125, 0.0 ) },\n\t\t\"cKernel\":         { type: \"fv1\", value: [] }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float cKernel[ KERNEL_SIZE_INT ];\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec2 imageCoord = vUv;\",\n\t\t\t\"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\n\n\t\t\t\"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\n\n\t\t\t\t\"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\n\t\t\t\t\"imageCoord += uImageIncrement;\",\n\n\t\t\t\"}\",\n\n\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\n\t].join(\"\\n\"),\n\n\tbuildKernel: function ( sigma ) {\n\n\t\t// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\n\n\t\tfunction gauss( x, sigma ) {\n\n\t\t\treturn Math.exp( - ( x * x ) / ( 2.0 * sigma * sigma ) );\n\n\t\t}\n\n\t\tvar i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil( sigma * 3.0 ) + 1;\n\n\t\tif ( kernelSize > kMaxKernelSize ) kernelSize = kMaxKernelSize;\n\t\thalfWidth = ( kernelSize - 1 ) * 0.5;\n\n\t\tvalues = new Array( kernelSize );\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < kernelSize; ++i ) {\n\n\t\t\tvalues[ i ] = gauss( i - halfWidth, sigma );\n\t\t\tsum += values[ i ];\n\n\t\t}\n\n\t\t// normalize the kernel\n\n\t\tfor ( i = 0; i < kernelSize; ++i ) values[ i ] /= sum;\n\n\t\treturn values;\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/ConvolutionShader.js\n ** module id = 28\n ** module chunks = 1\n **/","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Vignette shader\n * based on PaintEffect postprocess from ro.me\n * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\n */\n\nTHREE.VignetteShader = {\n\n  uniforms: {\n\n    \"tDiffuse\": { type: \"t\", value: null },\n    \"offset\":   { type: \"f\", value: 1.0 },\n    \"darkness\": { type: \"f\", value: 1.0 }\n\n  },\n\n  vertexShader: [\n\n    \"varying vec2 vUv;\",\n\n    \"void main() {\",\n\n      \"vUv = uv;\",\n      \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n    \"}\"\n\n  ].join(\"\\n\"),\n\n  fragmentShader: [\n\n    \"uniform float offset;\",\n    \"uniform float darkness;\",\n\n    \"uniform sampler2D tDiffuse;\",\n\n    \"varying vec2 vUv;\",\n\n    \"void main() {\",\n\n      // Eskil's vignette\n\n      \"vec4 texel = texture2D( tDiffuse, vUv );\",\n      \"vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\",\n      \"gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\",\n\n      /*\n      // alternative version from glfx.js\n      // this one makes more \"dusty\" look (as opposed to \"burned\")\n\n      \"vec4 color = texture2D( tDiffuse, vUv );\",\n      \"float dist = distance( vUv, vec2( 0.5 ) );\",\n      \"color.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\n      \"gl_FragColor = color;\",\n      */\n\n    \"}\"\n\n  ].join(\"\\n\")\n\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/vendors/three.js-extras/shaders/VignetteShader.js\n ** module id = 29\n ** module chunks = 1\n **/","/**\n * @author felixturner / http://airtight.cc/\n *\n * RGB Shift Shader\n * Shifts red and blue channels from center in opposite directions\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n * by Tom Butterworth / http://kriss.cx/tom/\n *\n * amount: shift distance (1 is width of input)\n * angle: shift angle in radians\n */\n\nTHREE.DigitalGlitch2 = {\n\n  uniforms: {\n\n    \"tDiffuse\":   { type: \"t\", value: null },//diffuse texture\n    \"tDisp\":    { type: \"t\", value: null },//displacement texture for digital glitch squares\n    \"tScratch\":   { type: \"t\", value: null },//scratch texture\n    \"byp\":      { type: \"i\", value: 0 },//apply the glitch ?\n    \"amount\":   { type: \"f\", value: 0.08 },\n    \"angle\":    { type: \"f\", value: 0.02 },\n    \"seed\":     { type: \"f\", value: 0.02 },\n    \"seed_x\":   { type: \"f\", value: 0.02 },//-1,1\n    \"seed_y\":   { type: \"f\", value: 0.02 },//-1,1\n    \"distortion_x\": { type: \"f\", value: 0.5 },\n    \"distortion_y\": { type: \"f\", value: 0.6 },\n    \"col_s\":    { type: \"f\", value: 0.05 }\n  },\n\n  vertexShader: [\n\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n      \"vUv = uv;\",\n      \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\"\n  ].join(\"\\n\"),\n\n  fragmentShader: [\n    \"uniform int byp;\",//should we apply the glitch ?\n\n    \"uniform sampler2D tDiffuse;\",\n    \"uniform sampler2D tDisp;\",\n    \"uniform sampler2D tScratch;\",\n\n    \"uniform float amount;\",\n    \"uniform float angle;\",\n    \"uniform float seed;\",\n    \"uniform float seed_x;\",\n    \"uniform float seed_y;\",\n    \"uniform float distortion_x;\",\n    \"uniform float distortion_y;\",\n    \"uniform float col_s;\",\n\n    \"varying vec2 vUv;\",\n\n\n    \"float rand(vec2 co){\",\n      \"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\n    \"}\",\n\n    \"float luma(vec3 color) {\",\n      \"return dot(color, vec3(0.299, 0.587, 0.114));\",\n    \"}\",\n\n    \"float luma(vec4 color) {\",\n      \"return dot(color.rgb, vec3(0.299, 0.587, 0.114));\",\n    \"}\",\n\n    \"void main() {\",\n      // ref for dust/scratch: https://gist.github.com/mattdesl/253aece2d3eaac505823\n      \"vec2 p = vUv;\",\n      \"vec4 scratches = texture2D(tScratch, p);\",\n\n\n      // https://github.com/mattdesl/lwjgl-basics/wiki/ShaderLesson3\n      \"if(byp<1) {\",\n        \"float xs = floor(gl_FragCoord.x / 0.5);\",\n        \"float ys = floor(gl_FragCoord.y / 0.5);\",\n        //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n        \"vec4 normal = texture2D (tDisp, p*seed*seed);\",\n        \"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\",\n          \"if(seed_x>0.){\",\n            \"p.y = 1. - (p.y + distortion_y);\",\n          \"}\",\n          \"else {\",\n            \"p.y = distortion_y;\",\n          \"}\",\n        \"}\",\n        \"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\",\n          \"if(seed_y>0.){\",\n            \"p.x=distortion_x;\",\n          \"}\",\n          \"else {\",\n            \"p.x = 1. - (p.x + distortion_x);\",\n          \"}\",\n        \"}\",\n        \"p.x+=normal.x*seed_x*(seed/5.);\",\n        \"p.y+=normal.y*seed_y*(seed/5.);\",\n        //base from RGB shift shader\n        \"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\n        \"vec4 cr = texture2D(tDiffuse, p + offset);\",\n        \"vec4 cga = texture2D(tDiffuse, p);\",\n        \"vec4 cb = texture2D(tDiffuse, p - offset);\",\n\n        \"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\n        //add noise\n        \"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\",\n        \"gl_FragColor = gl_FragColor+ snow;\",\n      \"}\",\n      \"else {\",\n        \"gl_FragColor=texture2D (tDiffuse, vUv);\",\n      \"}\",\n\n      \"vec3 scratchBlend = gl_FragColor.rgb + scratches.rgb;\",\n      // vignette scratch so that it affect only edges.\n      \"float center = smoothstep(0.0, 0.5, length(vUv-0.5));\",\n      \"float luminance = luma(gl_FragColor.rgb);\",\n      \"float brightnessMap = smoothstep(0.1, 0.4, luminance * center );\",\n      \"gl_FragColor.rgb = mix(gl_FragColor.rgb, scratchBlend, brightnessMap);\",\n    \"}\"\n\n  ].join(\"\\n\")\n\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/DigitalGlitch2.js\n ** module id = 30\n ** module chunks = 1\n **/","define (require) ->\n  THREE = require 'Three'\n\n  class Camera\n    @properties:\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 700}\n      target_x: {name: 'target_x', label: 'target x', val: 0}\n      target_y: {name: 'target_y', label: 'target y', val: 0}\n      target_z: {name: 'target_z', label: 'target z', val: 0}\n      fov: {name: 'fov', label: 'fov', val: 45}\n\n    constructor: (@values = {}, time = 0) ->\n      @isCamera = true\n      @target = new THREE.Vector3(@values.target_x, @values.target_y, @values.target_z)\n      @container = new THREE.PerspectiveCamera( @values.fov, window.innerWidth / window.innerHeight, 1, 2000 )\n      @container.position.set(@values.x, @values.y, @values.z)\n\n    update: (seconds, values = false, force = false) ->\n      if values.fov? then @container.fov = values.fov\n      @container.position.set(values.x, values.y, values.z)\n      @target.set(values.target_x, values.target_y, values.target_z)\n      @container.lookAt( @target )\n\n    destroy: () ->\n      delete @container\n      delete @isCamera\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Camera.coffee\n **/","define (require) ->\n  AnimatedCircle = require 'app/elements/AnimatedCircle'\n  SpreadedObjects = require 'app/elements/SpreadedObjects'\n\n  class Circles extends SpreadedObjects\n    getItemClass: () -> return AnimatedCircle\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Circles.coffee\n **/","define (require) ->\n  AnimatedBox = require 'app/elements/AnimatedBox'\n  SpreadedObjects = require 'app/elements/SpreadedObjects'\n\n  class Boxes extends SpreadedObjects\n    getItemClass: () -> return AnimatedBox\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Boxes.coffee\n **/","define (require) ->\n  AnimatedLine = require 'app/elements/AnimatedLine'\n  SpreadedObjects = require 'app/elements/SpreadedObjects'\n\n  class Lines extends SpreadedObjects\n    getItemClass: () -> return AnimatedLine\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Lines.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'rng'\n  ElementBase = require 'app/elements/ElementBase'\n  Colors = require 'app/components/Colors'\n\n  ShaderVertex = require 'app/shaders/BasicNoise.vert'\n  ShaderFragement = require 'app/shaders/BasicNoise.frag'\n\n  class SingleObject extends ElementBase\n    @properties:\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      rotX: {name: 'rotX', label: 'rotation x', val: 0}\n      rotY: {name: 'rotY', label: 'rotation y', val: 0}\n      rotZ: {name: 'rotZ', label: 'rotation z', val: 0}\n      scaleX: {name: 'scaleX', label: 'scale x', val: 1}\n      scaleY: {name: 'scaleY', label: 'scale y', val: 1}\n      scaleZ: {name: 'scaleZ', label: 'scale z', val: 1}\n      color: {name: 'color', label: 'color', 'type': 'color', val: \"#888888\"}\n      opacity: {name: 'opacity', label: 'opacity', val: 1, min: 0, max: 1}\n\n    constructor: (@values = {}, time = 0) ->\n      # Set the default value of instance properties.\n      for key, prop of @getDefaultProperties()\n        if !@values[key]?\n          @values[key] = prop.val\n\n      # Set values cache\n      super\n\n      @timeline = new TimelineMax()\n      #color = Colors.get(0)\n      color = new THREE.Color(values.color)\n      @material = @getMaterial(color)\n      @container = new THREE.Mesh(@getGeometry() , @material )\n\n    getDefaultProperties: () -> SingleObject.properties\n\n    getGeometry: () =>\n      return new THREE.PlaneGeometry( 100, 100)\n\n    destroy: () ->\n      super\n      # clean up...\n      if @container\n        if @container.parent then @container.parent.remove(@container)\n        delete @container\n\n      delete @geometry\n      delete @timeline\n\n    update: (seconds, values = false, force = false) ->\n      if values == false then values = @values\n\n      if force || @valueChanged(\"x\", values) || @valueChanged(\"y\", values) || @valueChanged(\"z\", values)\n        @container.position.set(values.x, values.y, values.z)\n\n      if force || @valueChanged(\"rotX\", values) || @valueChanged(\"rotY\", values) || @valueChanged(\"rotZ\", values)\n        @container.rotation.set(@degreeToRadian(values.rotX), @degreeToRadian(values.rotY), @degreeToRadian(values.rotZ))\n      if force || @valueChanged(\"scaleX\", values) || @valueChanged(\"scaleY\", values) || @valueChanged(\"scaleZ\", values)\n        # Don't allow scale by 0.\n        values.scaleX = values.scaleX || 0.000000001\n        values.scaleY = values.scaleY || 0.000000001\n        values.scaleZ = values.scaleZ || 0.000000001\n        @container.scale.set(values.scaleX, values.scaleY, values.scaleZ)\n\n      if force || @valueChanged(\"color\", values)\n        @material.color = new THREE.Color(values.color)\n      if force || @valueChanged(\"opacity\", values)\n        @material.opacity = values.opacity\n      return\n\n    getMaterial: (color) ->\n      material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0x888888, shininess: 30, shading: THREE.FlatShading })\n      material.transparent = true\n      material.depthWrite = false\n      material.depthTest = false\n      material.side = THREE.DoubleSide\n\n      material.blending = THREE.AdditiveBlending\n      return material\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/SingleObject.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'rng'\n  SingleObject = require 'app/elements/SingleObject'\n  Colors = require 'app/components/Colors'\n  RingGeometry2 = require 'app/geometries/RingGeometry2'\n\n  ShaderVertex = require 'app/shaders/BasicNoise.vert'\n  ShaderFragement = require 'app/shaders/BasicNoise.frag'\n\n  class Circle extends SingleObject\n    @properties:\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      rotX: {name: 'rotX', label: 'rotation x', val: 0}\n      rotY: {name: 'rotY', label: 'rotation y', val: 0}\n      rotZ: {name: 'rotZ', label: 'rotation z', val: 0}\n      scaleX: {name: 'scaleX', label: 'scale x', val: 1}\n      scaleY: {name: 'scaleY', label: 'scale y', val: 1}\n      scaleZ: {name: 'scaleZ', label: 'scale z', val: 1}\n      innerRadius: {name: 'innerRadius', label: 'innerRadius', val: 0.7, min: 0, max: 1}\n      angle: {name: 'angle', label: 'angle', val: 1, min: 0, max: 1}\n      color: {name: 'color', label: 'color', 'type': 'color', val: \"#888888\"}\n      opacity: {name: 'opacity', label: 'opacity', val: 1, min: 0, max: 1}\n\n    getDefaultProperties: () -> Circle.properties\n\n    getGeometry: () =>\n      # Don't allow 0 innerRadius\n      inner_radius = @values.innerRadius || 0.000000001\n      # And neither 1.\n      inner_radius = Math.min(0.999999999, inner_radius)\n      pi2 = Math.PI * 2\n      angle = @values.angle * pi2\n      return new RingGeometry2( 100 * inner_radius, 100, 30, 1, 0, angle )\n\n    update: (seconds, values = false, force = false) ->\n      super\n\n      if force || @valueChanged(\"innerRadius\", values) || @valueChanged(\"angle\", values)\n        geom = @getGeometry()\n        @container.geometry.dynamic = true\n        @container.geometry.vertices = geom.vertices\n        @container.geometry.verticesNeedUpdate = true\n\n        geom.dispose()\n      return\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/Circle.coffee\n **/","#https://kuler.adobe.com/Tron-Legacy2-color-theme-1406713/edit/?copy=true&base=2&rule=Custom&selected=0&name=Copy%20of%20Tron%20Legacy2&mode=rgb&rgbvalues=0.008019047984151012,0.2173110006233171,0.3137254901960784,0.00784313725490196,0.5411764705882353,0.6196078431372549,0.05627426106529288,0.7490196078431373,0.6616535221392924,0.9490196078431372,0.7547155506500436,0.11287104291749415,0.8509803921568627,0.1894012485482237,0.1429403608472727&swatchOrder=0,1,2,3,4\ndefine (require) ->\n  THREE = require 'Three'\n\n  items = [\n    new THREE.Color(0xffffff),\n    new THREE.Color(0x86d1b8),\n    new THREE.Color(0x65c282),\n  ]\n\n  items2 = [\n    new THREE.Color(0xffffff),\n    new THREE.Color(0x023750),\n    new THREE.Color(0x028A9E),\n    new THREE.Color(0x0EBFA9),\n    new THREE.Color(0xF2C01D),\n    new THREE.Color(0xD93024),\n    #new THREE.Color(0x9ACCEF),\n  ]\n\n  length = items.length\n\n  class Colors\n    @get = (index) ->\n      index = Math.abs(parseInt(index, 10))\n      return items[index % length]\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/components/Colors.coffee\n **/","define (require) ->\n\n  class ElementBase\n    constructor: (@values = {}, time = 0) ->\n      @cache = @buildCache()\n\n    buildCache: () ->\n      cache = {}\n      for key, prop of @values\n        cache[key] = prop.val\n      return cache\n\n    valueChanged: (key, values) ->\n      # Value can't change if it is not even set.\n      if !values[key]? then return false\n      new_val = values[key]\n      has_changed = true\n      if @cache[key]? && @cache[key] == new_val then has_changed = false\n\n      # Directly set the new cache value to avoid setting it multiple time to true.\n      @cache[key] = new_val\n      return has_changed\n\n    degreeToRadian: (degree) -> Math.PI * degree / 180\n\n    destroy: () =>\n      delete @cache\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/ElementBase.coffee\n **/","// Modified to have uv on the edges.\n\ndefine(function(require) {\n  var THREE = require('Three');\n\nTHREE.CircleGeometry2 = function ( radius, segments, thetaStart, thetaLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'CircleGeometry2';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 50;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tvar i, uvs = [],\n\tcenter = new THREE.Vector3(),\n  centerUV = new THREE.Vector2( 0, 0 );\n  //centerUV = new THREE.Vector2( 0.5, 0.5 );\n\n\tthis.vertices.push(center);\n\tuvs.push( centerUV );\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar segment = thetaStart + i / segments * thetaLength;\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tthis.vertices.push( vertex );\n\t\t//uvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\n\n    uvs.push(new THREE.Vector2(1, i / segments));\n\t}\n\n\tvar n = new THREE.Vector3( 0, 0, 1 );\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t//this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\n    this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), new THREE.Vector2(0, i / segments) ] );\n\n\t}\n\n\tthis.computeFaceNormals();\n\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.CircleGeometry2.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.CircleGeometry2.prototype.constructor = THREE.CircleGeometry2;\n\nreturn THREE.CircleGeometry2;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/geometries/CircleGeometry2.js\n ** module id = 39\n ** module chunks = 1\n **/","/**\n * Seedable random number generator functions.\n * @version 1.0.0\n * @license Public Domain\n *\n * @example\n * var rng = new RNG('Example');\n * rng.random(40, 50);  // =>  42\n * rng.uniform();       // =>  0.7972798995050903\n * rng.normal();        // => -0.6698504543216376\n * rng.exponential();   // =>  1.0547367609131555\n * rng.poisson(4);      // =>  2\n * rng.gamma(4);        // =>  2.781724687386858\n */\n\n/**\n * @param {String} seed A string to seed the generator.\n * @constructor\n */\nfunction RC4(seed) {\n    this.s = new Array(256);\n    this.i = 0;\n    this.j = 0;\n    for (var i = 0; i < 256; i++) {\n        this.s[i] = i;\n    }\n    if (seed) {\n        this.mix(seed);\n    }\n}\n\n/**\n * Get the underlying bytes of a string.\n * @param {string} string\n * @returns {Array} An array of bytes\n */\nRC4.getStringBytes = function(string) {\n    var output = [];\n    for (var i = 0; i < string.length; i++) {\n        var c = string.charCodeAt(i);\n        var bytes = [];\n        do {\n            bytes.push(c & 0xFF);\n            c = c >> 8;\n        } while (c > 0);\n        output = output.concat(bytes.reverse());\n    }\n    return output;\n};\n\nRC4.prototype._swap = function(i, j) {\n    var tmp = this.s[i];\n    this.s[i] = this.s[j];\n    this.s[j] = tmp;\n};\n\n/**\n * Mix additional entropy into this generator.\n * @param {String} seed\n */\nRC4.prototype.mix = function(seed) {\n    var input = RC4.getStringBytes(seed);\n    var j = 0;\n    for (var i = 0; i < this.s.length; i++) {\n        j += this.s[i] + input[i % input.length];\n        j %= 256;\n        this._swap(i, j);\n    }\n};\n\n/**\n * @returns {number} The next byte of output from the generator.\n */\nRC4.prototype.next = function() {\n    this.i = (this.i + 1) % 256;\n    this.j = (this.j + this.s[this.i]) % 256;\n    this._swap(this.i, this.j);\n    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n};\n\n/**\n * Create a new random number generator with optional seed. If the\n * provided seed is a function (i.e. Math.random) it will be used as\n * the uniform number generator.\n * @param seed An arbitrary object used to seed the generator.\n * @constructor\n */\nfunction RNG(seed) {\n    if (seed == null) {\n        seed = (Math.random() + Date.now()).toString();\n    } else if (typeof seed === \"function\") {\n        // Use it as a uniform number generator\n        this.uniform = seed;\n        this.nextByte = function() {\n            return ~~(this.uniform() * 256);\n        };\n        seed = null;\n    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n        seed = JSON.stringify(seed);\n    }\n    this._normal = null;\n    if (seed) {\n        this._state = new RC4(seed);\n    } else {\n        this._state = null;\n    }\n}\n\n/**\n * @returns {number} Uniform random number between 0 and 255.\n */\nRNG.prototype.nextByte = function() {\n    return this._state.next();\n};\n\n/**\n * @returns {number} Uniform random number between 0 and 1.\n */\nRNG.prototype.uniform = function() {\n    var BYTES = 7; // 56 bits to make a 53-bit double\n    var output = 0;\n    for (var i = 0; i < BYTES; i++) {\n        output *= 256;\n        output += this.nextByte();\n    }\n    return output / (Math.pow(2, BYTES * 8) - 1);\n};\n\n/**\n * Produce a random integer within [n, m).\n * @param {number} [n=0]\n * @param {number} m\n *\n */\nRNG.prototype.random = function(n, m) {\n    if (n == null) {\n        return this.uniform();\n    } else if (m == null) {\n        m = n;\n        n = 0;\n    }\n    return n + Math.floor(this.uniform() * (m - n));\n};\n\n/**\n * Generates numbers using this.uniform() with the Box-Muller transform.\n * @returns {number} Normally-distributed random number of mean 0, variance 1.\n */\nRNG.prototype.normal = function() {\n    if (this._normal !== null) {\n        var n = this._normal;\n        this._normal = null;\n        return n;\n    } else {\n        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n        var y = this.uniform();\n        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n    }\n};\n\n/**\n * Generates numbers using this.uniform().\n * @returns {number} Number from the exponential distribution, lambda = 1.\n */\nRNG.prototype.exponential = function() {\n    return -Math.log(this.uniform() || Math.pow(2, -53));\n};\n\n/**\n * Generates numbers using this.uniform() and Knuth's method.\n * @param {number} [mean=1]\n * @returns {number} Number from the Poisson distribution.\n */\nRNG.prototype.poisson = function(mean) {\n    var L = Math.exp(-(mean || 1));\n    var k = 0, p = 1;\n    do {\n        k++;\n        p *= this.uniform();\n    } while (p > L);\n    return k - 1;\n};\n\n/**\n * Generates numbers using this.uniform(), this.normal(),\n * this.exponential(), and the Marsaglia-Tsang method.\n * @param {number} a\n * @returns {number} Number from the gamma distribution.\n */\nRNG.prototype.gamma = function(a) {\n    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n    var c = 1 / Math.sqrt(9 * d);\n    do {\n        do {\n            var x = this.normal();\n            var v = Math.pow(c * x + 1, 3);\n        } while (v <= 0);\n        var u = this.uniform();\n        var x2 = Math.pow(x, 2);\n    } while (u >= 1 - 0.0331 * x2 * x2 &&\n             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n    if (a < 1) {\n        return d * v * Math.exp(this.exponential() / -a);\n    } else {\n        return d * v;\n    }\n};\n\n/**\n * Accepts a dice rolling notation string and returns a generator\n * function for that distribution. The parser is quite flexible.\n * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n * @param {RNG} rng An optional RNG object.\n * @returns {Function}\n */\nRNG.roller = function(expr, rng) {\n    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n    var dice = parseFloat(parts[0]) || 1;\n    var sides = parseFloat(parts[1]);\n    var mod = parseFloat(parts[2]) || 0;\n    rng = rng || new RNG();\n    return function() {\n        var total = dice + mod;\n        for (var i = 0; i < dice; i++) {\n            total += rng.random(sides);\n        }\n        return total;\n    };\n};\n\n/* Provide a pre-made generator instance. */\nRNG.$ = new RNG();\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = RNG\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/exports-loader?RNG!./src/scripts/bower_components/rng-js/rng.js\n ** module id = 40\n ** module chunks = 1\n **/","/**\n * Seedable random number generator functions.\n * @version 1.0.0\n * @license Public Domain\n *\n * @example\n * var rng = new RNG('Example');\n * rng.random(40, 50);  // =>  42\n * rng.uniform();       // =>  0.7972798995050903\n * rng.normal();        // => -0.6698504543216376\n * rng.exponential();   // =>  1.0547367609131555\n * rng.poisson(4);      // =>  2\n * rng.gamma(4);        // =>  2.781724687386858\n */\n\n/**\n * @param {String} seed A string to seed the generator.\n * @constructor\n */\nfunction RC4(seed) {\n    this.s = new Array(256);\n    this.i = 0;\n    this.j = 0;\n    for (var i = 0; i < 256; i++) {\n        this.s[i] = i;\n    }\n    if (seed) {\n        this.mix(seed);\n    }\n}\n\n/**\n * Get the underlying bytes of a string.\n * @param {string} string\n * @returns {Array} An array of bytes\n */\nRC4.getStringBytes = function(string) {\n    var output = [];\n    for (var i = 0; i < string.length; i++) {\n        var c = string.charCodeAt(i);\n        var bytes = [];\n        do {\n            bytes.push(c & 0xFF);\n            c = c >> 8;\n        } while (c > 0);\n        output = output.concat(bytes.reverse());\n    }\n    return output;\n};\n\nRC4.prototype._swap = function(i, j) {\n    var tmp = this.s[i];\n    this.s[i] = this.s[j];\n    this.s[j] = tmp;\n};\n\n/**\n * Mix additional entropy into this generator.\n * @param {String} seed\n */\nRC4.prototype.mix = function(seed) {\n    var input = RC4.getStringBytes(seed);\n    var j = 0;\n    for (var i = 0; i < this.s.length; i++) {\n        j += this.s[i] + input[i % input.length];\n        j %= 256;\n        this._swap(i, j);\n    }\n};\n\n/**\n * @returns {number} The next byte of output from the generator.\n */\nRC4.prototype.next = function() {\n    this.i = (this.i + 1) % 256;\n    this.j = (this.j + this.s[this.i]) % 256;\n    this._swap(this.i, this.j);\n    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n};\n\n/**\n * Create a new random number generator with optional seed. If the\n * provided seed is a function (i.e. Math.random) it will be used as\n * the uniform number generator.\n * @param seed An arbitrary object used to seed the generator.\n * @constructor\n */\nfunction RNG(seed) {\n    if (seed == null) {\n        seed = (Math.random() + Date.now()).toString();\n    } else if (typeof seed === \"function\") {\n        // Use it as a uniform number generator\n        this.uniform = seed;\n        this.nextByte = function() {\n            return ~~(this.uniform() * 256);\n        };\n        seed = null;\n    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n        seed = JSON.stringify(seed);\n    }\n    this._normal = null;\n    if (seed) {\n        this._state = new RC4(seed);\n    } else {\n        this._state = null;\n    }\n}\n\n/**\n * @returns {number} Uniform random number between 0 and 255.\n */\nRNG.prototype.nextByte = function() {\n    return this._state.next();\n};\n\n/**\n * @returns {number} Uniform random number between 0 and 1.\n */\nRNG.prototype.uniform = function() {\n    var BYTES = 7; // 56 bits to make a 53-bit double\n    var output = 0;\n    for (var i = 0; i < BYTES; i++) {\n        output *= 256;\n        output += this.nextByte();\n    }\n    return output / (Math.pow(2, BYTES * 8) - 1);\n};\n\n/**\n * Produce a random integer within [n, m).\n * @param {number} [n=0]\n * @param {number} m\n *\n */\nRNG.prototype.random = function(n, m) {\n    if (n == null) {\n        return this.uniform();\n    } else if (m == null) {\n        m = n;\n        n = 0;\n    }\n    return n + Math.floor(this.uniform() * (m - n));\n};\n\n/**\n * Generates numbers using this.uniform() with the Box-Muller transform.\n * @returns {number} Normally-distributed random number of mean 0, variance 1.\n */\nRNG.prototype.normal = function() {\n    if (this._normal !== null) {\n        var n = this._normal;\n        this._normal = null;\n        return n;\n    } else {\n        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n        var y = this.uniform();\n        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n    }\n};\n\n/**\n * Generates numbers using this.uniform().\n * @returns {number} Number from the exponential distribution, lambda = 1.\n */\nRNG.prototype.exponential = function() {\n    return -Math.log(this.uniform() || Math.pow(2, -53));\n};\n\n/**\n * Generates numbers using this.uniform() and Knuth's method.\n * @param {number} [mean=1]\n * @returns {number} Number from the Poisson distribution.\n */\nRNG.prototype.poisson = function(mean) {\n    var L = Math.exp(-(mean || 1));\n    var k = 0, p = 1;\n    do {\n        k++;\n        p *= this.uniform();\n    } while (p > L);\n    return k - 1;\n};\n\n/**\n * Generates numbers using this.uniform(), this.normal(),\n * this.exponential(), and the Marsaglia-Tsang method.\n * @param {number} a\n * @returns {number} Number from the gamma distribution.\n */\nRNG.prototype.gamma = function(a) {\n    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n    var c = 1 / Math.sqrt(9 * d);\n    do {\n        do {\n            var x = this.normal();\n            var v = Math.pow(c * x + 1, 3);\n        } while (v <= 0);\n        var u = this.uniform();\n        var x2 = Math.pow(x, 2);\n    } while (u >= 1 - 0.0331 * x2 * x2 &&\n             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n    if (a < 1) {\n        return d * v * Math.exp(this.exponential() / -a);\n    } else {\n        return d * v;\n    }\n};\n\n/**\n * Accepts a dice rolling notation string and returns a generator\n * function for that distribution. The parser is quite flexible.\n * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n * @param {RNG} rng An optional RNG object.\n * @returns {Function}\n */\nRNG.roller = function(expr, rng) {\n    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n    var dice = parseFloat(parts[0]) || 1;\n    var sides = parseFloat(parts[1]);\n    var mod = parseFloat(parts[2]) || 0;\n    rng = rng || new RNG();\n    return function() {\n        var total = dice + mod;\n        for (var i = 0; i < dice; i++) {\n            total += rng.random(sides);\n        }\n        return total;\n    };\n};\n\n/* Provide a pre-made generator instance. */\nRNG.$ = new RNG();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/bower_components/rng-js/rng.js\n ** module id = 41\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/Basic.vert\n ** module id = 42\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nprecision highp float;\\n\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nfloat aastep_1_0(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\n\\n\\nvarying vec2 vUv;\\nuniform vec3 color;\\n// 0 hidden, 1 full, 2 hidden\\nuniform float percent;\\n\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\n\\n// Common\\n#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\n\\nvec3 inputToLinear( in vec3 a ) {\\n  return a;\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n  return a;\\n}\\n\\nvoid main() {\\n  // For fog\\n  vec3 outgoingLight = vec3( 0.0 );\\t// outgoing light does not have an alpha, the surface does\\n  vec4 diffuseColor = vec4( color, 1.0 );\\n\\n  float alpha = 0.0;\\n\\n  if (vUv.x < percent && vUv.x >= percent - 1.0) {\\n    alpha = 1.0;\\n  }\\n\\n\\n  outgoingLight = diffuseColor.rgb;\\n\\n  float depth = gl_FragCoord.z / gl_FragCoord.w;\\n  float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n  fogFactor = whiteCompliment( fogFactor );\\n\\n  outgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n  gl_FragColor = vec4(outgoingLight, alpha);\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/Line.frag\n ** module id = 43\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nvarying vec2 vUv;\\nvarying float noise;\\nuniform float time;\\nuniform float strength;\\nuniform float seed;\\n\\n//\\n// GLSL textureless classic 3D noise \\\"cnoise\\\",\\n// with an RSL-style periodic variant \\\"pnoise\\\".\\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\\n// Version: 2011-10-11\\n//\\n// Many thanks to Ian McEwan of Ashima Arts for the\\n// ideas for permutation and gradient selection.\\n//\\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\\n// Distributed under the MIT license. See LICENSE file.\\n// https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_1_0(vec3 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_1_0(vec4 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_1_1(vec4 x)\\n{\\n  return mod289_1_0(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_1_2(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nvec3 fade_1_3(vec3 t) {\\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\\n}\\n\\n// Classic Perlin noise, periodic variant\\nfloat pnoise_1_4(vec3 P, vec3 rep)\\n{\\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\\n  Pi0 = mod289_1_0(Pi0);\\n  Pi1 = mod289_1_0(Pi1);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute_1_1(permute_1_1(ix) + iy);\\n  vec4 ixy0 = permute_1_1(ixy + iz0);\\n  vec4 ixy1 = permute_1_1(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt_1_2(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt_1_2(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade_1_3(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n  return 2.2 * n_xyz;\\n}\\n\\n\\n\\n\\nfloat turbulence( vec3 p ) {\\n    float w = 100.0;\\n    float t = -.5;\\n    for (float f = 1.0 ; f <= 10.0 ; f++ ){\\n        float power = pow( 2.0, f );\\n        t += abs( pnoise_1_4( vec3( power * p ), vec3( 10.0, 10.0, 10.0 ) ) / power );\\n    }\\n    return t;\\n}\\n\\nvoid main() {\\n    vUv = uv;\\n\\n\\n    float time2 = time + seed;\\n\\n    // add time to the noise parameters so it's animated\\n    noise = 10.0 *  -.10 * turbulence( 10.5 * normal + time2 );\\n    float b = 5.0 * pnoise_1_4( 0.2 * position + vec3( 2.0 * time2 ), vec3( 100.0 ) );\\n    float displacement = - noise + b;\\n\\n    // Less displacement on center.\\n    displacement = displacement * vUv.x;\\n\\n    //vec3 newPosition = position + normal * displacement * strength * 30.0;\\n    //vec2 normal2 = normalize(uv - 0.5);\\n    vec3 normal2 = normalize(position - 0.5);\\n    float strengthMultiplier = 15.0;\\n    vec3 newPosition = position + vec3(normal2.x, normal2.y, 0.0) * displacement * strength * strengthMultiplier;\\n    //gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/BasicNoise.vert\n ** module id = 44\n ** module chunks = 1\n **/","module.exports = \"#define GLSLIFY 1\\n\\nprecision highp float;\\n\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nfloat aastep_1_0(float threshold, float value) {\\n  #ifdef GL_OES_standard_derivatives\\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\\n  #else\\n    return step(threshold, value);\\n  #endif  \\n}\\n\\n\\n\\nvarying vec2 vUv;\\nuniform vec3 color;\\n\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\n\\n// Common\\n#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\n\\nvec3 inputToLinear( in vec3 a ) {\\n  return a;\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n  return a;\\n}\\n\\nvoid main() {\\n  // For fog\\n  vec3 outgoingLight = vec3( 0.0 );\\t// outgoing light does not have an alpha, the surface does\\n  vec4 diffuseColor = vec4( color, 1.0 );\\n\\n  float alpha = 0.0;\\n  float wireframe_size = 0.01;\\n  float min_x = 0.0;\\n  float max_x = 1.0;\\n\\n  // If max is 1 then wireframe is is only half size.\\n  //max_x = max_x * 0.98;\\n\\n  // Get distance from edges.\\n  vec2 edgeX = abs(vec2(vUv.x - min_x, vUv.x - max_x));\\n  // Add the wireframe.\\n  edgeX = max(vec2(0.0, 0.0), edgeX - wireframe_size);\\n\\n  // Get the smallest distance from edges.\\n  float distance_x = min(edgeX.x, edgeX.y);\\n\\n\\n  alpha = aastep_1_0(distance_x, 0.01);\\n\\n\\n  // Add the fill alpha.\\n  if (vUv.x > min_x && vUv.x < max_x) {\\n    alpha = max(0.1, alpha);\\n  }\\n\\n  outgoingLight = diffuseColor.rgb;\\n\\n  float depth = gl_FragCoord.z / gl_FragCoord.w;\\n  float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n  fogFactor = whiteCompliment( fogFactor );\\n\\n  outgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n  gl_FragColor = vec4(outgoingLight, alpha);\\n  //vec3 k = vec3(1.0, 1.0, 1.0);\\n  //gl_FragColor = vec4( vec3( vUv, 0. ), 1. );\\n  //gl_FragColor = vec4( color, 1.0 );\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/shaders/BasicNoise.frag\n ** module id = 45\n ** module chunks = 1\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  AnimatedObject = require 'app/elements/AnimatedObject'\n  CircleGeometry2 = require 'app/geometries/CircleGeometry2'\n  RingGeometry2 = require 'app/geometries/RingGeometry2'\n\n  class AnimatedCircle extends AnimatedObject\n    @circleGeom = new CircleGeometry2( 10, 30, 0, Math.PI * 2 )\n    @ringGeom = new RingGeometry2( 10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2 )\n    @ringGeom2 = new RingGeometry2( 10 - 1, 10, 30, 1, 0, Math.PI * 2 )\n\n    constructor: () ->\n      super\n\n    getGeometry: () ->\n      return AnimatedCircle.circleGeom\n\n    getGeometryOutline: (outlineWidth) ->\n      if outlineWidth < 1 then return AnimatedCircle.ringGeom\n      return AnimatedCircle.ringGeom2\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedCircle.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'exports?RNG!rng'\n  TweenMax = require 'TweenMax'\n  ElementBase = require 'app/elements/ElementBase'\n  Colors = require 'app/components/Colors'\n\n\n  class SpreadedObjects extends ElementBase\n    @properties:\n      numItems: {name: 'numItems', label: 'num items', val: 20, triggerRebuild: true}\n      seed: {name: 'seed', label: 'seed', val: 12002, triggerRebuild: true}\n      randX: {name: 'randX', label: 'random x', val: 80, triggerRebuild: true}\n      randY: {name: 'randY', label: 'random y', val: 80, triggerRebuild: true}\n      randZ: {name: 'randZ', label: 'random z', val: 0, triggerRebuild: true}\n      randRotZ: {name: 'randRotZ', label: 'random rotation z', val: 0, triggerRebuild: true}\n      randScaleX: {name: 'randScaleX', label: 'random scale x', val: 0, triggerRebuild: true}\n      randScaleY: {name: 'randScaleY', label: 'random scale y', val: 0, triggerRebuild: true}\n      circleRadius: {name: 'circleRadius', label: 'circle radius', val: 20}\n      circleRadiusMax: {name: 'circleRadiusMax', label: 'circle radius max', val: 20}\n      progression: {name: 'progression', label: 'progression', val: 1, min: 0, max: 2}\n      depth: {name: 'depth', label: 'depth', val: 0}\n      percent_color: {name: 'percent_color', label: 'percent color', val: 0.4, triggerRebuild: true}\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      rotX: {name: 'rotX', label: 'rotation x', val: 0}\n      rotY: {name: 'rotY', label: 'rotation y', val: 0}\n      rotZ: {name: 'rotZ', label: 'rotation z', val: 0}\n\n    constructor: (@values = {}, time = 0) ->\n      # Set the default value of instance properties.\n      for key, prop of SpreadedObjects.properties\n        if !@values[key]?\n          @values[key] = prop.val\n\n      # Set values cache\n      super\n\n      @timeline = new TimelineMax()\n      @container = new THREE.Object3D()\n      @totalDuration = 0\n      @items = []\n      @items_position = []\n      @build(time)\n\n    getItemClass: () -> return AnimatedCircle\n\n    rebuild: (time) ->\n      @empty()\n      @build(time)\n\n    empty: () ->\n      if !@items || !@items.length then return\n      @timeline.clear()\n      @items_position = []\n\n      for item in @items\n        @container.remove(item.container)\n        item.destroy()\n      @items = []\n\n    build: (time = 0) ->\n      @rng = new RNG(@values.seed)\n      @rngAnimation = new RNG(@values.seed + \"lorem\")\n      @rngOutline = new RNG(@values.seed)\n\n      for i in [0..@values.numItems - 1]\n        itemClass = @getItemClass()\n        rndtype = @rng.random(0, 1000) / 1000\n        draw_outline = if rndtype < 0.8 then true else false\n        draw_circle = if rndtype > 0.5 then true else false\n\n        if itemClass.noOutline\n          draw_outline = false\n          draw_circle = true\n\n        color = Colors.get(@rng.random(0, 1000))\n        if @rng.random(0, 1000) > @values.percent_color * 1000\n          color = Colors.get(0)\n\n        fillColor = color.clone()\n        if draw_outline\n          fillColor.multiplyScalar(@rng.random(0.1, 0.5))\n\n        size = @rng.random(@values.circleRadius, @values.circleRadiusMax)\n        x = @getRandomPosition(@values.randX)\n        y = @getRandomPosition(@values.randY)\n        z = @getRandomPosition(@values.randZ)\n        randRotZ = @rng.random(0, 1000) / 1000 * Math.PI * @values.randRotZ\n        randScaleX = @rng.random(0, 1000) / 1000 * @values.randScaleX\n        randScaleY = @rng.random(0, 1000) / 1000 * @values.randScaleY\n        pos = {x: x, y: y, z: z}\n\n        delay = @rngAnimation.random(0, 2400) / 1000\n        duration = @rngAnimation.random(600, 800) / 1000\n        duration *= 4\n        border_radius = @rngOutline.random(1, 400) / 100\n\n\n        if draw_outline == false\n          # more fill opacity if no outline\n          fillColor.multiplyScalar(3)\n\n        item = new itemClass({\n          size: size,\n          outlineWidth: border_radius,\n          drawOutline: draw_outline,\n          drawCircle: draw_circle,\n          color: color,\n          fillColor: fillColor,\n          delay: delay,\n          duration: duration,\n          depth: @values.depth,\n          x: pos.x,\n          y: pos.y,\n          z: pos.z,\n          randRotZ: randRotZ,\n          randScaleX: randScaleX,\n          randScaleY: randScaleY\n        })\n        @container.add(item.container)\n        @timeline.add(item.timeline, 0)\n        @items.push(item)\n        @items_position.push(pos)\n\n      @totalDuration = @timeline.duration()\n\n      # Set initial properties\n      @update(time, @values, true)\n\n    update: (seconds, values = false, force = false) ->\n      if values == false then values = @values\n      needs_rebuild = false\n\n      # Check if any of the invaldating property changed.\n      for key, prop of SpreadedObjects.properties\n        if prop.triggerRebuild && @valueChanged(key, values)\n          needs_rebuild = true\n\n      if force || @valueChanged(\"x\", values) || @valueChanged(\"y\", values) || @valueChanged(\"z\", values)\n        @container.position.set(values.x, values.y, values.z)\n\n      if force || @valueChanged(\"rotX\", values) || @valueChanged(\"rotY\", values) || @valueChanged(\"rotZ\", values)\n        @container.rotation.set(@degreeToRadian(values.rotX), @degreeToRadian(values.rotY), @degreeToRadian(values.rotZ))\n\n      #if force || @valueChanged(\"progression\", values)\n      progression = values.progression / 2\n      @timeline.seek(@totalDuration * progression)\n      for item in @items\n        item.update(seconds, {progression: values.progression})\n\n      if force || @valueChanged(\"depth\", values)\n        for item, key in @items\n          pos = @items_position[key]\n          item.container.position.set(pos.x, pos.y, pos.z * values.depth)\n\n      # save the new values\n      @values = _.merge(@values, values)\n\n      if needs_rebuild == true\n        @rebuild(seconds)\n\n    getRandomPosition: (scale = 1) ->\n      return @rng.random(-scale, scale)\n\n    destroy: () ->\n      super\n      # clean up...\n      if @container\n        if @container.parent then @container.parent.remove(@container)\n        delete @container\n      delete @rng\n      delete @rngOutline\n      delete @cache\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/SpreadedObjects.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  AnimatedObject = require 'app/elements/AnimatedObject'\n  class AnimatedBox extends AnimatedObject\n    @circleGeom = new THREE.CircleGeometry( 10, 4, 0, Math.PI * 2 )\n    @ringGeom = new THREE.RingGeometry( 10 - 1, 10 + 1, 4, 1, 0, Math.PI * 2 )\n    @ringGeom2 = new THREE.RingGeometry( 10 - 1, 10, 4, 1, 0, Math.PI * 2 )\n\n    constructor: () ->\n      super\n\n    getGeometry: () ->\n      return AnimatedBox.circleGeom\n\n    getGeometryOutline: (outlineWidth) ->\n      if outlineWidth < 1 then return AnimatedBox.ringGeom\n      return AnimatedBox.ringGeom2\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedBox.coffee\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n\n  AnimatedObject = require 'app/elements/AnimatedObject'\n  class AnimatedLine extends AnimatedObject\n    @circleGeom = new THREE.PlaneGeometry( 100, 1)\n    @ringGeom = false\n    @ringGeom2 = false\n    @noOutline = true\n\n    constructor: () ->\n      super\n\n    getGeometry: () -> return AnimatedLine.circleGeom\n\n    getGeometryOutline: (outlineWidth) -> return false\n\n    update: (seconds, progression) ->\n      #if Audio.instance.high > 0.002\n      #  @speed += Audio.instance.high\n      #console.log Audio.instance.high\n\n      #if Math.random() > 0.9 && Audio.instance.high > 0.09\n      #  @velocity.add(@direction.clone().multiplyScalar(Audio.instance.high * 12 * @weight))\n      @container.position.add(@velocity)\n\n      @velocity = @velocity.multiplyScalar(0.94)\n\n      timeDiff = Date.now() - @start\n      for material in @materials\n        material.uniforms['time'].value = 0.00025 * ( timeDiff )\n\n      scale = @animatedProperties.scale * @values.size * 0.1\n      @container.scale.set(1, scale, 1)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedLine.coffee\n **/","// Modified to have uv on the edges.\n\ndefine(function(require) {\n  var THREE = require('Three');\n\nTHREE.RingGeometry2 = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'RingGeometry2';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0;\n\touterRadius = outerRadius || 50;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\n\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) { // concentric circles inside ring\n\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) { // number of segments per circle\n\n\t\t\tvar vertex = new THREE.Vector3();\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tthis.vertices.push( vertex );\n\t\t\t//uvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\n\t\t  var uv = {\n        x: (i / phiSegments),\n        y: (o / thetaSegments)\n      };\n      uvs.push(new THREE.Vector2(uv.x, uv.y));\n    }\n\n\t\tradius += radiusStep;\n\n\t}\n\n\tvar n = new THREE.Vector3( 0, 0, 1 );\n\n\tfor ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring\n\n\t\tvar thetaSegment = i * (thetaSegments + 1);\n\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) { // number of segments per circle\n\n\t\t\tvar segment = o + thetaSegment;\n\n\t\t\tvar v1 = segment;\n\t\t\tvar v2 = segment + thetaSegments + 1;\n\t\t\tvar v3 = segment + thetaSegments + 2;\n\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\n\t\t\tv1 = segment;\n\t\t\tv2 = segment + thetaSegments + 2;\n\t\t\tv3 = segment + 1;\n\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\n\t\t}\n\t}\n\n\tthis.computeFaceNormals();\n\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.RingGeometry2.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.RingGeometry2.prototype.constructor = THREE.RingGeometry2;\n\nreturn THREE.RingGeometry2;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scripts/app/geometries/RingGeometry2.js\n ** module id = 50\n ** module chunks = 1\n **/","module.exports = TweenMax;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"TweenMax\"\n ** module id = 51\n ** module chunks = 1\n **/","define (require) ->\n  _ = require 'lodash'\n  THREE = require 'Three'\n  RNG = require 'rng'\n  TweenMax = require 'TweenMax'\n\n  Colors = require 'app/components/Colors'\n\n  # should not be a dependency.\n  Audio = require 'app/components/Audio'\n\n  ShaderVertex = require 'app/shaders/BasicNoise.vert'\n  ShaderFragement = require 'app/shaders/BasicNoise.frag'\n\n  class AnimatedObject\n    @circleGeom = new THREE.CircleGeometry( 10, 30, 0, Math.PI * 2 )\n    @ringGeom = new THREE.RingGeometry( 10 - 1, 10 + 1, 30, 1, 0, Math.PI * 2 )\n    @ringGeom2 = new THREE.RingGeometry( 10 - 1, 10, 30, 1, 0, Math.PI * 2 )\n\n    @properties:\n      size: {name: 'size', label: 'size', val: 80}\n      outlineWidth: {name: 'outlineWidth', label: 'outline width', val: 2}\n      drawOutline: {name: 'drawOutline', label: 'draw outline', val: true}\n      drawCircle: {name: 'drawCircle', label: 'draw circle', val: false}\n      color: {name: 'color', label: 'color', val: false}\n      fillColor: {name: 'fillColor', label: 'fill color', val: false}\n      delay: {name: 'delay', label: 'delay', val: 0}\n      duration: {name: 'duration', label: 'duration', val: 0.5}\n      x: {name: 'x', label: 'x', val: 0}\n      y: {name: 'y', label: 'y', val: 0}\n      z: {name: 'z', label: 'z', val: 0}\n      randRotZ: {name: 'randRotZ', label: 'random rotation z', val: 0}\n      randScaleX: {name: 'randScaleX', label: 'random scale x', val: 0}\n      randScaleY: {name: 'randScaleY', label: 'random scale y', val: 0}\n\n    constructor: (@values = {}, time = 0) ->\n      for key, prop of AnimatedObject.properties\n        if !@values[key]?\n          @values[key] = prop.val\n\n      @container = new THREE.Object3D()\n      @container.scale.set(0.001,0.001,0.001)\n      @container.position.set(@values.x, @values.y, @values.z)\n      @container.rotation.set(0, 0, @values.randRotZ)\n      @materials = []\n      @start = Date.now()\n\n      @offset = new THREE.Vector3()\n      @velocity = new THREE.Vector3()\n      @weight = Math.random() * 0.5 + 0.5\n      @direction = new THREE.Vector3(Math.random() * 2 - 1, Math.random() * 2 - 1, 0)\n      @speed = 0\n      @animatedProperties =\n        scale: 0.001\n      @timeline = new TimelineMax()\n      # First value\n      tween = TweenLite.to(@animatedProperties, 0, {scale: 0.00001, ease: Linear.easeNone})\n      @timeline.add(tween, 0)\n      # Middle\n      tween = TweenLite.to(@animatedProperties, @values.duration, {scale: 1, delay: @values.delay, ease: Cubic.easeOut})\n      @timeline.add(tween)\n\n      # Stay for a while\n      tween = TweenLite.to(@animatedProperties, @values.duration * 0.5, {scale: 1, ease: Cubic.easeOut})\n      @timeline.add(tween)\n\n      # End\n      tween = TweenLite.to(@animatedProperties, @values.duration, {scale: 0.00001, ease: Cubic.easeIn})\n      @timeline.add(tween)\n\n      #if @values.drawOutline then @renderOutline(@values.size, @values.color, @values.outlineWidth)\n      #if @values.drawCircle then @renderCircle(@values.size, @values.fillColor)\n      @renderCircle(@values.size, @values.fillColor)\n\n    getGeometry: () ->\n      return AnimatedObject.circleGeom\n\n    getGeometryOutline: (outlineWidth) ->\n      if outlineWidth < 1 then return AnimatedObject.ringGeom\n      return AnimatedObject.ringGeom2\n\n    destroy: () ->\n      @timeline.clear()\n\n      for child in @container.children\n        @container.remove(child)\n\n      @container = null\n\n    getMaterial: (color) ->\n      uniforms = {\n        time: {\n          type: 'f',\n          value: 0.0\n        },\n        seed: {\n          type: 'f',\n          value: Math.random() * 1000\n        },\n        strength: {\n          type: 'f',\n          value: 0.2\n        },\n        color: {\n          type: 'c',\n          value: color\n        }\n      }\n      material = new THREE.ShaderMaterial({\n        vertexShader: ShaderVertex,\n        fragmentShader: ShaderFragement,\n        uniforms: uniforms,\n        transparent: true,\n        depthWrite: false,\n        depthTest: false\n        })\n\n      #material = new THREE.MeshPhongMaterial({ ambient: 0x030303, color: 0xdddddd, specular: 0x009900, shininess: 30, shading: THREE.FlatShading })\n      material.blending = THREE.AdditiveBlending\n      return material\n\n    update: (seconds, progression) ->\n      #if Audio.instance.high > 0.002\n      #  @speed += Audio.instance.high\n      #console.log Audio.instance.high\n\n      #if Math.random() > 0.9 && Audio.instance.high > 0.09\n      #  @velocity.add(@direction.clone().multiplyScalar(Audio.instance.high * 12 * @weight))\n      @container.position.add(@velocity)\n\n      @velocity = @velocity.multiplyScalar(0.94)\n\n      timeDiff = Date.now() - @start\n      for material in @materials\n        material.uniforms['time'].value = 0.00025 * ( timeDiff )\n        material.uniforms['strength'].value = window.audio.mid\n\n      scale = @animatedProperties.scale * @values.size * 0.1\n      @container.scale.set(scale * (1 + @values.randScaleX), scale * (1 + @values.randScaleY), scale)\n\n    renderCircle: (size, color) =>\n      material = @getMaterial(color)\n      @materials.push(material)\n\n      object = new THREE.Mesh(@getGeometry() , material )\n      @container.add( object )\n\n    renderOutline: (size, color, outlineWidth) =>\n      geom = @getGeometryOutline(outlineWidth)\n\n      material = @getMaterial(color)\n      @materials.push(material)\n      object = new THREE.Mesh( geom, material )\n      @container.add( object )\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/scripts/app/elements/AnimatedObject.coffee\n **/"],"sourceRoot":""}