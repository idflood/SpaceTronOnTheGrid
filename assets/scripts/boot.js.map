{
  "version": 3,
  "file": "/Users/david/Sites/spacetron/assets/scripts/boot.js",
  "sources": [
    "bower_components/almond/almond.js",
    "bower_components/require-cs/cs.js",
    "bower_components/three.js/three.js",
    "app/components/Background!cs",
    "vendors/three.js-extras/postprocessing/EffectComposer.js",
    "vendors/three.js-extras/postprocessing/MaskPass.js",
    "vendors/three.js-extras/postprocessing/BloomPass.js",
    "vendors/three.js-extras/postprocessing/ShaderPass.js",
    "vendors/three.js-extras/postprocessing/RenderPass.js",
    "vendors/three.js-extras/postprocessing/FilmPass.js",
    "vendors/three.js-extras/shaders/CopyShader.js",
    "vendors/three.js-extras/shaders/FXAAShader.js",
    "vendors/three.js-extras/shaders/FilmShader.js",
    "vendors/three.js-extras/shaders/ConvolutionShader.js",
    "app/components/PostFX!cs",
    "bower_components/js-signals/dist/signals.js",
    "app/components/Timer!cs",
    "bower_components/rng-js/rng.js",
    "app/components/Colors!cs",
    "bower_components/gsap/src/uncompressed/TweenMax.js",
    "bower_components/gsap/src/uncompressed/TimelineMax.js",
    "app/elements/AnimatedCircle!cs",
    "app/elements/Circles!cs",
    "app/components/ElementFactory!cs",
    "app/components/Orchestrator!cs",
    "bower_components/requirejs-text/text.js",
    "app/data.json!text",
    "app/Main!cs",
    "boot.js"
  ],
  "names": [],
  "mappingsxagmCA,AD2gmCA;AC1gmxFA,ADyFA;ACxtrDA,ADsDA;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjvvGA,ADwGA;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpbA,AD8bA;AC7bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvhPA,ADiPA;AChPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtpNA,AD6pNA;AC5phjCA,ADijCA;AChjtgtYA,ADuYA;ACt
  "sourcesContent": [
    "/**\n * @license almond 0.2.9 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                name = baseParts.concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"bower_components/almond/almond\", function(){});\n\n",
    "define('cs',{load: function(id){throw new Error(\"Dynamic load not allowed: \" + id);}});\n",
    "// File:src/Three.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar THREE = { REVISION: '68' };\n\n// browserify support\nif ( typeof module === 'object' ) {\n\n  module.exports = THREE;\n\n}\n\n// GL STATE CONSTANTS\n\nTHREE.CullFaceNone = 0;\nTHREE.CullFaceBack = 1;\nTHREE.CullFaceFront = 2;\nTHREE.CullFaceFrontBack = 3;\n\nTHREE.FrontFaceDirectionCW = 0;\nTHREE.FrontFaceDirectionCCW = 1;\n\n// SHADOWING TYPES\n\nTHREE.BasicShadowMap = 0;\nTHREE.PCFShadowMap = 1;\nTHREE.PCFSoftShadowMap = 2;\n\n// MATERIAL CONSTANTS\n\n// side\n\nTHREE.FrontSide = 0;\nTHREE.BackSide = 1;\nTHREE.DoubleSide = 2;\n\n// shading\n\nTHREE.NoShading = 0;\nTHREE.FlatShading = 1;\nTHREE.SmoothShading = 2;\n\n// colors\n\nTHREE.NoColors = 0;\nTHREE.FaceColors = 1;\nTHREE.VertexColors = 2;\n\n// blending modes\n\nTHREE.NoBlending = 0;\nTHREE.NormalBlending = 1;\nTHREE.AdditiveBlending = 2;\nTHREE.SubtractiveBlending = 3;\nTHREE.MultiplyBlending = 4;\nTHREE.CustomBlending = 5;\n\n// custom blending equations\n// (numbers start from 100 not to clash with other\n//  mappings to OpenGL constants defined in Texture.js)\n\nTHREE.AddEquation = 100;\nTHREE.SubtractEquation = 101;\nTHREE.ReverseSubtractEquation = 102;\n\n// custom blending destination factors\n\nTHREE.ZeroFactor = 200;\nTHREE.OneFactor = 201;\nTHREE.SrcColorFactor = 202;\nTHREE.OneMinusSrcColorFactor = 203;\nTHREE.SrcAlphaFactor = 204;\nTHREE.OneMinusSrcAlphaFactor = 205;\nTHREE.DstAlphaFactor = 206;\nTHREE.OneMinusDstAlphaFactor = 207;\n\n// custom blending source factors\n\n//THREE.ZeroFactor = 200;\n//THREE.OneFactor = 201;\n//THREE.SrcAlphaFactor = 204;\n//THREE.OneMinusSrcAlphaFactor = 205;\n//THREE.DstAlphaFactor = 206;\n//THREE.OneMinusDstAlphaFactor = 207;\nTHREE.DstColorFactor = 208;\nTHREE.OneMinusDstColorFactor = 209;\nTHREE.SrcAlphaSaturateFactor = 210;\n\n\n// TEXTURE CONSTANTS\n\nTHREE.MultiplyOperation = 0;\nTHREE.MixOperation = 1;\nTHREE.AddOperation = 2;\n\n// Mapping modes\n\nTHREE.UVMapping = function () {};\n\nTHREE.CubeReflectionMapping = function () {};\nTHREE.CubeRefractionMapping = function () {};\n\nTHREE.SphericalReflectionMapping = function () {};\nTHREE.SphericalRefractionMapping = function () {};\n\n// Wrapping modes\n\nTHREE.RepeatWrapping = 1000;\nTHREE.ClampToEdgeWrapping = 1001;\nTHREE.MirroredRepeatWrapping = 1002;\n\n// Filters\n\nTHREE.NearestFilter = 1003;\nTHREE.NearestMipMapNearestFilter = 1004;\nTHREE.NearestMipMapLinearFilter = 1005;\nTHREE.LinearFilter = 1006;\nTHREE.LinearMipMapNearestFilter = 1007;\nTHREE.LinearMipMapLinearFilter = 1008;\n\n// Data types\n\nTHREE.UnsignedByteType = 1009;\nTHREE.ByteType = 1010;\nTHREE.ShortType = 1011;\nTHREE.UnsignedShortType = 1012;\nTHREE.IntType = 1013;\nTHREE.UnsignedIntType = 1014;\nTHREE.FloatType = 1015;\n\n// Pixel types\n\n//THREE.UnsignedByteType = 1009;\nTHREE.UnsignedShort4444Type = 1016;\nTHREE.UnsignedShort5551Type = 1017;\nTHREE.UnsignedShort565Type = 1018;\n\n// Pixel formats\n\nTHREE.AlphaFormat = 1019;\nTHREE.RGBFormat = 1020;\nTHREE.RGBAFormat = 1021;\nTHREE.LuminanceFormat = 1022;\nTHREE.LuminanceAlphaFormat = 1023;\n\n// Compressed texture formats\n\nTHREE.RGB_S3TC_DXT1_Format = 2001;\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\n\n/*\n// Potential future PVRTC compressed texture formats\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\n*/\n\n// File:src/math/Color.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Color = function ( color ) {\n\n  if ( arguments.length === 3 ) {\n\n    return this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\n\n  }\n\n  return this.set( color )\n\n};\n\nTHREE.Color.prototype = {\n\n  constructor: THREE.Color,\n\n  r: 1, g: 1, b: 1,\n\n  set: function ( value ) {\n\n    if ( value instanceof THREE.Color ) {\n\n      this.copy( value );\n\n    } else if ( typeof value === 'number' ) {\n\n      this.setHex( value );\n\n    } else if ( typeof value === 'string' ) {\n\n      this.setStyle( value );\n\n    }\n\n    return this;\n\n  },\n\n  setHex: function ( hex ) {\n\n    hex = Math.floor( hex );\n\n    this.r = ( hex >> 16 & 255 ) / 255;\n    this.g = ( hex >> 8 & 255 ) / 255;\n    this.b = ( hex & 255 ) / 255;\n\n    return this;\n\n  },\n\n  setRGB: function ( r, g, b ) {\n\n    this.r = r;\n    this.g = g;\n    this.b = b;\n\n    return this;\n\n  },\n\n  setHSL: function ( h, s, l ) {\n\n    // h,s,l ranges are in 0.0 - 1.0\n\n    if ( s === 0 ) {\n\n      this.r = this.g = this.b = l;\n\n    } else {\n\n      var hue2rgb = function ( p, q, t ) {\n\n        if ( t < 0 ) t += 1;\n        if ( t > 1 ) t -= 1;\n        if ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n        if ( t < 1 / 2 ) return q;\n        if ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n        return p;\n\n      };\n\n      var p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n      var q = ( 2 * l ) - p;\n\n      this.r = hue2rgb( q, p, h + 1 / 3 );\n      this.g = hue2rgb( q, p, h );\n      this.b = hue2rgb( q, p, h - 1 / 3 );\n\n    }\n\n    return this;\n\n  },\n\n  setStyle: function ( style ) {\n\n    // rgb(255,0,0)\n\n    if ( /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test( style ) ) {\n\n      var color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec( style );\n\n      this.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n      this.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n      this.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n      return this;\n\n    }\n\n    // rgb(100%,0%,0%)\n\n    if ( /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test( style ) ) {\n\n      var color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec( style );\n\n      this.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n      this.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n      this.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n      return this;\n\n    }\n\n    // #ff0000\n\n    if ( /^\\#([0-9a-f]{6})$/i.test( style ) ) {\n\n      var color = /^\\#([0-9a-f]{6})$/i.exec( style );\n\n      this.setHex( parseInt( color[ 1 ], 16 ) );\n\n      return this;\n\n    }\n\n    // #f00\n\n    if ( /^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test( style ) ) {\n\n      var color = /^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec( style );\n\n      this.setHex( parseInt( color[ 1 ] + color[ 1 ] + color[ 2 ] + color[ 2 ] + color[ 3 ] + color[ 3 ], 16 ) );\n\n      return this;\n\n    }\n\n    // red\n\n    if ( /^(\\w+)$/i.test( style ) ) {\n\n      this.setHex( THREE.ColorKeywords[ style ] );\n\n      return this;\n\n    }\n\n\n  },\n\n  copy: function ( color ) {\n\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n\n    return this;\n\n  },\n\n  copyGammaToLinear: function ( color ) {\n\n    this.r = color.r * color.r;\n    this.g = color.g * color.g;\n    this.b = color.b * color.b;\n\n    return this;\n\n  },\n\n  copyLinearToGamma: function ( color ) {\n\n    this.r = Math.sqrt( color.r );\n    this.g = Math.sqrt( color.g );\n    this.b = Math.sqrt( color.b );\n\n    return this;\n\n  },\n\n  convertGammaToLinear: function () {\n\n    var r = this.r, g = this.g, b = this.b;\n\n    this.r = r * r;\n    this.g = g * g;\n    this.b = b * b;\n\n    return this;\n\n  },\n\n  convertLinearToGamma: function () {\n\n    this.r = Math.sqrt( this.r );\n    this.g = Math.sqrt( this.g );\n    this.b = Math.sqrt( this.b );\n\n    return this;\n\n  },\n\n  getHex: function () {\n\n    return ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n  },\n\n  getHexString: function () {\n\n    return ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n  },\n\n  getHSL: function ( optionalTarget ) {\n\n    // h,s,l ranges are in 0.0 - 1.0\n\n    var hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n    var r = this.r, g = this.g, b = this.b;\n\n    var max = Math.max( r, g, b );\n    var min = Math.min( r, g, b );\n\n    var hue, saturation;\n    var lightness = ( min + max ) / 2.0;\n\n    if ( min === max ) {\n\n      hue = 0;\n      saturation = 0;\n\n    } else {\n\n      var delta = max - min;\n\n      saturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n      switch ( max ) {\n\n        case r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n        case g: hue = ( b - r ) / delta + 2; break;\n        case b: hue = ( r - g ) / delta + 4; break;\n\n      }\n\n      hue /= 6;\n\n    }\n\n    hsl.h = hue;\n    hsl.s = saturation;\n    hsl.l = lightness;\n\n    return hsl;\n\n  },\n\n  getStyle: function () {\n\n    return 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n  },\n\n  offsetHSL: function ( h, s, l ) {\n\n    var hsl = this.getHSL();\n\n    hsl.h += h; hsl.s += s; hsl.l += l;\n\n    this.setHSL( hsl.h, hsl.s, hsl.l );\n\n    return this;\n\n  },\n\n  add: function ( color ) {\n\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n\n    return this;\n\n  },\n\n  addColors: function ( color1, color2 ) {\n\n    this.r = color1.r + color2.r;\n    this.g = color1.g + color2.g;\n    this.b = color1.b + color2.b;\n\n    return this;\n\n  },\n\n  addScalar: function ( s ) {\n\n    this.r += s;\n    this.g += s;\n    this.b += s;\n\n    return this;\n\n  },\n\n  multiply: function ( color ) {\n\n    this.r *= color.r;\n    this.g *= color.g;\n    this.b *= color.b;\n\n    return this;\n\n  },\n\n  multiplyScalar: function ( s ) {\n\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n\n    return this;\n\n  },\n\n  lerp: function ( color, alpha ) {\n\n    this.r += ( color.r - this.r ) * alpha;\n    this.g += ( color.g - this.g ) * alpha;\n    this.b += ( color.b - this.b ) * alpha;\n\n    return this;\n\n  },\n\n  equals: function ( c ) {\n\n    return ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n  },\n\n  fromArray: function ( array ) {\n\n    this.r = array[ 0 ];\n    this.g = array[ 1 ];\n    this.b = array[ 2 ];\n\n    return this;\n\n  },\n\n  toArray: function () {\n\n    return [ this.r, this.g, this.b ];\n\n  },\n\n  clone: function () {\n\n    return new THREE.Color().setRGB( this.r, this.g, this.b );\n\n  }\n\n};\n\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n// File:src/math/Quaternion.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Quaternion = function ( x, y, z, w ) {\n\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._w = ( w !== undefined ) ? w : 1;\n\n};\n\nTHREE.Quaternion.prototype = {\n\n  constructor: THREE.Quaternion,\n\n  _x: 0,_y: 0, _z: 0, _w: 0,\n\n  get x () {\n\n    return this._x;\n\n  },\n\n  set x ( value ) {\n\n    this._x = value;\n    this.onChangeCallback();\n\n  },\n\n  get y () {\n\n    return this._y;\n\n  },\n\n  set y ( value ) {\n\n    this._y = value;\n    this.onChangeCallback();\n\n  },\n\n  get z () {\n\n    return this._z;\n\n  },\n\n  set z ( value ) {\n\n    this._z = value;\n    this.onChangeCallback();\n\n  },\n\n  get w () {\n\n    return this._w;\n\n  },\n\n  set w ( value ) {\n\n    this._w = value;\n    this.onChangeCallback();\n\n  },\n\n  set: function ( x, y, z, w ) {\n\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n\n    this.onChangeCallback();\n\n    return this;\n\n  },\n\n  copy: function ( quaternion ) {\n\n    this._x = quaternion.x;\n    this._y = quaternion.y;\n    this._z = quaternion.z;\n    this._w = quaternion.w;\n\n    this.onChangeCallback();\n\n    return this;\n\n  },\n\n  setFromEuler: function ( euler, update ) {\n\n    if ( euler instanceof THREE.Euler === false ) {\n\n      throw new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n    }\n\n    // http://www.mathworks.com/matlabcentral/fileexchange/\n    //  20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //  content/SpinCalc.m\n\n    var c1 = Math.cos( euler._x / 2 );\n    var c2 = Math.cos( euler._y / 2 );\n    var c3 = Math.cos( euler._z / 2 );\n    var s1 = Math.sin( euler._x / 2 );\n    var s2 = Math.sin( euler._y / 2 );\n    var s3 = Math.sin( euler._z / 2 );\n\n    if ( euler.order === 'XYZ' ) {\n\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    } else if ( euler.order === 'YXZ' ) {\n\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    } else if ( euler.order === 'ZXY' ) {\n\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    } else if ( euler.order === 'ZYX' ) {\n\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    } else if ( euler.order === 'YZX' ) {\n\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    } else if ( euler.order === 'XZY' ) {\n\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    }\n\n    if ( update !== false ) this.onChangeCallback();\n\n    return this;\n\n  },\n\n  setFromAxisAngle: function ( axis, angle ) {\n\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n    // assumes axis is normalized\n\n    var halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n    this._x = axis.x * s;\n    this._y = axis.y * s;\n    this._z = axis.z * s;\n    this._w = Math.cos( halfAngle );\n\n    this.onChangeCallback();\n\n    return this;\n\n  },\n\n  setFromRotationMatrix: function ( m ) {\n\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    var te = m.elements,\n\n      m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n      m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n      m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n      trace = m11 + m22 + m33,\n      s;\n\n    if ( trace > 0 ) {\n\n      s = 0.5 / Math.sqrt( trace + 1.0 );\n\n      this._w = 0.25 / s;\n      this._x = ( m32 - m23 ) * s;\n      this._y = ( m13 - m31 ) * s;\n      this._z = ( m21 - m12 ) * s;\n\n    } else if ( m11 > m22 && m11 > m33 ) {\n\n      s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n      this._w = ( m32 - m23 ) / s;\n      this._x = 0.25 * s;\n      this._y = ( m12 + m21 ) / s;\n      this._z = ( m13 + m31 ) / s;\n\n    } else if ( m22 > m33 ) {\n\n      s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n      this._w = ( m13 - m31 ) / s;\n      this._x = ( m12 + m21 ) / s;\n      this._y = 0.25 * s;\n      this._z = ( m23 + m32 ) / s;\n\n    } else {\n\n      s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n      this._w = ( m21 - m12 ) / s;\n      this._x = ( m13 + m31 ) / s;\n      this._y = ( m23 + m32 ) / s;\n      this._z = 0.25 * s;\n\n    }\n\n    this.onChangeCallback();\n\n    return this;\n\n  },\n\n  setFromUnitVectors: function () {\n\n    // http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n\n    // assumes direction vectors vFrom and vTo are normalized\n\n    var v1, r;\n\n    var EPS = 0.000001;\n\n    return function ( vFrom, vTo ) {\n\n      if ( v1 === undefined ) v1 = new THREE.Vector3();\n\n      r = vFrom.dot( vTo ) + 1;\n\n      if ( r < EPS ) {\n\n        r = 0;\n\n        if ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n          v1.set( - vFrom.y, vFrom.x, 0 );\n\n        } else {\n\n          v1.set( 0, - vFrom.z, vFrom.y );\n\n        }\n\n      } else {\n\n        v1.crossVectors( vFrom, vTo );\n\n      }\n\n      this._x = v1.x;\n      this._y = v1.y;\n      this._z = v1.z;\n      this._w = r;\n\n      this.normalize();\n\n      return this;\n\n    }\n\n  }(),\n\n  inverse: function () {\n\n    this.conjugate().normalize();\n\n    return this;\n\n  },\n\n  conjugate: function () {\n\n    this._x *= - 1;\n    this._y *= - 1;\n    this._z *= - 1;\n\n    this.onChangeCallback();\n\n    return this;\n\n  },\n\n  dot: function ( v ) {\n\n    return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n  },\n\n  lengthSq: function () {\n\n    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n  },\n\n  length: function () {\n\n    return Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n  },\n\n  normalize: function () {\n\n    var l = this.length();\n\n    if ( l === 0 ) {\n\n      this._x = 0;\n      this._y = 0;\n      this._z = 0;\n      this._w = 1;\n\n    } else {\n\n      l = 1 / l;\n\n      this._x = this._x * l;\n      this._y = this._y * l;\n      this._z = this._z * l;\n      this._w = this._w * l;\n\n    }\n\n    this.onChangeCallback();\n\n    return this;\n\n  },\n\n  multiply: function ( q, p ) {\n\n    if ( p !== undefined ) {\n\n      console.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n      return this.multiplyQuaternions( q, p );\n\n    }\n\n    return this.multiplyQuaternions( this, q );\n\n  },\n\n  multiplyQuaternions: function ( a, b ) {\n\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n    var qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n    var qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n    this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n    this.onChangeCallback();\n\n    return this;\n\n  },\n\n  multiplyVector3: function ( vector ) {\n\n    console.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n    return vector.applyQuaternion( this );\n\n  },\n\n  slerp: function ( qb, t ) {\n\n    var x = this._x, y = this._y, z = this._z, w = this._w;\n\n    // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n    if ( cosHalfTheta < 0 ) {\n\n      this._w = - qb._w;\n      this._x = - qb._x;\n      this._y = - qb._y;\n      this._z = - qb._z;\n\n      cosHalfTheta = - cosHalfTheta;\n\n    } else {\n\n      this.copy( qb );\n\n    }\n\n    if ( cosHalfTheta >= 1.0 ) {\n\n      this._w = w;\n      this._x = x;\n      this._y = y;\n      this._z = z;\n\n      return this;\n\n    }\n\n    var halfTheta = Math.acos( cosHalfTheta );\n    var sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n    if ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n      this._w = 0.5 * ( w + this._w );\n      this._x = 0.5 * ( x + this._x );\n      this._y = 0.5 * ( y + this._y );\n      this._z = 0.5 * ( z + this._z );\n\n      return this;\n\n    }\n\n    var ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n    ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n    this._w = ( w * ratioA + this._w * ratioB );\n    this._x = ( x * ratioA + this._x * ratioB );\n    this._y = ( y * ratioA + this._y * ratioB );\n    this._z = ( z * ratioA + this._z * ratioB );\n\n    this.onChangeCallback();\n\n    return this;\n\n  },\n\n  equals: function ( quaternion ) {\n\n    return ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n  },\n\n  fromArray: function ( array ) {\n\n    this._x = array[ 0 ];\n    this._y = array[ 1 ];\n    this._z = array[ 2 ];\n    this._w = array[ 3 ];\n\n    this.onChangeCallback();\n\n    return this;\n\n  },\n\n  toArray: function () {\n\n    return [ this._x, this._y, this._z, this._w ];\n\n  },\n\n  onChange: function ( callback ) {\n\n    this.onChangeCallback = callback;\n\n    return this;\n\n  },\n\n  onChangeCallback: function () {},\n\n  clone: function () {\n\n    return new THREE.Quaternion( this._x, this._y, this._z, this._w );\n\n  }\n\n};\n\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\n\n  return qm.copy( qa ).slerp( qb, t );\n\n}\n\n// File:src/math/Vector2.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nTHREE.Vector2 = function ( x, y ) {\n\n  this.x = x || 0;\n  this.y = y || 0;\n\n};\n\nTHREE.Vector2.prototype = {\n\n  constructor: THREE.Vector2,\n\n  set: function ( x, y ) {\n\n    this.x = x;\n    this.y = y;\n\n    return this;\n\n  },\n\n  setX: function ( x ) {\n\n    this.x = x;\n\n    return this;\n\n  },\n\n  setY: function ( y ) {\n\n    this.y = y;\n\n    return this;\n\n  },\n\n  setComponent: function ( index, value ) {\n\n    switch ( index ) {\n\n      case 0: this.x = value; break;\n      case 1: this.y = value; break;\n      default: throw new Error( 'index is out of range: ' + index );\n\n    }\n\n  },\n\n  getComponent: function ( index ) {\n\n    switch ( index ) {\n\n      case 0: return this.x;\n      case 1: return this.y;\n      default: throw new Error( 'index is out of range: ' + index );\n\n    }\n\n  },\n\n  copy: function ( v ) {\n\n    this.x = v.x;\n    this.y = v.y;\n\n    return this;\n\n  },\n\n  add: function ( v, w ) {\n\n    if ( w !== undefined ) {\n\n      console.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n      return this.addVectors( v, w );\n\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n\n    return this;\n\n  },\n\n  addVectors: function ( a, b ) {\n\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n\n    return this;\n\n  },\n\n  addScalar: function ( s ) {\n\n    this.x += s;\n    this.y += s;\n\n    return this;\n\n  },\n\n  sub: function ( v, w ) {\n\n    if ( w !== undefined ) {\n\n      console.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n      return this.subVectors( v, w );\n\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n\n    return this;\n\n  },\n\n  subVectors: function ( a, b ) {\n\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n\n    return this;\n\n  },\n\n  multiply: function ( v ) {\n\n    this.x *= v.x;\n    this.y *= v.y;\n\n    return this;\n\n  },\n\n  multiplyScalar: function ( s ) {\n\n    this.x *= s;\n    this.y *= s;\n\n    return this;\n\n  },\n\n  divide: function ( v ) {\n\n    this.x /= v.x;\n    this.y /= v.y;\n\n    return this;\n\n  },\n\n  divideScalar: function ( scalar ) {\n\n    if ( scalar !== 0 ) {\n\n      var invScalar = 1 / scalar;\n\n      this.x *= invScalar;\n      this.y *= invScalar;\n\n    } else {\n\n      this.x = 0;\n      this.y = 0;\n\n    }\n\n    return this;\n\n  },\n\n  min: function ( v ) {\n\n    if ( this.x > v.x ) {\n\n      this.x = v.x;\n\n    }\n\n    if ( this.y > v.y ) {\n\n      this.y = v.y;\n\n    }\n\n    return this;\n\n  },\n\n  max: function ( v ) {\n\n    if ( this.x < v.x ) {\n\n      this.x = v.x;\n\n    }\n\n    if ( this.y < v.y ) {\n\n      this.y = v.y;\n\n    }\n\n    return this;\n\n  },\n\n  clamp: function ( min, max ) {\n\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n    if ( this.x < min.x ) {\n\n      this.x = min.x;\n\n    } else if ( this.x > max.x ) {\n\n      this.x = max.x;\n\n    }\n\n    if ( this.y < min.y ) {\n\n      this.y = min.y;\n\n    } else if ( this.y > max.y ) {\n\n      this.y = max.y;\n\n    }\n\n    return this;\n  },\n\n  clampScalar: ( function () {\n\n    var min, max;\n\n    return function ( minVal, maxVal ) {\n\n      if ( min === undefined ) {\n\n        min = new THREE.Vector2();\n        max = new THREE.Vector2();\n\n      }\n\n      min.set( minVal, minVal );\n      max.set( maxVal, maxVal );\n\n      return this.clamp( min, max );\n\n    };\n\n  } )(),\n\n  floor: function () {\n\n    this.x = Math.floor( this.x );\n    this.y = Math.floor( this.y );\n\n    return this;\n\n  },\n\n  ceil: function () {\n\n    this.x = Math.ceil( this.x );\n    this.y = Math.ceil( this.y );\n\n    return this;\n\n  },\n\n  round: function () {\n\n    this.x = Math.round( this.x );\n    this.y = Math.round( this.y );\n\n    return this;\n\n  },\n\n  roundToZero: function () {\n\n    this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n    this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n    return this;\n\n  },\n\n  negate: function () {\n\n    this.x = - this.x;\n    this.y = - this.y;\n\n    return this;\n\n  },\n\n  dot: function ( v ) {\n\n    return this.x * v.x + this.y * v.y;\n\n  },\n\n  lengthSq: function () {\n\n    return this.x * this.x + this.y * this.y;\n\n  },\n\n  length: function () {\n\n    return Math.sqrt( this.x * this.x + this.y * this.y );\n\n  },\n\n  normalize: function () {\n\n    return this.divideScalar( this.length() );\n\n  },\n\n  distanceTo: function ( v ) {\n\n    return Math.sqrt( this.distanceToSquared( v ) );\n\n  },\n\n  distanceToSquared: function ( v ) {\n\n    var dx = this.x - v.x, dy = this.y - v.y;\n    return dx * dx + dy * dy;\n\n  },\n\n  setLength: function ( l ) {\n\n    var oldLength = this.length();\n\n    if ( oldLength !== 0 && l !== oldLength ) {\n\n      this.multiplyScalar( l / oldLength );\n    }\n\n    return this;\n\n  },\n\n  lerp: function ( v, alpha ) {\n\n    this.x += ( v.x - this.x ) * alpha;\n    this.y += ( v.y - this.y ) * alpha;\n\n    return this;\n\n  },\n\n  equals: function ( v ) {\n\n    return ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n  },\n\n  fromArray: function ( array ) {\n\n    this.x = array[ 0 ];\n    this.y = array[ 1 ];\n\n    return this;\n\n  },\n\n  toArray: function () {\n\n    return [ this.x, this.y ];\n\n  },\n\n  clone: function () {\n\n    return new THREE.Vector2( this.x, this.y );\n\n  }\n\n};\n\n// File:src/math/Vector3.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author *kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Vector3 = function ( x, y, z ) {\n\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n\n};\n\nTHREE.Vector3.prototype = {\n\n  constructor: THREE.Vector3,\n\n  set: function ( x, y, z ) {\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n    return this;\n\n  },\n\n  setX: function ( x ) {\n\n    this.x = x;\n\n    return this;\n\n  },\n\n  setY: function ( y ) {\n\n    this.y = y;\n\n    return this;\n\n  },\n\n  setZ: function ( z ) {\n\n    this.z = z;\n\n    return this;\n\n  },\n\n  setComponent: function ( index, value ) {\n\n    switch ( index ) {\n\n      case 0: this.x = value; break;\n      case 1: this.y = value; break;\n      case 2: this.z = value; break;\n      default: throw new Error( 'index is out of range: ' + index );\n\n    }\n\n  },\n\n  getComponent: function ( index ) {\n\n    switch ( index ) {\n\n      case 0: return this.x;\n      case 1: return this.y;\n      case 2: return this.z;\n      default: throw new Error( 'index is out of range: ' + index );\n\n    }\n\n  },\n\n  copy: function ( v ) {\n\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n\n    return this;\n\n  },\n\n  add: function ( v, w ) {\n\n    if ( w !== undefined ) {\n\n      console.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n      return this.addVectors( v, w );\n\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n\n    return this;\n\n  },\n\n  addScalar: function ( s ) {\n\n    this.x += s;\n    this.y += s;\n    this.z += s;\n\n    return this;\n\n  },\n\n  addVectors: function ( a, b ) {\n\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n\n    return this;\n\n  },\n\n  sub: function ( v, w ) {\n\n    if ( w !== undefined ) {\n\n      console.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n      return this.subVectors( v, w );\n\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n\n    return this;\n\n  },\n\n  subVectors: function ( a, b ) {\n\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n\n    return this;\n\n  },\n\n  multiply: function ( v, w ) {\n\n    if ( w !== undefined ) {\n\n      console.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n      return this.multiplyVectors( v, w );\n\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n\n    return this;\n\n  },\n\n  multiplyScalar: function ( scalar ) {\n\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n\n    return this;\n\n  },\n\n  multiplyVectors: function ( a, b ) {\n\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n\n    return this;\n\n  },\n\n  applyEuler: function () {\n\n    var quaternion;\n\n    return function ( euler ) {\n\n      if ( euler instanceof THREE.Euler === false ) {\n\n        console.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n      }\n\n      if ( quaternion === undefined ) quaternion = new THREE.Quaternion();\n\n      this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n      return this;\n\n    };\n\n  }(),\n\n  applyAxisAngle: function () {\n\n    var quaternion;\n\n    return function ( axis, angle ) {\n\n      if ( quaternion === undefined ) quaternion = new THREE.Quaternion();\n\n      this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n      return this;\n\n    };\n\n  }(),\n\n  applyMatrix3: function ( m ) {\n\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n\n    var e = m.elements;\n\n    this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n    this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n    this.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n    return this;\n\n  },\n\n  applyMatrix4: function ( m ) {\n\n    // input: THREE.Matrix4 affine matrix\n\n    var x = this.x, y = this.y, z = this.z;\n\n    var e = m.elements;\n\n    this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\n    this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\n    this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\n\n    return this;\n\n  },\n\n  applyProjection: function ( m ) {\n\n    // input: THREE.Matrix4 projection matrix\n\n    var x = this.x, y = this.y, z = this.z;\n\n    var e = m.elements;\n    var d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\n\n    this.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\n    this.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\n    this.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\n\n    return this;\n\n  },\n\n  applyQuaternion: function ( q ) {\n\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n\n    var qx = q.x;\n    var qy = q.y;\n    var qz = q.z;\n    var qw = q.w;\n\n    // calculate quat * vector\n\n    var ix =  qw * x + qy * z - qz * y;\n    var iy =  qw * y + qz * x - qx * z;\n    var iz =  qw * z + qx * y - qy * x;\n    var iw = - qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n\n    this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n    this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n    this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n    return this;\n\n  },\n\n  transformDirection: function ( m ) {\n\n    // input: THREE.Matrix4 affine matrix\n    // vector interpreted as a direction\n\n    var x = this.x, y = this.y, z = this.z;\n\n    var e = m.elements;\n\n    this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n    this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n    this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n    this.normalize();\n\n    return this;\n\n  },\n\n  divide: function ( v ) {\n\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n\n    return this;\n\n  },\n\n  divideScalar: function ( scalar ) {\n\n    if ( scalar !== 0 ) {\n\n      var invScalar = 1 / scalar;\n\n      this.x *= invScalar;\n      this.y *= invScalar;\n      this.z *= invScalar;\n\n    } else {\n\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n\n    }\n\n    return this;\n\n  },\n\n  min: function ( v ) {\n\n    if ( this.x > v.x ) {\n\n      this.x = v.x;\n\n    }\n\n    if ( this.y > v.y ) {\n\n      this.y = v.y;\n\n    }\n\n    if ( this.z > v.z ) {\n\n      this.z = v.z;\n\n    }\n\n    return this;\n\n  },\n\n  max: function ( v ) {\n\n    if ( this.x < v.x ) {\n\n      this.x = v.x;\n\n    }\n\n    if ( this.y < v.y ) {\n\n      this.y = v.y;\n\n    }\n\n    if ( this.z < v.z ) {\n\n      this.z = v.z;\n\n    }\n\n    return this;\n\n  },\n\n  clamp: function ( min, max ) {\n\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n    if ( this.x < min.x ) {\n\n      this.x = min.x;\n\n    } else if ( this.x > max.x ) {\n\n      this.x = max.x;\n\n    }\n\n    if ( this.y < min.y ) {\n\n      this.y = min.y;\n\n    } else if ( this.y > max.y ) {\n\n      this.y = max.y;\n\n    }\n\n    if ( this.z < min.z ) {\n\n      this.z = min.z;\n\n    } else if ( this.z > max.z ) {\n\n      this.z = max.z;\n\n    }\n\n    return this;\n\n  },\n\n  clampScalar: ( function () {\n\n    var min, max;\n\n    return function ( minVal, maxVal ) {\n\n      if ( min === undefined ) {\n\n        min = new THREE.Vector3();\n        max = new THREE.Vector3();\n\n      }\n\n      min.set( minVal, minVal, minVal );\n      max.set( maxVal, maxVal, maxVal );\n\n      return this.clamp( min, max );\n\n    };\n\n  } )(),\n\n  floor: function () {\n\n    this.x = Math.floor( this.x );\n    this.y = Math.floor( this.y );\n    this.z = Math.floor( this.z );\n\n    return this;\n\n  },\n\n  ceil: function () {\n\n    this.x = Math.ceil( this.x );\n    this.y = Math.ceil( this.y );\n    this.z = Math.ceil( this.z );\n\n    return this;\n\n  },\n\n  round: function () {\n\n    this.x = Math.round( this.x );\n    this.y = Math.round( this.y );\n    this.z = Math.round( this.z );\n\n    return this;\n\n  },\n\n  roundToZero: function () {\n\n    this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n    this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n    this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n    return this;\n\n  },\n\n  negate: function () {\n\n    this.x = - this.x;\n    this.y = - this.y;\n    this.z = - this.z;\n\n    return this;\n\n  },\n\n  dot: function ( v ) {\n\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n\n  },\n\n  lengthSq: function () {\n\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n\n  },\n\n  length: function () {\n\n    return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n  },\n\n  lengthManhattan: function () {\n\n    return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n  },\n\n  normalize: function () {\n\n    return this.divideScalar( this.length() );\n\n  },\n\n  setLength: function ( l ) {\n\n    var oldLength = this.length();\n\n    if ( oldLength !== 0 && l !== oldLength  ) {\n\n      this.multiplyScalar( l / oldLength );\n    }\n\n    return this;\n\n  },\n\n  lerp: function ( v, alpha ) {\n\n    this.x += ( v.x - this.x ) * alpha;\n    this.y += ( v.y - this.y ) * alpha;\n    this.z += ( v.z - this.z ) * alpha;\n\n    return this;\n\n  },\n\n  cross: function ( v, w ) {\n\n    if ( w !== undefined ) {\n\n      console.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n      return this.crossVectors( v, w );\n\n    }\n\n    var x = this.x, y = this.y, z = this.z;\n\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n\n    return this;\n\n  },\n\n  crossVectors: function ( a, b ) {\n\n    var ax = a.x, ay = a.y, az = a.z;\n    var bx = b.x, by = b.y, bz = b.z;\n\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n\n    return this;\n\n  },\n\n  projectOnVector: function () {\n\n    var v1, dot;\n\n    return function ( vector ) {\n\n      if ( v1 === undefined ) v1 = new THREE.Vector3();\n\n      v1.copy( vector ).normalize();\n\n      dot = this.dot( v1 );\n\n      return this.copy( v1 ).multiplyScalar( dot );\n\n    };\n\n  }(),\n\n  projectOnPlane: function () {\n\n    var v1;\n\n    return function ( planeNormal ) {\n\n      if ( v1 === undefined ) v1 = new THREE.Vector3();\n\n      v1.copy( this ).projectOnVector( planeNormal );\n\n      return this.sub( v1 );\n\n    }\n\n  }(),\n\n  reflect: function () {\n\n    // reflect incident vector off plane orthogonal to normal\n    // normal is assumed to have unit length\n\n    var v1;\n\n    return function ( normal ) {\n\n      if ( v1 === undefined ) v1 = new THREE.Vector3();\n\n      return this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n    }\n\n  }(),\n\n  angleTo: function ( v ) {\n\n    var theta = this.dot( v ) / ( this.length() * v.length() );\n\n    // clamp, to handle numerical problems\n\n    return Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\n\n  },\n\n  distanceTo: function ( v ) {\n\n    return Math.sqrt( this.distanceToSquared( v ) );\n\n  },\n\n  distanceToSquared: function ( v ) {\n\n    var dx = this.x - v.x;\n    var dy = this.y - v.y;\n    var dz = this.z - v.z;\n\n    return dx * dx + dy * dy + dz * dz;\n\n  },\n\n  setEulerFromRotationMatrix: function ( m, order ) {\n\n    console.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n  },\n\n  setEulerFromQuaternion: function ( q, order ) {\n\n    console.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n  },\n\n  getPositionFromMatrix: function ( m ) {\n\n    console.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\n    return this.setFromMatrixPosition( m );\n\n  },\n\n  getScaleFromMatrix: function ( m ) {\n\n    console.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\n    return this.setFromMatrixScale( m );\n  },\n\n  getColumnFromMatrix: function ( index, matrix ) {\n\n    console.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\n    return this.setFromMatrixColumn( index, matrix );\n\n  },\n\n  setFromMatrixPosition: function ( m ) {\n\n    this.x = m.elements[ 12 ];\n    this.y = m.elements[ 13 ];\n    this.z = m.elements[ 14 ];\n\n    return this;\n\n  },\n\n  setFromMatrixScale: function ( m ) {\n\n    var sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[  2 ] ).length();\n    var sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[  6 ] ).length();\n    var sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\n\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n\n    return this;\n  },\n\n  setFromMatrixColumn: function ( index, matrix ) {\n\n    var offset = index * 4;\n\n    var me = matrix.elements;\n\n    this.x = me[ offset ];\n    this.y = me[ offset + 1 ];\n    this.z = me[ offset + 2 ];\n\n    return this;\n\n  },\n\n  equals: function ( v ) {\n\n    return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n  },\n\n  fromArray: function ( array ) {\n\n    this.x = array[ 0 ];\n    this.y = array[ 1 ];\n    this.z = array[ 2 ];\n\n    return this;\n\n  },\n\n  toArray: function () {\n\n    return [ this.x, this.y, this.z ];\n\n  },\n\n  clone: function () {\n\n    return new THREE.Vector3( this.x, this.y, this.z );\n\n  }\n\n};\n\n// File:src/math/Vector4.js\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Vector4 = function ( x, y, z, w ) {\n\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = ( w !== undefined ) ? w : 1;\n\n};\n\nTHREE.Vector4.prototype = {\n\n  constructor: THREE.Vector4,\n\n  set: function ( x, y, z, w ) {\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n\n    return this;\n\n  },\n\n  setX: function ( x ) {\n\n    this.x = x;\n\n    return this;\n\n  },\n\n  setY: function ( y ) {\n\n    this.y = y;\n\n    return this;\n\n  },\n\n  setZ: function ( z ) {\n\n    this.z = z;\n\n    return this;\n\n  },\n\n  setW: function ( w ) {\n\n    this.w = w;\n\n    return this;\n\n  },\n\n  setComponent: function ( index, value ) {\n\n    switch ( index ) {\n\n      case 0: this.x = value; break;\n      case 1: this.y = value; break;\n      case 2: this.z = value; break;\n      case 3: this.w = value; break;\n      default: throw new Error( 'index is out of range: ' + index );\n\n    }\n\n  },\n\n  getComponent: function ( index ) {\n\n    switch ( index ) {\n\n      case 0: return this.x;\n      case 1: return this.y;\n      case 2: return this.z;\n      case 3: return this.w;\n      default: throw new Error( 'index is out of range: ' + index );\n\n    }\n\n  },\n\n  copy: function ( v ) {\n\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    this.w = ( v.w !== undefined ) ? v.w : 1;\n\n    return this;\n\n  },\n\n  add: function ( v, w ) {\n\n    if ( w !== undefined ) {\n\n      console.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n      return this.addVectors( v, w );\n\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    this.w += v.w;\n\n    return this;\n\n  },\n\n  addScalar: function ( s ) {\n\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    this.w += s;\n\n    return this;\n\n  },\n\n  addVectors: function ( a, b ) {\n\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    this.w = a.w + b.w;\n\n    return this;\n\n  },\n\n  sub: function ( v, w ) {\n\n    if ( w !== undefined ) {\n\n      console.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n      return this.subVectors( v, w );\n\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    this.w -= v.w;\n\n    return this;\n\n  },\n\n  subVectors: function ( a, b ) {\n\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    this.w = a.w - b.w;\n\n    return this;\n\n  },\n\n  multiplyScalar: function ( scalar ) {\n\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    this.w *= scalar;\n\n    return this;\n\n  },\n\n  applyMatrix4: function ( m ) {\n\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var w = this.w;\n\n    var e = m.elements;\n\n    this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n    this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n    this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n    this.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n    return this;\n\n  },\n\n  divideScalar: function ( scalar ) {\n\n    if ( scalar !== 0 ) {\n\n      var invScalar = 1 / scalar;\n\n      this.x *= invScalar;\n      this.y *= invScalar;\n      this.z *= invScalar;\n      this.w *= invScalar;\n\n    } else {\n\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 1;\n\n    }\n\n    return this;\n\n  },\n\n  setAxisAngleFromQuaternion: function ( q ) {\n\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n    // q is assumed to be normalized\n\n    this.w = 2 * Math.acos( q.w );\n\n    var s = Math.sqrt( 1 - q.w * q.w );\n\n    if ( s < 0.0001 ) {\n\n       this.x = 1;\n       this.y = 0;\n       this.z = 0;\n\n    } else {\n\n       this.x = q.x / s;\n       this.y = q.y / s;\n       this.z = q.z / s;\n\n    }\n\n    return this;\n\n  },\n\n  setAxisAngleFromRotationMatrix: function ( m ) {\n\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    var angle, x, y, z,   // variables for result\n      epsilon = 0.01,   // margin to allow for rounding errors\n      epsilon2 = 0.1,   // margin to distinguish between 0 and 180 degrees\n\n      te = m.elements,\n\n      m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n      m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n      m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n    if ( ( Math.abs( m12 - m21 ) < epsilon )\n       && ( Math.abs( m13 - m31 ) < epsilon )\n       && ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n      // singularity found\n      // first check for identity matrix which must have +1 for all terms\n      // in leading diagonal and zero in other terms\n\n      if ( ( Math.abs( m12 + m21 ) < epsilon2 )\n         && ( Math.abs( m13 + m31 ) < epsilon2 )\n         && ( Math.abs( m23 + m32 ) < epsilon2 )\n         && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n        // this singularity is identity matrix so angle = 0\n\n        this.set( 1, 0, 0, 0 );\n\n        return this; // zero angle, arbitrary axis\n\n      }\n\n      // otherwise this singularity is angle = 180\n\n      angle = Math.PI;\n\n      var xx = ( m11 + 1 ) / 2;\n      var yy = ( m22 + 1 ) / 2;\n      var zz = ( m33 + 1 ) / 2;\n      var xy = ( m12 + m21 ) / 4;\n      var xz = ( m13 + m31 ) / 4;\n      var yz = ( m23 + m32 ) / 4;\n\n      if ( ( xx > yy ) && ( xx > zz ) ) { // m11 is the largest diagonal term\n\n        if ( xx < epsilon ) {\n\n          x = 0;\n          y = 0.707106781;\n          z = 0.707106781;\n\n        } else {\n\n          x = Math.sqrt( xx );\n          y = xy / x;\n          z = xz / x;\n\n        }\n\n      } else if ( yy > zz ) { // m22 is the largest diagonal term\n\n        if ( yy < epsilon ) {\n\n          x = 0.707106781;\n          y = 0;\n          z = 0.707106781;\n\n        } else {\n\n          y = Math.sqrt( yy );\n          x = xy / y;\n          z = yz / y;\n\n        }\n\n      } else { // m33 is the largest diagonal term so base result on this\n\n        if ( zz < epsilon ) {\n\n          x = 0.707106781;\n          y = 0.707106781;\n          z = 0;\n\n        } else {\n\n          z = Math.sqrt( zz );\n          x = xz / z;\n          y = yz / z;\n\n        }\n\n      }\n\n      this.set( x, y, z, angle );\n\n      return this; // return 180 deg rotation\n\n    }\n\n    // as we have reached here there are no singularities so we can handle normally\n\n    var s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\n              + ( m13 - m31 ) * ( m13 - m31 )\n              + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n    if ( Math.abs( s ) < 0.001 ) s = 1;\n\n    // prevent divide by zero, should not happen if matrix is orthogonal and should be\n    // caught by singularity test above, but I've left it in just in case\n\n    this.x = ( m32 - m23 ) / s;\n    this.y = ( m13 - m31 ) / s;\n    this.z = ( m21 - m12 ) / s;\n    this.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n    return this;\n\n  },\n\n  min: function ( v ) {\n\n    if ( this.x > v.x ) {\n\n      this.x = v.x;\n\n    }\n\n    if ( this.y > v.y ) {\n\n      this.y = v.y;\n\n    }\n\n    if ( this.z > v.z ) {\n\n      this.z = v.z;\n\n    }\n\n    if ( this.w > v.w ) {\n\n      this.w = v.w;\n\n    }\n\n    return this;\n\n  },\n\n  max: function ( v ) {\n\n    if ( this.x < v.x ) {\n\n      this.x = v.x;\n\n    }\n\n    if ( this.y < v.y ) {\n\n      this.y = v.y;\n\n    }\n\n    if ( this.z < v.z ) {\n\n      this.z = v.z;\n\n    }\n\n    if ( this.w < v.w ) {\n\n      this.w = v.w;\n\n    }\n\n    return this;\n\n  },\n\n  clamp: function ( min, max ) {\n\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n    if ( this.x < min.x ) {\n\n      this.x = min.x;\n\n    } else if ( this.x > max.x ) {\n\n      this.x = max.x;\n\n    }\n\n    if ( this.y < min.y ) {\n\n      this.y = min.y;\n\n    } else if ( this.y > max.y ) {\n\n      this.y = max.y;\n\n    }\n\n    if ( this.z < min.z ) {\n\n      this.z = min.z;\n\n    } else if ( this.z > max.z ) {\n\n      this.z = max.z;\n\n    }\n\n    if ( this.w < min.w ) {\n\n      this.w = min.w;\n\n    } else if ( this.w > max.w ) {\n\n      this.w = max.w;\n\n    }\n\n    return this;\n\n  },\n\n  clampScalar: ( function () {\n\n    var min, max;\n\n    return function ( minVal, maxVal ) {\n\n      if ( min === undefined ) {\n\n        min = new THREE.Vector4();\n        max = new THREE.Vector4();\n\n      }\n\n      min.set( minVal, minVal, minVal, minVal );\n      max.set( maxVal, maxVal, maxVal, maxVal );\n\n      return this.clamp( min, max );\n\n    };\n\n  } )(),\n\n    floor: function () {\n\n        this.x = Math.floor( this.x );\n        this.y = Math.floor( this.y );\n        this.z = Math.floor( this.z );\n        this.w = Math.floor( this.w );\n\n        return this;\n\n    },\n\n    ceil: function () {\n\n        this.x = Math.ceil( this.x );\n        this.y = Math.ceil( this.y );\n        this.z = Math.ceil( this.z );\n        this.w = Math.ceil( this.w );\n\n        return this;\n\n    },\n\n    round: function () {\n\n        this.x = Math.round( this.x );\n        this.y = Math.round( this.y );\n        this.z = Math.round( this.z );\n        this.w = Math.round( this.w );\n\n        return this;\n\n    },\n\n    roundToZero: function () {\n\n        this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n        this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n        this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n        this.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n        return this;\n\n    },\n\n  negate: function () {\n\n    this.x = - this.x;\n    this.y = - this.y;\n    this.z = - this.z;\n    this.w = - this.w;\n\n    return this;\n\n  },\n\n  dot: function ( v ) {\n\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n  },\n\n  lengthSq: function () {\n\n    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n  },\n\n  length: function () {\n\n    return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n  },\n\n  lengthManhattan: function () {\n\n    return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n  },\n\n  normalize: function () {\n\n    return this.divideScalar( this.length() );\n\n  },\n\n  setLength: function ( l ) {\n\n    var oldLength = this.length();\n\n    if ( oldLength !== 0 && l !== oldLength ) {\n\n      this.multiplyScalar( l / oldLength );\n\n    }\n\n    return this;\n\n  },\n\n  lerp: function ( v, alpha ) {\n\n    this.x += ( v.x - this.x ) * alpha;\n    this.y += ( v.y - this.y ) * alpha;\n    this.z += ( v.z - this.z ) * alpha;\n    this.w += ( v.w - this.w ) * alpha;\n\n    return this;\n\n  },\n\n  equals: function ( v ) {\n\n    return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n  },\n\n  fromArray: function ( array ) {\n\n    this.x = array[ 0 ];\n    this.y = array[ 1 ];\n    this.z = array[ 2 ];\n    this.w = array[ 3 ];\n\n    return this;\n\n  },\n\n  toArray: function () {\n\n    return [ this.x, this.y, this.z, this.w ];\n\n  },\n\n  clone: function () {\n\n    return new THREE.Vector4( this.x, this.y, this.z, this.w );\n\n  }\n\n};\n\n// File:src/math/Euler.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Euler = function ( x, y, z, order ) {\n\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._order = order || THREE.Euler.DefaultOrder;\n\n};\n\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nTHREE.Euler.DefaultOrder = 'XYZ';\n\nTHREE.Euler.prototype = {\n\n  constructor: THREE.Euler,\n\n  _x: 0, _y: 0, _z: 0, _order: THREE.Euler.DefaultOrder,\n\n  get x () {\n\n    return this._x;\n\n  },\n\n  set x ( value ) {\n\n    this._x = value;\n    this.onChangeCallback();\n\n  },\n\n  get y () {\n\n    return this._y;\n\n  },\n\n  set y ( value ) {\n\n    this._y = value;\n    this.onChangeCallback();\n\n  },\n\n  get z () {\n\n    return this._z;\n\n  },\n\n  set z ( value ) {\n\n    this._z = value;\n    this.onChangeCallback();\n\n  },\n\n  get order () {\n\n    return this._order;\n\n  },\n\n  set order ( value ) {\n\n    this._order = value;\n    this.onChangeCallback();\n\n  },\n\n  set: function ( x, y, z, order ) {\n\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order || this._order;\n\n    this.onChangeCallback();\n\n    return this;\n\n  },\n\n  copy: function ( euler ) {\n\n    this._x = euler._x;\n    this._y = euler._y;\n    this._z = euler._z;\n    this._order = euler._order;\n\n    this.onChangeCallback();\n\n    return this;\n\n  },\n\n  setFromRotationMatrix: function ( m, order ) {\n\n    var clamp = THREE.Math.clamp;\n\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    var te = m.elements;\n    var m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n    var m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n    var m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n    order = order || this._order;\n\n    if ( order === 'XYZ' ) {\n\n      this._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n      if ( Math.abs( m13 ) < 0.99999 ) {\n\n        this._x = Math.atan2( - m23, m33 );\n        this._z = Math.atan2( - m12, m11 );\n\n      } else {\n\n        this._x = Math.atan2( m32, m22 );\n        this._z = 0;\n\n      }\n\n    } else if ( order === 'YXZ' ) {\n\n      this._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n      if ( Math.abs( m23 ) < 0.99999 ) {\n\n        this._y = Math.atan2( m13, m33 );\n        this._z = Math.atan2( m21, m22 );\n\n      } else {\n\n        this._y = Math.atan2( - m31, m11 );\n        this._z = 0;\n\n      }\n\n    } else if ( order === 'ZXY' ) {\n\n      this._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n      if ( Math.abs( m32 ) < 0.99999 ) {\n\n        this._y = Math.atan2( - m31, m33 );\n        this._z = Math.atan2( - m12, m22 );\n\n      } else {\n\n        this._y = 0;\n        this._z = Math.atan2( m21, m11 );\n\n      }\n\n    } else if ( order === 'ZYX' ) {\n\n      this._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n      if ( Math.abs( m31 ) < 0.99999 ) {\n\n        this._x = Math.atan2( m32, m33 );\n        this._z = Math.atan2( m21, m11 );\n\n      } else {\n\n        this._x = 0;\n        this._z = Math.atan2( - m12, m22 );\n\n      }\n\n    } else if ( order === 'YZX' ) {\n\n      this._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n      if ( Math.abs( m21 ) < 0.99999 ) {\n\n        this._x = Math.atan2( - m23, m22 );\n        this._y = Math.atan2( - m31, m11 );\n\n      } else {\n\n        this._x = 0;\n        this._y = Math.atan2( m13, m33 );\n\n      }\n\n    } else if ( order === 'XZY' ) {\n\n      this._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n      if ( Math.abs( m12 ) < 0.99999 ) {\n\n        this._x = Math.atan2( m32, m22 );\n        this._y = Math.atan2( m13, m11 );\n\n      } else {\n\n        this._x = Math.atan2( - m23, m33 );\n        this._y = 0;\n\n      }\n\n    } else {\n\n      console.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\n\n    }\n\n    this._order = order;\n\n    this.onChangeCallback();\n\n    return this;\n\n  },\n\n  setFromQuaternion: function ( q, order, update ) {\n\n    var clamp = THREE.Math.clamp;\n\n    // q is assumed to be normalized\n\n    // http://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/content/SpinCalc.m\n\n    var sqx = q.x * q.x;\n    var sqy = q.y * q.y;\n    var sqz = q.z * q.z;\n    var sqw = q.w * q.w;\n\n    order = order || this._order;\n\n    if ( order === 'XYZ' ) {\n\n      this._x = Math.atan2( 2 * ( q.x * q.w - q.y * q.z ), ( sqw - sqx - sqy + sqz ) );\n      this._y = Math.asin(  clamp( 2 * ( q.x * q.z + q.y * q.w ), - 1, 1 ) );\n      this._z = Math.atan2( 2 * ( q.z * q.w - q.x * q.y ), ( sqw + sqx - sqy - sqz ) );\n\n    } else if ( order ===  'YXZ' ) {\n\n      this._x = Math.asin(  clamp( 2 * ( q.x * q.w - q.y * q.z ), - 1, 1 ) );\n      this._y = Math.atan2( 2 * ( q.x * q.z + q.y * q.w ), ( sqw - sqx - sqy + sqz ) );\n      this._z = Math.atan2( 2 * ( q.x * q.y + q.z * q.w ), ( sqw - sqx + sqy - sqz ) );\n\n    } else if ( order === 'ZXY' ) {\n\n      this._x = Math.asin(  clamp( 2 * ( q.x * q.w + q.y * q.z ), - 1, 1 ) );\n      this._y = Math.atan2( 2 * ( q.y * q.w - q.z * q.x ), ( sqw - sqx - sqy + sqz ) );\n      this._z = Math.atan2( 2 * ( q.z * q.w - q.x * q.y ), ( sqw - sqx + sqy - sqz ) );\n\n    } else if ( order === 'ZYX' ) {\n\n      this._x = Math.atan2( 2 * ( q.x * q.w + q.z * q.y ), ( sqw - sqx - sqy + sqz ) );\n      this._y = Math.asin(  clamp( 2 * ( q.y * q.w - q.x * q.z ), - 1, 1 ) );\n      this._z = Math.atan2( 2 * ( q.x * q.y + q.z * q.w ), ( sqw + sqx - sqy - sqz ) );\n\n    } else if ( order === 'YZX' ) {\n\n      this._x = Math.atan2( 2 * ( q.x * q.w - q.z * q.y ), ( sqw - sqx + sqy - sqz ) );\n      this._y = Math.atan2( 2 * ( q.y * q.w - q.x * q.z ), ( sqw + sqx - sqy - sqz ) );\n      this._z = Math.asin(  clamp( 2 * ( q.x * q.y + q.z * q.w ), - 1, 1 ) );\n\n    } else if ( order === 'XZY' ) {\n\n      this._x = Math.atan2( 2 * ( q.x * q.w + q.y * q.z ), ( sqw - sqx + sqy - sqz ) );\n      this._y = Math.atan2( 2 * ( q.x * q.z + q.y * q.w ), ( sqw + sqx - sqy - sqz ) );\n      this._z = Math.asin(  clamp( 2 * ( q.z * q.w - q.x * q.y ), - 1, 1 ) );\n\n    } else {\n\n      console.warn( 'THREE.Euler: .setFromQuaternion() given unsupported order: ' + order )\n\n    }\n\n    this._order = order;\n\n    if ( update !== false ) this.onChangeCallback();\n\n    return this;\n\n  },\n\n  reorder: function () {\n\n    // WARNING: this discards revolution information -bhouston\n\n    var q = new THREE.Quaternion();\n\n    return function ( newOrder ) {\n\n      q.setFromEuler( this );\n      this.setFromQuaternion( q, newOrder );\n\n    };\n\n\n  }(),\n\n  equals: function ( euler ) {\n\n    return ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n  },\n\n  fromArray: function ( array ) {\n\n    this._x = array[ 0 ];\n    this._y = array[ 1 ];\n    this._z = array[ 2 ];\n    if ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n    this.onChangeCallback();\n\n    return this;\n\n  },\n\n  toArray: function () {\n\n    return [ this._x, this._y, this._z, this._order ];\n\n  },\n\n  onChange: function ( callback ) {\n\n    this.onChangeCallback = callback;\n\n    return this;\n\n  },\n\n  onChangeCallback: function () {},\n\n  clone: function () {\n\n    return new THREE.Euler( this._x, this._y, this._z, this._order );\n\n  }\n\n};\n\n// File:src/math/Line3.js\n\n/**\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Line3 = function ( start, end ) {\n\n  this.start = ( start !== undefined ) ? start : new THREE.Vector3();\n  this.end = ( end !== undefined ) ? end : new THREE.Vector3();\n\n};\n\nTHREE.Line3.prototype = {\n\n  constructor: THREE.Line3,\n\n  set: function ( start, end ) {\n\n    this.start.copy( start );\n    this.end.copy( end );\n\n    return this;\n\n  },\n\n  copy: function ( line ) {\n\n    this.start.copy( line.start );\n    this.end.copy( line.end );\n\n    return this;\n\n  },\n\n  center: function ( optionalTarget ) {\n\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n  },\n\n  delta: function ( optionalTarget ) {\n\n    var result = optionalTarget || new THREE.Vector3();\n    return result.subVectors( this.end, this.start );\n\n  },\n\n  distanceSq: function () {\n\n    return this.start.distanceToSquared( this.end );\n\n  },\n\n  distance: function () {\n\n    return this.start.distanceTo( this.end );\n\n  },\n\n  at: function ( t, optionalTarget ) {\n\n    var result = optionalTarget || new THREE.Vector3();\n\n    return this.delta( result ).multiplyScalar( t ).add( this.start );\n\n  },\n\n  closestPointToPointParameter: function () {\n\n    var startP = new THREE.Vector3();\n    var startEnd = new THREE.Vector3();\n\n    return function ( point, clampToLine ) {\n\n      startP.subVectors( point, this.start );\n      startEnd.subVectors( this.end, this.start );\n\n      var startEnd2 = startEnd.dot( startEnd );\n      var startEnd_startP = startEnd.dot( startP );\n\n      var t = startEnd_startP / startEnd2;\n\n      if ( clampToLine ) {\n\n        t = THREE.Math.clamp( t, 0, 1 );\n\n      }\n\n      return t;\n\n    };\n\n  }(),\n\n  closestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n    var t = this.closestPointToPointParameter( point, clampToLine );\n\n    var result = optionalTarget || new THREE.Vector3();\n\n    return this.delta( result ).multiplyScalar( t ).add( this.start );\n\n  },\n\n  applyMatrix4: function ( matrix ) {\n\n    this.start.applyMatrix4( matrix );\n    this.end.applyMatrix4( matrix );\n\n    return this;\n\n  },\n\n  equals: function ( line ) {\n\n    return line.start.equals( this.start ) && line.end.equals( this.end );\n\n  },\n\n  clone: function () {\n\n    return new THREE.Line3().copy( this );\n\n  }\n\n};\n\n// File:src/math/Box2.js\n\n/**\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Box2 = function ( min, max ) {\n\n  this.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\n  this.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\n\n};\n\nTHREE.Box2.prototype = {\n\n  constructor: THREE.Box2,\n\n  set: function ( min, max ) {\n\n    this.min.copy( min );\n    this.max.copy( max );\n\n    return this;\n\n  },\n\n  setFromPoints: function ( points ) {\n\n    this.makeEmpty();\n\n    for ( var i = 0, il = points.length; i < il; i ++ ) {\n\n      this.expandByPoint( points[ i ] )\n\n    }\n\n    return this;\n\n  },\n\n  setFromCenterAndSize: function () {\n\n    var v1 = new THREE.Vector2();\n\n    return function ( center, size ) {\n\n      var halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n      this.min.copy( center ).sub( halfSize );\n      this.max.copy( center ).add( halfSize );\n\n      return this;\n\n    };\n\n  }(),\n\n  copy: function ( box ) {\n\n    this.min.copy( box.min );\n    this.max.copy( box.max );\n\n    return this;\n\n  },\n\n  makeEmpty: function () {\n\n    this.min.x = this.min.y = Infinity;\n    this.max.x = this.max.y = - Infinity;\n\n    return this;\n\n  },\n\n  empty: function () {\n\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n    return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n  },\n\n  center: function ( optionalTarget ) {\n\n    var result = optionalTarget || new THREE.Vector2();\n    return result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n  },\n\n  size: function ( optionalTarget ) {\n\n    var result = optionalTarget || new THREE.Vector2();\n    return result.subVectors( this.max, this.min );\n\n  },\n\n  expandByPoint: function ( point ) {\n\n    this.min.min( point );\n    this.max.max( point );\n\n    return this;\n  },\n\n  expandByVector: function ( vector ) {\n\n    this.min.sub( vector );\n    this.max.add( vector );\n\n    return this;\n  },\n\n  expandByScalar: function ( scalar ) {\n\n    this.min.addScalar( - scalar );\n    this.max.addScalar( scalar );\n\n    return this;\n  },\n\n  containsPoint: function ( point ) {\n\n    if ( point.x < this.min.x || point.x > this.max.x ||\n         point.y < this.min.y || point.y > this.max.y ) {\n\n      return false;\n\n    }\n\n    return true;\n\n  },\n\n  containsBox: function ( box ) {\n\n    if ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n         ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\n\n      return true;\n\n    }\n\n    return false;\n\n  },\n\n  getParameter: function ( point, optionalTarget ) {\n\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n\n    var result = optionalTarget || new THREE.Vector2();\n\n    return result.set(\n      ( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n      ( point.y - this.min.y ) / ( this.max.y - this.min.y )\n    );\n\n  },\n\n  isIntersectionBox: function ( box ) {\n\n    // using 6 splitting planes to rule out intersections.\n\n    if ( box.max.x < this.min.x || box.min.x > this.max.x ||\n         box.max.y < this.min.y || box.min.y > this.max.y ) {\n\n      return false;\n\n    }\n\n    return true;\n\n  },\n\n  clampPoint: function ( point, optionalTarget ) {\n\n    var result = optionalTarget || new THREE.Vector2();\n    return result.copy( point ).clamp( this.min, this.max );\n\n  },\n\n  distanceToPoint: function () {\n\n    var v1 = new THREE.Vector2();\n\n    return function ( point ) {\n\n      var clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n      return clampedPoint.sub( point ).length();\n\n    };\n\n  }(),\n\n  intersect: function ( box ) {\n\n    this.min.max( box.min );\n    this.max.min( box.max );\n\n    return this;\n\n  },\n\n  union: function ( box ) {\n\n    this.min.min( box.min );\n    this.max.max( box.max );\n\n    return this;\n\n  },\n\n  translate: function ( offset ) {\n\n    this.min.add( offset );\n    this.max.add( offset );\n\n    return this;\n\n  },\n\n  equals: function ( box ) {\n\n    return box.min.equals( this.min ) && box.max.equals( this.max );\n\n  },\n\n  clone: function () {\n\n    return new THREE.Box2().copy( this );\n\n  }\n\n};\n\n// File:src/math/Box3.js\n\n/**\n * @author bhouston / http://exocortex.com\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Box3 = function ( min, max ) {\n\n  this.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\n  this.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\n\n};\n\nTHREE.Box3.prototype = {\n\n  constructor: THREE.Box3,\n\n  set: function ( min, max ) {\n\n    this.min.copy( min );\n    this.max.copy( max );\n\n    return this;\n\n  },\n\n  setFromPoints: function ( points ) {\n\n    this.makeEmpty();\n\n    for ( var i = 0, il = points.length; i < il; i ++ ) {\n\n      this.expandByPoint( points[ i ] )\n\n    }\n\n    return this;\n\n  },\n\n  setFromCenterAndSize: function () {\n\n    var v1 = new THREE.Vector3();\n\n    return function ( center, size ) {\n\n      var halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n      this.min.copy( center ).sub( halfSize );\n      this.max.copy( center ).add( halfSize );\n\n      return this;\n\n    };\n\n  }(),\n\n  setFromObject: function () {\n\n    // Computes the world-axis-aligned bounding box of an object (including its children),\n    // accounting for both the object's, and childrens', world transforms\n\n    var v1 = new THREE.Vector3();\n\n    return function ( object ) {\n\n      var scope = this;\n\n      object.updateMatrixWorld( true );\n\n      this.makeEmpty();\n\n      object.traverse( function ( node ) {\n\n        if ( node.geometry !== undefined && node.geometry.vertices !== undefined ) {\n\n          var vertices = node.geometry.vertices;\n\n          for ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n            v1.copy( vertices[ i ] );\n\n            v1.applyMatrix4( node.matrixWorld );\n\n            scope.expandByPoint( v1 );\n\n          }\n\n        }\n\n      } );\n\n      return this;\n\n    };\n\n  }(),\n\n  copy: function ( box ) {\n\n    this.min.copy( box.min );\n    this.max.copy( box.max );\n\n    return this;\n\n  },\n\n  makeEmpty: function () {\n\n    this.min.x = this.min.y = this.min.z = Infinity;\n    this.max.x = this.max.y = this.max.z = - Infinity;\n\n    return this;\n\n  },\n\n  empty: function () {\n\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n    return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n  },\n\n  center: function ( optionalTarget ) {\n\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n  },\n\n  size: function ( optionalTarget ) {\n\n    var result = optionalTarget || new THREE.Vector3();\n    return result.subVectors( this.max, this.min );\n\n  },\n\n  expandByPoint: function ( point ) {\n\n    this.min.min( point );\n    this.max.max( point );\n\n    return this;\n\n  },\n\n  expandByVector: function ( vector ) {\n\n    this.min.sub( vector );\n    this.max.add( vector );\n\n    return this;\n\n  },\n\n  expandByScalar: function ( scalar ) {\n\n    this.min.addScalar( - scalar );\n    this.max.addScalar( scalar );\n\n    return this;\n\n  },\n\n  containsPoint: function ( point ) {\n\n    if ( point.x < this.min.x || point.x > this.max.x ||\n         point.y < this.min.y || point.y > this.max.y ||\n         point.z < this.min.z || point.z > this.max.z ) {\n\n      return false;\n\n    }\n\n    return true;\n\n  },\n\n  containsBox: function ( box ) {\n\n    if ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n       ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\n       ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\n\n      return true;\n\n    }\n\n    return false;\n\n  },\n\n  getParameter: function ( point, optionalTarget ) {\n\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n\n    var result = optionalTarget || new THREE.Vector3();\n\n    return result.set(\n      ( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n      ( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n      ( point.z - this.min.z ) / ( this.max.z - this.min.z )\n    );\n\n  },\n\n  isIntersectionBox: function ( box ) {\n\n    // using 6 splitting planes to rule out intersections.\n\n    if ( box.max.x < this.min.x || box.min.x > this.max.x ||\n         box.max.y < this.min.y || box.min.y > this.max.y ||\n         box.max.z < this.min.z || box.min.z > this.max.z ) {\n\n      return false;\n\n    }\n\n    return true;\n\n  },\n\n  clampPoint: function ( point, optionalTarget ) {\n\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy( point ).clamp( this.min, this.max );\n\n  },\n\n  distanceToPoint: function () {\n\n    var v1 = new THREE.Vector3();\n\n    return function ( point ) {\n\n      var clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n      return clampedPoint.sub( point ).length();\n\n    };\n\n  }(),\n\n  getBoundingSphere: function () {\n\n    var v1 = new THREE.Vector3();\n\n    return function ( optionalTarget ) {\n\n      var result = optionalTarget || new THREE.Sphere();\n\n      result.center = this.center();\n      result.radius = this.size( v1 ).length() * 0.5;\n\n      return result;\n\n    };\n\n  }(),\n\n  intersect: function ( box ) {\n\n    this.min.max( box.min );\n    this.max.min( box.max );\n\n    return this;\n\n  },\n\n  union: function ( box ) {\n\n    this.min.min( box.min );\n    this.max.max( box.max );\n\n    return this;\n\n  },\n\n  applyMatrix4: function () {\n\n    var points = [\n      new THREE.Vector3(),\n      new THREE.Vector3(),\n      new THREE.Vector3(),\n      new THREE.Vector3(),\n      new THREE.Vector3(),\n      new THREE.Vector3(),\n      new THREE.Vector3(),\n      new THREE.Vector3()\n    ];\n\n    return function ( matrix ) {\n\n      // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n      points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n      points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n      points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n      points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n      points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n      points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n      points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n      points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\n\n      this.makeEmpty();\n      this.setFromPoints( points );\n\n      return this;\n\n    };\n\n  }(),\n\n  translate: function ( offset ) {\n\n    this.min.add( offset );\n    this.max.add( offset );\n\n    return this;\n\n  },\n\n  equals: function ( box ) {\n\n    return box.min.equals( this.min ) && box.max.equals( this.max );\n\n  },\n\n  clone: function () {\n\n    return new THREE.Box3().copy( this );\n\n  }\n\n};\n\n// File:src/math/Matrix3.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Matrix3 = function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n  this.elements = new Float32Array( 9 );\n\n  var te = this.elements;\n\n  te[ 0 ] = ( n11 !== undefined ) ? n11 : 1; te[ 3 ] = n12 || 0; te[ 6 ] = n13 || 0;\n  te[ 1 ] = n21 || 0; te[ 4 ] = ( n22 !== undefined ) ? n22 : 1; te[ 7 ] = n23 || 0;\n  te[ 2 ] = n31 || 0; te[ 5 ] = n32 || 0; te[ 8 ] = ( n33 !== undefined ) ? n33 : 1;\n\n};\n\nTHREE.Matrix3.prototype = {\n\n  constructor: THREE.Matrix3,\n\n  set: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n    var te = this.elements;\n\n    te[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\n    te[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\n    te[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\n\n    return this;\n\n  },\n\n  identity: function () {\n\n    this.set(\n\n      1, 0, 0,\n      0, 1, 0,\n      0, 0, 1\n\n    );\n\n    return this;\n\n  },\n\n  copy: function ( m ) {\n\n    var me = m.elements;\n\n    this.set(\n\n      me[ 0 ], me[ 3 ], me[ 6 ],\n      me[ 1 ], me[ 4 ], me[ 7 ],\n      me[ 2 ], me[ 5 ], me[ 8 ]\n\n    );\n\n    return this;\n\n  },\n\n  multiplyVector3: function ( vector ) {\n\n    console.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n    return vector.applyMatrix3( this );\n\n  },\n\n  multiplyVector3Array: function ( a ) {\n\n    console.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n    return this.applyToVector3Array( a );\n\n  },\n\n  applyToVector3Array: function () {\n\n    var v1 = new THREE.Vector3();\n\n    return function ( array, offset, length ) {\n\n      if ( offset === undefined ) offset = 0;\n      if ( length === undefined ) length = array.length;\n\n      for ( var i = 0, j = offset, il; i < length; i += 3, j += 3 ) {\n\n        v1.x = array[ j ];\n        v1.y = array[ j + 1 ];\n        v1.z = array[ j + 2 ];\n\n        v1.applyMatrix3( this );\n\n        array[ j ]     = v1.x;\n        array[ j + 1 ] = v1.y;\n        array[ j + 2 ] = v1.z;\n\n      }\n\n      return array;\n\n    };\n\n  }(),\n\n  multiplyScalar: function ( s ) {\n\n    var te = this.elements;\n\n    te[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n    te[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n    te[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n    return this;\n\n  },\n\n  determinant: function () {\n\n    var te = this.elements;\n\n    var a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n      d = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n      g = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n    return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n  },\n\n  getInverse: function ( matrix, throwOnInvertible ) {\n\n    // input: THREE.Matrix4\n    // ( based on http://code.google.com/p/webgl-mjs/ )\n\n    var me = matrix.elements;\n    var te = this.elements;\n\n    te[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\n    te[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\n    te[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\n    te[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\n    te[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\n    te[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\n    te[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\n    te[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\n    te[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\n\n    var det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\n\n    // no inverse\n\n    if ( det === 0 ) {\n\n      var msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n      if ( throwOnInvertible || false ) {\n\n        throw new Error( msg );\n\n      } else {\n\n        console.warn( msg );\n\n      }\n\n      this.identity();\n\n      return this;\n\n    }\n\n    this.multiplyScalar( 1.0 / det );\n\n    return this;\n\n  },\n\n  transpose: function () {\n\n    var tmp, m = this.elements;\n\n    tmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n    tmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n    tmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n    return this;\n\n  },\n\n  flattenToArrayOffset: function ( array, offset ) {\n\n    var te = this.elements;\n\n    array[ offset     ] = te[ 0 ];\n    array[ offset + 1 ] = te[ 1 ];\n    array[ offset + 2 ] = te[ 2 ];\n\n    array[ offset + 3 ] = te[ 3 ];\n    array[ offset + 4 ] = te[ 4 ];\n    array[ offset + 5 ] = te[ 5 ];\n\n    array[ offset + 6 ] = te[ 6 ];\n    array[ offset + 7 ] = te[ 7 ];\n    array[ offset + 8 ]  = te[ 8 ];\n\n    return array;\n\n  },\n\n  getNormalMatrix: function ( m ) {\n\n    // input: THREE.Matrix4\n\n    this.getInverse( m ).transpose();\n\n    return this;\n\n  },\n\n  transposeIntoArray: function ( r ) {\n\n    var m = this.elements;\n\n    r[ 0 ] = m[ 0 ];\n    r[ 1 ] = m[ 3 ];\n    r[ 2 ] = m[ 6 ];\n    r[ 3 ] = m[ 1 ];\n    r[ 4 ] = m[ 4 ];\n    r[ 5 ] = m[ 7 ];\n    r[ 6 ] = m[ 2 ];\n    r[ 7 ] = m[ 5 ];\n    r[ 8 ] = m[ 8 ];\n\n    return this;\n\n  },\n\n  fromArray: function ( array ) {\n\n    this.elements.set( array );\n\n    return this;\n\n  },\n\n  toArray: function () {\n\n    var te = this.elements;\n\n    return [\n      te[ 0 ], te[ 1 ], te[ 2 ],\n      te[ 3 ], te[ 4 ], te[ 5 ],\n      te[ 6 ], te[ 7 ], te[ 8 ]\n    ];\n\n  },\n\n  clone: function () {\n\n    var te = this.elements;\n\n    return new THREE.Matrix3(\n\n      te[ 0 ], te[ 3 ], te[ 6 ],\n      te[ 1 ], te[ 4 ], te[ 7 ],\n      te[ 2 ], te[ 5 ], te[ 8 ]\n\n    );\n\n  }\n\n};\n\n// File:src/math/Matrix4.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://exocortex.com\n * @author WestLangley / http://github.com/WestLangley\n */\n\n\nTHREE.Matrix4 = function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n  this.elements = new Float32Array( 16 );\n\n  // TODO: if n11 is undefined, then just set to identity, otherwise copy all other values into matrix\n  //   we should not support semi specification of Matrix4, it is just weird.\n\n  var te = this.elements;\n\n  te[ 0 ] = ( n11 !== undefined ) ? n11 : 1; te[ 4 ] = n12 || 0; te[ 8 ] = n13 || 0; te[ 12 ] = n14 || 0;\n  te[ 1 ] = n21 || 0; te[ 5 ] = ( n22 !== undefined ) ? n22 : 1; te[ 9 ] = n23 || 0; te[ 13 ] = n24 || 0;\n  te[ 2 ] = n31 || 0; te[ 6 ] = n32 || 0; te[ 10 ] = ( n33 !== undefined ) ? n33 : 1; te[ 14 ] = n34 || 0;\n  te[ 3 ] = n41 || 0; te[ 7 ] = n42 || 0; te[ 11 ] = n43 || 0; te[ 15 ] = ( n44 !== undefined ) ? n44 : 1;\n\n};\n\nTHREE.Matrix4.prototype = {\n\n  constructor: THREE.Matrix4,\n\n  set: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n    var te = this.elements;\n\n    te[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n    te[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n    te[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n    te[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n    return this;\n\n  },\n\n  identity: function () {\n\n    this.set(\n\n      1, 0, 0, 0,\n      0, 1, 0, 0,\n      0, 0, 1, 0,\n      0, 0, 0, 1\n\n    );\n\n    return this;\n\n  },\n\n  copy: function ( m ) {\n\n    this.elements.set( m.elements );\n\n    return this;\n\n  },\n\n  extractPosition: function ( m ) {\n\n    console.warn( 'THREEMatrix4: .extractPosition() has been renamed to .copyPosition().' );\n    return this.copyPosition( m );\n\n  },\n\n  copyPosition: function ( m ) {\n\n    var te = this.elements;\n    var me = m.elements;\n\n    te[ 12 ] = me[ 12 ];\n    te[ 13 ] = me[ 13 ];\n    te[ 14 ] = me[ 14 ];\n\n    return this;\n\n  },\n\n  extractRotation: function () {\n\n    var v1 = new THREE.Vector3();\n\n    return function ( m ) {\n\n      var te = this.elements;\n      var me = m.elements;\n\n      var scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\n      var scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\n      var scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\n\n      te[ 0 ] = me[ 0 ] * scaleX;\n      te[ 1 ] = me[ 1 ] * scaleX;\n      te[ 2 ] = me[ 2 ] * scaleX;\n\n      te[ 4 ] = me[ 4 ] * scaleY;\n      te[ 5 ] = me[ 5 ] * scaleY;\n      te[ 6 ] = me[ 6 ] * scaleY;\n\n      te[ 8 ] = me[ 8 ] * scaleZ;\n      te[ 9 ] = me[ 9 ] * scaleZ;\n      te[ 10 ] = me[ 10 ] * scaleZ;\n\n      return this;\n\n    };\n\n  }(),\n\n  makeRotationFromEuler: function ( euler ) {\n\n    if ( euler instanceof THREE.Euler === false ) {\n\n      console.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n    }\n\n    var te = this.elements;\n\n    var x = euler.x, y = euler.y, z = euler.z;\n    var a = Math.cos( x ), b = Math.sin( x );\n    var c = Math.cos( y ), d = Math.sin( y );\n    var e = Math.cos( z ), f = Math.sin( z );\n\n    if ( euler.order === 'XYZ' ) {\n\n      var ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n      te[ 0 ] = c * e;\n      te[ 4 ] = - c * f;\n      te[ 8 ] = d;\n\n      te[ 1 ] = af + be * d;\n      te[ 5 ] = ae - bf * d;\n      te[ 9 ] = - b * c;\n\n      te[ 2 ] = bf - ae * d;\n      te[ 6 ] = be + af * d;\n      te[ 10 ] = a * c;\n\n    } else if ( euler.order === 'YXZ' ) {\n\n      var ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n      te[ 0 ] = ce + df * b;\n      te[ 4 ] = de * b - cf;\n      te[ 8 ] = a * d;\n\n      te[ 1 ] = a * f;\n      te[ 5 ] = a * e;\n      te[ 9 ] = - b;\n\n      te[ 2 ] = cf * b - de;\n      te[ 6 ] = df + ce * b;\n      te[ 10 ] = a * c;\n\n    } else if ( euler.order === 'ZXY' ) {\n\n      var ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n      te[ 0 ] = ce - df * b;\n      te[ 4 ] = - a * f;\n      te[ 8 ] = de + cf * b;\n\n      te[ 1 ] = cf + de * b;\n      te[ 5 ] = a * e;\n      te[ 9 ] = df - ce * b;\n\n      te[ 2 ] = - a * d;\n      te[ 6 ] = b;\n      te[ 10 ] = a * c;\n\n    } else if ( euler.order === 'ZYX' ) {\n\n      var ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n      te[ 0 ] = c * e;\n      te[ 4 ] = be * d - af;\n      te[ 8 ] = ae * d + bf;\n\n      te[ 1 ] = c * f;\n      te[ 5 ] = bf * d + ae;\n      te[ 9 ] = af * d - be;\n\n      te[ 2 ] = - d;\n      te[ 6 ] = b * c;\n      te[ 10 ] = a * c;\n\n    } else if ( euler.order === 'YZX' ) {\n\n      var ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n      te[ 0 ] = c * e;\n      te[ 4 ] = bd - ac * f;\n      te[ 8 ] = bc * f + ad;\n\n      te[ 1 ] = f;\n      te[ 5 ] = a * e;\n      te[ 9 ] = - b * e;\n\n      te[ 2 ] = - d * e;\n      te[ 6 ] = ad * f + bc;\n      te[ 10 ] = ac - bd * f;\n\n    } else if ( euler.order === 'XZY' ) {\n\n      var ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n      te[ 0 ] = c * e;\n      te[ 4 ] = - f;\n      te[ 8 ] = d * e;\n\n      te[ 1 ] = ac * f + bd;\n      te[ 5 ] = a * e;\n      te[ 9 ] = ad * f - bc;\n\n      te[ 2 ] = bc * f - ad;\n      te[ 6 ] = b * e;\n      te[ 10 ] = bd * f + ac;\n\n    }\n\n    // last column\n    te[ 3 ] = 0;\n    te[ 7 ] = 0;\n    te[ 11 ] = 0;\n\n    // bottom row\n    te[ 12 ] = 0;\n    te[ 13 ] = 0;\n    te[ 14 ] = 0;\n    te[ 15 ] = 1;\n\n    return this;\n\n  },\n\n  setRotationFromQuaternion: function ( q ) {\n\n    console.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\n    return this.makeRotationFromQuaternion( q );\n\n  },\n\n  makeRotationFromQuaternion: function ( q ) {\n\n    var te = this.elements;\n\n    var x = q.x, y = q.y, z = q.z, w = q.w;\n    var x2 = x + x, y2 = y + y, z2 = z + z;\n    var xx = x * x2, xy = x * y2, xz = x * z2;\n    var yy = y * y2, yz = y * z2, zz = z * z2;\n    var wx = w * x2, wy = w * y2, wz = w * z2;\n\n    te[ 0 ] = 1 - ( yy + zz );\n    te[ 4 ] = xy - wz;\n    te[ 8 ] = xz + wy;\n\n    te[ 1 ] = xy + wz;\n    te[ 5 ] = 1 - ( xx + zz );\n    te[ 9 ] = yz - wx;\n\n    te[ 2 ] = xz - wy;\n    te[ 6 ] = yz + wx;\n    te[ 10 ] = 1 - ( xx + yy );\n\n    // last column\n    te[ 3 ] = 0;\n    te[ 7 ] = 0;\n    te[ 11 ] = 0;\n\n    // bottom row\n    te[ 12 ] = 0;\n    te[ 13 ] = 0;\n    te[ 14 ] = 0;\n    te[ 15 ] = 1;\n\n    return this;\n\n  },\n\n  lookAt: function () {\n\n    var x = new THREE.Vector3();\n    var y = new THREE.Vector3();\n    var z = new THREE.Vector3();\n\n    return function ( eye, target, up ) {\n\n      var te = this.elements;\n\n      z.subVectors( eye, target ).normalize();\n\n      if ( z.length() === 0 ) {\n\n        z.z = 1;\n\n      }\n\n      x.crossVectors( up, z ).normalize();\n\n      if ( x.length() === 0 ) {\n\n        z.x += 0.0001;\n        x.crossVectors( up, z ).normalize();\n\n      }\n\n      y.crossVectors( z, x );\n\n\n      te[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n      te[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n      te[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n      return this;\n\n    };\n\n  }(),\n\n  multiply: function ( m, n ) {\n\n    if ( n !== undefined ) {\n\n      console.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n      return this.multiplyMatrices( m, n );\n\n    }\n\n    return this.multiplyMatrices( this, m );\n\n  },\n\n  multiplyMatrices: function ( a, b ) {\n\n    var ae = a.elements;\n    var be = b.elements;\n    var te = this.elements;\n\n    var a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n    var a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n    var a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n    var a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n    var b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n    var b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n    var b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n    var b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n    te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    te[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    te[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    te[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n    te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    te[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    te[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    te[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n    te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    te[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    te[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    te[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n    te[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    te[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    te[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    te[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n    return this;\n\n  },\n\n  multiplyToArray: function ( a, b, r ) {\n\n    var te = this.elements;\n\n    this.multiplyMatrices( a, b );\n\n    r[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\n    r[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\n    r[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\n    r[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\n\n    return this;\n\n  },\n\n  multiplyScalar: function ( s ) {\n\n    var te = this.elements;\n\n    te[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n    te[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n    te[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n    te[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n    return this;\n\n  },\n\n  multiplyVector3: function ( vector ) {\n\n    console.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\n    return vector.applyProjection( this );\n\n  },\n\n  multiplyVector4: function ( vector ) {\n\n    console.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n    return vector.applyMatrix4( this );\n\n  },\n\n  multiplyVector3Array: function ( a ) {\n\n    console.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n    return this.applyToVector3Array( a );\n\n  },\n\n  applyToVector3Array: function () {\n\n    var v1 = new THREE.Vector3();\n\n    return function ( array, offset, length ) {\n\n      if ( offset === undefined ) offset = 0;\n      if ( length === undefined ) length = array.length;\n\n      for ( var i = 0, j = offset, il; i < length; i += 3, j += 3 ) {\n\n        v1.x = array[ j ];\n        v1.y = array[ j + 1 ];\n        v1.z = array[ j + 2 ];\n\n        v1.applyMatrix4( this );\n\n        array[ j ]     = v1.x;\n        array[ j + 1 ] = v1.y;\n        array[ j + 2 ] = v1.z;\n\n      }\n\n      return array;\n\n    };\n\n  }(),\n\n  rotateAxis: function ( v ) {\n\n    console.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\n    v.transformDirection( this );\n\n  },\n\n  crossVector: function ( vector ) {\n\n    console.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n    return vector.applyMatrix4( this );\n\n  },\n\n  determinant: function () {\n\n    var te = this.elements;\n\n    var n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n    var n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n    var n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n    var n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n    //TODO: make this more efficient\n    //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n    return (\n      n41 * (\n        + n14 * n23 * n32\n         - n13 * n24 * n32\n         - n14 * n22 * n33\n         + n12 * n24 * n33\n         + n13 * n22 * n34\n         - n12 * n23 * n34\n      ) +\n      n42 * (\n        + n11 * n23 * n34\n         - n11 * n24 * n33\n         + n14 * n21 * n33\n         - n13 * n21 * n34\n         + n13 * n24 * n31\n         - n14 * n23 * n31\n      ) +\n      n43 * (\n        + n11 * n24 * n32\n         - n11 * n22 * n34\n         - n14 * n21 * n32\n         + n12 * n21 * n34\n         + n14 * n22 * n31\n         - n12 * n24 * n31\n      ) +\n      n44 * (\n        - n13 * n22 * n31\n         - n11 * n23 * n32\n         + n11 * n22 * n33\n         + n13 * n21 * n32\n         - n12 * n21 * n33\n         + n12 * n23 * n31\n      )\n\n    );\n\n  },\n\n  transpose: function () {\n\n    var te = this.elements;\n    var tmp;\n\n    tmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n    tmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n    tmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n    tmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n    tmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n    tmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n    return this;\n\n  },\n\n  flattenToArrayOffset: function ( array, offset ) {\n\n    var te = this.elements;\n\n    array[ offset     ] = te[ 0 ];\n    array[ offset + 1 ] = te[ 1 ];\n    array[ offset + 2 ] = te[ 2 ];\n    array[ offset + 3 ] = te[ 3 ];\n\n    array[ offset + 4 ] = te[ 4 ];\n    array[ offset + 5 ] = te[ 5 ];\n    array[ offset + 6 ] = te[ 6 ];\n    array[ offset + 7 ] = te[ 7 ];\n\n    array[ offset + 8 ]  = te[ 8 ];\n    array[ offset + 9 ]  = te[ 9 ];\n    array[ offset + 10 ] = te[ 10 ];\n    array[ offset + 11 ] = te[ 11 ];\n\n    array[ offset + 12 ] = te[ 12 ];\n    array[ offset + 13 ] = te[ 13 ];\n    array[ offset + 14 ] = te[ 14 ];\n    array[ offset + 15 ] = te[ 15 ];\n\n    return array;\n\n  },\n\n  getPosition: function () {\n\n    var v1 = new THREE.Vector3();\n\n    return function () {\n\n      console.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\n      var te = this.elements;\n      return v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\n\n    };\n\n  }(),\n\n  setPosition: function ( v ) {\n\n    var te = this.elements;\n\n    te[ 12 ] = v.x;\n    te[ 13 ] = v.y;\n    te[ 14 ] = v.z;\n\n    return this;\n\n  },\n\n  getInverse: function ( m, throwOnInvertible ) {\n\n    // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    var te = this.elements;\n    var me = m.elements;\n\n    var n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\n    var n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\n    var n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\n    var n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\n\n    te[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\n    te[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\n    te[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\n    te[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n    te[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\n    te[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\n    te[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\n    te[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\n    te[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\n    te[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\n    te[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\n    te[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\n    te[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\n    te[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\n    te[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\n    te[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\n\n    var det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\n\n    if ( det == 0 ) {\n\n      var msg = \"Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n      if ( throwOnInvertible || false ) {\n\n        throw new Error( msg );\n\n      } else {\n\n        console.warn( msg );\n\n      }\n\n      this.identity();\n\n      return this;\n    }\n\n    this.multiplyScalar( 1 / det );\n\n    return this;\n\n  },\n\n  translate: function ( v ) {\n\n    console.warn( 'THREE.Matrix4: .translate() has been removed.' );\n\n  },\n\n  rotateX: function ( angle ) {\n\n    console.warn( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n  },\n\n  rotateY: function ( angle ) {\n\n    console.warn( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n  },\n\n  rotateZ: function ( angle ) {\n\n    console.warn( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n  },\n\n  rotateByAxis: function ( axis, angle ) {\n\n    console.warn( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n  },\n\n  scale: function ( v ) {\n\n    var te = this.elements;\n    var x = v.x, y = v.y, z = v.z;\n\n    te[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n    te[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n    te[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n    te[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n    return this;\n\n  },\n\n  getMaxScaleOnAxis: function () {\n\n    var te = this.elements;\n\n    var scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n    var scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n    var scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n    return Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\n\n  },\n\n  makeTranslation: function ( x, y, z ) {\n\n    this.set(\n\n      1, 0, 0, x,\n      0, 1, 0, y,\n      0, 0, 1, z,\n      0, 0, 0, 1\n\n    );\n\n    return this;\n\n  },\n\n  makeRotationX: function ( theta ) {\n\n    var c = Math.cos( theta ), s = Math.sin( theta );\n\n    this.set(\n\n      1, 0,  0, 0,\n      0, c, - s, 0,\n      0, s,  c, 0,\n      0, 0,  0, 1\n\n    );\n\n    return this;\n\n  },\n\n  makeRotationY: function ( theta ) {\n\n    var c = Math.cos( theta ), s = Math.sin( theta );\n\n    this.set(\n\n       c, 0, s, 0,\n       0, 1, 0, 0,\n      - s, 0, c, 0,\n       0, 0, 0, 1\n\n    );\n\n    return this;\n\n  },\n\n  makeRotationZ: function ( theta ) {\n\n    var c = Math.cos( theta ), s = Math.sin( theta );\n\n    this.set(\n\n      c, - s, 0, 0,\n      s,  c, 0, 0,\n      0,  0, 1, 0,\n      0,  0, 0, 1\n\n    );\n\n    return this;\n\n  },\n\n  makeRotationAxis: function ( axis, angle ) {\n\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n    var c = Math.cos( angle );\n    var s = Math.sin( angle );\n    var t = 1 - c;\n    var x = axis.x, y = axis.y, z = axis.z;\n    var tx = t * x, ty = t * y;\n\n    this.set(\n\n      tx * x + c, tx * y - s * z, tx * z + s * y, 0,\n      tx * y + s * z, ty * y + c, ty * z - s * x, 0,\n      tx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n      0, 0, 0, 1\n\n    );\n\n     return this;\n\n  },\n\n  makeScale: function ( x, y, z ) {\n\n    this.set(\n\n      x, 0, 0, 0,\n      0, y, 0, 0,\n      0, 0, z, 0,\n      0, 0, 0, 1\n\n    );\n\n    return this;\n\n  },\n\n  compose: function ( position, quaternion, scale ) {\n\n    this.makeRotationFromQuaternion( quaternion );\n    this.scale( scale );\n    this.setPosition( position );\n\n    return this;\n\n  },\n\n  decompose: function () {\n\n    var vector = new THREE.Vector3();\n    var matrix = new THREE.Matrix4();\n\n    return function ( position, quaternion, scale ) {\n\n      var te = this.elements;\n\n      var sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n      var sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n      var sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n      // if determine is negative, we need to invert one scale\n      var det = this.determinant();\n      if ( det < 0 ) {\n        sx = - sx;\n      }\n\n      position.x = te[ 12 ];\n      position.y = te[ 13 ];\n      position.z = te[ 14 ];\n\n      // scale the rotation part\n\n      matrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\n\n      var invSX = 1 / sx;\n      var invSY = 1 / sy;\n      var invSZ = 1 / sz;\n\n      matrix.elements[ 0 ] *= invSX;\n      matrix.elements[ 1 ] *= invSX;\n      matrix.elements[ 2 ] *= invSX;\n\n      matrix.elements[ 4 ] *= invSY;\n      matrix.elements[ 5 ] *= invSY;\n      matrix.elements[ 6 ] *= invSY;\n\n      matrix.elements[ 8 ] *= invSZ;\n      matrix.elements[ 9 ] *= invSZ;\n      matrix.elements[ 10 ] *= invSZ;\n\n      quaternion.setFromRotationMatrix( matrix );\n\n      scale.x = sx;\n      scale.y = sy;\n      scale.z = sz;\n\n      return this;\n\n    };\n\n  }(),\n\n  makeFrustum: function ( left, right, bottom, top, near, far ) {\n\n    var te = this.elements;\n    var x = 2 * near / ( right - left );\n    var y = 2 * near / ( top - bottom );\n\n    var a = ( right + left ) / ( right - left );\n    var b = ( top + bottom ) / ( top - bottom );\n    var c = - ( far + near ) / ( far - near );\n    var d = - 2 * far * near / ( far - near );\n\n    te[ 0 ] = x;  te[ 4 ] = 0;  te[ 8 ] = a;  te[ 12 ] = 0;\n    te[ 1 ] = 0;  te[ 5 ] = y;  te[ 9 ] = b;  te[ 13 ] = 0;\n    te[ 2 ] = 0;  te[ 6 ] = 0;  te[ 10 ] = c; te[ 14 ] = d;\n    te[ 3 ] = 0;  te[ 7 ] = 0;  te[ 11 ] = - 1; te[ 15 ] = 0;\n\n    return this;\n\n  },\n\n  makePerspective: function ( fov, aspect, near, far ) {\n\n    var ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\n    var ymin = - ymax;\n    var xmin = ymin * aspect;\n    var xmax = ymax * aspect;\n\n    return this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\n\n  },\n\n  makeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n    var te = this.elements;\n    var w = right - left;\n    var h = top - bottom;\n    var p = far - near;\n\n    var x = ( right + left ) / w;\n    var y = ( top + bottom ) / h;\n    var z = ( far + near ) / p;\n\n    te[ 0 ] = 2 / w;  te[ 4 ] = 0;  te[ 8 ] = 0;  te[ 12 ] = - x;\n    te[ 1 ] = 0;  te[ 5 ] = 2 / h;  te[ 9 ] = 0;  te[ 13 ] = - y;\n    te[ 2 ] = 0;  te[ 6 ] = 0;  te[ 10 ] = - 2 / p; te[ 14 ] = - z;\n    te[ 3 ] = 0;  te[ 7 ] = 0;  te[ 11 ] = 0; te[ 15 ] = 1;\n\n    return this;\n\n  },\n\n  fromArray: function ( array ) {\n\n    this.elements.set( array );\n\n    return this;\n\n  },\n\n  toArray: function () {\n\n    var te = this.elements;\n\n    return [\n      te[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\n      te[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\n      te[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\n      te[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\n    ];\n\n  },\n\n  clone: function () {\n\n    var te = this.elements;\n\n    return new THREE.Matrix4(\n\n      te[ 0 ], te[ 4 ], te[ 8 ], te[ 12 ],\n      te[ 1 ], te[ 5 ], te[ 9 ], te[ 13 ],\n      te[ 2 ], te[ 6 ], te[ 10 ], te[ 14 ],\n      te[ 3 ], te[ 7 ], te[ 11 ], te[ 15 ]\n\n    );\n\n  }\n\n};\n\n// File:src/math/Ray.js\n\n/**\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Ray = function ( origin, direction ) {\n\n  this.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\n  this.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\n\n};\n\nTHREE.Ray.prototype = {\n\n  constructor: THREE.Ray,\n\n  set: function ( origin, direction ) {\n\n    this.origin.copy( origin );\n    this.direction.copy( direction );\n\n    return this;\n\n  },\n\n  copy: function ( ray ) {\n\n    this.origin.copy( ray.origin );\n    this.direction.copy( ray.direction );\n\n    return this;\n\n  },\n\n  at: function ( t, optionalTarget ) {\n\n    var result = optionalTarget || new THREE.Vector3();\n\n    return result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n  },\n\n  recast: function () {\n\n    var v1 = new THREE.Vector3();\n\n    return function ( t ) {\n\n      this.origin.copy( this.at( t, v1 ) );\n\n      return this;\n\n    };\n\n  }(),\n\n  closestPointToPoint: function ( point, optionalTarget ) {\n\n    var result = optionalTarget || new THREE.Vector3();\n    result.subVectors( point, this.origin );\n    var directionDistance = result.dot( this.direction );\n\n    if ( directionDistance < 0 ) {\n\n      return result.copy( this.origin );\n\n    }\n\n    return result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n  },\n\n  distanceToPoint: function () {\n\n    var v1 = new THREE.Vector3();\n\n    return function ( point ) {\n\n      var directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n      // point behind the ray\n\n      if ( directionDistance < 0 ) {\n\n        return this.origin.distanceTo( point );\n\n      }\n\n      v1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n      return v1.distanceTo( point );\n\n    };\n\n  }(),\n\n  distanceSqToSegment: function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n    // from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\n    // It returns the min distance between the ray and the segment\n    // defined by v0 and v1\n    // It can also set two optional targets :\n    // - The closest point on the ray\n    // - The closest point on the segment\n\n    var segCenter = v0.clone().add( v1 ).multiplyScalar( 0.5 );\n    var segDir = v1.clone().sub( v0 ).normalize();\n    var segExtent = v0.distanceTo( v1 ) * 0.5;\n    var diff = this.origin.clone().sub( segCenter );\n    var a01 = - this.direction.dot( segDir );\n    var b0 = diff.dot( this.direction );\n    var b1 = - diff.dot( segDir );\n    var c = diff.lengthSq();\n    var det = Math.abs( 1 - a01 * a01 );\n    var s0, s1, sqrDist, extDet;\n\n    if ( det >= 0 ) {\n\n      // The ray and segment are not parallel.\n\n      s0 = a01 * b1 - b0;\n      s1 = a01 * b0 - b1;\n      extDet = segExtent * det;\n\n      if ( s0 >= 0 ) {\n\n        if ( s1 >= - extDet ) {\n\n          if ( s1 <= extDet ) {\n\n            // region 0\n            // Minimum at interior points of ray and segment.\n\n            var invDet = 1 / det;\n            s0 *= invDet;\n            s1 *= invDet;\n            sqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n          } else {\n\n            // region 1\n\n            s1 = segExtent;\n            s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n            sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n          }\n\n        } else {\n\n          // region 5\n\n          s1 = - segExtent;\n          s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n          sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n        }\n\n      } else {\n\n        if ( s1 <= - extDet ) {\n\n          // region 4\n\n          s0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n          s1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n          sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n        } else if ( s1 <= extDet ) {\n\n          // region 3\n\n          s0 = 0;\n          s1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n          sqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n        } else {\n\n          // region 2\n\n          s0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n          s1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n          sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n        }\n\n      }\n\n    } else {\n\n      // Ray and segment are parallel.\n\n      s1 = ( a01 > 0 ) ? - segExtent : segExtent;\n      s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n      sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n    }\n\n    if ( optionalPointOnRay ) {\n\n      optionalPointOnRay.copy( this.direction.clone().multiplyScalar( s0 ).add( this.origin ) );\n\n    }\n\n    if ( optionalPointOnSegment ) {\n\n      optionalPointOnSegment.copy( segDir.clone().multiplyScalar( s1 ).add( segCenter ) );\n\n    }\n\n    return sqrDist;\n\n  },\n\n  isIntersectionSphere: function ( sphere ) {\n\n    return this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n  },\n\n  intersectSphere: function () {\n\n    // from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\n\n    var v1 = new THREE.Vector3();\n\n    return function ( sphere, optionalTarget ) {\n\n      v1.subVectors( sphere.center, this.origin );\n\n      var tca = v1.dot( this.direction );\n\n      var d2 = v1.dot( v1 ) - tca * tca;\n\n      var radius2 = sphere.radius * sphere.radius;\n\n      if ( d2 > radius2 ) return null;\n\n      var thc = Math.sqrt( radius2 - d2 );\n\n      // t0 = first intersect point - entrance on front of sphere\n      var t0 = tca - thc;\n\n      // t1 = second intersect point - exit point on back of sphere\n      var t1 = tca + thc;\n\n      // test to see if both t0 and t1 are behind the ray - if so, return null\n      if ( t0 < 0 && t1 < 0 ) return null;\n\n      // test to see if t0 is behind the ray:\n      // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n      // in order to always return an intersect point that is in front of the ray.\n      if ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n      // else t0 is in front of the ray, so return the first collision point scaled by t0\n      return this.at( t0, optionalTarget );\n\n    }\n\n  }(),\n\n  isIntersectionPlane: function ( plane ) {\n\n    // check if the ray lies on the plane first\n\n    var distToPoint = plane.distanceToPoint( this.origin );\n\n    if ( distToPoint === 0 ) {\n\n      return true;\n\n    }\n\n    var denominator = plane.normal.dot( this.direction );\n\n    if ( denominator * distToPoint < 0 ) {\n\n      return true;\n\n    }\n\n    // ray origin is behind the plane (and is pointing behind it)\n\n    return false;\n\n  },\n\n  distanceToPlane: function ( plane ) {\n\n    var denominator = plane.normal.dot( this.direction );\n    if ( denominator == 0 ) {\n\n      // line is coplanar, return origin\n      if ( plane.distanceToPoint( this.origin ) == 0 ) {\n\n        return 0;\n\n      }\n\n      // Null is preferable to undefined since undefined means.... it is undefined\n\n      return null;\n\n    }\n\n    var t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n    // Return if the ray never intersects the plane\n\n    return t >= 0 ? t :  null;\n\n  },\n\n  intersectPlane: function ( plane, optionalTarget ) {\n\n    var t = this.distanceToPlane( plane );\n\n    if ( t === null ) {\n\n      return null;\n    }\n\n    return this.at( t, optionalTarget );\n\n  },\n\n  isIntersectionBox: function () {\n\n    var v = new THREE.Vector3();\n\n    return function ( box ) {\n\n      return this.intersectBox( box, v ) !== null;\n\n    };\n\n  }(),\n\n  intersectBox: function ( box , optionalTarget ) {\n\n    // http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\n\n    var tmin,tmax,tymin,tymax,tzmin,tzmax;\n\n    var invdirx = 1 / this.direction.x,\n      invdiry = 1 / this.direction.y,\n      invdirz = 1 / this.direction.z;\n\n    var origin = this.origin;\n\n    if ( invdirx >= 0 ) {\n\n      tmin = ( box.min.x - origin.x ) * invdirx;\n      tmax = ( box.max.x - origin.x ) * invdirx;\n\n    } else {\n\n      tmin = ( box.max.x - origin.x ) * invdirx;\n      tmax = ( box.min.x - origin.x ) * invdirx;\n    }\n\n    if ( invdiry >= 0 ) {\n\n      tymin = ( box.min.y - origin.y ) * invdiry;\n      tymax = ( box.max.y - origin.y ) * invdiry;\n\n    } else {\n\n      tymin = ( box.max.y - origin.y ) * invdiry;\n      tymax = ( box.min.y - origin.y ) * invdiry;\n    }\n\n    if ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n    // These lines also handle the case where tmin or tmax is NaN\n    // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n    if ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n    if ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n    if ( invdirz >= 0 ) {\n\n      tzmin = ( box.min.z - origin.z ) * invdirz;\n      tzmax = ( box.max.z - origin.z ) * invdirz;\n\n    } else {\n\n      tzmin = ( box.max.z - origin.z ) * invdirz;\n      tzmax = ( box.min.z - origin.z ) * invdirz;\n    }\n\n    if ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n    if ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n    if ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n    //return point closest to the ray (positive side)\n\n    if ( tmax < 0 ) return null;\n\n    return this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n  },\n\n  intersectTriangle: function () {\n\n    // Compute the offset origin, edges, and normal.\n    var diff = new THREE.Vector3();\n    var edge1 = new THREE.Vector3();\n    var edge2 = new THREE.Vector3();\n    var normal = new THREE.Vector3();\n\n    return function ( a, b, c, backfaceCulling, optionalTarget ) {\n\n      // from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\n\n      edge1.subVectors( b, a );\n      edge2.subVectors( c, a );\n      normal.crossVectors( edge1, edge2 );\n\n      // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n      // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n      //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n      //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n      //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n      var DdN = this.direction.dot( normal );\n      var sign;\n\n      if ( DdN > 0 ) {\n\n        if ( backfaceCulling ) return null;\n        sign = 1;\n\n      } else if ( DdN < 0 ) {\n\n        sign = - 1;\n        DdN = - DdN;\n\n      } else {\n\n        return null;\n\n      }\n\n      diff.subVectors( this.origin, a );\n      var DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n      // b1 < 0, no intersection\n      if ( DdQxE2 < 0 ) {\n\n        return null;\n\n      }\n\n      var DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n      // b2 < 0, no intersection\n      if ( DdE1xQ < 0 ) {\n\n        return null;\n\n      }\n\n      // b1+b2 > 1, no intersection\n      if ( DdQxE2 + DdE1xQ > DdN ) {\n\n        return null;\n\n      }\n\n      // Line intersects triangle, check if ray does.\n      var QdN = - sign * diff.dot( normal );\n\n      // t < 0, no intersection\n      if ( QdN < 0 ) {\n\n        return null;\n\n      }\n\n      // Ray intersects triangle.\n      return this.at( QdN / DdN, optionalTarget );\n\n    };\n\n  }(),\n\n  applyMatrix4: function ( matrix4 ) {\n\n    this.direction.add( this.origin ).applyMatrix4( matrix4 );\n    this.origin.applyMatrix4( matrix4 );\n    this.direction.sub( this.origin );\n    this.direction.normalize();\n\n    return this;\n  },\n\n  equals: function ( ray ) {\n\n    return ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n  },\n\n  clone: function () {\n\n    return new THREE.Ray().copy( this );\n\n  }\n\n};\n\n// File:src/math/Sphere.js\n\n/**\n * @author bhouston / http://exocortex.com\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Sphere = function ( center, radius ) {\n\n  this.center = ( center !== undefined ) ? center : new THREE.Vector3();\n  this.radius = ( radius !== undefined ) ? radius : 0;\n\n};\n\nTHREE.Sphere.prototype = {\n\n  constructor: THREE.Sphere,\n\n  set: function ( center, radius ) {\n\n    this.center.copy( center );\n    this.radius = radius;\n\n    return this;\n  },\n\n  setFromPoints: function () {\n\n    var box = new THREE.Box3();\n\n    return function ( points, optionalCenter )  {\n\n      var center = this.center;\n\n      if ( optionalCenter !== undefined ) {\n\n        center.copy( optionalCenter );\n\n      } else {\n\n        box.setFromPoints( points ).center( center );\n\n      }\n\n      var maxRadiusSq = 0;\n\n      for ( var i = 0, il = points.length; i < il; i ++ ) {\n\n        maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n      }\n\n      this.radius = Math.sqrt( maxRadiusSq );\n\n      return this;\n\n    };\n\n  }(),\n\n  copy: function ( sphere ) {\n\n    this.center.copy( sphere.center );\n    this.radius = sphere.radius;\n\n    return this;\n\n  },\n\n  empty: function () {\n\n    return ( this.radius <= 0 );\n\n  },\n\n  containsPoint: function ( point ) {\n\n    return ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n  },\n\n  distanceToPoint: function ( point ) {\n\n    return ( point.distanceTo( this.center ) - this.radius );\n\n  },\n\n  intersectsSphere: function ( sphere ) {\n\n    var radiusSum = this.radius + sphere.radius;\n\n    return sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n  },\n\n  clampPoint: function ( point, optionalTarget ) {\n\n    var deltaLengthSq = this.center.distanceToSquared( point );\n\n    var result = optionalTarget || new THREE.Vector3();\n    result.copy( point );\n\n    if ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n      result.sub( this.center ).normalize();\n      result.multiplyScalar( this.radius ).add( this.center );\n\n    }\n\n    return result;\n\n  },\n\n  getBoundingBox: function ( optionalTarget ) {\n\n    var box = optionalTarget || new THREE.Box3();\n\n    box.set( this.center, this.center );\n    box.expandByScalar( this.radius );\n\n    return box;\n\n  },\n\n  applyMatrix4: function ( matrix ) {\n\n    this.center.applyMatrix4( matrix );\n    this.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n    return this;\n\n  },\n\n  translate: function ( offset ) {\n\n    this.center.add( offset );\n\n    return this;\n\n  },\n\n  equals: function ( sphere ) {\n\n    return sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n  },\n\n  clone: function () {\n\n    return new THREE.Sphere().copy( this );\n\n  }\n\n};\n\n// File:src/math/Frustum.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\n\n  this.planes = [\n\n    ( p0 !== undefined ) ? p0 : new THREE.Plane(),\n    ( p1 !== undefined ) ? p1 : new THREE.Plane(),\n    ( p2 !== undefined ) ? p2 : new THREE.Plane(),\n    ( p3 !== undefined ) ? p3 : new THREE.Plane(),\n    ( p4 !== undefined ) ? p4 : new THREE.Plane(),\n    ( p5 !== undefined ) ? p5 : new THREE.Plane()\n\n  ];\n\n};\n\nTHREE.Frustum.prototype = {\n\n  constructor: THREE.Frustum,\n\n  set: function ( p0, p1, p2, p3, p4, p5 ) {\n\n    var planes = this.planes;\n\n    planes[ 0 ].copy( p0 );\n    planes[ 1 ].copy( p1 );\n    planes[ 2 ].copy( p2 );\n    planes[ 3 ].copy( p3 );\n    planes[ 4 ].copy( p4 );\n    planes[ 5 ].copy( p5 );\n\n    return this;\n\n  },\n\n  copy: function ( frustum ) {\n\n    var planes = this.planes;\n\n    for ( var i = 0; i < 6; i ++ ) {\n\n      planes[ i ].copy( frustum.planes[ i ] );\n\n    }\n\n    return this;\n\n  },\n\n  setFromMatrix: function ( m ) {\n\n    var planes = this.planes;\n    var me = m.elements;\n    var me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n    var me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n    var me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n    var me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n    planes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n    planes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n    planes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n    planes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n    planes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n    planes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n    return this;\n\n  },\n\n  intersectsObject: function () {\n\n    var sphere = new THREE.Sphere();\n\n    return function ( object ) {\n\n      var geometry = object.geometry;\n\n      if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n      sphere.copy( geometry.boundingSphere );\n      sphere.applyMatrix4( object.matrixWorld );\n\n      return this.intersectsSphere( sphere );\n\n    };\n\n  }(),\n\n  intersectsSphere: function ( sphere ) {\n\n    var planes = this.planes;\n    var center = sphere.center;\n    var negRadius = - sphere.radius;\n\n    for ( var i = 0; i < 6; i ++ ) {\n\n      var distance = planes[ i ].distanceToPoint( center );\n\n      if ( distance < negRadius ) {\n\n        return false;\n\n      }\n\n    }\n\n    return true;\n\n  },\n\n  intersectsBox: function () {\n\n    var p1 = new THREE.Vector3(),\n      p2 = new THREE.Vector3();\n\n    return function ( box ) {\n\n      var planes = this.planes;\n\n      for ( var i = 0; i < 6 ; i ++ ) {\n\n        var plane = planes[ i ];\n\n        p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n        p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n        p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n        p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n        p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n        p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n        var d1 = plane.distanceToPoint( p1 );\n        var d2 = plane.distanceToPoint( p2 );\n\n        // if both outside plane, no intersection\n\n        if ( d1 < 0 && d2 < 0 ) {\n\n          return false;\n\n        }\n      }\n\n      return true;\n    };\n\n  }(),\n\n\n  containsPoint: function ( point ) {\n\n    var planes = this.planes;\n\n    for ( var i = 0; i < 6; i ++ ) {\n\n      if ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n        return false;\n\n      }\n\n    }\n\n    return true;\n\n  },\n\n  clone: function () {\n\n    return new THREE.Frustum().copy( this );\n\n  }\n\n};\n\n// File:src/math/Plane.js\n\n/**\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Plane = function ( normal, constant ) {\n\n  this.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\n  this.constant = ( constant !== undefined ) ? constant : 0;\n\n};\n\nTHREE.Plane.prototype = {\n\n  constructor: THREE.Plane,\n\n  set: function ( normal, constant ) {\n\n    this.normal.copy( normal );\n    this.constant = constant;\n\n    return this;\n\n  },\n\n  setComponents: function ( x, y, z, w ) {\n\n    this.normal.set( x, y, z );\n    this.constant = w;\n\n    return this;\n\n  },\n\n  setFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n    this.normal.copy( normal );\n    this.constant = - point.dot( this.normal ); // must be this.normal, not normal, as this.normal is normalized\n\n    return this;\n\n  },\n\n  setFromCoplanarPoints: function () {\n\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n\n    return function ( a, b, c ) {\n\n      var normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n      // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n      this.setFromNormalAndCoplanarPoint( normal, a );\n\n      return this;\n\n    };\n\n  }(),\n\n\n  copy: function ( plane ) {\n\n    this.normal.copy( plane.normal );\n    this.constant = plane.constant;\n\n    return this;\n\n  },\n\n  normalize: function () {\n\n    // Note: will lead to a divide by zero if the plane is invalid.\n\n    var inverseNormalLength = 1.0 / this.normal.length();\n    this.normal.multiplyScalar( inverseNormalLength );\n    this.constant *= inverseNormalLength;\n\n    return this;\n\n  },\n\n  negate: function () {\n\n    this.constant *= - 1;\n    this.normal.negate();\n\n    return this;\n\n  },\n\n  distanceToPoint: function ( point ) {\n\n    return this.normal.dot( point ) + this.constant;\n\n  },\n\n  distanceToSphere: function ( sphere ) {\n\n    return this.distanceToPoint( sphere.center ) - sphere.radius;\n\n  },\n\n  projectPoint: function ( point, optionalTarget ) {\n\n    return this.orthoPoint( point, optionalTarget ).sub( point ).negate();\n\n  },\n\n  orthoPoint: function ( point, optionalTarget ) {\n\n    var perpendicularMagnitude = this.distanceToPoint( point );\n\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\n\n  },\n\n  isIntersectionLine: function ( line ) {\n\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n    var startSign = this.distanceToPoint( line.start );\n    var endSign = this.distanceToPoint( line.end );\n\n    return ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n  },\n\n  intersectLine: function () {\n\n    var v1 = new THREE.Vector3();\n\n    return function ( line, optionalTarget ) {\n\n      var result = optionalTarget || new THREE.Vector3();\n\n      var direction = line.delta( v1 );\n\n      var denominator = this.normal.dot( direction );\n\n      if ( denominator == 0 ) {\n\n        // line is coplanar, return origin\n        if ( this.distanceToPoint( line.start ) == 0 ) {\n\n          return result.copy( line.start );\n\n        }\n\n        // Unsure if this is the correct method to handle this case.\n        return undefined;\n\n      }\n\n      var t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n      if ( t < 0 || t > 1 ) {\n\n        return undefined;\n\n      }\n\n      return result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n    };\n\n  }(),\n\n\n  coplanarPoint: function ( optionalTarget ) {\n\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy( this.normal ).multiplyScalar( - this.constant );\n\n  },\n\n  applyMatrix4: function () {\n\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    var m1 = new THREE.Matrix3();\n\n    return function ( matrix, optionalNormalMatrix ) {\n\n      // compute new normal based on theory here:\n      // http://www.songho.ca/opengl/gl_normaltransform.html\n      var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n      var newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\n\n      var newCoplanarPoint = this.coplanarPoint( v2 );\n      newCoplanarPoint.applyMatrix4( matrix );\n\n      this.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\n\n      return this;\n\n    };\n\n  }(),\n\n  translate: function ( offset ) {\n\n    this.constant = this.constant - offset.dot( this.normal );\n\n    return this;\n\n  },\n\n  equals: function ( plane ) {\n\n    return plane.normal.equals( this.normal ) && ( plane.constant == this.constant );\n\n  },\n\n  clone: function () {\n\n    return new THREE.Plane().copy( this );\n\n  }\n\n};\n\n// File:src/math/Math.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Math = {\n\n  generateUUID: function () {\n\n    // http://www.broofa.com/Tools/Math.uuid.htm\n\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n    var uuid = new Array( 36 );\n    var rnd = 0, r;\n\n    return function () {\n\n      for ( var i = 0; i < 36; i ++ ) {\n\n        if ( i == 8 || i == 13 || i == 18 || i == 23 ) {\n\n          uuid[ i ] = '-';\n\n        } else if ( i == 14 ) {\n\n          uuid[ i ] = '4';\n\n        } else {\n\n          if ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n          r = rnd & 0xf;\n          rnd = rnd >> 4;\n          uuid[ i ] = chars[ ( i == 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n        }\n      }\n\n      return uuid.join( '' );\n\n    };\n\n  }(),\n\n  // Clamp value to range <a, b>\n\n  clamp: function ( x, a, b ) {\n\n    return ( x < a ) ? a : ( ( x > b ) ? b : x );\n\n  },\n\n  // Clamp value to range <a, inf)\n\n  clampBottom: function ( x, a ) {\n\n    return x < a ? a : x;\n\n  },\n\n  // Linear mapping from range <a1, a2> to range <b1, b2>\n\n  mapLinear: function ( x, a1, a2, b1, b2 ) {\n\n    return b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n  },\n\n  // http://en.wikipedia.org/wiki/Smoothstep\n\n  smoothstep: function ( x, min, max ) {\n\n    if ( x <= min ) return 0;\n    if ( x >= max ) return 1;\n\n    x = ( x - min ) / ( max - min );\n\n    return x * x * ( 3 - 2 * x );\n\n  },\n\n  smootherstep: function ( x, min, max ) {\n\n    if ( x <= min ) return 0;\n    if ( x >= max ) return 1;\n\n    x = ( x - min ) / ( max - min );\n\n    return x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n  },\n\n  // Random float from <0, 1> with 16 bits of randomness\n  // (standard Math.random() creates repetitive patterns when applied over larger space)\n\n  random16: function () {\n\n    return ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\n\n  },\n\n  // Random integer from <low, high> interval\n\n  randInt: function ( low, high ) {\n\n    return low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n  },\n\n  // Random float from <low, high> interval\n\n  randFloat: function ( low, high ) {\n\n    return low + Math.random() * ( high - low );\n\n  },\n\n  // Random float from <-range/2, range/2> interval\n\n  randFloatSpread: function ( range ) {\n\n    return range * ( 0.5 - Math.random() );\n\n  },\n\n  sign: function ( x ) {\n\n    return ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : 0;\n\n  },\n\n  degToRad: function () {\n\n    var degreeToRadiansFactor = Math.PI / 180;\n\n    return function ( degrees ) {\n\n      return degrees * degreeToRadiansFactor;\n\n    };\n\n  }(),\n\n  radToDeg: function () {\n\n    var radianToDegreesFactor = 180 / Math.PI;\n\n    return function ( radians ) {\n\n      return radians * radianToDegreesFactor;\n\n    };\n\n  }(),\n\n  isPowerOfTwo: function ( value ) {\n\n    return ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n  }\n\n};\n\n// File:src/math/Spline.js\n\n/**\n * Spline from Tween.js, slightly optimized (and trashed)\n * http://sole.github.com/tween.js/examples/05_spline.html\n *\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Spline = function ( points ) {\n\n  this.points = points;\n\n  var c = [], v3 = { x: 0, y: 0, z: 0 },\n  point, intPoint, weight, w2, w3,\n  pa, pb, pc, pd;\n\n  this.initFromArray = function ( a ) {\n\n    this.points = [];\n\n    for ( var i = 0; i < a.length; i ++ ) {\n\n      this.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\n\n    }\n\n  };\n\n  this.getPoint = function ( k ) {\n\n    point = ( this.points.length - 1 ) * k;\n    intPoint = Math.floor( point );\n    weight = point - intPoint;\n\n    c[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\n    c[ 1 ] = intPoint;\n    c[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\n    c[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\n\n    pa = this.points[ c[ 0 ] ];\n    pb = this.points[ c[ 1 ] ];\n    pc = this.points[ c[ 2 ] ];\n    pd = this.points[ c[ 3 ] ];\n\n    w2 = weight * weight;\n    w3 = weight * w2;\n\n    v3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\n    v3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\n    v3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\n\n    return v3;\n\n  };\n\n  this.getControlPointsArray = function () {\n\n    var i, p, l = this.points.length,\n      coords = [];\n\n    for ( i = 0; i < l; i ++ ) {\n\n      p = this.points[ i ];\n      coords[ i ] = [ p.x, p.y, p.z ];\n\n    }\n\n    return coords;\n\n  };\n\n  // approximate length by summing linear segments\n\n  this.getLength = function ( nSubDivisions ) {\n\n    var i, index, nSamples, position,\n      point = 0, intPoint = 0, oldIntPoint = 0,\n      oldPosition = new THREE.Vector3(),\n      tmpVec = new THREE.Vector3(),\n      chunkLengths = [],\n      totalLength = 0;\n\n    // first point has 0 length\n\n    chunkLengths[ 0 ] = 0;\n\n    if ( ! nSubDivisions ) nSubDivisions = 100;\n\n    nSamples = this.points.length * nSubDivisions;\n\n    oldPosition.copy( this.points[ 0 ] );\n\n    for ( i = 1; i < nSamples; i ++ ) {\n\n      index = i / nSamples;\n\n      position = this.getPoint( index );\n      tmpVec.copy( position );\n\n      totalLength += tmpVec.distanceTo( oldPosition );\n\n      oldPosition.copy( position );\n\n      point = ( this.points.length - 1 ) * index;\n      intPoint = Math.floor( point );\n\n      if ( intPoint != oldIntPoint ) {\n\n        chunkLengths[ intPoint ] = totalLength;\n        oldIntPoint = intPoint;\n\n      }\n\n    }\n\n    // last point ends with total length\n\n    chunkLengths[ chunkLengths.length ] = totalLength;\n\n    return { chunks: chunkLengths, total: totalLength };\n\n  };\n\n  this.reparametrizeByArcLength = function ( samplingCoef ) {\n\n    var i, j,\n      index, indexCurrent, indexNext,\n      linearDistance, realDistance,\n      sampling, position,\n      newpoints = [],\n      tmpVec = new THREE.Vector3(),\n      sl = this.getLength();\n\n    newpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\n\n    for ( i = 1; i < this.points.length; i ++ ) {\n\n      //tmpVec.copy( this.points[ i - 1 ] );\n      //linearDistance = tmpVec.distanceTo( this.points[ i ] );\n\n      realDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\n\n      sampling = Math.ceil( samplingCoef * realDistance / sl.total );\n\n      indexCurrent = ( i - 1 ) / ( this.points.length - 1 );\n      indexNext = i / ( this.points.length - 1 );\n\n      for ( j = 1; j < sampling - 1; j ++ ) {\n\n        index = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\n\n        position = this.getPoint( index );\n        newpoints.push( tmpVec.copy( position ).clone() );\n\n      }\n\n      newpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\n\n    }\n\n    this.points = newpoints;\n\n  };\n\n  // Catmull-Rom\n\n  function interpolate( p0, p1, p2, p3, t, t2, t3 ) {\n\n    var v0 = ( p2 - p0 ) * 0.5,\n      v1 = ( p3 - p1 ) * 0.5;\n\n    return ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n  };\n\n};\n\n// File:src/math/Triangle.js\n\n/**\n * @author bhouston / http://exocortex.com\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Triangle = function ( a, b, c ) {\n\n  this.a = ( a !== undefined ) ? a : new THREE.Vector3();\n  this.b = ( b !== undefined ) ? b : new THREE.Vector3();\n  this.c = ( c !== undefined ) ? c : new THREE.Vector3();\n\n};\n\nTHREE.Triangle.normal = function () {\n\n  var v0 = new THREE.Vector3();\n\n  return function ( a, b, c, optionalTarget ) {\n\n    var result = optionalTarget || new THREE.Vector3();\n\n    result.subVectors( c, b );\n    v0.subVectors( a, b );\n    result.cross( v0 );\n\n    var resultLengthSq = result.lengthSq();\n    if ( resultLengthSq > 0 ) {\n\n      return result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n    }\n\n    return result.set( 0, 0, 0 );\n\n  };\n\n}();\n\n// static/instance method to calculate barycoordinates\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\nTHREE.Triangle.barycoordFromPoint = function () {\n\n  var v0 = new THREE.Vector3();\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n\n  return function ( point, a, b, c, optionalTarget ) {\n\n    v0.subVectors( c, a );\n    v1.subVectors( b, a );\n    v2.subVectors( point, a );\n\n    var dot00 = v0.dot( v0 );\n    var dot01 = v0.dot( v1 );\n    var dot02 = v0.dot( v2 );\n    var dot11 = v1.dot( v1 );\n    var dot12 = v1.dot( v2 );\n\n    var denom = ( dot00 * dot11 - dot01 * dot01 );\n\n    var result = optionalTarget || new THREE.Vector3();\n\n    // colinear or singular triangle\n    if ( denom == 0 ) {\n      // arbitrary location outside of triangle?\n      // not sure if this is the best idea, maybe should be returning undefined\n      return result.set( - 2, - 1, - 1 );\n    }\n\n    var invDenom = 1 / denom;\n    var u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n    var v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n    // barycoordinates must always sum to 1\n    return result.set( 1 - u - v, v, u );\n\n  };\n\n}();\n\nTHREE.Triangle.containsPoint = function () {\n\n  var v1 = new THREE.Vector3();\n\n  return function ( point, a, b, c ) {\n\n    var result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n    return ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n  };\n\n}();\n\nTHREE.Triangle.prototype = {\n\n  constructor: THREE.Triangle,\n\n  set: function ( a, b, c ) {\n\n    this.a.copy( a );\n    this.b.copy( b );\n    this.c.copy( c );\n\n    return this;\n\n  },\n\n  setFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n    this.a.copy( points[ i0 ] );\n    this.b.copy( points[ i1 ] );\n    this.c.copy( points[ i2 ] );\n\n    return this;\n\n  },\n\n  copy: function ( triangle ) {\n\n    this.a.copy( triangle.a );\n    this.b.copy( triangle.b );\n    this.c.copy( triangle.c );\n\n    return this;\n\n  },\n\n  area: function () {\n\n    var v0 = new THREE.Vector3();\n    var v1 = new THREE.Vector3();\n\n    return function () {\n\n      v0.subVectors( this.c, this.b );\n      v1.subVectors( this.a, this.b );\n\n      return v0.cross( v1 ).length() * 0.5;\n\n    };\n\n  }(),\n\n  midpoint: function ( optionalTarget ) {\n\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n  },\n\n  normal: function ( optionalTarget ) {\n\n    return THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n  },\n\n  plane: function ( optionalTarget ) {\n\n    var result = optionalTarget || new THREE.Plane();\n\n    return result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n  },\n\n  barycoordFromPoint: function ( point, optionalTarget ) {\n\n    return THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n  },\n\n  containsPoint: function ( point ) {\n\n    return THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\n\n  },\n\n  equals: function ( triangle ) {\n\n    return triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n  },\n\n  clone: function () {\n\n    return new THREE.Triangle().copy( this );\n\n  }\n\n};\n\n// File:src/core/Clock.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Clock = function ( autoStart ) {\n\n  this.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n  this.startTime = 0;\n  this.oldTime = 0;\n  this.elapsedTime = 0;\n\n  this.running = false;\n\n};\n\nTHREE.Clock.prototype = {\n\n  constructor: THREE.Clock,\n\n  start: function () {\n\n    this.startTime = self.performance !== undefined && self.performance.now !== undefined\n           ? self.performance.now()\n           : Date.now();\n\n    this.oldTime = this.startTime;\n    this.running = true;\n  },\n\n  stop: function () {\n\n    this.getElapsedTime();\n    this.running = false;\n\n  },\n\n  getElapsedTime: function () {\n\n    this.getDelta();\n    return this.elapsedTime;\n\n  },\n\n  getDelta: function () {\n\n    var diff = 0;\n\n    if ( this.autoStart && ! this.running ) {\n\n      this.start();\n\n    }\n\n    if ( this.running ) {\n\n      var newTime = self.performance !== undefined && self.performance.now !== undefined\n           ? self.performance.now()\n           : Date.now();\n\n      diff = 0.001 * ( newTime - this.oldTime );\n      this.oldTime = newTime;\n\n      this.elapsedTime += diff;\n\n    }\n\n    return diff;\n\n  }\n\n};\n\n// File:src/core/EventDispatcher.js\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nTHREE.EventDispatcher = function () {}\n\nTHREE.EventDispatcher.prototype = {\n\n  constructor: THREE.EventDispatcher,\n\n  apply: function ( object ) {\n\n    object.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\n    object.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\n    object.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\n    object.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\n\n  },\n\n  addEventListener: function ( type, listener ) {\n\n    if ( this._listeners === undefined ) this._listeners = {};\n\n    var listeners = this._listeners;\n\n    if ( listeners[ type ] === undefined ) {\n\n      listeners[ type ] = [];\n\n    }\n\n    if ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n      listeners[ type ].push( listener );\n\n    }\n\n  },\n\n  hasEventListener: function ( type, listener ) {\n\n    if ( this._listeners === undefined ) return false;\n\n    var listeners = this._listeners;\n\n    if ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\n\n      return true;\n\n    }\n\n    return false;\n\n  },\n\n  removeEventListener: function ( type, listener ) {\n\n    if ( this._listeners === undefined ) return;\n\n    var listeners = this._listeners;\n    var listenerArray = listeners[ type ];\n\n    if ( listenerArray !== undefined ) {\n\n      var index = listenerArray.indexOf( listener );\n\n      if ( index !== - 1 ) {\n\n        listenerArray.splice( index, 1 );\n\n      }\n\n    }\n\n  },\n\n  dispatchEvent: function ( event ) {\n\n    if ( this._listeners === undefined ) return;\n\n    var listeners = this._listeners;\n    var listenerArray = listeners[ event.type ];\n\n    if ( listenerArray !== undefined ) {\n\n      event.target = this;\n\n      var array = [];\n      var length = listenerArray.length;\n\n      for ( var i = 0; i < length; i ++ ) {\n\n        array[ i ] = listenerArray[ i ];\n\n      }\n\n      for ( var i = 0; i < length; i ++ ) {\n\n        array[ i ].call( this, event );\n\n      }\n\n    }\n\n  }\n\n};\n\n// File:src/core/Raycaster.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://exocortex.com/\n * @author stephomi / http://stephaneginier.com/\n */\n\n( function ( THREE ) {\n\n  THREE.Raycaster = function ( origin, direction, near, far ) {\n\n    this.ray = new THREE.Ray( origin, direction );\n    // direction is assumed to be normalized (for accurate distance calculations)\n\n    this.near = near || 0;\n    this.far = far || Infinity;\n\n    this.params = {\n      Sprite: {},\n      Mesh: {},\n      PointCloud: { threshold: 1 },\n      LOD: {},\n      Line: {}\n    };\n\n  };\n\n  var descSort = function ( a, b ) {\n\n    return a.distance - b.distance;\n\n  };\n\n  var intersectObject = function ( object, raycaster, intersects, recursive ) {\n\n    object.raycast( raycaster, intersects );\n\n    if ( recursive === true ) {\n\n      var children = object.children;\n\n      for ( var i = 0, l = children.length; i < l; i ++ ) {\n\n        intersectObject( children[ i ], raycaster, intersects, true );\n\n      }\n\n    }\n\n  };\n\n  //\n\n  THREE.Raycaster.prototype = {\n\n    constructor: THREE.Raycaster,\n\n    precision: 0.0001,\n    linePrecision: 1,\n\n    set: function ( origin, direction ) {\n\n      this.ray.set( origin, direction );\n      // direction is assumed to be normalized (for accurate distance calculations)\n\n    },\n\n    intersectObject: function ( object, recursive ) {\n\n      var intersects = [];\n\n      intersectObject( object, this, intersects, recursive );\n\n      intersects.sort( descSort );\n\n      return intersects;\n\n    },\n\n    intersectObjects: function ( objects, recursive ) {\n\n      var intersects = [];\n\n      for ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n        intersectObject( objects[ i ], this, intersects, recursive );\n\n      }\n\n      intersects.sort( descSort );\n\n      return intersects;\n\n    }\n\n  };\n\n}( THREE ) );\n\n// File:src/core/Object3D.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Object3D = function () {\n\n  this.id = THREE.Object3DIdCount ++;\n  this.uuid = THREE.Math.generateUUID();\n\n  this.name = '';\n\n  this.parent = undefined;\n  this.children = [];\n\n  this.up = THREE.Object3D.DefaultUp.clone();\n\n  var scope = this;\n\n  var position = new THREE.Vector3();\n  var rotation = new THREE.Euler();\n  var quaternion = new THREE.Quaternion();\n  var scale = new THREE.Vector3( 1, 1, 1 );\n\n  rotation.onChange( function () {\n    quaternion.setFromEuler( rotation, false );\n  } );\n\n  quaternion.onChange( function () {\n    rotation.setFromQuaternion( quaternion, undefined, false );\n  } );\n\n  Object.defineProperties( this, {\n    position: {\n      enumerable: true,\n      value: position\n    },\n    rotation: {\n      enumerable: true,\n      value: rotation\n    },\n    quaternion: {\n      enumerable: true,\n      value: quaternion\n    },\n    scale: {\n      enumerable: true,\n      value: scale\n    },\n  } );\n\n  this.renderDepth = null;\n\n  this.rotationAutoUpdate = true;\n\n  this.matrix = new THREE.Matrix4();\n  this.matrixWorld = new THREE.Matrix4();\n\n  this.matrixAutoUpdate = true;\n  this.matrixWorldNeedsUpdate = false;\n\n  this.visible = true;\n\n  this.castShadow = false;\n  this.receiveShadow = false;\n\n  this.frustumCulled = true;\n\n  this.userData = {};\n\n};\n\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\n\nTHREE.Object3D.prototype = {\n\n  constructor: THREE.Object3D,\n\n  get eulerOrder () {\n\n    console.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\n\n    return this.rotation.order;\n\n  },\n\n  set eulerOrder ( value ) {\n\n    console.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\n\n    this.rotation.order = value;\n\n  },\n\n  get useQuaternion () {\n\n    console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n  },\n\n  set useQuaternion ( value ) {\n\n    console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n  },\n\n  applyMatrix: function ( matrix ) {\n\n    this.matrix.multiplyMatrices( matrix, this.matrix );\n\n    this.matrix.decompose( this.position, this.quaternion, this.scale );\n\n  },\n\n  setRotationFromAxisAngle: function ( axis, angle ) {\n\n    // assumes axis is normalized\n\n    this.quaternion.setFromAxisAngle( axis, angle );\n\n  },\n\n  setRotationFromEuler: function ( euler ) {\n\n    this.quaternion.setFromEuler( euler, true );\n\n  },\n\n  setRotationFromMatrix: function ( m ) {\n\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    this.quaternion.setFromRotationMatrix( m );\n\n  },\n\n  setRotationFromQuaternion: function ( q ) {\n\n    // assumes q is normalized\n\n    this.quaternion.copy( q );\n\n  },\n\n  rotateOnAxis: function () {\n\n    // rotate object on axis in object space\n    // axis is assumed to be normalized\n\n    var q1 = new THREE.Quaternion();\n\n    return function ( axis, angle ) {\n\n      q1.setFromAxisAngle( axis, angle );\n\n      this.quaternion.multiply( q1 );\n\n      return this;\n\n    }\n\n  }(),\n\n  rotateX: function () {\n\n    var v1 = new THREE.Vector3( 1, 0, 0 );\n\n    return function ( angle ) {\n\n      return this.rotateOnAxis( v1, angle );\n\n    };\n\n  }(),\n\n  rotateY: function () {\n\n    var v1 = new THREE.Vector3( 0, 1, 0 );\n\n    return function ( angle ) {\n\n      return this.rotateOnAxis( v1, angle );\n\n    };\n\n  }(),\n\n  rotateZ: function () {\n\n    var v1 = new THREE.Vector3( 0, 0, 1 );\n\n    return function ( angle ) {\n\n      return this.rotateOnAxis( v1, angle );\n\n    };\n\n  }(),\n\n  translateOnAxis: function () {\n\n    // translate object by distance along axis in object space\n    // axis is assumed to be normalized\n\n    var v1 = new THREE.Vector3();\n\n    return function ( axis, distance ) {\n\n      v1.copy( axis ).applyQuaternion( this.quaternion );\n\n      this.position.add( v1.multiplyScalar( distance ) );\n\n      return this;\n\n    }\n\n  }(),\n\n  translate: function ( distance, axis ) {\n\n    console.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n    return this.translateOnAxis( axis, distance );\n\n  },\n\n  translateX: function () {\n\n    var v1 = new THREE.Vector3( 1, 0, 0 );\n\n    return function ( distance ) {\n\n      return this.translateOnAxis( v1, distance );\n\n    };\n\n  }(),\n\n  translateY: function () {\n\n    var v1 = new THREE.Vector3( 0, 1, 0 );\n\n    return function ( distance ) {\n\n      return this.translateOnAxis( v1, distance );\n\n    };\n\n  }(),\n\n  translateZ: function () {\n\n    var v1 = new THREE.Vector3( 0, 0, 1 );\n\n    return function ( distance ) {\n\n      return this.translateOnAxis( v1, distance );\n\n    };\n\n  }(),\n\n  localToWorld: function ( vector ) {\n\n    return vector.applyMatrix4( this.matrixWorld );\n\n  },\n\n  worldToLocal: function () {\n\n    var m1 = new THREE.Matrix4();\n\n    return function ( vector ) {\n\n      return vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n    };\n\n  }(),\n\n  lookAt: function () {\n\n    // This routine does not support objects with rotated and/or translated parent(s)\n\n    var m1 = new THREE.Matrix4();\n\n    return function ( vector ) {\n\n      m1.lookAt( vector, this.position, this.up );\n\n      this.quaternion.setFromRotationMatrix( m1 );\n\n    };\n\n  }(),\n\n  add: function ( object ) {\n\n    if ( arguments.length > 1 ) {\n\n      for ( var i = 0; i < arguments.length; i++ ) {\n\n        this.add( arguments[ i ] );\n\n      }\n\n      return this;\n\n    };\n\n    if ( object === this ) {\n\n      console.error( \"THREE.Object3D.add:\", object, \"can't be added as a child of itself.\" );\n      return this;\n\n    }\n\n    if ( object instanceof THREE.Object3D ) {\n\n      if ( object.parent !== undefined ) {\n\n        object.parent.remove( object );\n\n      }\n\n      object.parent = this;\n      object.dispatchEvent( { type: 'added' } );\n\n      this.children.push( object );\n\n      // add to scene\n\n      var scene = this;\n\n      while ( scene.parent !== undefined ) {\n\n        scene = scene.parent;\n\n      }\n\n      if ( scene !== undefined && scene instanceof THREE.Scene )  {\n\n        scene.__addObject( object );\n\n      }\n\n    } else {\n\n      console.error( \"THREE.Object3D.add:\", object, \"is not an instance of THREE.Object3D.\" );\n\n    }\n\n    return this;\n\n  },\n\n  remove: function ( object ) {\n\n    if ( arguments.length > 1 ) {\n\n      for ( var i = 0; i < arguments.length; i++ ) {\n\n        this.remove( arguments[ i ] );\n\n      }\n\n    };\n\n    var index = this.children.indexOf( object );\n\n    if ( index !== - 1 ) {\n\n      object.parent = undefined;\n      object.dispatchEvent( { type: 'removed' } );\n\n      this.children.splice( index, 1 );\n\n      // remove from scene\n\n      var scene = this;\n\n      while ( scene.parent !== undefined ) {\n\n        scene = scene.parent;\n\n      }\n\n      if ( scene !== undefined && scene instanceof THREE.Scene ) {\n\n        scene.__removeObject( object );\n\n      }\n\n    }\n\n  },\n\n  raycast: function () {},\n\n  traverse: function ( callback ) {\n\n    callback( this );\n\n    for ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n      this.children[ i ].traverse( callback );\n\n    }\n\n  },\n\n  traverseVisible: function ( callback ) {\n\n    if ( this.visible === false ) return;\n\n    callback( this );\n\n    for ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n      this.children[ i ].traverseVisible( callback );\n\n    }\n\n  },\n\n  getObjectById: function ( id, recursive ) {\n\n    for ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n      var child = this.children[ i ];\n\n      if ( child.id === id ) {\n\n        return child;\n\n      }\n\n      if ( recursive === true ) {\n\n        child = child.getObjectById( id, recursive );\n\n        if ( child !== undefined ) {\n\n          return child;\n\n        }\n\n      }\n\n    }\n\n    return undefined;\n\n  },\n\n  getObjectByName: function ( name, recursive ) {\n\n    for ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n      var child = this.children[ i ];\n\n      if ( child.name === name ) {\n\n        return child;\n\n      }\n\n      if ( recursive === true ) {\n\n        child = child.getObjectByName( name, recursive );\n\n        if ( child !== undefined ) {\n\n          return child;\n\n        }\n\n      }\n\n    }\n\n    return undefined;\n\n  },\n\n  getChildByName: function ( name, recursive ) {\n\n    console.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n    return this.getObjectByName( name, recursive );\n\n  },\n\n  updateMatrix: function () {\n\n    this.matrix.compose( this.position, this.quaternion, this.scale );\n\n    this.matrixWorldNeedsUpdate = true;\n\n  },\n\n  updateMatrixWorld: function ( force ) {\n\n    if ( this.matrixAutoUpdate === true ) this.updateMatrix();\n\n    if ( this.matrixWorldNeedsUpdate === true || force === true ) {\n\n      if ( this.parent === undefined ) {\n\n        this.matrixWorld.copy( this.matrix );\n\n      } else {\n\n        this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n      }\n\n      this.matrixWorldNeedsUpdate = false;\n\n      force = true;\n\n    }\n\n    // update children\n\n    for ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n      this.children[ i ].updateMatrixWorld( force );\n\n    }\n\n  },\n\n  clone: function ( object, recursive ) {\n\n    if ( object === undefined ) object = new THREE.Object3D();\n    if ( recursive === undefined ) recursive = true;\n\n    object.name = this.name;\n\n    object.up.copy( this.up );\n\n    object.position.copy( this.position );\n    object.quaternion.copy( this.quaternion );\n    object.scale.copy( this.scale );\n\n    object.renderDepth = this.renderDepth;\n\n    object.rotationAutoUpdate = this.rotationAutoUpdate;\n\n    object.matrix.copy( this.matrix );\n    object.matrixWorld.copy( this.matrixWorld );\n\n    object.matrixAutoUpdate = this.matrixAutoUpdate;\n    object.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate;\n\n    object.visible = this.visible;\n\n    object.castShadow = this.castShadow;\n    object.receiveShadow = this.receiveShadow;\n\n    object.frustumCulled = this.frustumCulled;\n\n    object.userData = JSON.parse( JSON.stringify( this.userData ) );\n\n    if ( recursive === true ) {\n\n      for ( var i = 0; i < this.children.length; i ++ ) {\n\n        var child = this.children[ i ];\n        object.add( child.clone() );\n\n      }\n\n    }\n\n    return object;\n\n  }\n\n};\n\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\n\nTHREE.Object3DIdCount = 0;\n\n// File:src/core/Projector.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author julianwa / https://github.com/julianwa\n */\n\nTHREE.Projector = function () {\n\n  var _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\n  _vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\n  _face, _faceCount, _facePool = [], _facePoolLength = 0,\n  _line, _lineCount, _linePool = [], _linePoolLength = 0,\n  _sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\n\n  _renderData = { objects: [], lights: [], elements: [] },\n\n  _vA = new THREE.Vector3(),\n  _vB = new THREE.Vector3(),\n  _vC = new THREE.Vector3(),\n\n  _vector3 = new THREE.Vector3(),\n  _vector4 = new THREE.Vector4(),\n\n  _clipBox = new THREE.Box3( new THREE.Vector3( - 1, - 1, - 1 ), new THREE.Vector3( 1, 1, 1 ) ),\n  _boundingBox = new THREE.Box3(),\n  _points3 = new Array( 3 ),\n  _points4 = new Array( 4 ),\n\n  _viewMatrix = new THREE.Matrix4(),\n  _viewProjectionMatrix = new THREE.Matrix4(),\n\n  _modelMatrix,\n  _modelViewProjectionMatrix = new THREE.Matrix4(),\n\n  _normalMatrix = new THREE.Matrix3(),\n\n  _frustum = new THREE.Frustum(),\n\n  _clippedVertex1PositionScreen = new THREE.Vector4(),\n  _clippedVertex2PositionScreen = new THREE.Vector4();\n\n  this.projectVector = function ( vector, camera ) {\n\n    camera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n    _viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\n    return vector.applyProjection( _viewProjectionMatrix );\n\n  };\n\n  this.unprojectVector = function () {\n\n    var projectionMatrixInverse = new THREE.Matrix4();\n\n    return function ( vector, camera ) {\n\n      projectionMatrixInverse.getInverse( camera.projectionMatrix );\n      _viewProjectionMatrix.multiplyMatrices( camera.matrixWorld, projectionMatrixInverse );\n\n      return vector.applyProjection( _viewProjectionMatrix );\n\n    };\n\n  }();\n\n  this.pickingRay = function ( vector, camera ) {\n\n    // set two vectors with opposing z values\n    vector.z = - 1.0;\n    var end = new THREE.Vector3( vector.x, vector.y, 1.0 );\n\n    this.unprojectVector( vector, camera );\n    this.unprojectVector( end, camera );\n\n    // find direction from vector to end\n    end.sub( vector ).normalize();\n\n    return new THREE.Raycaster( vector, end );\n\n  };\n\n  var RenderList = function () {\n\n    var normals = [];\n    var uvs = [];\n\n    var object = null;\n    var material = null;\n\n    var normalMatrix = new THREE.Matrix3();\n\n    var setObject = function ( value ) {\n\n      object = value;\n      material = object.material;\n\n      normalMatrix.getNormalMatrix( object.matrixWorld );\n\n      normals.length = 0;\n      uvs.length = 0;\n\n    };\n\n    var projectVertex = function ( vertex ) {\n\n      var position = vertex.position;\n      var positionWorld = vertex.positionWorld;\n      var positionScreen = vertex.positionScreen;\n\n      positionWorld.copy( position ).applyMatrix4( _modelMatrix );\n      positionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\n\n      var invW = 1 / positionScreen.w;\n\n      positionScreen.x *= invW;\n      positionScreen.y *= invW;\n      positionScreen.z *= invW;\n\n      vertex.visible = positionScreen.x >= - 1 && positionScreen.x <= 1 &&\n           positionScreen.y >= - 1 && positionScreen.y <= 1 &&\n           positionScreen.z >= - 1 && positionScreen.z <= 1;\n\n    };\n\n    var pushVertex = function ( x, y, z ) {\n\n      _vertex = getNextVertexInPool();\n      _vertex.position.set( x, y, z );\n\n      projectVertex( _vertex );\n\n    };\n\n    var pushNormal = function ( x, y, z ) {\n\n      normals.push( x, y, z );\n\n    };\n\n    var pushUv = function ( x, y ) {\n\n      uvs.push( x, y );\n\n    };\n\n    var checkTriangleVisibility = function ( v1, v2, v3 ) {\n\n      if ( v1.visible === true || v2.visible === true || v3.visible === true ) return true;\n\n      _points3[ 0 ] = v1.positionScreen;\n      _points3[ 1 ] = v2.positionScreen;\n      _points3[ 2 ] = v3.positionScreen;\n\n      return _clipBox.isIntersectionBox( _boundingBox.setFromPoints( _points3 ) );\n\n    };\n\n    var checkBackfaceCulling = function ( v1, v2, v3 ) {\n\n      return ( ( v3.positionScreen.x - v1.positionScreen.x ) *\n            ( v2.positionScreen.y - v1.positionScreen.y ) -\n            ( v3.positionScreen.y - v1.positionScreen.y ) *\n            ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\n\n    };\n\n    var pushLine = function ( a, b ) {\n\n      var v1 = _vertexPool[ a ];\n      var v2 = _vertexPool[ b ];\n\n      _line = getNextLineInPool();\n\n      _line.id = object.id;\n      _line.v1.copy( v1 );\n      _line.v2.copy( v2 );\n      _line.z = ( v1.positionScreen.z + v2.positionScreen.z ) / 2;\n\n      _line.material = object.material;\n\n      _renderData.elements.push( _line );\n\n    };\n\n    var pushTriangle = function ( a, b, c ) {\n\n      var v1 = _vertexPool[ a ];\n      var v2 = _vertexPool[ b ];\n      var v3 = _vertexPool[ c ];\n\n      if ( checkTriangleVisibility( v1, v2, v3 ) === false ) return;\n\n      if ( material.side === THREE.DoubleSide || checkBackfaceCulling( v1, v2, v3 ) === true ) {\n\n        _face = getNextFaceInPool();\n\n        _face.id = object.id;\n        _face.v1.copy( v1 );\n        _face.v2.copy( v2 );\n        _face.v3.copy( v3 );\n        _face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\n        for ( var i = 0; i < 3; i ++ ) {\n\n          var offset = arguments[ i ] * 3;\n          var normal = _face.vertexNormalsModel[ i ];\n\n          normal.set( normals[ offset ], normals[ offset + 1 ], normals[ offset + 2 ] );\n          normal.applyMatrix3( normalMatrix ).normalize();\n\n          var offset2 = arguments[ i ] * 2;\n\n          var uv = _face.uvs[ i ];\n          uv.set( uvs[ offset2 ], uvs[ offset2 + 1 ] );\n\n        }\n\n        _face.vertexNormalsLength = 3;\n\n        _face.material = object.material;\n\n        _renderData.elements.push( _face );\n\n      }\n\n    };\n\n    return {\n      setObject: setObject,\n      projectVertex: projectVertex,\n      checkTriangleVisibility: checkTriangleVisibility,\n      checkBackfaceCulling: checkBackfaceCulling,\n      pushVertex: pushVertex,\n      pushNormal: pushNormal,\n      pushUv: pushUv,\n      pushLine: pushLine,\n      pushTriangle: pushTriangle\n    }\n\n  };\n\n  var renderList = new RenderList();\n\n  this.projectScene = function ( scene, camera, sortObjects, sortElements ) {\n\n    _faceCount = 0;\n    _lineCount = 0;\n    _spriteCount = 0;\n\n    _renderData.elements.length = 0;\n\n    if ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n    if ( camera.parent === undefined ) camera.updateMatrixWorld();\n\n    _viewMatrix.copy( camera.matrixWorldInverse.getInverse( camera.matrixWorld ) );\n    _viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\n    _frustum.setFromMatrix( _viewProjectionMatrix );\n\n    //\n\n    _objectCount = 0;\n\n    _renderData.objects.length = 0;\n    _renderData.lights.length = 0;\n\n    scene.traverseVisible( function ( object ) {\n\n      if ( object instanceof THREE.Light ) {\n\n        _renderData.lights.push( object );\n\n      } else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Sprite ) {\n\n        if ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\n\n          _object = getNextObjectInPool();\n          _object.id = object.id;\n          _object.object = object;\n\n          if ( object.renderDepth !== null ) {\n\n            _object.z = object.renderDepth;\n\n          } else {\n\n            _vector3.setFromMatrixPosition( object.matrixWorld );\n            _vector3.applyProjection( _viewProjectionMatrix );\n            _object.z = _vector3.z;\n\n          }\n\n          _renderData.objects.push( _object );\n\n        }\n\n      }\n\n    } );\n\n    if ( sortObjects === true ) {\n\n      _renderData.objects.sort( painterSort );\n\n    }\n\n    //\n\n    for ( var o = 0, ol = _renderData.objects.length; o < ol; o ++ ) {\n\n      var object = _renderData.objects[ o ].object;\n      var geometry = object.geometry;\n\n      renderList.setObject( object );\n\n      _modelMatrix = object.matrixWorld;\n\n      _vertexCount = 0;\n\n      if ( object instanceof THREE.Mesh ) {\n\n        if ( geometry instanceof THREE.BufferGeometry ) {\n\n          var attributes = geometry.attributes;\n          var offsets = geometry.offsets;\n\n          if ( attributes.position === undefined ) continue;\n\n          var positions = attributes.position.array;\n\n          for ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n            renderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n          }\n\n          if ( attributes.normal !== undefined ) {\n\n            var normals = attributes.normal.array;\n\n            for ( var i = 0, l = normals.length; i < l; i += 3 ) {\n\n              renderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\n\n            }\n\n          }\n\n          if ( attributes.uv !== undefined ) {\n\n            var uvs = attributes.uv.array;\n\n            for ( var i = 0, l = uvs.length; i < l; i += 2 ) {\n\n              renderList.pushUv( uvs[ i ], uvs[ i + 1 ] );\n\n            }\n\n          }\n\n          if ( attributes.index !== undefined ) {\n\n            var indices = attributes.index.array;\n\n            if ( offsets.length > 0 ) {\n\n              for ( var o = 0; o < offsets.length; o ++ ) {\n\n                var offset = offsets[ o ];\n                var index = offset.index;\n\n                for ( var i = offset.start, l = offset.start + offset.count; i < l; i += 3 ) {\n\n                  renderList.pushTriangle( indices[ i ] + index, indices[ i + 1 ] + index, indices[ i + 2 ] + index );\n\n                }\n\n              }\n\n            } else {\n\n              for ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n                renderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n              }\n\n            }\n\n          } else {\n\n            for ( var i = 0, l = positions.length / 3; i < l; i += 3 ) {\n\n              renderList.pushTriangle( i, i + 1, i + 2 );\n\n            }\n\n          }\n\n        } else if ( geometry instanceof THREE.Geometry ) {\n\n          var vertices = geometry.vertices;\n          var faces = geometry.faces;\n          var faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\n          _normalMatrix.getNormalMatrix( _modelMatrix );\n\n          var isFaceMaterial = object.material instanceof THREE.MeshFaceMaterial;\n          var objectMaterials = isFaceMaterial === true ? object.material : null;\n\n          for ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\n            var vertex = vertices[ v ];\n            renderList.pushVertex( vertex.x, vertex.y, vertex.z );\n\n          }\n\n          for ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n            var face = faces[ f ];\n\n            var material = isFaceMaterial === true\n               ? objectMaterials.materials[ face.materialIndex ]\n               : object.material;\n\n            if ( material === undefined ) continue;\n\n            var side = material.side;\n\n            var v1 = _vertexPool[ face.a ];\n            var v2 = _vertexPool[ face.b ];\n            var v3 = _vertexPool[ face.c ];\n\n            if ( material.morphTargets === true ) {\n\n              var morphTargets = geometry.morphTargets;\n              var morphInfluences = object.morphTargetInfluences;\n\n              var v1p = v1.position;\n              var v2p = v2.position;\n              var v3p = v3.position;\n\n              _vA.set( 0, 0, 0 );\n              _vB.set( 0, 0, 0 );\n              _vC.set( 0, 0, 0 );\n\n              for ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n                var influence = morphInfluences[ t ];\n\n                if ( influence === 0 ) continue;\n\n                var targets = morphTargets[ t ].vertices;\n\n                _vA.x += ( targets[ face.a ].x - v1p.x ) * influence;\n                _vA.y += ( targets[ face.a ].y - v1p.y ) * influence;\n                _vA.z += ( targets[ face.a ].z - v1p.z ) * influence;\n\n                _vB.x += ( targets[ face.b ].x - v2p.x ) * influence;\n                _vB.y += ( targets[ face.b ].y - v2p.y ) * influence;\n                _vB.z += ( targets[ face.b ].z - v2p.z ) * influence;\n\n                _vC.x += ( targets[ face.c ].x - v3p.x ) * influence;\n                _vC.y += ( targets[ face.c ].y - v3p.y ) * influence;\n                _vC.z += ( targets[ face.c ].z - v3p.z ) * influence;\n\n              }\n\n              v1.position.add( _vA );\n              v2.position.add( _vB );\n              v3.position.add( _vC );\n\n              renderList.projectVertex( v1 );\n              renderList.projectVertex( v2 );\n              renderList.projectVertex( v3 );\n\n            }\n\n            if ( renderList.checkTriangleVisibility( v1, v2, v3 ) === false ) continue;\n\n            var visible = renderList.checkBackfaceCulling( v1, v2, v3 );\n\n            if ( side !== THREE.DoubleSide ) {\n              if ( side === THREE.FrontSide && visible === false ) continue;\n              if ( side === THREE.BackSide && visible === true ) continue;\n            }\n\n            _face = getNextFaceInPool();\n\n            _face.id = object.id;\n            _face.v1.copy( v1 );\n            _face.v2.copy( v2 );\n            _face.v3.copy( v3 );\n\n            _face.normalModel.copy( face.normal );\n\n            if ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n              _face.normalModel.negate();\n\n            }\n\n            _face.normalModel.applyMatrix3( _normalMatrix ).normalize();\n\n            var faceVertexNormals = face.vertexNormals;\n\n            for ( var n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\n\n              var normalModel = _face.vertexNormalsModel[ n ];\n              normalModel.copy( faceVertexNormals[ n ] );\n\n              if ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n                normalModel.negate();\n\n              }\n\n              normalModel.applyMatrix3( _normalMatrix ).normalize();\n\n            }\n\n            _face.vertexNormalsLength = faceVertexNormals.length;\n\n            var vertexUvs = faceVertexUvs[ f ];\n\n            if ( vertexUvs !== undefined ) {\n\n              for ( var u = 0; u < 3; u ++ ) {\n\n                _face.uvs[ u ].copy( vertexUvs[ u ] );\n\n              }\n\n            }\n\n            _face.color = face.color;\n            _face.material = material;\n\n            _face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\n            _renderData.elements.push( _face );\n\n          }\n\n        }\n\n      } else if ( object instanceof THREE.Line ) {\n\n        if ( geometry instanceof THREE.BufferGeometry ) {\n\n          var attributes = geometry.attributes;\n\n          if ( attributes.position !== undefined ) {\n\n            var positions = attributes.position.array;\n\n            for ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n              renderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n            }\n\n            if ( attributes.index !== undefined ) {\n\n              var indices = attributes.index.array;\n\n              for ( var i = 0, l = indices.length; i < l; i += 2 ) {\n\n                renderList.pushLine( indices[ i ], indices[ i + 1 ] );\n\n              }\n\n            } else {\n\n              var step = object.type === THREE.LinePieces ? 2 : 1;\n\n              for ( var i = 0, l = ( positions.length / 3 ) - 1; i < l; i += step ) {\n\n                renderList.pushLine( i, i + 1 );\n\n              }\n\n            }\n\n          }\n\n        } else if ( geometry instanceof THREE.Geometry ) {\n\n          _modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n          var vertices = object.geometry.vertices;\n\n          if ( vertices.length === 0 ) continue;\n\n          v1 = getNextVertexInPool();\n          v1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n          // Handle LineStrip and LinePieces\n          var step = object.type === THREE.LinePieces ? 2 : 1;\n\n          for ( var v = 1, vl = vertices.length; v < vl; v ++ ) {\n\n            v1 = getNextVertexInPool();\n            v1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n            if ( ( v + 1 ) % step > 0 ) continue;\n\n            v2 = _vertexPool[ _vertexCount - 2 ];\n\n            _clippedVertex1PositionScreen.copy( v1.positionScreen );\n            _clippedVertex2PositionScreen.copy( v2.positionScreen );\n\n            if ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\n\n              // Perform the perspective divide\n              _clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\n              _clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\n\n              _line = getNextLineInPool();\n\n              _line.id = object.id;\n              _line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\n              _line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\n\n              _line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\n\n              _line.material = object.material;\n\n              if ( object.material.vertexColors === THREE.VertexColors ) {\n\n                _line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\n                _line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\n\n              }\n\n              _renderData.elements.push( _line );\n\n            }\n\n          }\n\n        }\n\n      } else if ( object instanceof THREE.Sprite ) {\n\n        _vector4.set( _modelMatrix.elements[ 12 ], _modelMatrix.elements[ 13 ], _modelMatrix.elements[ 14 ], 1 );\n        _vector4.applyMatrix4( _viewProjectionMatrix );\n\n        var invW = 1 / _vector4.w;\n\n        _vector4.z *= invW;\n\n        if ( _vector4.z >= - 1 && _vector4.z <= 1 ) {\n\n          _sprite = getNextSpriteInPool();\n          _sprite.id = object.id;\n          _sprite.x = _vector4.x * invW;\n          _sprite.y = _vector4.y * invW;\n          _sprite.z = _vector4.z;\n          _sprite.object = object;\n\n          _sprite.rotation = object.rotation;\n\n          _sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[ 0 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 12 ] ) );\n          _sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[ 5 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 13 ] ) );\n\n          _sprite.material = object.material;\n\n          _renderData.elements.push( _sprite );\n\n        }\n\n      }\n\n    }\n\n    if ( sortElements === true ) _renderData.elements.sort( painterSort );\n\n    return _renderData;\n\n  };\n\n  // Pools\n\n  function getNextObjectInPool() {\n\n    if ( _objectCount === _objectPoolLength ) {\n\n      var object = new THREE.RenderableObject();\n      _objectPool.push( object );\n      _objectPoolLength ++;\n      _objectCount ++;\n      return object;\n\n    }\n\n    return _objectPool[ _objectCount ++ ];\n\n  }\n\n  function getNextVertexInPool() {\n\n    if ( _vertexCount === _vertexPoolLength ) {\n\n      var vertex = new THREE.RenderableVertex();\n      _vertexPool.push( vertex );\n      _vertexPoolLength ++;\n      _vertexCount ++;\n      return vertex;\n\n    }\n\n    return _vertexPool[ _vertexCount ++ ];\n\n  }\n\n  function getNextFaceInPool() {\n\n    if ( _faceCount === _facePoolLength ) {\n\n      var face = new THREE.RenderableFace();\n      _facePool.push( face );\n      _facePoolLength ++;\n      _faceCount ++;\n      return face;\n\n    }\n\n    return _facePool[ _faceCount ++ ];\n\n\n  }\n\n  function getNextLineInPool() {\n\n    if ( _lineCount === _linePoolLength ) {\n\n      var line = new THREE.RenderableLine();\n      _linePool.push( line );\n      _linePoolLength ++;\n      _lineCount ++\n      return line;\n\n    }\n\n    return _linePool[ _lineCount ++ ];\n\n  }\n\n  function getNextSpriteInPool() {\n\n    if ( _spriteCount === _spritePoolLength ) {\n\n      var sprite = new THREE.RenderableSprite();\n      _spritePool.push( sprite );\n      _spritePoolLength ++;\n      _spriteCount ++\n      return sprite;\n\n    }\n\n    return _spritePool[ _spriteCount ++ ];\n\n  }\n\n  //\n\n  function painterSort( a, b ) {\n\n    if ( a.z !== b.z ) {\n\n      return b.z - a.z;\n\n    } else if ( a.id !== b.id ) {\n\n      return a.id - b.id;\n\n    } else {\n\n      return 0;\n\n    }\n\n  }\n\n  function clipLine( s1, s2 ) {\n\n    var alpha1 = 0, alpha2 = 1,\n\n    // Calculate the boundary coordinate of each vertex for the near and far clip planes,\n    // Z = -1 and Z = +1, respectively.\n    bc1near =  s1.z + s1.w,\n    bc2near =  s2.z + s2.w,\n    bc1far =  - s1.z + s1.w,\n    bc2far =  - s2.z + s2.w;\n\n    if ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\n\n      // Both vertices lie entirely within all clip planes.\n      return true;\n\n    } else if ( ( bc1near < 0 && bc2near < 0 ) || ( bc1far < 0 && bc2far < 0 ) ) {\n\n      // Both vertices lie entirely outside one of the clip planes.\n      return false;\n\n    } else {\n\n      // The line segment spans at least one clip plane.\n\n      if ( bc1near < 0 ) {\n\n        // v1 lies outside the near plane, v2 inside\n        alpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\n\n      } else if ( bc2near < 0 ) {\n\n        // v2 lies outside the near plane, v1 inside\n        alpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\n\n      }\n\n      if ( bc1far < 0 ) {\n\n        // v1 lies outside the far plane, v2 inside\n        alpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\n\n      } else if ( bc2far < 0 ) {\n\n        // v2 lies outside the far plane, v2 inside\n        alpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\n\n      }\n\n      if ( alpha2 < alpha1 ) {\n\n        // The line segment spans two boundaries, but is outside both of them.\n        // (This can't happen when we're only clipping against just near/far but good\n        //  to leave the check here for future usage if other clip planes are added.)\n        return false;\n\n      } else {\n\n        // Update the s1 and s2 vertices to match the clipped line segment.\n        s1.lerp( s2, alpha1 );\n        s2.lerp( s1, 1 - alpha2 );\n\n        return true;\n\n      }\n\n    }\n\n  }\n\n};\n\n// File:src/core/Face3.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\n\n  this.a = a;\n  this.b = b;\n  this.c = c;\n\n  this.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\n  this.vertexNormals = normal instanceof Array ? normal : [];\n\n  this.color = color instanceof THREE.Color ? color : new THREE.Color();\n  this.vertexColors = color instanceof Array ? color : [];\n\n  this.vertexTangents = [];\n\n  this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n};\n\nTHREE.Face3.prototype = {\n\n  constructor: THREE.Face3,\n\n  clone: function () {\n\n    var face = new THREE.Face3( this.a, this.b, this.c );\n\n    face.normal.copy( this.normal );\n    face.color.copy( this.color );\n\n    face.materialIndex = this.materialIndex;\n\n    for ( var i = 0, il = this.vertexNormals.length; i < il; i ++ ) {\n\n      face.vertexNormals[ i ] = this.vertexNormals[ i ].clone();\n\n    }\n\n    for ( var i = 0, il = this.vertexColors.length; i < il; i ++ ) {\n\n      face.vertexColors[ i ] = this.vertexColors[ i ].clone();\n\n    }\n\n    for ( var i = 0, il = this.vertexTangents.length; i < il; i ++ ) {\n\n      face.vertexTangents[ i ] = this.vertexTangents[ i ].clone();\n\n    }\n\n    return face;\n\n  }\n\n};\n\n// File:src/core/Face4.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\n\n  console.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' )\n  return new THREE.Face3( a, b, c, normal, color, materialIndex );\n\n};\n\n// File:src/core/BufferAttribute.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.BufferAttribute = function ( array, itemSize ) {\n\n  this.array = array;\n  this.itemSize = itemSize;\n\n};\n\nTHREE.BufferAttribute.prototype = {\n\n  constructor: THREE.BufferAttribute,\n\n  get length () {\n\n    return this.array.length;\n\n  },\n\n  set: function ( value ) {\n\n    this.array.set( value );\n\n    return this;\n\n  },\n\n  setX: function ( index, x ) {\n\n    this.array[ index * this.itemSize ] = x;\n\n    return this;\n\n  },\n\n  setY: function ( index, y ) {\n\n    this.array[ index * this.itemSize + 1 ] = y;\n\n    return this;\n\n  },\n\n  setZ: function ( index, z ) {\n\n    this.array[ index * this.itemSize + 2 ] = z;\n\n    return this;\n\n  },\n\n  setXY: function ( index, x, y ) {\n\n    index *= this.itemSize;\n\n    this.array[ index     ] = x;\n    this.array[ index + 1 ] = y;\n\n    return this;\n\n  },\n\n  setXYZ: function ( index, x, y, z ) {\n\n    index *= this.itemSize;\n\n    this.array[ index     ] = x;\n    this.array[ index + 1 ] = y;\n    this.array[ index + 2 ] = z;\n\n    return this;\n\n  },\n\n  setXYZW: function ( index, x, y, z, w ) {\n\n    index *= this.itemSize;\n\n    this.array[ index     ] = x;\n    this.array[ index + 1 ] = y;\n    this.array[ index + 2 ] = z;\n    this.array[ index + 3 ] = w;\n\n    return this;\n\n  }\n\n};\n\n//\n\nTHREE.Int8Attribute = function ( data, itemSize ) {\n\n  console.warn( 'THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n  return new THREE.BufferAttribute( data, itemSize );\n\n};\n\nTHREE.Uint8Attribute = function ( data, itemSize ) {\n\n  console.warn( 'THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n  return new THREE.BufferAttribute( data, itemSize );\n\n};\n\nTHREE.Uint8ClampedAttribute = function ( data, itemSize ) {\n\n  console.warn( 'THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n  return new THREE.BufferAttribute( data, itemSize );\n\n\n};\n\nTHREE.Int16Attribute = function ( data, itemSize ) {\n\n  console.warn( 'THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n  return new THREE.BufferAttribute( data, itemSize );\n\n};\n\nTHREE.Uint16Attribute = function ( data, itemSize ) {\n\n  console.warn( 'THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n  return new THREE.BufferAttribute( data, itemSize );\n\n};\n\nTHREE.Int32Attribute = function ( data, itemSize ) {\n\n  console.warn( 'THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n  return new THREE.BufferAttribute( data, itemSize );\n\n};\n\nTHREE.Uint32Attribute = function ( data, itemSize ) {\n\n  console.warn( 'THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n  return new THREE.BufferAttribute( data, itemSize );\n\n};\n\nTHREE.Float32Attribute = function ( data, itemSize ) {\n\n  console.warn( 'THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n  return new THREE.BufferAttribute( data, itemSize );\n\n};\n\nTHREE.Float64Attribute = function ( data, itemSize ) {\n\n  console.warn( 'THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n  return new THREE.BufferAttribute( data, itemSize );\n\n};\n\n// File:src/core/BufferGeometry.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.BufferGeometry = function () {\n\n  this.id = THREE.GeometryIdCount ++;\n  this.uuid = THREE.Math.generateUUID();\n\n  this.name = '';\n\n  this.attributes = {};\n  this.drawcalls = [];\n  this.offsets = this.drawcalls; // backwards compatibility\n\n  this.boundingBox = null;\n  this.boundingSphere = null;\n\n};\n\nTHREE.BufferGeometry.prototype = {\n\n  constructor: THREE.BufferGeometry,\n\n  addAttribute: function ( name, attribute ) {\n\n    if ( attribute instanceof THREE.BufferAttribute === false ) {\n\n      console.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n      this.attributes[ name ] = { array: arguments[ 1 ], itemSize: arguments[ 2 ] };\n\n      return;\n\n    }\n\n    this.attributes[ name ] = attribute;\n\n  },\n\n  getAttribute: function ( name ) {\n\n    return this.attributes[ name ];\n\n  },\n\n  addDrawCall: function ( start, count, indexOffset ) {\n\n    this.drawcalls.push( {\n\n      start: start,\n      count: count,\n      index: indexOffset !== undefined ? indexOffset : 0\n\n    } );\n\n  },\n\n  applyMatrix: function ( matrix ) {\n\n    var position = this.attributes.position;\n\n    if ( position !== undefined ) {\n\n      matrix.applyToVector3Array( position.array );\n      position.needsUpdate = true;\n\n    }\n\n    var normal = this.attributes.normal;\n\n    if ( normal !== undefined ) {\n\n      var normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\n\n      normalMatrix.applyToVector3Array( normal.array );\n      normal.needsUpdate = true;\n\n    }\n\n  },\n\n  fromGeometry: function ( geometry, settings ) {\n\n    settings = settings || { 'vertexColors': THREE.NoColors };\n\n    var vertices = geometry.vertices;\n    var faces = geometry.faces;\n    var faceVertexUvs = geometry.faceVertexUvs;\n    var vertexColors = settings.vertexColors;\n    var hasFaceVertexUv = faceVertexUvs[ 0 ].length > 0;\n    var hasFaceVertexNormals = faces[ 0 ].vertexNormals.length == 3;\n\n    var positions = new Float32Array( faces.length * 3 * 3 );\n    this.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n\n    var normals = new Float32Array( faces.length * 3 * 3 );\n    this.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\n    if ( vertexColors !== THREE.NoColors ) {\n\n      var colors = new Float32Array( faces.length * 3 * 3 );\n      this.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\n\n    }\n\n    if ( hasFaceVertexUv === true ) {\n\n      var uvs = new Float32Array( faces.length * 3 * 2 );\n      this.addAttribute( 'uvs', new THREE.BufferAttribute( uvs, 2 ) );\n\n    }\n\n    for ( var i = 0, i2 = 0, i3 = 0; i < faces.length; i ++, i2 += 6, i3 += 9 ) {\n\n      var face = faces[ i ];\n\n      var a = vertices[ face.a ];\n      var b = vertices[ face.b ];\n      var c = vertices[ face.c ];\n\n      positions[ i3     ] = a.x;\n      positions[ i3 + 1 ] = a.y;\n      positions[ i3 + 2 ] = a.z;\n\n      positions[ i3 + 3 ] = b.x;\n      positions[ i3 + 4 ] = b.y;\n      positions[ i3 + 5 ] = b.z;\n\n      positions[ i3 + 6 ] = c.x;\n      positions[ i3 + 7 ] = c.y;\n      positions[ i3 + 8 ] = c.z;\n\n      if ( hasFaceVertexNormals === true ) {\n\n        var na = face.vertexNormals[ 0 ];\n        var nb = face.vertexNormals[ 1 ];\n        var nc = face.vertexNormals[ 2 ];\n\n        normals[ i3     ] = na.x;\n        normals[ i3 + 1 ] = na.y;\n        normals[ i3 + 2 ] = na.z;\n\n        normals[ i3 + 3 ] = nb.x;\n        normals[ i3 + 4 ] = nb.y;\n        normals[ i3 + 5 ] = nb.z;\n\n        normals[ i3 + 6 ] = nc.x;\n        normals[ i3 + 7 ] = nc.y;\n        normals[ i3 + 8 ] = nc.z;\n\n      } else {\n\n        var n = face.normal;\n\n        normals[ i3     ] = n.x;\n        normals[ i3 + 1 ] = n.y;\n        normals[ i3 + 2 ] = n.z;\n\n        normals[ i3 + 3 ] = n.x;\n        normals[ i3 + 4 ] = n.y;\n        normals[ i3 + 5 ] = n.z;\n\n        normals[ i3 + 6 ] = n.x;\n        normals[ i3 + 7 ] = n.y;\n        normals[ i3 + 8 ] = n.z;\n\n      }\n\n      if ( vertexColors === THREE.FaceColors ) {\n\n        var fc = face.color;\n\n        colors[ i3     ] = fc.r;\n        colors[ i3 + 1 ] = fc.g;\n        colors[ i3 + 2 ] = fc.b;\n\n        colors[ i3 + 3 ] = fc.r;\n        colors[ i3 + 4 ] = fc.g;\n        colors[ i3 + 5 ] = fc.b;\n\n        colors[ i3 + 6 ] = fc.r;\n        colors[ i3 + 7 ] = fc.g;\n        colors[ i3 + 8 ] = fc.b;\n\n      } else if ( vertexColors === THREE.VertexColors ) {\n\n        var vca = face.vertexColors[ 0 ];\n        var vcb = face.vertexColors[ 1 ];\n        var vcc = face.vertexColors[ 2 ];\n\n        colors[ i3     ] = vca.r;\n        colors[ i3 + 1 ] = vca.g;\n        colors[ i3 + 2 ] = vca.b;\n\n        colors[ i3 + 3 ] = vcb.r;\n        colors[ i3 + 4 ] = vcb.g;\n        colors[ i3 + 5 ] = vcb.b;\n\n        colors[ i3 + 6 ] = vcc.r;\n        colors[ i3 + 7 ] = vcc.g;\n        colors[ i3 + 8 ] = vcc.b;\n\n      }\n\n      if ( hasFaceVertexUv === true ) {\n\n        var uva = faceVertexUvs[ 0 ][ i ][ 0 ];\n        var uvb = faceVertexUvs[ 0 ][ i ][ 1 ];\n        var uvc = faceVertexUvs[ 0 ][ i ][ 2 ];\n\n        uvs[ i2     ] = uva.x;\n        uvs[ i2 + 1 ] = uva.y;\n\n        uvs[ i2 + 2 ] = uvb.x;\n        uvs[ i2 + 3 ] = uvb.y;\n\n        uvs[ i2 + 4 ] = uvc.x;\n        uvs[ i2 + 5 ] = uvc.y;\n\n      }\n\n    }\n\n    this.computeBoundingSphere()\n\n    return this;\n\n  },\n\n  computeBoundingBox: function () {\n\n    if ( this.boundingBox === null ) {\n\n      this.boundingBox = new THREE.Box3();\n\n    }\n\n    var positions = this.attributes[ 'position' ].array;\n\n    if ( positions ) {\n\n      var bb = this.boundingBox;\n\n      if ( positions.length >= 3 ) {\n        bb.min.x = bb.max.x = positions[ 0 ];\n        bb.min.y = bb.max.y = positions[ 1 ];\n        bb.min.z = bb.max.z = positions[ 2 ];\n      }\n\n      for ( var i = 3, il = positions.length; i < il; i += 3 ) {\n\n        var x = positions[ i ];\n        var y = positions[ i + 1 ];\n        var z = positions[ i + 2 ];\n\n        // bounding box\n\n        if ( x < bb.min.x ) {\n\n          bb.min.x = x;\n\n        } else if ( x > bb.max.x ) {\n\n          bb.max.x = x;\n\n        }\n\n        if ( y < bb.min.y ) {\n\n          bb.min.y = y;\n\n        } else if ( y > bb.max.y ) {\n\n          bb.max.y = y;\n\n        }\n\n        if ( z < bb.min.z ) {\n\n          bb.min.z = z;\n\n        } else if ( z > bb.max.z ) {\n\n          bb.max.z = z;\n\n        }\n\n      }\n\n    }\n\n    if ( positions === undefined || positions.length === 0 ) {\n\n      this.boundingBox.min.set( 0, 0, 0 );\n      this.boundingBox.max.set( 0, 0, 0 );\n\n    }\n\n    if ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n      console.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.' );\n\n    }\n\n  },\n\n  computeBoundingSphere: function () {\n\n    var box = new THREE.Box3();\n    var vector = new THREE.Vector3();\n\n    return function () {\n\n      if ( this.boundingSphere === null ) {\n\n        this.boundingSphere = new THREE.Sphere();\n\n      }\n\n      var positions = this.attributes[ 'position' ].array;\n\n      if ( positions ) {\n\n        box.makeEmpty();\n\n        var center = this.boundingSphere.center;\n\n        for ( var i = 0, il = positions.length; i < il; i += 3 ) {\n\n          vector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n          box.expandByPoint( vector );\n\n        }\n\n        box.center( center );\n\n        // hoping to find a boundingSphere with a radius smaller than the\n        // boundingSphere of the boundingBox:  sqrt(3) smaller in the best case\n\n        var maxRadiusSq = 0;\n\n        for ( var i = 0, il = positions.length; i < il; i += 3 ) {\n\n          vector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n          maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n        }\n\n        this.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n        if ( isNaN( this.boundingSphere.radius ) ) {\n\n          console.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.' );\n\n        }\n\n      }\n\n    }\n\n  }(),\n\n  computeFaceNormals: function () {\n\n    // backwards compatibility\n\n  },\n\n  computeVertexNormals: function () {\n\n    if ( this.attributes[ 'position' ] ) {\n\n      var i, il;\n      var j, jl;\n\n      var nVertexElements = this.attributes[ 'position' ].array.length;\n\n      if ( this.attributes[ 'normal' ] === undefined ) {\n\n        this.attributes[ 'normal' ] = {\n\n          itemSize: 3,\n          array: new Float32Array( nVertexElements )\n\n        };\n\n      } else {\n\n        // reset existing normals to zero\n\n        for ( i = 0, il = this.attributes[ 'normal' ].array.length; i < il; i ++ ) {\n\n          this.attributes[ 'normal' ].array[ i ] = 0;\n\n        }\n\n      }\n\n      var positions = this.attributes[ 'position' ].array;\n      var normals = this.attributes[ 'normal' ].array;\n\n      var vA, vB, vC, x, y, z,\n\n      pA = new THREE.Vector3(),\n      pB = new THREE.Vector3(),\n      pC = new THREE.Vector3(),\n\n      cb = new THREE.Vector3(),\n      ab = new THREE.Vector3();\n\n      // indexed elements\n\n      if ( this.attributes[ 'index' ] ) {\n\n        var indices = this.attributes[ 'index' ].array;\n\n        var offsets = ( this.offsets.length > 0 ? this.offsets : [ { start: 0, count: indices.length, index: 0 } ] );\n\n        for ( j = 0, jl = offsets.length; j < jl; ++ j ) {\n\n          var start = offsets[ j ].start;\n          var count = offsets[ j ].count;\n          var index = offsets[ j ].index;\n\n          for ( i = start, il = start + count; i < il; i += 3 ) {\n\n            vA = index + indices[ i ];\n            vB = index + indices[ i + 1 ];\n            vC = index + indices[ i + 2 ];\n\n            x = positions[ vA * 3 ];\n            y = positions[ vA * 3 + 1 ];\n            z = positions[ vA * 3 + 2 ];\n            pA.set( x, y, z );\n\n            x = positions[ vB * 3 ];\n            y = positions[ vB * 3 + 1 ];\n            z = positions[ vB * 3 + 2 ];\n            pB.set( x, y, z );\n\n            x = positions[ vC * 3 ];\n            y = positions[ vC * 3 + 1 ];\n            z = positions[ vC * 3 + 2 ];\n            pC.set( x, y, z );\n\n            cb.subVectors( pC, pB );\n            ab.subVectors( pA, pB );\n            cb.cross( ab );\n\n            normals[ vA * 3     ] += cb.x;\n            normals[ vA * 3 + 1 ] += cb.y;\n            normals[ vA * 3 + 2 ] += cb.z;\n\n            normals[ vB * 3     ] += cb.x;\n            normals[ vB * 3 + 1 ] += cb.y;\n            normals[ vB * 3 + 2 ] += cb.z;\n\n            normals[ vC * 3     ] += cb.x;\n            normals[ vC * 3 + 1 ] += cb.y;\n            normals[ vC * 3 + 2 ] += cb.z;\n\n          }\n\n        }\n\n      // non-indexed elements (unconnected triangle soup)\n\n      } else {\n\n        for ( i = 0, il = positions.length; i < il; i += 9 ) {\n\n          x = positions[ i ];\n          y = positions[ i + 1 ];\n          z = positions[ i + 2 ];\n          pA.set( x, y, z );\n\n          x = positions[ i + 3 ];\n          y = positions[ i + 4 ];\n          z = positions[ i + 5 ];\n          pB.set( x, y, z );\n\n          x = positions[ i + 6 ];\n          y = positions[ i + 7 ];\n          z = positions[ i + 8 ];\n          pC.set( x, y, z );\n\n          cb.subVectors( pC, pB );\n          ab.subVectors( pA, pB );\n          cb.cross( ab );\n\n          normals[ i     ] = cb.x;\n          normals[ i + 1 ] = cb.y;\n          normals[ i + 2 ] = cb.z;\n\n          normals[ i + 3 ] = cb.x;\n          normals[ i + 4 ] = cb.y;\n          normals[ i + 5 ] = cb.z;\n\n          normals[ i + 6 ] = cb.x;\n          normals[ i + 7 ] = cb.y;\n          normals[ i + 8 ] = cb.z;\n\n        }\n\n      }\n\n      this.normalizeNormals();\n\n      this.normalsNeedUpdate = true;\n\n    }\n\n  },\n\n  computeTangents: function () {\n\n    // based on http://www.terathon.com/code/tangent.html\n    // (per vertex tangents)\n\n    if ( this.attributes[ 'index' ] === undefined ||\n       this.attributes[ 'position' ] === undefined ||\n       this.attributes[ 'normal' ] === undefined ||\n       this.attributes[ 'uv' ] === undefined ) {\n\n      console.warn( 'Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()' );\n      return;\n\n    }\n\n    var indices = this.attributes[ 'index' ].array;\n    var positions = this.attributes[ 'position' ].array;\n    var normals = this.attributes[ 'normal' ].array;\n    var uvs = this.attributes[ 'uv' ].array;\n\n    var nVertices = positions.length / 3;\n\n    if ( this.attributes[ 'tangent' ] === undefined ) {\n\n      var nTangentElements = 4 * nVertices;\n\n      this.attributes[ 'tangent' ] = {\n\n        itemSize: 4,\n        array: new Float32Array( nTangentElements )\n\n      };\n\n    }\n\n    var tangents = this.attributes[ 'tangent' ].array;\n\n    var tan1 = [], tan2 = [];\n\n    for ( var k = 0; k < nVertices; k ++ ) {\n\n      tan1[ k ] = new THREE.Vector3();\n      tan2[ k ] = new THREE.Vector3();\n\n    }\n\n    var xA, yA, zA,\n      xB, yB, zB,\n      xC, yC, zC,\n\n      uA, vA,\n      uB, vB,\n      uC, vC,\n\n      x1, x2, y1, y2, z1, z2,\n      s1, s2, t1, t2, r;\n\n    var sdir = new THREE.Vector3(), tdir = new THREE.Vector3();\n\n    function handleTriangle( a, b, c ) {\n\n      xA = positions[ a * 3 ];\n      yA = positions[ a * 3 + 1 ];\n      zA = positions[ a * 3 + 2 ];\n\n      xB = positions[ b * 3 ];\n      yB = positions[ b * 3 + 1 ];\n      zB = positions[ b * 3 + 2 ];\n\n      xC = positions[ c * 3 ];\n      yC = positions[ c * 3 + 1 ];\n      zC = positions[ c * 3 + 2 ];\n\n      uA = uvs[ a * 2 ];\n      vA = uvs[ a * 2 + 1 ];\n\n      uB = uvs[ b * 2 ];\n      vB = uvs[ b * 2 + 1 ];\n\n      uC = uvs[ c * 2 ];\n      vC = uvs[ c * 2 + 1 ];\n\n      x1 = xB - xA;\n      x2 = xC - xA;\n\n      y1 = yB - yA;\n      y2 = yC - yA;\n\n      z1 = zB - zA;\n      z2 = zC - zA;\n\n      s1 = uB - uA;\n      s2 = uC - uA;\n\n      t1 = vB - vA;\n      t2 = vC - vA;\n\n      r = 1.0 / ( s1 * t2 - s2 * t1 );\n\n      sdir.set(\n        ( t2 * x1 - t1 * x2 ) * r,\n        ( t2 * y1 - t1 * y2 ) * r,\n        ( t2 * z1 - t1 * z2 ) * r\n      );\n\n      tdir.set(\n        ( s1 * x2 - s2 * x1 ) * r,\n        ( s1 * y2 - s2 * y1 ) * r,\n        ( s1 * z2 - s2 * z1 ) * r\n      );\n\n      tan1[ a ].add( sdir );\n      tan1[ b ].add( sdir );\n      tan1[ c ].add( sdir );\n\n      tan2[ a ].add( tdir );\n      tan2[ b ].add( tdir );\n      tan2[ c ].add( tdir );\n\n    }\n\n    var i, il;\n    var j, jl;\n    var iA, iB, iC;\n\n    var offsets = this.offsets;\n\n    for ( j = 0, jl = offsets.length; j < jl; ++ j ) {\n\n      var start = offsets[ j ].start;\n      var count = offsets[ j ].count;\n      var index = offsets[ j ].index;\n\n      for ( i = start, il = start + count; i < il; i += 3 ) {\n\n        iA = index + indices[ i ];\n        iB = index + indices[ i + 1 ];\n        iC = index + indices[ i + 2 ];\n\n        handleTriangle( iA, iB, iC );\n\n      }\n\n    }\n\n    var tmp = new THREE.Vector3(), tmp2 = new THREE.Vector3();\n    var n = new THREE.Vector3(), n2 = new THREE.Vector3();\n    var w, t, test;\n\n    function handleVertex( v ) {\n\n      n.x = normals[ v * 3 ];\n      n.y = normals[ v * 3 + 1 ];\n      n.z = normals[ v * 3 + 2 ];\n\n      n2.copy( n );\n\n      t = tan1[ v ];\n\n      // Gram-Schmidt orthogonalize\n\n      tmp.copy( t );\n      tmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n      // Calculate handedness\n\n      tmp2.crossVectors( n2, t );\n      test = tmp2.dot( tan2[ v ] );\n      w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n      tangents[ v * 4     ] = tmp.x;\n      tangents[ v * 4 + 1 ] = tmp.y;\n      tangents[ v * 4 + 2 ] = tmp.z;\n      tangents[ v * 4 + 3 ] = w;\n\n    }\n\n    for ( j = 0, jl = offsets.length; j < jl; ++ j ) {\n\n      var start = offsets[ j ].start;\n      var count = offsets[ j ].count;\n      var index = offsets[ j ].index;\n\n      for ( i = start, il = start + count; i < il; i += 3 ) {\n\n        iA = index + indices[ i ];\n        iB = index + indices[ i + 1 ];\n        iC = index + indices[ i + 2 ];\n\n        handleVertex( iA );\n        handleVertex( iB );\n        handleVertex( iC );\n\n      }\n\n    }\n\n  },\n\n  /*\n    computeOffsets\n    Compute the draw offset for large models by chunking the index buffer into chunks of 65k addressable vertices.\n    This method will effectively rewrite the index buffer and remap all attributes to match the new indices.\n    WARNING: This method will also expand the vertex count to prevent sprawled triangles across draw offsets.\n    indexBufferSize - Defaults to 65535, but allows for larger or smaller chunks.\n  */\n  computeOffsets: function ( indexBufferSize ) {\n\n    var size = indexBufferSize;\n    if ( indexBufferSize === undefined )\n      size = 65535; //WebGL limits type of index buffer values to 16-bit.\n\n    var s = Date.now();\n\n    var indices = this.attributes[ 'index' ].array;\n    var vertices = this.attributes[ 'position' ].array;\n\n    var verticesCount = ( vertices.length / 3 );\n    var facesCount = ( indices.length / 3 );\n\n    /*\n    console.log(\"Computing buffers in offsets of \"+size+\" -> indices:\"+indices.length+\" vertices:\"+vertices.length);\n    console.log(\"Faces to process: \"+(indices.length/3));\n    console.log(\"Reordering \"+verticesCount+\" vertices.\");\n    */\n\n    var sortedIndices = new Uint16Array( indices.length ); //16-bit buffers\n    var indexPtr = 0;\n    var vertexPtr = 0;\n\n    var offsets = [ { start:0, count:0, index:0 } ];\n    var offset = offsets[ 0 ];\n\n    var duplicatedVertices = 0;\n    var newVerticeMaps = 0;\n    var faceVertices = new Int32Array( 6 );\n    var vertexMap = new Int32Array( vertices.length );\n    var revVertexMap = new Int32Array( vertices.length );\n    for ( var j = 0; j < vertices.length; j ++ ) { vertexMap[ j ] = - 1; revVertexMap[ j ] = - 1; }\n\n    /*\n      Traverse every face and reorder vertices in the proper offsets of 65k.\n      We can have more than 65k entries in the index buffer per offset, but only reference 65k values.\n    */\n    for ( var findex = 0; findex < facesCount; findex ++ ) {\n      newVerticeMaps = 0;\n\n      for ( var vo = 0; vo < 3; vo ++ ) {\n        var vid = indices[ findex * 3 + vo ];\n        if ( vertexMap[ vid ] == - 1 ) {\n          //Unmapped vertice\n          faceVertices[ vo * 2 ] = vid;\n          faceVertices[ vo * 2 + 1 ] = - 1;\n          newVerticeMaps ++;\n        } else if ( vertexMap[ vid ] < offset.index ) {\n          //Reused vertices from previous block (duplicate)\n          faceVertices[ vo * 2 ] = vid;\n          faceVertices[ vo * 2 + 1 ] = - 1;\n          duplicatedVertices ++;\n        } else {\n          //Reused vertice in the current block\n          faceVertices[ vo * 2 ] = vid;\n          faceVertices[ vo * 2 + 1 ] = vertexMap[ vid ];\n        }\n      }\n\n      var faceMax = vertexPtr + newVerticeMaps;\n      if ( faceMax > ( offset.index + size ) ) {\n        var new_offset = { start:indexPtr, count:0, index:vertexPtr };\n        offsets.push( new_offset );\n        offset = new_offset;\n\n        //Re-evaluate reused vertices in light of new offset.\n        for ( var v = 0; v < 6; v += 2 ) {\n          var new_vid = faceVertices[ v + 1 ];\n          if ( new_vid > - 1 && new_vid < offset.index )\n            faceVertices[ v + 1 ] = - 1;\n        }\n      }\n\n      //Reindex the face.\n      for ( var v = 0; v < 6; v += 2 ) {\n        var vid = faceVertices[ v ];\n        var new_vid = faceVertices[ v + 1 ];\n\n        if ( new_vid === - 1 )\n          new_vid = vertexPtr ++;\n\n        vertexMap[ vid ] = new_vid;\n        revVertexMap[ new_vid ] = vid;\n        sortedIndices[ indexPtr ++ ] = new_vid - offset.index; //XXX overflows at 16bit\n        offset.count ++;\n      }\n    }\n\n    /* Move all attribute values to map to the new computed indices , also expand the vertice stack to match our new vertexPtr. */\n    this.reorderBuffers( sortedIndices, revVertexMap, vertexPtr );\n    this.offsets = offsets;\n\n    /*\n    var orderTime = Date.now();\n    console.log(\"Reorder time: \"+(orderTime-s)+\"ms\");\n    console.log(\"Duplicated \"+duplicatedVertices+\" vertices.\");\n    console.log(\"Compute Buffers time: \"+(Date.now()-s)+\"ms\");\n    console.log(\"Draw offsets: \"+offsets.length);\n    */\n\n    return offsets;\n  },\n\n  merge: function () {\n\n    console.log( 'BufferGeometry.merge(): TODO' );\n\n  },\n\n  normalizeNormals: function () {\n\n    var normals = this.attributes[ 'normal' ].array;\n\n    var x, y, z, n;\n\n    for ( var i = 0, il = normals.length; i < il; i += 3 ) {\n\n      x = normals[ i ];\n      y = normals[ i + 1 ];\n      z = normals[ i + 2 ];\n\n      n = 1.0 / Math.sqrt( x * x + y * y + z * z );\n\n      normals[ i     ] *= n;\n      normals[ i + 1 ] *= n;\n      normals[ i + 2 ] *= n;\n\n    }\n\n  },\n\n  /*\n    reoderBuffers:\n    Reorder attributes based on a new indexBuffer and indexMap.\n    indexBuffer - Uint16Array of the new ordered indices.\n    indexMap - Int32Array where the position is the new vertex ID and the value the old vertex ID for each vertex.\n    vertexCount - Amount of total vertices considered in this reordering (in case you want to grow the vertice stack).\n  */\n  reorderBuffers: function ( indexBuffer, indexMap, vertexCount ) {\n\n    /* Create a copy of all attributes for reordering. */\n    var sortedAttributes = {};\n    var types = [ Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];\n    for ( var attr in this.attributes ) {\n      if ( attr == 'index' )\n        continue;\n      var sourceArray = this.attributes[ attr ].array;\n      for ( var i = 0, il = types.length; i < il; i ++ ) {\n        var type = types[ i ];\n        if ( sourceArray instanceof type ) {\n          sortedAttributes[ attr ] = new type( this.attributes[ attr ].itemSize * vertexCount );\n          break;\n        }\n      }\n    }\n\n    /* Move attribute positions based on the new index map */\n    for ( var new_vid = 0; new_vid < vertexCount; new_vid ++ ) {\n      var vid = indexMap[ new_vid ];\n      for ( var attr in this.attributes ) {\n        if ( attr == 'index' )\n          continue;\n        var attrArray = this.attributes[ attr ].array;\n        var attrSize = this.attributes[ attr ].itemSize;\n        var sortedAttr = sortedAttributes[ attr ];\n        for ( var k = 0; k < attrSize; k ++ )\n          sortedAttr[ new_vid * attrSize + k ] = attrArray[ vid * attrSize + k ];\n      }\n    }\n\n    /* Carry the new sorted buffers locally */\n    this.attributes[ 'index' ].array = indexBuffer;\n    for ( var attr in this.attributes ) {\n      if ( attr == 'index' )\n        continue;\n      this.attributes[ attr ].array = sortedAttributes[ attr ];\n      this.attributes[ attr ].numItems = this.attributes[ attr ].itemSize * vertexCount;\n    }\n  },\n\n  clone: function () {\n\n    var geometry = new THREE.BufferGeometry();\n\n    var types = [ Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];\n\n    for ( var attr in this.attributes ) {\n\n      var sourceAttr = this.attributes[ attr ];\n      var sourceArray = sourceAttr.array;\n\n      var attribute = {\n\n        itemSize: sourceAttr.itemSize,\n        array: null\n\n      };\n\n      for ( var i = 0, il = types.length; i < il; i ++ ) {\n\n        var type = types[ i ];\n\n        if ( sourceArray instanceof type ) {\n\n          attribute.array = new type( sourceArray );\n          break;\n\n        }\n\n      }\n\n      geometry.attributes[ attr ] = attribute;\n\n    }\n\n    for ( var i = 0, il = this.offsets.length; i < il; i ++ ) {\n\n      var offset = this.offsets[ i ];\n\n      geometry.offsets.push( {\n\n        start: offset.start,\n        index: offset.index,\n        count: offset.count\n\n      } );\n\n    }\n\n    return geometry;\n\n  },\n\n  dispose: function () {\n\n    this.dispatchEvent( { type: 'dispose' } );\n\n  }\n\n};\n\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\n\n// File:src/core/Geometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Geometry = function () {\n\n  this.id = THREE.GeometryIdCount ++;\n  this.uuid = THREE.Math.generateUUID();\n\n  this.name = '';\n\n  this.vertices = [];\n  this.colors = [];  // one-to-one vertex colors, used in Points and Line\n\n  this.faces = [];\n\n  this.faceVertexUvs = [ [] ];\n\n  this.morphTargets = [];\n  this.morphColors = [];\n  this.morphNormals = [];\n\n  this.skinWeights = [];\n  this.skinIndices = [];\n\n  this.lineDistances = [];\n\n  this.boundingBox = null;\n  this.boundingSphere = null;\n\n  this.hasTangents = false;\n\n  this.dynamic = true; // the intermediate typed arrays will be deleted when set to false\n\n  // update flags\n\n  this.verticesNeedUpdate = false;\n  this.elementsNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.tangentsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.lineDistancesNeedUpdate = false;\n\n  this.buffersNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n\n};\n\nTHREE.Geometry.prototype = {\n\n  constructor: THREE.Geometry,\n\n  applyMatrix: function ( matrix ) {\n\n    var normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\n\n    for ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n      var vertex = this.vertices[ i ];\n      vertex.applyMatrix4( matrix );\n\n    }\n\n    for ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n      var face = this.faces[ i ];\n      face.normal.applyMatrix3( normalMatrix ).normalize();\n\n      for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n        face.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n      }\n\n    }\n\n    if ( this.boundingBox instanceof THREE.Box3 ) {\n\n      this.computeBoundingBox();\n\n    }\n\n    if ( this.boundingSphere instanceof THREE.Sphere ) {\n\n      this.computeBoundingSphere();\n\n    }\n\n  },\n\n  center: function () {\n\n    this.computeBoundingBox();\n\n    var offset = new THREE.Vector3();\n\n    offset.addVectors( this.boundingBox.min, this.boundingBox.max );\n    offset.multiplyScalar( - 0.5 );\n\n    this.applyMatrix( new THREE.Matrix4().makeTranslation( offset.x, offset.y, offset.z ) );\n    this.computeBoundingBox();\n\n    return offset;\n\n  },\n\n  computeFaceNormals: function () {\n\n    var cb = new THREE.Vector3(), ab = new THREE.Vector3();\n\n    for ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n      var face = this.faces[ f ];\n\n      var vA = this.vertices[ face.a ];\n      var vB = this.vertices[ face.b ];\n      var vC = this.vertices[ face.c ];\n\n      cb.subVectors( vC, vB );\n      ab.subVectors( vA, vB );\n      cb.cross( ab );\n\n      cb.normalize();\n\n      face.normal.copy( cb );\n\n    }\n\n  },\n\n  computeVertexNormals: function ( areaWeighted ) {\n\n    var v, vl, f, fl, face, vertices;\n\n    vertices = new Array( this.vertices.length );\n\n    for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n      vertices[ v ] = new THREE.Vector3();\n\n    }\n\n    if ( areaWeighted ) {\n\n      // vertex normals weighted by triangle areas\n      // http://www.iquilezles.org/www/articles/normals/normals.htm\n\n      var vA, vB, vC, vD;\n      var cb = new THREE.Vector3(), ab = new THREE.Vector3(),\n        db = new THREE.Vector3(), dc = new THREE.Vector3(), bc = new THREE.Vector3();\n\n      for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n        face = this.faces[ f ];\n\n        vA = this.vertices[ face.a ];\n        vB = this.vertices[ face.b ];\n        vC = this.vertices[ face.c ];\n\n        cb.subVectors( vC, vB );\n        ab.subVectors( vA, vB );\n        cb.cross( ab );\n\n        vertices[ face.a ].add( cb );\n        vertices[ face.b ].add( cb );\n        vertices[ face.c ].add( cb );\n\n      }\n\n    } else {\n\n      for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n        face = this.faces[ f ];\n\n        vertices[ face.a ].add( face.normal );\n        vertices[ face.b ].add( face.normal );\n        vertices[ face.c ].add( face.normal );\n\n      }\n\n    }\n\n    for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n      vertices[ v ].normalize();\n\n    }\n\n    for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n      face = this.faces[ f ];\n\n      face.vertexNormals[ 0 ] = vertices[ face.a ].clone();\n      face.vertexNormals[ 1 ] = vertices[ face.b ].clone();\n      face.vertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n    }\n\n  },\n\n  computeMorphNormals: function () {\n\n    var i, il, f, fl, face;\n\n    // save original normals\n    // - create temp variables on first access\n    //   otherwise just copy (for faster repeated calls)\n\n    for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n      face = this.faces[ f ];\n\n      if ( ! face.__originalFaceNormal ) {\n\n        face.__originalFaceNormal = face.normal.clone();\n\n      } else {\n\n        face.__originalFaceNormal.copy( face.normal );\n\n      }\n\n      if ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n      for ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n        if ( ! face.__originalVertexNormals[ i ] ) {\n\n          face.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n        } else {\n\n          face.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n        }\n\n      }\n\n    }\n\n    // use temp geometry to compute face and vertex normals for each morph\n\n    var tmpGeo = new THREE.Geometry();\n    tmpGeo.faces = this.faces;\n\n    for ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n      // create on first access\n\n      if ( ! this.morphNormals[ i ] ) {\n\n        this.morphNormals[ i ] = {};\n        this.morphNormals[ i ].faceNormals = [];\n        this.morphNormals[ i ].vertexNormals = [];\n\n        var dstNormalsFace = this.morphNormals[ i ].faceNormals;\n        var dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n        var faceNormal, vertexNormals;\n\n        for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n          faceNormal = new THREE.Vector3();\n          vertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\n\n          dstNormalsFace.push( faceNormal );\n          dstNormalsVertex.push( vertexNormals );\n\n        }\n\n      }\n\n      var morphNormals = this.morphNormals[ i ];\n\n      // set vertices to morph target\n\n      tmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n      // compute morph normals\n\n      tmpGeo.computeFaceNormals();\n      tmpGeo.computeVertexNormals();\n\n      // store morph normals\n\n      var faceNormal, vertexNormals;\n\n      for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n        face = this.faces[ f ];\n\n        faceNormal = morphNormals.faceNormals[ f ];\n        vertexNormals = morphNormals.vertexNormals[ f ];\n\n        faceNormal.copy( face.normal );\n\n        vertexNormals.a.copy( face.vertexNormals[ 0 ] );\n        vertexNormals.b.copy( face.vertexNormals[ 1 ] );\n        vertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n      }\n\n    }\n\n    // restore original normals\n\n    for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n      face = this.faces[ f ];\n\n      face.normal = face.__originalFaceNormal;\n      face.vertexNormals = face.__originalVertexNormals;\n\n    }\n\n  },\n\n  computeTangents: function () {\n\n    // based on http://www.terathon.com/code/tangent.html\n    // tangents go to vertices\n\n    var f, fl, v, vl, i, il, vertexIndex,\n      face, uv, vA, vB, vC, uvA, uvB, uvC,\n      x1, x2, y1, y2, z1, z2,\n      s1, s2, t1, t2, r, t, test,\n      tan1 = [], tan2 = [],\n      sdir = new THREE.Vector3(), tdir = new THREE.Vector3(),\n      tmp = new THREE.Vector3(), tmp2 = new THREE.Vector3(),\n      n = new THREE.Vector3(), w;\n\n    for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n      tan1[ v ] = new THREE.Vector3();\n      tan2[ v ] = new THREE.Vector3();\n\n    }\n\n    function handleTriangle( context, a, b, c, ua, ub, uc ) {\n\n      vA = context.vertices[ a ];\n      vB = context.vertices[ b ];\n      vC = context.vertices[ c ];\n\n      uvA = uv[ ua ];\n      uvB = uv[ ub ];\n      uvC = uv[ uc ];\n\n      x1 = vB.x - vA.x;\n      x2 = vC.x - vA.x;\n      y1 = vB.y - vA.y;\n      y2 = vC.y - vA.y;\n      z1 = vB.z - vA.z;\n      z2 = vC.z - vA.z;\n\n      s1 = uvB.x - uvA.x;\n      s2 = uvC.x - uvA.x;\n      t1 = uvB.y - uvA.y;\n      t2 = uvC.y - uvA.y;\n\n      r = 1.0 / ( s1 * t2 - s2 * t1 );\n      sdir.set( ( t2 * x1 - t1 * x2 ) * r,\n            ( t2 * y1 - t1 * y2 ) * r,\n            ( t2 * z1 - t1 * z2 ) * r );\n      tdir.set( ( s1 * x2 - s2 * x1 ) * r,\n            ( s1 * y2 - s2 * y1 ) * r,\n            ( s1 * z2 - s2 * z1 ) * r );\n\n      tan1[ a ].add( sdir );\n      tan1[ b ].add( sdir );\n      tan1[ c ].add( sdir );\n\n      tan2[ a ].add( tdir );\n      tan2[ b ].add( tdir );\n      tan2[ c ].add( tdir );\n\n    }\n\n    for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n      face = this.faces[ f ];\n      uv = this.faceVertexUvs[ 0 ][ f ]; // use UV layer 0 for tangents\n\n      handleTriangle( this, face.a, face.b, face.c, 0, 1, 2 );\n\n    }\n\n    var faceIndex = [ 'a', 'b', 'c', 'd' ];\n\n    for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n      face = this.faces[ f ];\n\n      for ( i = 0; i < Math.min( face.vertexNormals.length, 3 ); i ++ ) {\n\n        n.copy( face.vertexNormals[ i ] );\n\n        vertexIndex = face[ faceIndex[ i ] ];\n\n        t = tan1[ vertexIndex ];\n\n        // Gram-Schmidt orthogonalize\n\n        tmp.copy( t );\n        tmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n        // Calculate handedness\n\n        tmp2.crossVectors( face.vertexNormals[ i ], t );\n        test = tmp2.dot( tan2[ vertexIndex ] );\n        w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n        face.vertexTangents[ i ] = new THREE.Vector4( tmp.x, tmp.y, tmp.z, w );\n\n      }\n\n    }\n\n    this.hasTangents = true;\n\n  },\n\n  computeLineDistances: function () {\n\n    var d = 0;\n    var vertices = this.vertices;\n\n    for ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n      if ( i > 0 ) {\n\n        d += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n      }\n\n      this.lineDistances[ i ] = d;\n\n    }\n\n  },\n\n  computeBoundingBox: function () {\n\n    if ( this.boundingBox === null ) {\n\n      this.boundingBox = new THREE.Box3();\n\n    }\n\n    this.boundingBox.setFromPoints( this.vertices );\n\n  },\n\n  computeBoundingSphere: function () {\n\n    if ( this.boundingSphere === null ) {\n\n      this.boundingSphere = new THREE.Sphere();\n\n    }\n\n    this.boundingSphere.setFromPoints( this.vertices );\n\n  },\n\n  merge: function ( geometry, matrix, materialIndexOffset ) {\n\n    if ( geometry instanceof THREE.Geometry === false ) {\n\n      console.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n      return;\n\n    }\n\n    var normalMatrix,\n    vertexOffset = this.vertices.length,\n    uvPosition = this.faceVertexUvs[ 0 ].length,\n    vertices1 = this.vertices,\n    vertices2 = geometry.vertices,\n    faces1 = this.faces,\n    faces2 = geometry.faces,\n    uvs1 = this.faceVertexUvs[ 0 ],\n    uvs2 = geometry.faceVertexUvs[ 0 ];\n\n    if ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n    if ( matrix !== undefined ) {\n\n      normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\n\n    }\n\n    // vertices\n\n    for ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n      var vertex = vertices2[ i ];\n\n      var vertexCopy = vertex.clone();\n\n      if ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n      vertices1.push( vertexCopy );\n\n    }\n\n    // faces\n\n    for ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n      var face = faces2[ i ], faceCopy, normal, color,\n      faceVertexNormals = face.vertexNormals,\n      faceVertexColors = face.vertexColors;\n\n      faceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n      faceCopy.normal.copy( face.normal );\n\n      if ( normalMatrix !== undefined ) {\n\n        faceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n      }\n\n      for ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n        normal = faceVertexNormals[ j ].clone();\n\n        if ( normalMatrix !== undefined ) {\n\n          normal.applyMatrix3( normalMatrix ).normalize();\n\n        }\n\n        faceCopy.vertexNormals.push( normal );\n\n      }\n\n      faceCopy.color.copy( face.color );\n\n      for ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n        color = faceVertexColors[ j ];\n        faceCopy.vertexColors.push( color.clone() );\n\n      }\n\n      faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n      faces1.push( faceCopy );\n\n    }\n\n    // uvs\n\n    for ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n      var uv = uvs2[ i ], uvCopy = [];\n\n      if ( uv === undefined ) {\n\n        continue;\n\n      }\n\n      for ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n        uvCopy.push( new THREE.Vector2( uv[ j ].x, uv[ j ].y ) );\n\n      }\n\n      uvs1.push( uvCopy );\n\n    }\n\n  },\n\n  /*\n   * Checks for duplicate vertices with hashmap.\n   * Duplicated vertices are removed\n   * and faces' vertices are updated.\n   */\n\n  mergeVertices: function () {\n\n    var verticesMap = {}; // Hashmap for looking up vertice by position coordinates (and making sure they are unique)\n    var unique = [], changes = [];\n\n    var v, key;\n    var precisionPoints = 4; // number of decimal points, eg. 4 for epsilon of 0.0001\n    var precision = Math.pow( 10, precisionPoints );\n    var i,il, face;\n    var indices, k, j, jl, u;\n\n    for ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n      v = this.vertices[ i ];\n      key = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n      if ( verticesMap[ key ] === undefined ) {\n\n        verticesMap[ key ] = i;\n        unique.push( this.vertices[ i ] );\n        changes[ i ] = unique.length - 1;\n\n      } else {\n\n        //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n        changes[ i ] = changes[ verticesMap[ key ] ];\n\n      }\n\n    };\n\n\n    // if faces are completely degenerate after merging vertices, we\n    // have to remove them from the geometry.\n    var faceIndicesToRemove = [];\n\n    for ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n      face = this.faces[ i ];\n\n      face.a = changes[ face.a ];\n      face.b = changes[ face.b ];\n      face.c = changes[ face.c ];\n\n      indices = [ face.a, face.b, face.c ];\n\n      var dupIndex = - 1;\n\n      // if any duplicate vertices are found in a Face3\n      // we have to remove the face as nothing can be saved\n      for ( var n = 0; n < 3; n ++ ) {\n        if ( indices[ n ] == indices[ ( n + 1 ) % 3 ] ) {\n\n          dupIndex = n;\n          faceIndicesToRemove.push( i );\n          break;\n\n        }\n      }\n\n    }\n\n    for ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n      var idx = faceIndicesToRemove[ i ];\n\n      this.faces.splice( idx, 1 );\n\n      for ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n        this.faceVertexUvs[ j ].splice( idx, 1 );\n\n      }\n\n    }\n\n    // Use unique set of vertices\n\n    var diff = this.vertices.length - unique.length;\n    this.vertices = unique;\n    return diff;\n\n  },\n\n  // Geometry splitting\n\n  makeGroups: ( function () {\n\n    var geometryGroupCounter = 0;\n\n    return function ( usesFaceMaterial, maxVerticesInGroup ) {\n\n      var f, fl, face, materialIndex,\n        groupHash, hash_map = {},geometryGroup;\n\n      var numMorphTargets = this.morphTargets.length;\n      var numMorphNormals = this.morphNormals.length;\n\n      this.geometryGroups = {};\n      this.geometryGroupsList = [];\n\n      for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n        face = this.faces[ f ];\n        materialIndex = usesFaceMaterial ? face.materialIndex : 0;\n\n        if ( ! ( materialIndex in hash_map ) ) {\n\n          hash_map[ materialIndex ] = { 'hash': materialIndex, 'counter': 0 };\n\n        }\n\n        groupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;\n\n        if ( ! ( groupHash in this.geometryGroups ) ) {\n\n          geometryGroup = { 'id': geometryGroupCounter++, 'faces3': [], 'materialIndex': materialIndex, 'vertices': 0, 'numMorphTargets': numMorphTargets, 'numMorphNormals': numMorphNormals };\n          this.geometryGroups[ groupHash ] = geometryGroup;\n          this.geometryGroupsList.push(geometryGroup);\n        }\n\n        if ( this.geometryGroups[ groupHash ].vertices + 3 > maxVerticesInGroup ) {\n\n          hash_map[ materialIndex ].counter += 1;\n          groupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;\n\n          if ( ! ( groupHash in this.geometryGroups ) ) {\n\n            geometryGroup = { 'id': geometryGroupCounter++, 'faces3': [], 'materialIndex': materialIndex, 'vertices': 0, 'numMorphTargets': numMorphTargets, 'numMorphNormals': numMorphNormals };\n            this.geometryGroups[ groupHash ] = geometryGroup;\n            this.geometryGroupsList.push(geometryGroup);\n\n          }\n\n        }\n\n        this.geometryGroups[ groupHash ].faces3.push( f );\n        this.geometryGroups[ groupHash ].vertices += 3;\n\n      }\n\n    };\n\n  } )(),\n\n  clone: function () {\n\n    var geometry = new THREE.Geometry();\n\n    var vertices = this.vertices;\n\n    for ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n      geometry.vertices.push( vertices[ i ].clone() );\n\n    }\n\n    var faces = this.faces;\n\n    for ( var i = 0, il = faces.length; i < il; i ++ ) {\n\n      geometry.faces.push( faces[ i ].clone() );\n\n    }\n\n    var uvs = this.faceVertexUvs[ 0 ];\n\n    for ( var i = 0, il = uvs.length; i < il; i ++ ) {\n\n      var uv = uvs[ i ], uvCopy = [];\n\n      for ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n        uvCopy.push( new THREE.Vector2( uv[ j ].x, uv[ j ].y ) );\n\n      }\n\n      geometry.faceVertexUvs[ 0 ].push( uvCopy );\n\n    }\n\n    return geometry;\n\n  },\n\n  dispose: function () {\n\n    this.dispatchEvent( { type: 'dispose' } );\n\n  }\n\n};\n\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\n\nTHREE.GeometryIdCount = 0;\n\n// File:src/cameras/Camera.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.Camera = function () {\n\n  THREE.Object3D.call( this );\n\n  this.matrixWorldInverse = new THREE.Matrix4();\n  this.projectionMatrix = new THREE.Matrix4();\n\n};\n\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Camera.prototype.lookAt = function () {\n\n  // This routine does not support cameras with rotated and/or translated parent(s)\n\n  var m1 = new THREE.Matrix4();\n\n  return function ( vector ) {\n\n    m1.lookAt( this.position, vector, this.up );\n\n    this.quaternion.setFromRotationMatrix( m1 );\n\n  };\n\n}();\n\nTHREE.Camera.prototype.clone = function ( camera ) {\n\n  if ( camera === undefined ) camera = new THREE.Camera();\n\n  THREE.Object3D.prototype.clone.call( this, camera );\n\n  camera.matrixWorldInverse.copy( this.matrixWorldInverse );\n  camera.projectionMatrix.copy( this.projectionMatrix );\n\n  return camera;\n};\n\n// File:src/cameras/CubeCamera.js\n\n/**\n * Camera for rendering cube maps\n *  - renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\n\n  THREE.Object3D.call( this );\n\n  var fov = 90, aspect = 1;\n\n  var cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\n  cameraPX.up.set( 0, - 1, 0 );\n  cameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\n  this.add( cameraPX );\n\n  var cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\n  cameraNX.up.set( 0, - 1, 0 );\n  cameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\n  this.add( cameraNX );\n\n  var cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\n  cameraPY.up.set( 0, 0, 1 );\n  cameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\n  this.add( cameraPY );\n\n  var cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\n  cameraNY.up.set( 0, 0, - 1 );\n  cameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\n  this.add( cameraNY );\n\n  var cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\n  cameraPZ.up.set( 0, - 1, 0 );\n  cameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\n  this.add( cameraPZ );\n\n  var cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\n  cameraNZ.up.set( 0, - 1, 0 );\n  cameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\n  this.add( cameraNZ );\n\n  this.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\n\n  this.updateCubeMap = function ( renderer, scene ) {\n\n    var renderTarget = this.renderTarget;\n    var generateMipmaps = renderTarget.generateMipmaps;\n\n    renderTarget.generateMipmaps = false;\n\n    renderTarget.activeCubeFace = 0;\n    renderer.render( scene, cameraPX, renderTarget );\n\n    renderTarget.activeCubeFace = 1;\n    renderer.render( scene, cameraNX, renderTarget );\n\n    renderTarget.activeCubeFace = 2;\n    renderer.render( scene, cameraPY, renderTarget );\n\n    renderTarget.activeCubeFace = 3;\n    renderer.render( scene, cameraNY, renderTarget );\n\n    renderTarget.activeCubeFace = 4;\n    renderer.render( scene, cameraPZ, renderTarget );\n\n    renderTarget.generateMipmaps = generateMipmaps;\n\n    renderTarget.activeCubeFace = 5;\n    renderer.render( scene, cameraNZ, renderTarget );\n\n  };\n\n};\n\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\n\n// File:src/cameras/OrthographicCamera.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\n\n  THREE.Camera.call( this );\n\n  this.left = left;\n  this.right = right;\n  this.top = top;\n  this.bottom = bottom;\n\n  this.near = ( near !== undefined ) ? near : 0.1;\n  this.far = ( far !== undefined ) ? far : 2000;\n\n  this.updateProjectionMatrix();\n\n};\n\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\n\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\n\n  this.projectionMatrix.makeOrthographic( this.left, this.right, this.top, this.bottom, this.near, this.far );\n\n};\n\nTHREE.OrthographicCamera.prototype.clone = function () {\n\n  var camera = new THREE.OrthographicCamera();\n\n  THREE.Camera.prototype.clone.call( this, camera );\n\n  camera.left = this.left;\n  camera.right = this.right;\n  camera.top = this.top;\n  camera.bottom = this.bottom;\n\n  camera.near = this.near;\n  camera.far = this.far;\n\n  return camera;\n};\n\n// File:src/cameras/PerspectiveCamera.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\n\n  THREE.Camera.call( this );\n\n  this.fov = fov !== undefined ? fov : 50;\n  this.aspect = aspect !== undefined ? aspect : 1;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n\n  this.updateProjectionMatrix();\n\n};\n\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\n\n\n/**\n * Uses Focal Length (in mm) to estimate and set FOV\n * 35mm (fullframe) camera is used if frame size is not specified;\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\n */\n\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\n\n  if ( frameHeight === undefined ) frameHeight = 24;\n\n  this.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\n  this.updateProjectionMatrix();\n\n}\n\n\n/**\n * Sets an offset in a larger frustum. This is useful for multi-window or\n * multi-monitor/multi-machine setups.\n *\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n * the monitors are in grid like this\n *\n *   +---+---+---+\n *   | A | B | C |\n *   +---+---+---+\n *   | D | E | F |\n *   +---+---+---+\n *\n * then for each monitor you would call it like this\n *\n *   var w = 1920;\n *   var h = 1080;\n *   var fullWidth = w * 3;\n *   var fullHeight = h * 2;\n *\n *   --A--\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n *   --B--\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n *   --C--\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n *   --D--\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n *   --E--\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n *   --F--\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n *\n *   Note there is no reason monitors have to be the same size or in a grid.\n */\n\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\n\n  this.fullWidth = fullWidth;\n  this.fullHeight = fullHeight;\n  this.x = x;\n  this.y = y;\n  this.width = width;\n  this.height = height;\n\n  this.updateProjectionMatrix();\n\n};\n\n\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\n\n  if ( this.fullWidth ) {\n\n    var aspect = this.fullWidth / this.fullHeight;\n    var top = Math.tan( THREE.Math.degToRad( this.fov * 0.5 ) ) * this.near;\n    var bottom = - top;\n    var left = aspect * bottom;\n    var right = aspect * top;\n    var width = Math.abs( right - left );\n    var height = Math.abs( top - bottom );\n\n    this.projectionMatrix.makeFrustum(\n      left + this.x * width / this.fullWidth,\n      left + ( this.x + this.width ) * width / this.fullWidth,\n      top - ( this.y + this.height ) * height / this.fullHeight,\n      top - this.y * height / this.fullHeight,\n      this.near,\n      this.far\n    );\n\n  } else {\n\n    this.projectionMatrix.makePerspective( this.fov, this.aspect, this.near, this.far );\n\n  }\n\n};\n\nTHREE.PerspectiveCamera.prototype.clone = function () {\n\n  var camera = new THREE.PerspectiveCamera();\n\n  THREE.Camera.prototype.clone.call( this, camera );\n\n  camera.fov = this.fov;\n  camera.aspect = this.aspect;\n  camera.near = this.near;\n  camera.far = this.far;\n\n  return camera;\n};\n\n// File:src/lights/Light.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Light = function ( color ) {\n\n  THREE.Object3D.call( this );\n\n  this.color = new THREE.Color( color );\n\n};\n\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Light.prototype.clone = function ( light ) {\n\n  if ( light === undefined ) light = new THREE.Light();\n\n  THREE.Object3D.prototype.clone.call( this, light );\n\n  light.color.copy( this.color );\n\n  return light;\n\n};\n\n// File:src/lights/AmbientLight.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.AmbientLight = function ( color ) {\n\n  THREE.Light.call( this, color );\n\n};\n\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\n\nTHREE.AmbientLight.prototype.clone = function () {\n\n  var light = new THREE.AmbientLight();\n\n  THREE.Light.prototype.clone.call( this, light );\n\n  return light;\n\n};\n\n// File:src/lights/AreaLight.js\n\n/**\n * @author MPanknin / http://www.redplant.de/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.AreaLight = function ( color, intensity ) {\n\n  THREE.Light.call( this, color );\n\n  this.normal = new THREE.Vector3( 0, - 1, 0 );\n  this.right = new THREE.Vector3( 1, 0, 0 );\n\n  this.intensity = ( intensity !== undefined ) ? intensity : 1;\n\n  this.width = 1.0;\n  this.height = 1.0;\n\n  this.constantAttenuation = 1.5;\n  this.linearAttenuation = 0.5;\n  this.quadraticAttenuation = 0.1;\n\n};\n\nTHREE.AreaLight.prototype = Object.create( THREE.Light.prototype );\n\n\n// File:src/lights/DirectionalLight.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.DirectionalLight = function ( color, intensity ) {\n\n  THREE.Light.call( this, color );\n\n  this.position.set( 0, 1, 0 );\n  this.target = new THREE.Object3D();\n\n  this.intensity = ( intensity !== undefined ) ? intensity : 1;\n\n  this.castShadow = false;\n  this.onlyShadow = false;\n\n  //\n\n  this.shadowCameraNear = 50;\n  this.shadowCameraFar = 5000;\n\n  this.shadowCameraLeft = - 500;\n  this.shadowCameraRight = 500;\n  this.shadowCameraTop = 500;\n  this.shadowCameraBottom = - 500;\n\n  this.shadowCameraVisible = false;\n\n  this.shadowBias = 0;\n  this.shadowDarkness = 0.5;\n\n  this.shadowMapWidth = 512;\n  this.shadowMapHeight = 512;\n\n  //\n\n  this.shadowCascade = false;\n\n  this.shadowCascadeOffset = new THREE.Vector3( 0, 0, - 1000 );\n  this.shadowCascadeCount = 2;\n\n  this.shadowCascadeBias = [ 0, 0, 0 ];\n  this.shadowCascadeWidth = [ 512, 512, 512 ];\n  this.shadowCascadeHeight = [ 512, 512, 512 ];\n\n  this.shadowCascadeNearZ = [ - 1.000, 0.990, 0.998 ];\n  this.shadowCascadeFarZ  = [  0.990, 0.998, 1.000 ];\n\n  this.shadowCascadeArray = [];\n\n  //\n\n  this.shadowMap = null;\n  this.shadowMapSize = null;\n  this.shadowCamera = null;\n  this.shadowMatrix = null;\n\n};\n\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\n\nTHREE.DirectionalLight.prototype.clone = function () {\n\n  var light = new THREE.DirectionalLight();\n\n  THREE.Light.prototype.clone.call( this, light );\n\n  light.target = this.target.clone();\n\n  light.intensity = this.intensity;\n\n  light.castShadow = this.castShadow;\n  light.onlyShadow = this.onlyShadow;\n\n  //\n\n  light.shadowCameraNear = this.shadowCameraNear;\n  light.shadowCameraFar = this.shadowCameraFar;\n\n  light.shadowCameraLeft = this.shadowCameraLeft;\n  light.shadowCameraRight = this.shadowCameraRight;\n  light.shadowCameraTop = this.shadowCameraTop;\n  light.shadowCameraBottom = this.shadowCameraBottom;\n\n  light.shadowCameraVisible = this.shadowCameraVisible;\n\n  light.shadowBias = this.shadowBias;\n  light.shadowDarkness = this.shadowDarkness;\n\n  light.shadowMapWidth = this.shadowMapWidth;\n  light.shadowMapHeight = this.shadowMapHeight;\n\n  //\n\n  light.shadowCascade = this.shadowCascade;\n\n  light.shadowCascadeOffset.copy( this.shadowCascadeOffset );\n  light.shadowCascadeCount = this.shadowCascadeCount;\n\n  light.shadowCascadeBias = this.shadowCascadeBias.slice( 0 );\n  light.shadowCascadeWidth = this.shadowCascadeWidth.slice( 0 );\n  light.shadowCascadeHeight = this.shadowCascadeHeight.slice( 0 );\n\n  light.shadowCascadeNearZ = this.shadowCascadeNearZ.slice( 0 );\n  light.shadowCascadeFarZ  = this.shadowCascadeFarZ.slice( 0 );\n\n  return light;\n\n};\n\n// File:src/lights/HemisphereLight.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\n\n  THREE.Light.call( this, skyColor );\n\n  this.position.set( 0, 100, 0 );\n\n  this.groundColor = new THREE.Color( groundColor );\n  this.intensity = ( intensity !== undefined ) ? intensity : 1;\n\n};\n\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\n\nTHREE.HemisphereLight.prototype.clone = function () {\n\n  var light = new THREE.HemisphereLight();\n\n  THREE.Light.prototype.clone.call( this, light );\n\n  light.groundColor.copy( this.groundColor );\n  light.intensity = this.intensity;\n\n  return light;\n\n};\n\n// File:src/lights/PointLight.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.PointLight = function ( color, intensity, distance ) {\n\n  THREE.Light.call( this, color );\n\n  this.intensity = ( intensity !== undefined ) ? intensity : 1;\n  this.distance = ( distance !== undefined ) ? distance : 0;\n\n};\n\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\n\nTHREE.PointLight.prototype.clone = function () {\n\n  var light = new THREE.PointLight();\n\n  THREE.Light.prototype.clone.call( this, light );\n\n  light.intensity = this.intensity;\n  light.distance = this.distance;\n\n  return light;\n\n};\n\n// File:src/lights/SpotLight.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.SpotLight = function ( color, intensity, distance, angle, exponent ) {\n\n  THREE.Light.call( this, color );\n\n  this.position.set( 0, 1, 0 );\n  this.target = new THREE.Object3D();\n\n  this.intensity = ( intensity !== undefined ) ? intensity : 1;\n  this.distance = ( distance !== undefined ) ? distance : 0;\n  this.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n  this.exponent = ( exponent !== undefined ) ? exponent : 10;\n\n  this.castShadow = false;\n  this.onlyShadow = false;\n\n  //\n\n  this.shadowCameraNear = 50;\n  this.shadowCameraFar = 5000;\n  this.shadowCameraFov = 50;\n\n  this.shadowCameraVisible = false;\n\n  this.shadowBias = 0;\n  this.shadowDarkness = 0.5;\n\n  this.shadowMapWidth = 512;\n  this.shadowMapHeight = 512;\n\n  //\n\n  this.shadowMap = null;\n  this.shadowMapSize = null;\n  this.shadowCamera = null;\n  this.shadowMatrix = null;\n\n};\n\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\n\nTHREE.SpotLight.prototype.clone = function () {\n\n  var light = new THREE.SpotLight();\n\n  THREE.Light.prototype.clone.call( this, light );\n\n  light.target = this.target.clone();\n\n  light.intensity = this.intensity;\n  light.distance = this.distance;\n  light.angle = this.angle;\n  light.exponent = this.exponent;\n\n  light.castShadow = this.castShadow;\n  light.onlyShadow = this.onlyShadow;\n\n  //\n\n  light.shadowCameraNear = this.shadowCameraNear;\n  light.shadowCameraFar = this.shadowCameraFar;\n  light.shadowCameraFov = this.shadowCameraFov;\n\n  light.shadowCameraVisible = this.shadowCameraVisible;\n\n  light.shadowBias = this.shadowBias;\n  light.shadowDarkness = this.shadowDarkness;\n\n  light.shadowMapWidth = this.shadowMapWidth;\n  light.shadowMapHeight = this.shadowMapHeight;\n\n  return light;\n\n};\n\n// File:src/loaders/Cache.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Cache = function () {\n\n  this.files = {};\n\n};\n\nTHREE.Cache.prototype = {\n\n  constructor: THREE.Cache,\n\n  add: function ( key, file ) {\n\n    // console.log( 'THREE.Cache', 'Adding key:', key );\n\n    this.files[ key ] = file;\n\n  },\n\n  get: function ( key ) {\n\n    // console.log( 'THREE.Cache', 'Checking key:', key );\n\n    return this.files[ key ];\n\n  },\n\n  remove: function ( key ) {\n\n    delete this.files[ key ];\n\n  },\n\n  clear: function () {\n\n    this.files = {}\n\n  }\n\n};\n\n// File:src/loaders/Loader.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Loader = function ( showStatus ) {\n\n  this.showStatus = showStatus;\n  this.statusDomElement = showStatus ? THREE.Loader.prototype.addStatusElement() : null;\n\n  this.imageLoader = new THREE.ImageLoader();\n\n  this.onLoadStart = function () {};\n  this.onLoadProgress = function () {};\n  this.onLoadComplete = function () {};\n\n};\n\nTHREE.Loader.prototype = {\n\n  constructor: THREE.Loader,\n\n  crossOrigin: undefined,\n\n  addStatusElement: function () {\n\n    var e = document.createElement( 'div' );\n\n    e.style.position = 'absolute';\n    e.style.right = '0px';\n    e.style.top = '0px';\n    e.style.fontSize = '0.8em';\n    e.style.textAlign = 'left';\n    e.style.background = 'rgba(0,0,0,0.25)';\n    e.style.color = '#fff';\n    e.style.width = '120px';\n    e.style.padding = '0.5em 0.5em 0.5em 0.5em';\n    e.style.zIndex = 1000;\n\n    e.innerHTML = 'Loading ...';\n\n    return e;\n\n  },\n\n  updateProgress: function ( progress ) {\n\n    var message = 'Loaded ';\n\n    if ( progress.total ) {\n\n      message += ( 100 * progress.loaded / progress.total ).toFixed( 0 ) + '%';\n\n\n    } else {\n\n      message += ( progress.loaded / 1024 ).toFixed( 2 ) + ' KB';\n\n    }\n\n    this.statusDomElement.innerHTML = message;\n\n  },\n\n  extractUrlBase: function ( url ) {\n\n    var parts = url.split( '/' );\n\n    if ( parts.length === 1 ) return './';\n\n    parts.pop();\n\n    return parts.join( '/' ) + '/';\n\n  },\n\n  initMaterials: function ( materials, texturePath ) {\n\n    var array = [];\n\n    for ( var i = 0; i < materials.length; ++ i ) {\n\n      array[ i ] = this.createMaterial( materials[ i ], texturePath );\n\n    }\n\n    return array;\n\n  },\n\n  needsTangents: function ( materials ) {\n\n    for ( var i = 0, il = materials.length; i < il; i ++ ) {\n\n      var m = materials[ i ];\n\n      if ( m instanceof THREE.ShaderMaterial ) return true;\n\n    }\n\n    return false;\n\n  },\n\n  createMaterial: function ( m, texturePath ) {\n\n    var scope = this;\n\n    function nearest_pow2( n ) {\n\n      var l = Math.log( n ) / Math.LN2;\n      return Math.pow( 2, Math.round(  l ) );\n\n    }\n\n    function create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\n\n      var fullPath = texturePath + sourceFile;\n\n      var texture;\n\n      var loader = THREE.Loader.Handlers.get( fullPath );\n\n      if ( loader !== null ) {\n\n        texture = loader.load( fullPath );\n\n      } else {\n\n        texture = new THREE.Texture();\n\n        loader = scope.imageLoader;\n        loader.crossOrigin = scope.crossOrigin;\n        loader.load( fullPath, function ( image ) {\n\n          if ( THREE.Math.isPowerOfTwo( image.width ) === false ||\n             THREE.Math.isPowerOfTwo( image.height ) === false ) {\n\n            var width = nearest_pow2( image.width );\n            var height = nearest_pow2( image.height );\n\n            var canvas = document.createElement( 'canvas' );\n            canvas.width = width;\n            canvas.height = height;\n\n            var context = canvas.getContext( '2d' );\n            context.drawImage( image, 0, 0, width, height );\n\n            texture.image = canvas;\n\n          } else {\n\n            texture.image = image;\n\n          }\n\n          texture.needsUpdate = true;\n\n        } );\n\n      }\n\n      texture.sourceFile = sourceFile;\n\n      if ( repeat ) {\n\n        texture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\n\n        if ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\n        if ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\n\n      }\n\n      if ( offset ) {\n\n        texture.offset.set( offset[ 0 ], offset[ 1 ] );\n\n      }\n\n      if ( wrap ) {\n\n        var wrapMap = {\n          'repeat': THREE.RepeatWrapping,\n          'mirror': THREE.MirroredRepeatWrapping\n        }\n\n        if ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\n        if ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\n\n      }\n\n      if ( anisotropy ) {\n\n        texture.anisotropy = anisotropy;\n\n      }\n\n      where[ name ] = texture;\n\n    }\n\n    function rgb2hex( rgb ) {\n\n      return ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\n\n    }\n\n    // defaults\n\n    var mtype = 'MeshLambertMaterial';\n    var mpars = { color: 0xeeeeee, opacity: 1.0, map: null, lightMap: null, normalMap: null, bumpMap: null, wireframe: false };\n\n    // parameters from model file\n\n    if ( m.shading ) {\n\n      var shading = m.shading.toLowerCase();\n\n      if ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\n      else if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\n\n    }\n\n    if ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\n\n      mpars.blending = THREE[ m.blending ];\n\n    }\n\n    if ( m.transparent !== undefined || m.opacity < 1.0 ) {\n\n      mpars.transparent = m.transparent;\n\n    }\n\n    if ( m.depthTest !== undefined ) {\n\n      mpars.depthTest = m.depthTest;\n\n    }\n\n    if ( m.depthWrite !== undefined ) {\n\n      mpars.depthWrite = m.depthWrite;\n\n    }\n\n    if ( m.visible !== undefined ) {\n\n      mpars.visible = m.visible;\n\n    }\n\n    if ( m.flipSided !== undefined ) {\n\n      mpars.side = THREE.BackSide;\n\n    }\n\n    if ( m.doubleSided !== undefined ) {\n\n      mpars.side = THREE.DoubleSide;\n\n    }\n\n    if ( m.wireframe !== undefined ) {\n\n      mpars.wireframe = m.wireframe;\n\n    }\n\n    if ( m.vertexColors !== undefined ) {\n\n      if ( m.vertexColors === 'face' ) {\n\n        mpars.vertexColors = THREE.FaceColors;\n\n      } else if ( m.vertexColors ) {\n\n        mpars.vertexColors = THREE.VertexColors;\n\n      }\n\n    }\n\n    // colors\n\n    if ( m.colorDiffuse ) {\n\n      mpars.color = rgb2hex( m.colorDiffuse );\n\n    } else if ( m.DbgColor ) {\n\n      mpars.color = m.DbgColor;\n\n    }\n\n    if ( m.colorSpecular ) {\n\n      mpars.specular = rgb2hex( m.colorSpecular );\n\n    }\n\n    if ( m.colorAmbient ) {\n\n      mpars.ambient = rgb2hex( m.colorAmbient );\n\n    }\n\n    if ( m.colorEmissive ) {\n\n      mpars.emissive = rgb2hex( m.colorEmissive );\n\n    }\n\n    // modifiers\n\n    if ( m.transparency ) {\n\n      mpars.opacity = m.transparency;\n\n    }\n\n    if ( m.specularCoef ) {\n\n      mpars.shininess = m.specularCoef;\n\n    }\n\n    // textures\n\n    if ( m.mapDiffuse && texturePath ) {\n\n      create_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\n    }\n\n    if ( m.mapLight && texturePath ) {\n\n      create_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\n    }\n\n    if ( m.mapBump && texturePath ) {\n\n      create_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\n    }\n\n    if ( m.mapNormal && texturePath ) {\n\n      create_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\n    }\n\n    if ( m.mapSpecular && texturePath ) {\n\n      create_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\n    }\n\n    if ( m.mapAlpha && texturePath ) {\n\n      create_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\n    }\n\n    //\n\n    if ( m.mapBumpScale ) {\n\n      mpars.bumpScale = m.mapBumpScale;\n\n    }\n\n    // special case for normal mapped material\n\n    if ( m.mapNormal ) {\n\n      var shader = THREE.ShaderLib[ 'normalmap' ];\n      var uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n      uniforms[ 'tNormal' ].value = mpars.normalMap;\n\n      if ( m.mapNormalFactor ) {\n\n        uniforms[ 'uNormalScale' ].value.set( m.mapNormalFactor, m.mapNormalFactor );\n\n      }\n\n      if ( mpars.map ) {\n\n        uniforms[ 'tDiffuse' ].value = mpars.map;\n        uniforms[ 'enableDiffuse' ].value = true;\n\n      }\n\n      if ( mpars.specularMap ) {\n\n        uniforms[ 'tSpecular' ].value = mpars.specularMap;\n        uniforms[ 'enableSpecular' ].value = true;\n\n      }\n\n      if ( mpars.lightMap ) {\n\n        uniforms[ 'tAO' ].value = mpars.lightMap;\n        uniforms[ 'enableAO' ].value = true;\n\n      }\n\n      // for the moment don't handle displacement texture\n\n      uniforms[ 'diffuse' ].value.setHex( mpars.color );\n      uniforms[ 'specular' ].value.setHex( mpars.specular );\n      uniforms[ 'ambient' ].value.setHex( mpars.ambient );\n\n      uniforms[ 'shininess' ].value = mpars.shininess;\n\n      if ( mpars.opacity !== undefined ) {\n\n        uniforms[ 'opacity' ].value = mpars.opacity;\n\n      }\n\n      var parameters = { fragmentShader: shader.fragmentShader, vertexShader: shader.vertexShader, uniforms: uniforms, lights: true, fog: true };\n      var material = new THREE.ShaderMaterial( parameters );\n\n      if ( mpars.transparent ) {\n\n        material.transparent = true;\n\n      }\n\n    } else {\n\n      var material = new THREE[ mtype ]( mpars );\n\n    }\n\n    if ( m.DbgName !== undefined ) material.name = m.DbgName;\n\n    return material;\n\n  }\n\n};\n\nTHREE.Loader.Handlers = {\n\n  handlers: [],\n\n  add: function ( regex, loader ) {\n\n    this.handlers.push( regex, loader );\n\n  },\n\n  get: function ( file ) {\n\n    for ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\n\n      var regex = this.handlers[ i ];\n      var loader  = this.handlers[ i + 1 ];\n\n      if ( regex.test( file ) ) {\n\n        return loader;\n\n      }\n\n    }\n\n    return null;\n\n  }\n\n};\n\n// File:src/loaders/XHRLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.XHRLoader = function ( manager ) {\n\n  this.cache = new THREE.Cache();\n  this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.XHRLoader.prototype = {\n\n  constructor: THREE.XHRLoader,\n\n  load: function ( url, onLoad, onProgress, onError ) {\n\n    var scope = this;\n\n    var cached = scope.cache.get( url );\n\n    if ( cached !== undefined ) {\n\n      if ( onLoad ) onLoad( cached );\n      return;\n\n    }\n\n    var request = new XMLHttpRequest();\n    request.open( 'GET', url, true );\n\n    request.addEventListener( 'load', function ( event ) {\n\n      scope.cache.add( url, this.response );\n\n      if ( onLoad ) onLoad( this.response );\n\n      scope.manager.itemEnd( url );\n\n    }, false );\n\n    if ( onProgress !== undefined ) {\n\n      request.addEventListener( 'progress', function ( event ) {\n\n        onProgress( event );\n\n      }, false );\n\n    }\n\n    if ( onError !== undefined ) {\n\n      request.addEventListener( 'error', function ( event ) {\n\n        onError( event );\n\n      }, false );\n\n    }\n\n    if ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\n    if ( this.responseType !== undefined ) request.responseType = this.responseType;\n\n    request.send( null );\n\n    scope.manager.itemStart( url );\n\n  },\n\n  setResponseType: function ( value ) {\n\n    this.responseType = value;\n\n  },\n\n  setCrossOrigin: function ( value ) {\n\n    this.crossOrigin = value;\n\n  }\n\n};\n\n// File:src/loaders/ImageLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.ImageLoader = function ( manager ) {\n\n  this.cache = new THREE.Cache();\n  this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.ImageLoader.prototype = {\n\n  constructor: THREE.ImageLoader,\n\n  load: function ( url, onLoad, onProgress, onError ) {\n\n    var scope = this;\n\n    var cached = scope.cache.get( url );\n\n    if ( cached !== undefined ) {\n\n      onLoad( cached );\n      return;\n\n    }\n\n    var image = document.createElement( 'img' );\n\n    if ( onLoad !== undefined ) {\n\n      image.addEventListener( 'load', function ( event ) {\n\n        scope.cache.add( url, this );\n\n        onLoad( this );\n        scope.manager.itemEnd( url );\n\n      }, false );\n\n    }\n\n    if ( onProgress !== undefined ) {\n\n      image.addEventListener( 'progress', function ( event ) {\n\n        onProgress( event );\n\n      }, false );\n\n    }\n\n    if ( onError !== undefined ) {\n\n      image.addEventListener( 'error', function ( event ) {\n\n        onError( event );\n\n      }, false );\n\n    }\n\n    if ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n    image.src = url;\n\n    scope.manager.itemStart( url );\n\n    return image;\n\n  },\n\n  setCrossOrigin: function ( value ) {\n\n    this.crossOrigin = value;\n\n  }\n\n}\n\n// File:src/loaders/JSONLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.JSONLoader = function ( showStatus ) {\n\n  THREE.Loader.call( this, showStatus );\n\n  this.withCredentials = false;\n\n};\n\nTHREE.JSONLoader.prototype = Object.create( THREE.Loader.prototype );\n\nTHREE.JSONLoader.prototype.load = function ( url, callback, texturePath ) {\n\n  var scope = this;\n\n  // todo: unify load API to for easier SceneLoader use\n\n  texturePath = texturePath && ( typeof texturePath === 'string' ) ? texturePath : this.extractUrlBase( url );\n\n  this.onLoadStart();\n  this.loadAjaxJSON( this, url, callback, texturePath );\n\n};\n\nTHREE.JSONLoader.prototype.loadAjaxJSON = function ( context, url, callback, texturePath, callbackProgress ) {\n\n  var xhr = new XMLHttpRequest();\n\n  var length = 0;\n\n  xhr.onreadystatechange = function () {\n\n    if ( xhr.readyState === xhr.DONE ) {\n\n      if ( xhr.status === 200 || xhr.status === 0 ) {\n\n        if ( xhr.responseText ) {\n\n          var json = JSON.parse( xhr.responseText );\n\n          if ( json.metadata !== undefined && json.metadata.type === 'scene' ) {\n\n            console.error( 'THREE.JSONLoader: \"' + url + '\" seems to be a Scene. Use THREE.SceneLoader instead.' );\n            return;\n\n          }\n\n          var result = context.parse( json, texturePath );\n          callback( result.geometry, result.materials );\n\n        } else {\n\n          console.error( 'THREE.JSONLoader: \"' + url + '\" seems to be unreachable or the file is empty.' );\n\n        }\n\n        // in context of more complex asset initialization\n        // do not block on single failed file\n        // maybe should go even one more level up\n\n        context.onLoadComplete();\n\n      } else {\n\n        console.error( 'THREE.JSONLoader: Couldn\\'t load \"' + url + '\" (' + xhr.status + ')' );\n\n      }\n\n    } else if ( xhr.readyState === xhr.LOADING ) {\n\n      if ( callbackProgress ) {\n\n        if ( length === 0 ) {\n\n          length = xhr.getResponseHeader( 'Content-Length' );\n\n        }\n\n        callbackProgress( { total: length, loaded: xhr.responseText.length } );\n\n      }\n\n    } else if ( xhr.readyState === xhr.HEADERS_RECEIVED ) {\n\n      if ( callbackProgress !== undefined ) {\n\n        length = xhr.getResponseHeader( 'Content-Length' );\n\n      }\n\n    }\n\n  };\n\n  xhr.open( 'GET', url, true );\n  xhr.withCredentials = this.withCredentials;\n  xhr.send( null );\n\n};\n\nTHREE.JSONLoader.prototype.parse = function ( json, texturePath ) {\n\n  var scope = this,\n  geometry = new THREE.Geometry(),\n  scale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\n\n  parseModel( scale );\n\n  parseSkin();\n  parseMorphing( scale );\n\n  geometry.computeFaceNormals();\n  geometry.computeBoundingSphere();\n\n  function parseModel( scale ) {\n\n    function isBitSet( value, position ) {\n\n      return value & ( 1 << position );\n\n    }\n\n    var i, j, fi,\n\n    offset, zLength,\n\n    colorIndex, normalIndex, uvIndex, materialIndex,\n\n    type,\n    isQuad,\n    hasMaterial,\n    hasFaceVertexUv,\n    hasFaceNormal, hasFaceVertexNormal,\n    hasFaceColor, hasFaceVertexColor,\n\n    vertex, face, faceA, faceB, color, hex, normal,\n\n    uvLayer, uv, u, v,\n\n    faces = json.faces,\n    vertices = json.vertices,\n    normals = json.normals,\n    colors = json.colors,\n\n    nUvLayers = 0;\n\n    if ( json.uvs !== undefined ) {\n\n      // disregard empty arrays\n\n      for ( i = 0; i < json.uvs.length; i ++ ) {\n\n        if ( json.uvs[ i ].length ) nUvLayers ++;\n\n      }\n\n      for ( i = 0; i < nUvLayers; i ++ ) {\n\n        geometry.faceVertexUvs[ i ] = [];\n\n      }\n\n    }\n\n    offset = 0;\n    zLength = vertices.length;\n\n    while ( offset < zLength ) {\n\n      vertex = new THREE.Vector3();\n\n      vertex.x = vertices[ offset ++ ] * scale;\n      vertex.y = vertices[ offset ++ ] * scale;\n      vertex.z = vertices[ offset ++ ] * scale;\n\n      geometry.vertices.push( vertex );\n\n    }\n\n    offset = 0;\n    zLength = faces.length;\n\n    while ( offset < zLength ) {\n\n      type = faces[ offset ++ ];\n\n\n      isQuad              = isBitSet( type, 0 );\n      hasMaterial         = isBitSet( type, 1 );\n      hasFaceVertexUv     = isBitSet( type, 3 );\n      hasFaceNormal       = isBitSet( type, 4 );\n      hasFaceVertexNormal = isBitSet( type, 5 );\n      hasFaceColor       = isBitSet( type, 6 );\n      hasFaceVertexColor  = isBitSet( type, 7 );\n\n      // console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n      if ( isQuad ) {\n\n        faceA = new THREE.Face3();\n        faceA.a = faces[ offset ];\n        faceA.b = faces[ offset + 1 ];\n        faceA.c = faces[ offset + 3 ];\n\n        faceB = new THREE.Face3();\n        faceB.a = faces[ offset + 1 ];\n        faceB.b = faces[ offset + 2 ];\n        faceB.c = faces[ offset + 3 ];\n\n        offset += 4;\n\n        if ( hasMaterial ) {\n\n          materialIndex = faces[ offset ++ ];\n          faceA.materialIndex = materialIndex;\n          faceB.materialIndex = materialIndex;\n\n        }\n\n        // to get face <=> uv index correspondence\n\n        fi = geometry.faces.length;\n\n        if ( hasFaceVertexUv ) {\n\n          for ( i = 0; i < nUvLayers; i ++ ) {\n\n            uvLayer = json.uvs[ i ];\n\n            geometry.faceVertexUvs[ i ][ fi ] = [];\n            geometry.faceVertexUvs[ i ][ fi + 1 ] = []\n\n            for ( j = 0; j < 4; j ++ ) {\n\n              uvIndex = faces[ offset ++ ];\n\n              u = uvLayer[ uvIndex * 2 ];\n              v = uvLayer[ uvIndex * 2 + 1 ];\n\n              uv = new THREE.Vector2( u, v );\n\n              if ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n              if ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n            }\n\n          }\n\n        }\n\n        if ( hasFaceNormal ) {\n\n          normalIndex = faces[ offset ++ ] * 3;\n\n          faceA.normal.set(\n            normals[ normalIndex ++ ],\n            normals[ normalIndex ++ ],\n            normals[ normalIndex ]\n          );\n\n          faceB.normal.copy( faceA.normal );\n\n        }\n\n        if ( hasFaceVertexNormal ) {\n\n          for ( i = 0; i < 4; i ++ ) {\n\n            normalIndex = faces[ offset ++ ] * 3;\n\n            normal = new THREE.Vector3(\n              normals[ normalIndex ++ ],\n              normals[ normalIndex ++ ],\n              normals[ normalIndex ]\n            );\n\n\n            if ( i !== 2 ) faceA.vertexNormals.push( normal );\n            if ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n          }\n\n        }\n\n\n        if ( hasFaceColor ) {\n\n          colorIndex = faces[ offset ++ ];\n          hex = colors[ colorIndex ];\n\n          faceA.color.setHex( hex );\n          faceB.color.setHex( hex );\n\n        }\n\n\n        if ( hasFaceVertexColor ) {\n\n          for ( i = 0; i < 4; i ++ ) {\n\n            colorIndex = faces[ offset ++ ];\n            hex = colors[ colorIndex ];\n\n            if ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\n            if ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\n\n          }\n\n        }\n\n        geometry.faces.push( faceA );\n        geometry.faces.push( faceB );\n\n      } else {\n\n        face = new THREE.Face3();\n        face.a = faces[ offset ++ ];\n        face.b = faces[ offset ++ ];\n        face.c = faces[ offset ++ ];\n\n        if ( hasMaterial ) {\n\n          materialIndex = faces[ offset ++ ];\n          face.materialIndex = materialIndex;\n\n        }\n\n        // to get face <=> uv index correspondence\n\n        fi = geometry.faces.length;\n\n        if ( hasFaceVertexUv ) {\n\n          for ( i = 0; i < nUvLayers; i ++ ) {\n\n            uvLayer = json.uvs[ i ];\n\n            geometry.faceVertexUvs[ i ][ fi ] = [];\n\n            for ( j = 0; j < 3; j ++ ) {\n\n              uvIndex = faces[ offset ++ ];\n\n              u = uvLayer[ uvIndex * 2 ];\n              v = uvLayer[ uvIndex * 2 + 1 ];\n\n              uv = new THREE.Vector2( u, v );\n\n              geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n            }\n\n          }\n\n        }\n\n        if ( hasFaceNormal ) {\n\n          normalIndex = faces[ offset ++ ] * 3;\n\n          face.normal.set(\n            normals[ normalIndex ++ ],\n            normals[ normalIndex ++ ],\n            normals[ normalIndex ]\n          );\n\n        }\n\n        if ( hasFaceVertexNormal ) {\n\n          for ( i = 0; i < 3; i ++ ) {\n\n            normalIndex = faces[ offset ++ ] * 3;\n\n            normal = new THREE.Vector3(\n              normals[ normalIndex ++ ],\n              normals[ normalIndex ++ ],\n              normals[ normalIndex ]\n            );\n\n            face.vertexNormals.push( normal );\n\n          }\n\n        }\n\n\n        if ( hasFaceColor ) {\n\n          colorIndex = faces[ offset ++ ];\n          face.color.setHex( colors[ colorIndex ] );\n\n        }\n\n\n        if ( hasFaceVertexColor ) {\n\n          for ( i = 0; i < 3; i ++ ) {\n\n            colorIndex = faces[ offset ++ ];\n            face.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\n\n          }\n\n        }\n\n        geometry.faces.push( face );\n\n      }\n\n    }\n\n  };\n\n  function parseSkin() {\n    var influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n    if ( json.skinWeights ) {\n\n      for ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n        var x =                               json.skinWeights[ i     ];\n        var y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n        var z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n        var w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n        geometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\n\n      }\n\n    }\n\n    if ( json.skinIndices ) {\n\n      for ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n        var a =                               json.skinIndices[ i     ];\n        var b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n        var c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n        var d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n        geometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\n\n      }\n\n    }\n\n    geometry.bones = json.bones;\n\n    if ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n        console.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n          geometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n    }\n\n\n    // could change this to json.animations[0] or remove completely\n\n    geometry.animation = json.animation;\n    geometry.animations = json.animations;\n\n  };\n\n  function parseMorphing( scale ) {\n\n    if ( json.morphTargets !== undefined ) {\n\n      var i, l, v, vl, dstVertices, srcVertices;\n\n      for ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n        geometry.morphTargets[ i ] = {};\n        geometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n        geometry.morphTargets[ i ].vertices = [];\n\n        dstVertices = geometry.morphTargets[ i ].vertices;\n        srcVertices = json.morphTargets [ i ].vertices;\n\n        for ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n          var vertex = new THREE.Vector3();\n          vertex.x = srcVertices[ v ] * scale;\n          vertex.y = srcVertices[ v + 1 ] * scale;\n          vertex.z = srcVertices[ v + 2 ] * scale;\n\n          dstVertices.push( vertex );\n\n        }\n\n      }\n\n    }\n\n    if ( json.morphColors !== undefined ) {\n\n      var i, l, c, cl, dstColors, srcColors, color;\n\n      for ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\n\n        geometry.morphColors[ i ] = {};\n        geometry.morphColors[ i ].name = json.morphColors[ i ].name;\n        geometry.morphColors[ i ].colors = [];\n\n        dstColors = geometry.morphColors[ i ].colors;\n        srcColors = json.morphColors [ i ].colors;\n\n        for ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\n\n          color = new THREE.Color( 0xffaa00 );\n          color.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\n          dstColors.push( color );\n\n        }\n\n      }\n\n    }\n\n  };\n\n  if ( json.materials === undefined || json.materials.length === 0 ) {\n\n    return { geometry: geometry };\n\n  } else {\n\n    var materials = this.initMaterials( json.materials, texturePath );\n\n    if ( this.needsTangents( materials ) ) {\n\n      geometry.computeTangents();\n\n    }\n\n    return { geometry: geometry, materials: materials };\n\n  }\n\n};\n\n// File:src/loaders/LoadingManager.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\n\n  var scope = this;\n\n  var loaded = 0, total = 0;\n\n  this.onLoad = onLoad;\n  this.onProgress = onProgress;\n  this.onError = onError;\n\n  this.itemStart = function ( url ) {\n\n    total ++;\n\n  };\n\n  this.itemEnd = function ( url ) {\n\n    loaded ++;\n\n    if ( scope.onProgress !== undefined ) {\n\n      scope.onProgress( url, loaded, total );\n\n    }\n\n    if ( loaded === total && scope.onLoad !== undefined ) {\n\n      scope.onLoad();\n\n    }\n\n  };\n\n};\n\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\n\n// File:src/loaders/BufferGeometryLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.BufferGeometryLoader = function ( manager ) {\n\n  this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.BufferGeometryLoader.prototype = {\n\n  constructor: THREE.BufferGeometryLoader,\n\n  load: function ( url, onLoad, onProgress, onError ) {\n\n    var scope = this;\n\n    var loader = new THREE.XHRLoader();\n    loader.setCrossOrigin( this.crossOrigin );\n    loader.load( url, function ( text ) {\n\n      onLoad( scope.parse( JSON.parse( text ) ) );\n\n    }, onProgress, onError );\n\n  },\n\n  setCrossOrigin: function ( value ) {\n\n    this.crossOrigin = value;\n\n  },\n\n  parse: function ( json ) {\n\n    var geometry = new THREE.BufferGeometry();\n\n    var attributes = json.attributes;\n\n    for ( var key in attributes ) {\n\n      var attribute = attributes[ key ];\n\n      geometry.attributes[ key ] = {\n        itemSize: attribute.itemSize,\n        array: new self[ attribute.type ]( attribute.array )\n      }\n\n    }\n\n    var offsets = json.offsets;\n\n    if ( offsets !== undefined ) {\n\n      geometry.offsets = JSON.parse( JSON.stringify( offsets ) );\n\n    }\n\n    var boundingSphere = json.boundingSphere;\n\n    if ( boundingSphere !== undefined ) {\n\n      geometry.boundingSphere = new THREE.Sphere(\n        new THREE.Vector3().fromArray( boundingSphere.center !== undefined ? boundingSphere.center : [ 0, 0, 0 ] ),\n        boundingSphere.radius\n      );\n\n    }\n\n    return geometry;\n\n  }\n\n};\n\n// File:src/loaders/MaterialLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.MaterialLoader = function ( manager ) {\n\n  this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.MaterialLoader.prototype = {\n\n  constructor: THREE.MaterialLoader,\n\n  load: function ( url, onLoad, onProgress, onError ) {\n\n    var scope = this;\n\n    var loader = new THREE.XHRLoader();\n    loader.setCrossOrigin( this.crossOrigin );\n    loader.load( url, function ( text ) {\n\n      onLoad( scope.parse( JSON.parse( text ) ) );\n\n    }, onProgress, onError );\n\n  },\n\n  setCrossOrigin: function ( value ) {\n\n    this.crossOrigin = value;\n\n  },\n\n  parse: function ( json ) {\n\n    var material = new THREE[ json.type ];\n\n    if ( json.color !== undefined ) material.color.setHex( json.color );\n    if ( json.ambient !== undefined ) material.ambient.setHex( json.ambient );\n    if ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n    if ( json.specular !== undefined ) material.specular.setHex( json.specular );\n    if ( json.shininess !== undefined ) material.shininess = json.shininess;\n    if ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n    if ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n    if ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n    if ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n    if ( json.blending !== undefined ) material.blending = json.blending;\n    if ( json.side !== undefined ) material.side = json.side;\n    if ( json.opacity !== undefined ) material.opacity = json.opacity;\n    if ( json.transparent !== undefined ) material.transparent = json.transparent;\n    if ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\n    if ( json.materials !== undefined ) {\n\n      for ( var i = 0, l = json.materials.length; i < l; i ++ ) {\n\n        material.materials.push( this.parse( json.materials[ i ] ) );\n\n      }\n\n    }\n\n    return material;\n\n  }\n\n};\n\n// File:src/loaders/ObjectLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.ObjectLoader = function ( manager ) {\n\n  this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.ObjectLoader.prototype = {\n\n  constructor: THREE.ObjectLoader,\n\n  load: function ( url, onLoad, onProgress, onError ) {\n\n    var scope = this;\n\n    var loader = new THREE.XHRLoader( scope.manager );\n    loader.setCrossOrigin( this.crossOrigin );\n    loader.load( url, function ( text ) {\n\n      onLoad( scope.parse( JSON.parse( text ) ) );\n\n    }, onProgress, onError );\n\n  },\n\n  setCrossOrigin: function ( value ) {\n\n    this.crossOrigin = value;\n\n  },\n\n  parse: function ( json ) {\n\n    var geometries = this.parseGeometries( json.geometries );\n    var materials = this.parseMaterials( json.materials );\n    var object = this.parseObject( json.object, geometries, materials );\n\n    return object;\n\n  },\n\n  parseGeometries: function ( json ) {\n\n    var geometries = {};\n\n    if ( json !== undefined ) {\n\n      var geometryLoader = new THREE.JSONLoader();\n      var bufferGeometryLoader = new THREE.BufferGeometryLoader();\n\n      for ( var i = 0, l = json.length; i < l; i ++ ) {\n\n        var geometry;\n        var data = json[ i ];\n\n        switch ( data.type ) {\n\n          case 'PlaneGeometry':\n\n            geometry = new THREE.PlaneGeometry(\n              data.width,\n              data.height,\n              data.widthSegments,\n              data.heightSegments\n            );\n\n            break;\n\n          case 'BoxGeometry':\n          case 'CubeGeometry': // backwards compatible\n\n            geometry = new THREE.BoxGeometry(\n              data.width,\n              data.height,\n              data.depth,\n              data.widthSegments,\n              data.heightSegments,\n              data.depthSegments\n            );\n\n            break;\n\n          case 'CircleGeometry':\n\n            geometry = new THREE.CircleGeometry(\n              data.radius,\n              data.segments\n            );\n\n            break;\n\n          case 'CylinderGeometry':\n\n            geometry = new THREE.CylinderGeometry(\n              data.radiusTop,\n              data.radiusBottom,\n              data.height,\n              data.radialSegments,\n              data.heightSegments,\n              data.openEnded\n            );\n\n            break;\n\n          case 'SphereGeometry':\n\n            geometry = new THREE.SphereGeometry(\n              data.radius,\n              data.widthSegments,\n              data.heightSegments,\n              data.phiStart,\n              data.phiLength,\n              data.thetaStart,\n              data.thetaLength\n            );\n\n            break;\n\n          case 'IcosahedronGeometry':\n\n            geometry = new THREE.IcosahedronGeometry(\n              data.radius,\n              data.detail\n            );\n\n            break;\n\n          case 'TorusGeometry':\n\n            geometry = new THREE.TorusGeometry(\n              data.radius,\n              data.tube,\n              data.radialSegments,\n              data.tubularSegments,\n              data.arc\n            );\n\n            break;\n\n          case 'TorusKnotGeometry':\n\n            geometry = new THREE.TorusKnotGeometry(\n              data.radius,\n              data.tube,\n              data.radialSegments,\n              data.tubularSegments,\n              data.p,\n              data.q,\n              data.heightScale\n            );\n\n            break;\n\n          case 'BufferGeometry':\n\n            geometry = bufferGeometryLoader.parse( data.data );\n\n            break;\n\n          case 'Geometry':\n\n            geometry = geometryLoader.parse( data.data ).geometry;\n\n            break;\n\n        }\n\n        geometry.uuid = data.uuid;\n\n        if ( data.name !== undefined ) geometry.name = data.name;\n\n        geometries[ data.uuid ] = geometry;\n\n      }\n\n    }\n\n    return geometries;\n\n  },\n\n  parseMaterials: function ( json ) {\n\n    var materials = {};\n\n    if ( json !== undefined ) {\n\n      var loader = new THREE.MaterialLoader();\n\n      for ( var i = 0, l = json.length; i < l; i ++ ) {\n\n        var data = json[ i ];\n        var material = loader.parse( data );\n\n        material.uuid = data.uuid;\n\n        if ( data.name !== undefined ) material.name = data.name;\n\n        materials[ data.uuid ] = material;\n\n      }\n\n    }\n\n    return materials;\n\n  },\n\n  parseObject: function () {\n\n    var matrix = new THREE.Matrix4();\n\n    return function ( data, geometries, materials ) {\n\n      var object;\n\n      switch ( data.type ) {\n\n        case 'Scene':\n\n          object = new THREE.Scene();\n\n          break;\n\n        case 'PerspectiveCamera':\n\n          object = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n          break;\n\n        case 'OrthographicCamera':\n\n          object = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n          break;\n\n        case 'AmbientLight':\n\n          object = new THREE.AmbientLight( data.color );\n\n          break;\n\n        case 'DirectionalLight':\n\n          object = new THREE.DirectionalLight( data.color, data.intensity );\n\n          break;\n\n        case 'PointLight':\n\n          object = new THREE.PointLight( data.color, data.intensity, data.distance );\n\n          break;\n\n        case 'SpotLight':\n\n          object = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent );\n\n          break;\n\n        case 'HemisphereLight':\n\n          object = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\n\n          break;\n\n        case 'Mesh':\n\n          var geometry = geometries[ data.geometry ];\n          var material = materials[ data.material ];\n\n          if ( geometry === undefined ) {\n\n            console.error( 'THREE.ObjectLoader: Undefined geometry ' + data.geometry );\n\n          }\n\n          if ( material === undefined ) {\n\n            console.error( 'THREE.ObjectLoader: Undefined material ' + data.material );\n\n          }\n\n          object = new THREE.Mesh( geometry, material );\n\n          break;\n\n        case 'Sprite':\n\n          var material = materials[ data.material ];\n\n          if ( material === undefined ) {\n\n            console.error( 'THREE.ObjectLoader: Undefined material ' + data.material );\n\n          }\n\n          object = new THREE.Sprite( material );\n\n          break;\n\n        default:\n\n          object = new THREE.Object3D();\n\n      }\n\n      object.uuid = data.uuid;\n\n      if ( data.name !== undefined ) object.name = data.name;\n      if ( data.matrix !== undefined ) {\n\n        matrix.fromArray( data.matrix );\n        matrix.decompose( object.position, object.quaternion, object.scale );\n\n      } else {\n\n        if ( data.position !== undefined ) object.position.fromArray( data.position );\n        if ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n        if ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n      }\n\n      if ( data.visible !== undefined ) object.visible = data.visible;\n      if ( data.userData !== undefined ) object.userData = data.userData;\n\n      if ( data.children !== undefined ) {\n\n        for ( var child in data.children ) {\n\n          object.add( this.parseObject( data.children[ child ], geometries, materials ) );\n\n        }\n\n      }\n\n      return object;\n\n    }\n\n  }()\n\n};\n\n// File:src/loaders/TextureLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.TextureLoader = function ( manager ) {\n\n  this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.TextureLoader.prototype = {\n\n  constructor: THREE.TextureLoader,\n\n  load: function ( url, onLoad, onProgress, onError ) {\n\n    var scope = this;\n\n    var loader = new THREE.ImageLoader( scope.manager );\n    loader.setCrossOrigin( this.crossOrigin );\n    loader.load( url, function ( image ) {\n\n      var texture = new THREE.Texture( image );\n      texture.needsUpdate = true;\n\n      if ( onLoad !== undefined ) {\n\n        onLoad( texture );\n\n      }\n\n    }, onProgress, onError );\n\n  },\n\n  setCrossOrigin: function ( value ) {\n\n    this.crossOrigin = value;\n\n  }\n\n};\n\n// File:src/materials/Material.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Material = function () {\n\n  this.id = THREE.MaterialIdCount ++;\n  this.uuid = THREE.Math.generateUUID();\n\n  this.name = '';\n\n  this.side = THREE.FrontSide;\n\n  this.opacity = 1;\n  this.transparent = false;\n\n  this.blending = THREE.NormalBlending;\n\n  this.blendSrc = THREE.SrcAlphaFactor;\n  this.blendDst = THREE.OneMinusSrcAlphaFactor;\n  this.blendEquation = THREE.AddEquation;\n\n  this.depthTest = true;\n  this.depthWrite = true;\n\n  this.polygonOffset = false;\n  this.polygonOffsetFactor = 0;\n  this.polygonOffsetUnits = 0;\n\n  this.alphaTest = 0;\n\n  this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n  this.visible = true;\n\n  this.needsUpdate = true;\n\n};\n\nTHREE.Material.prototype = {\n\n  constructor: THREE.Material,\n\n  setValues: function ( values ) {\n\n    if ( values === undefined ) return;\n\n    for ( var key in values ) {\n\n      var newValue = values[ key ];\n\n      if ( newValue === undefined ) {\n\n        console.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n        continue;\n\n      }\n\n      if ( key in this ) {\n\n        var currentValue = this[ key ];\n\n        if ( currentValue instanceof THREE.Color ) {\n\n          currentValue.set( newValue );\n\n        } else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\n\n          currentValue.copy( newValue );\n\n        } else if ( key == 'overdraw' ) {\n\n          // ensure overdraw is backwards-compatable with legacy boolean type\n          this[ key ] = Number( newValue );\n\n        } else {\n\n          this[ key ] = newValue;\n\n        }\n\n      }\n\n    }\n\n  },\n\n  clone: function ( material ) {\n\n    if ( material === undefined ) material = new THREE.Material();\n\n    material.name = this.name;\n\n    material.side = this.side;\n\n    material.opacity = this.opacity;\n    material.transparent = this.transparent;\n\n    material.blending = this.blending;\n\n    material.blendSrc = this.blendSrc;\n    material.blendDst = this.blendDst;\n    material.blendEquation = this.blendEquation;\n\n    material.depthTest = this.depthTest;\n    material.depthWrite = this.depthWrite;\n\n    material.polygonOffset = this.polygonOffset;\n    material.polygonOffsetFactor = this.polygonOffsetFactor;\n    material.polygonOffsetUnits = this.polygonOffsetUnits;\n\n    material.alphaTest = this.alphaTest;\n\n    material.overdraw = this.overdraw;\n\n    material.visible = this.visible;\n\n    return material;\n\n  },\n\n  dispose: function () {\n\n    this.dispatchEvent( { type: 'dispose' } );\n\n  }\n\n};\n\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\n\nTHREE.MaterialIdCount = 0;\n\n// File:src/materials/LineBasicMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\",\n *\n *  vertexColors: <bool>\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.LineBasicMaterial = function ( parameters ) {\n\n  THREE.Material.call( this );\n\n  this.color = new THREE.Color( 0xffffff );\n\n  this.linewidth = 1;\n  this.linecap = 'round';\n  this.linejoin = 'round';\n\n  this.vertexColors = THREE.NoColors;\n\n  this.fog = true;\n\n  this.setValues( parameters );\n\n};\n\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.LineBasicMaterial.prototype.clone = function () {\n\n  var material = new THREE.LineBasicMaterial();\n\n  THREE.Material.prototype.clone.call( this, material );\n\n  material.color.copy( this.color );\n\n  material.linewidth = this.linewidth;\n  material.linecap = this.linecap;\n  material.linejoin = this.linejoin;\n\n  material.vertexColors = this.vertexColors;\n\n  material.fog = this.fog;\n\n  return material;\n\n};\n\n// File:src/materials/LineDashedMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>,\n *\n *  vertexColors: <bool>\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.LineDashedMaterial = function ( parameters ) {\n\n  THREE.Material.call( this );\n\n  this.color = new THREE.Color( 0xffffff );\n\n  this.linewidth = 1;\n\n  this.scale = 1;\n  this.dashSize = 3;\n  this.gapSize = 1;\n\n  this.vertexColors = false;\n\n  this.fog = true;\n\n  this.setValues( parameters );\n\n};\n\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.LineDashedMaterial.prototype.clone = function () {\n\n  var material = new THREE.LineDashedMaterial();\n\n  THREE.Material.prototype.clone.call( this, material );\n\n  material.color.copy( this.color );\n\n  material.linewidth = this.linewidth;\n\n  material.scale = this.scale;\n  material.dashSize = this.dashSize;\n  material.gapSize = this.gapSize;\n\n  material.vertexColors = this.vertexColors;\n\n  material.fog = this.fog;\n\n  return material;\n\n};\n\n// File:src/materials/MeshBasicMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.MeshBasicMaterial = function ( parameters ) {\n\n  THREE.Material.call( this );\n\n  this.color = new THREE.Color( 0xffffff ); // emissive\n\n  this.map = null;\n\n  this.lightMap = null;\n\n  this.specularMap = null;\n\n  this.alphaMap = null;\n\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n\n  this.fog = true;\n\n  this.shading = THREE.SmoothShading;\n\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n\n  this.vertexColors = THREE.NoColors;\n\n  this.skinning = false;\n  this.morphTargets = false;\n\n  this.setValues( parameters );\n\n};\n\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.MeshBasicMaterial.prototype.clone = function () {\n\n  var material = new THREE.MeshBasicMaterial();\n\n  THREE.Material.prototype.clone.call( this, material );\n\n  material.color.copy( this.color );\n\n  material.map = this.map;\n\n  material.lightMap = this.lightMap;\n\n  material.specularMap = this.specularMap;\n\n  material.alphaMap = this.alphaMap;\n\n  material.envMap = this.envMap;\n  material.combine = this.combine;\n  material.reflectivity = this.reflectivity;\n  material.refractionRatio = this.refractionRatio;\n\n  material.fog = this.fog;\n\n  material.shading = this.shading;\n\n  material.wireframe = this.wireframe;\n  material.wireframeLinewidth = this.wireframeLinewidth;\n  material.wireframeLinecap = this.wireframeLinecap;\n  material.wireframeLinejoin = this.wireframeLinejoin;\n\n  material.vertexColors = this.vertexColors;\n\n  material.skinning = this.skinning;\n  material.morphTargets = this.morphTargets;\n\n  return material;\n\n};\n\n// File:src/materials/MeshLambertMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  ambient: <hex>,\n *  emissive: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.MeshLambertMaterial = function ( parameters ) {\n\n  THREE.Material.call( this );\n\n  this.color = new THREE.Color( 0xffffff ); // diffuse\n  this.ambient = new THREE.Color( 0xffffff );\n  this.emissive = new THREE.Color( 0x000000 );\n\n  this.wrapAround = false;\n  this.wrapRGB = new THREE.Vector3( 1, 1, 1 );\n\n  this.map = null;\n\n  this.lightMap = null;\n\n  this.specularMap = null;\n\n  this.alphaMap = null;\n\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n\n  this.fog = true;\n\n  this.shading = THREE.SmoothShading;\n\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n\n  this.vertexColors = THREE.NoColors;\n\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n\n  this.setValues( parameters );\n\n};\n\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.MeshLambertMaterial.prototype.clone = function () {\n\n  var material = new THREE.MeshLambertMaterial();\n\n  THREE.Material.prototype.clone.call( this, material );\n\n  material.color.copy( this.color );\n  material.ambient.copy( this.ambient );\n  material.emissive.copy( this.emissive );\n\n  material.wrapAround = this.wrapAround;\n  material.wrapRGB.copy( this.wrapRGB );\n\n  material.map = this.map;\n\n  material.lightMap = this.lightMap;\n\n  material.specularMap = this.specularMap;\n\n  material.alphaMap = this.alphaMap;\n\n  material.envMap = this.envMap;\n  material.combine = this.combine;\n  material.reflectivity = this.reflectivity;\n  material.refractionRatio = this.refractionRatio;\n\n  material.fog = this.fog;\n\n  material.shading = this.shading;\n\n  material.wireframe = this.wireframe;\n  material.wireframeLinewidth = this.wireframeLinewidth;\n  material.wireframeLinecap = this.wireframeLinecap;\n  material.wireframeLinejoin = this.wireframeLinejoin;\n\n  material.vertexColors = this.vertexColors;\n\n  material.skinning = this.skinning;\n  material.morphTargets = this.morphTargets;\n  material.morphNormals = this.morphNormals;\n\n  return material;\n\n};\n\n// File:src/materials/MeshPhongMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  ambient: <hex>,\n *  emissive: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.MeshPhongMaterial = function ( parameters ) {\n\n  THREE.Material.call( this );\n\n  this.color = new THREE.Color( 0xffffff ); // diffuse\n  this.ambient = new THREE.Color( 0xffffff );\n  this.emissive = new THREE.Color( 0x000000 );\n  this.specular = new THREE.Color( 0x111111 );\n  this.shininess = 30;\n\n  this.metal = false;\n\n  this.wrapAround = false;\n  this.wrapRGB = new THREE.Vector3( 1, 1, 1 );\n\n  this.map = null;\n\n  this.lightMap = null;\n\n  this.bumpMap = null;\n  this.bumpScale = 1;\n\n  this.normalMap = null;\n  this.normalScale = new THREE.Vector2( 1, 1 );\n\n  this.specularMap = null;\n\n  this.alphaMap = null;\n\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n\n  this.fog = true;\n\n  this.shading = THREE.SmoothShading;\n\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n\n  this.vertexColors = THREE.NoColors;\n\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n\n  this.setValues( parameters );\n\n};\n\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.MeshPhongMaterial.prototype.clone = function () {\n\n  var material = new THREE.MeshPhongMaterial();\n\n  THREE.Material.prototype.clone.call( this, material );\n\n  material.color.copy( this.color );\n  material.ambient.copy( this.ambient );\n  material.emissive.copy( this.emissive );\n  material.specular.copy( this.specular );\n  material.shininess = this.shininess;\n\n  material.metal = this.metal;\n\n  material.wrapAround = this.wrapAround;\n  material.wrapRGB.copy( this.wrapRGB );\n\n  material.map = this.map;\n\n  material.lightMap = this.lightMap;\n\n  material.bumpMap = this.bumpMap;\n  material.bumpScale = this.bumpScale;\n\n  material.normalMap = this.normalMap;\n  material.normalScale.copy( this.normalScale );\n\n  material.specularMap = this.specularMap;\n\n  material.alphaMap = this.alphaMap;\n\n  material.envMap = this.envMap;\n  material.combine = this.combine;\n  material.reflectivity = this.reflectivity;\n  material.refractionRatio = this.refractionRatio;\n\n  material.fog = this.fog;\n\n  material.shading = this.shading;\n\n  material.wireframe = this.wireframe;\n  material.wireframeLinewidth = this.wireframeLinewidth;\n  material.wireframeLinecap = this.wireframeLinecap;\n  material.wireframeLinejoin = this.wireframeLinejoin;\n\n  material.vertexColors = this.vertexColors;\n\n  material.skinning = this.skinning;\n  material.morphTargets = this.morphTargets;\n  material.morphNormals = this.morphNormals;\n\n  return material;\n\n};\n\n// File:src/materials/MeshDepthMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nTHREE.MeshDepthMaterial = function ( parameters ) {\n\n  THREE.Material.call( this );\n\n  this.morphTargets = false;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n\n  this.setValues( parameters );\n\n};\n\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.MeshDepthMaterial.prototype.clone = function () {\n\n  var material = new THREE.MeshDepthMaterial();\n\n  THREE.Material.prototype.clone.call( this, material );\n\n  material.wireframe = this.wireframe;\n  material.wireframeLinewidth = this.wireframeLinewidth;\n\n  return material;\n\n};\n\n// File:src/materials/MeshNormalMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  shading: THREE.FlatShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nTHREE.MeshNormalMaterial = function ( parameters ) {\n\n  THREE.Material.call( this, parameters );\n\n  this.shading = THREE.FlatShading;\n\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n\n  this.morphTargets = false;\n\n  this.setValues( parameters );\n\n};\n\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.MeshNormalMaterial.prototype.clone = function () {\n\n  var material = new THREE.MeshNormalMaterial();\n\n  THREE.Material.prototype.clone.call( this, material );\n\n  material.shading = this.shading;\n\n  material.wireframe = this.wireframe;\n  material.wireframeLinewidth = this.wireframeLinewidth;\n\n  return material;\n\n};\n\n// File:src/materials/MeshFaceMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.MeshFaceMaterial = function ( materials ) {\n\n  this.materials = materials instanceof Array ? materials : [];\n\n};\n\nTHREE.MeshFaceMaterial.prototype.clone = function () {\n\n  var material = new THREE.MeshFaceMaterial();\n\n  for ( var i = 0; i < this.materials.length; i ++ ) {\n\n    material.materials.push( this.materials[ i ].clone() );\n\n  }\n\n  return material;\n\n};\n\n// File:src/materials/PointCloudMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  vertexColors: <bool>,\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.PointCloudMaterial = function ( parameters ) {\n\n  THREE.Material.call( this );\n\n  this.color = new THREE.Color( 0xffffff );\n\n  this.map = null;\n\n  this.size = 1;\n  this.sizeAttenuation = true;\n\n  this.vertexColors = THREE.NoColors;\n\n  this.fog = true;\n\n  this.setValues( parameters );\n\n};\n\nTHREE.PointCloudMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.PointCloudMaterial.prototype.clone = function () {\n\n  var material = new THREE.PointCloudMaterial();\n\n  THREE.Material.prototype.clone.call( this, material );\n\n  material.color.copy( this.color );\n\n  material.map = this.map;\n\n  material.size = this.size;\n  material.sizeAttenuation = this.sizeAttenuation;\n\n  material.vertexColors = this.vertexColors;\n\n  material.fog = this.fog;\n\n  return material;\n\n};\n\n// backwards compatibility\n\nTHREE.ParticleBasicMaterial = function ( parameters ) {\n\n  console.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.' );\n  return new THREE.PointCloudMaterial( parameters );\n\n};\n\nTHREE.ParticleSystemMaterial = function ( parameters ) {\n\n  console.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.' );\n  return new THREE.PointCloudMaterial( parameters );\n\n};\n\n// File:src/materials/ShaderMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.ShaderMaterial = function ( parameters ) {\n\n  THREE.Material.call( this );\n\n  this.defines = {};\n  this.uniforms = {};\n  this.attributes = null;\n\n  this.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n  this.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n  this.shading = THREE.SmoothShading;\n\n  this.linewidth = 1;\n\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n\n  this.fog = false; // set to use scene fog\n\n  this.lights = false; // set to use scene lights\n\n  this.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\n\n  this.skinning = false; // set to use skinning attribute streams\n\n  this.morphTargets = false; // set to use morph targets\n  this.morphNormals = false; // set to use morph normals\n\n  // When rendered geometry doesn't include these attributes but the material does,\n  // use these default values in WebGL. This avoids errors when buffer data is missing.\n  this.defaultAttributeValues = {\n    'color': [ 1, 1, 1 ],\n    'uv': [ 0, 0 ],\n    'uv2': [ 0, 0 ]\n  };\n\n  this.index0AttributeName = undefined;\n\n  this.setValues( parameters );\n\n};\n\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.ShaderMaterial.prototype.clone = function () {\n\n  var material = new THREE.ShaderMaterial();\n\n  THREE.Material.prototype.clone.call( this, material );\n\n  material.fragmentShader = this.fragmentShader;\n  material.vertexShader = this.vertexShader;\n\n  material.uniforms = THREE.UniformsUtils.clone( this.uniforms );\n\n  material.attributes = this.attributes;\n  material.defines = this.defines;\n\n  material.shading = this.shading;\n\n  material.wireframe = this.wireframe;\n  material.wireframeLinewidth = this.wireframeLinewidth;\n\n  material.fog = this.fog;\n\n  material.lights = this.lights;\n\n  material.vertexColors = this.vertexColors;\n\n  material.skinning = this.skinning;\n\n  material.morphTargets = this.morphTargets;\n  material.morphNormals = this.morphNormals;\n\n  return material;\n\n};\n\n// File:src/materials/RawShaderMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.RawShaderMaterial = function ( parameters ) {\n\n  THREE.ShaderMaterial.call( this, parameters );\n\n};\n\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\n\nTHREE.RawShaderMaterial.prototype.clone = function () {\n\n  var material = new THREE.RawShaderMaterial();\n\n  THREE.ShaderMaterial.prototype.clone.call( this, material );\n\n  return material;\n\n};\n\n// File:src/materials/SpriteMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  uvOffset: new THREE.Vector2(),\n *  uvScale: new THREE.Vector2(),\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.SpriteMaterial = function ( parameters ) {\n\n  THREE.Material.call( this );\n\n  // defaults\n\n  this.color = new THREE.Color( 0xffffff );\n  this.map = null;\n\n  this.rotation = 0;\n\n  this.fog = false;\n\n  // set parameters\n\n  this.setValues( parameters );\n\n};\n\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.SpriteMaterial.prototype.clone = function () {\n\n  var material = new THREE.SpriteMaterial();\n\n  THREE.Material.prototype.clone.call( this, material );\n\n  material.color.copy( this.color );\n  material.map = this.map;\n\n  material.rotation = this.rotation;\n\n  material.fog = this.fog;\n\n  return material;\n\n};\n\n// File:src/materials/SpriteCanvasMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <hex>,\n *  program: <function>,\n *  opacity: <float>,\n *  blending: THREE.NormalBlending\n * }\n */\n\nTHREE.SpriteCanvasMaterial = function ( parameters ) {\n\n  THREE.Material.call( this );\n\n  this.color = new THREE.Color( 0xffffff );\n  this.program = function ( context, color ) {};\n\n  this.setValues( parameters );\n\n};\n\nTHREE.SpriteCanvasMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.SpriteCanvasMaterial.prototype.clone = function () {\n\n  var material = new THREE.SpriteCanvasMaterial();\n\n  THREE.Material.prototype.clone.call( this, material );\n\n  material.color.copy( this.color );\n  material.program = this.program;\n\n  return material;\n\n};\n\n// backwards compatibility\n\nTHREE.ParticleCanvasMaterial = THREE.SpriteCanvasMaterial;\n\n// File:src/textures/Texture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n  this.id = THREE.TextureIdCount ++;\n  this.uuid = THREE.Math.generateUUID();\n\n  this.name = '';\n\n  this.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\n  this.mipmaps = [];\n\n  this.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\n\n  this.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\n  this.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\n\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\n\n  this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n  this.format = format !== undefined ? format : THREE.RGBAFormat;\n  this.type = type !== undefined ? type : THREE.UnsignedByteType;\n\n  this.offset = new THREE.Vector2( 0, 0 );\n  this.repeat = new THREE.Vector2( 1, 1 );\n\n  this.generateMipmaps = true;\n  this.premultiplyAlpha = false;\n  this.flipY = true;\n  this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n  this._needsUpdate = false;\n  this.onUpdate = null;\n\n};\n\nTHREE.Texture.DEFAULT_IMAGE = undefined;\nTHREE.Texture.DEFAULT_MAPPING = new THREE.UVMapping();\n\nTHREE.Texture.prototype = {\n\n  constructor: THREE.Texture,\n\n  get needsUpdate () {\n\n    return this._needsUpdate;\n\n  },\n\n  set needsUpdate ( value ) {\n\n    if ( value === true ) this.update();\n\n    this._needsUpdate = value;\n\n  },\n\n  clone: function ( texture ) {\n\n    if ( texture === undefined ) texture = new THREE.Texture();\n\n    texture.image = this.image;\n    texture.mipmaps = this.mipmaps.slice( 0 );\n\n    texture.mapping = this.mapping;\n\n    texture.wrapS = this.wrapS;\n    texture.wrapT = this.wrapT;\n\n    texture.magFilter = this.magFilter;\n    texture.minFilter = this.minFilter;\n\n    texture.anisotropy = this.anisotropy;\n\n    texture.format = this.format;\n    texture.type = this.type;\n\n    texture.offset.copy( this.offset );\n    texture.repeat.copy( this.repeat );\n\n    texture.generateMipmaps = this.generateMipmaps;\n    texture.premultiplyAlpha = this.premultiplyAlpha;\n    texture.flipY = this.flipY;\n    texture.unpackAlignment = this.unpackAlignment;\n\n    return texture;\n\n  },\n\n  update: function () {\n\n    this.dispatchEvent( { type: 'update' } );\n\n  },\n\n  dispose: function () {\n\n    this.dispatchEvent( { type: 'dispose' } );\n\n  }\n\n};\n\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\n\nTHREE.TextureIdCount = 0;\n\n// File:src/textures/CubeTexture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n  THREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n  this.images = images;\n\n};\n\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\n\nTHREE.CubeTexture.clone = function ( texture ) {\n\n  if ( texture === undefined ) texture = new THREE.CubeTexture();\n\n  THREE.Texture.prototype.clone.call( this, texture );\n\n  texture.images = this.images;\n\n  return texture;\n\n};\n\n// File:src/textures/CompressedTexture.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\n\n  THREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n  this.image = { width: width, height: height };\n  this.mipmaps = mipmaps;\n\n  this.generateMipmaps = false; // WebGL currently can't generate mipmaps for compressed textures, they must be embedded in DDS file\n\n};\n\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\n\nTHREE.CompressedTexture.prototype.clone = function () {\n\n  var texture = new THREE.CompressedTexture();\n\n  THREE.Texture.prototype.clone.call( this, texture );\n\n  return texture;\n\n};\n\n// File:src/textures/DataTexture.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\n\n  THREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n  this.image = { data: data, width: width, height: height };\n\n};\n\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\n\nTHREE.DataTexture.prototype.clone = function () {\n\n  var texture = new THREE.DataTexture();\n\n  THREE.Texture.prototype.clone.call( this, texture );\n\n  return texture;\n\n};\n\n// File:src/objects/PointCloud.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.PointCloud = function ( geometry, material ) {\n\n  THREE.Object3D.call( this );\n\n  this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n  this.material = material !== undefined ? material : new THREE.PointCloudMaterial( { color: Math.random() * 0xffffff } );\n\n  this.sortParticles = false;\n\n};\n\nTHREE.PointCloud.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.PointCloud.prototype.raycast = ( function () {\n\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n\n  return function ( raycaster, intersects ) {\n\n    var object = this;\n    var geometry = object.geometry;\n    var threshold = raycaster.params.PointCloud.threshold;\n\n    inverseMatrix.getInverse( this.matrixWorld );\n    ray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n    if ( geometry.boundingBox !== null ) {\n\n      if ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\n\n        return;\n\n      }\n\n    }\n\n    var localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n    var position = new THREE.Vector3();\n\n    var testPoint = function ( point, index ) {\n\n      var rayPointDistance = ray.distanceToPoint( point );\n\n      if ( rayPointDistance < localThreshold ) {\n\n        var intersectPoint = ray.closestPointToPoint( point );\n        intersectPoint.applyMatrix4( object.matrixWorld );\n\n        var distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n        intersects.push( {\n\n          distance: distance,\n          distanceToRay: rayPointDistance,\n          point: intersectPoint.clone(),\n          index: index,\n          face: null,\n          object: object\n\n        } );\n\n      }\n\n    };\n\n    if ( geometry instanceof THREE.BufferGeometry ) {\n\n      var attributes = geometry.attributes;\n      var positions = attributes.position.array;\n\n      if ( attributes.index !== undefined ) {\n\n        var indices = attributes.index.array;\n        var offsets = geometry.offsets;\n\n        if ( offsets.length === 0 ) {\n\n          var offset = {\n            start: 0,\n            count: indices.length,\n            index: 0\n          };\n\n          offsets = [ offset ];\n\n        }\n\n        for ( var oi = 0, ol = offsets.length; oi < ol; ++oi ) {\n\n          var start = offsets[ oi ].start;\n          var count = offsets[ oi ].count;\n          var index = offsets[ oi ].index;\n\n          for ( var i = start, il = start + count; i < il; i ++ ) {\n\n            var a = index + indices[ i ];\n\n            position.set(\n              positions[ a * 3 ],\n              positions[ a * 3 + 1 ],\n              positions[ a * 3 + 2 ]\n            );\n\n            testPoint( position, a );\n\n          }\n\n        }\n\n      } else {\n\n        var pointCount = positions.length / 3;\n\n        for ( var i = 0; i < pointCount; i ++ ) {\n\n          position.set(\n            positions[ 3 * i ],\n            positions[ 3 * i + 1 ],\n            positions[ 3 * i + 2 ]\n          );\n\n          testPoint( position, i );\n\n        }\n\n      }\n\n    } else {\n\n      var vertices = this.geometry.vertices;\n\n      for ( var i = 0; i < vertices.length; i ++ ) {\n\n        testPoint( vertices[ i ], i );\n\n      }\n\n    }\n\n  };\n\n}() );\n\nTHREE.PointCloud.prototype.clone = function ( object ) {\n\n  if ( object === undefined ) object = new THREE.PointCloud( this.geometry, this.material );\n\n  object.sortParticles = this.sortParticles;\n\n  THREE.Object3D.prototype.clone.call( this, object );\n\n  return object;\n\n};\n\n// Backwards compatibility\n\nTHREE.ParticleSystem = function ( geometry, material ) {\n\n  console.warn( 'THREE.ParticleSystem has been renamed to THREE.PointCloud.' );\n  return new THREE.PointCloud( geometry, material );\n\n};\n\n// File:src/objects/Line.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Line = function ( geometry, material, type ) {\n\n  THREE.Object3D.call( this );\n\n  this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n  this.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n  this.type = ( type !== undefined ) ? type : THREE.LineStrip;\n\n};\n\nTHREE.LineStrip = 0;\nTHREE.LinePieces = 1;\n\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Line.prototype.raycast = ( function () {\n\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n  var sphere = new THREE.Sphere();\n\n  return function ( raycaster, intersects ) {\n\n    var precision = raycaster.linePrecision;\n    var precisionSq = precision * precision;\n\n    var geometry = this.geometry;\n\n    if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n    // Checking boundingSphere distance to ray\n\n    sphere.copy( geometry.boundingSphere );\n    sphere.applyMatrix4( this.matrixWorld );\n\n    if ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\n\n      return;\n\n    }\n\n    inverseMatrix.getInverse( this.matrixWorld );\n    ray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n    /* if ( geometry instanceof THREE.BufferGeometry ) {\n\n    } else */ if ( geometry instanceof THREE.Geometry ) {\n\n      var vertices = geometry.vertices;\n      var nbVertices = vertices.length;\n      var interSegment = new THREE.Vector3();\n      var interRay = new THREE.Vector3();\n      var step = this.type === THREE.LineStrip ? 1 : 2;\n\n      for ( var i = 0; i < nbVertices - 1; i = i + step ) {\n\n        var distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n        if ( distSq > precisionSq ) continue;\n\n        var distance = ray.origin.distanceTo( interRay );\n\n        if ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n        intersects.push( {\n\n          distance: distance,\n          // What do we want? intersection point on the ray or on the segment??\n          // point: raycaster.ray.at( distance ),\n          point: interSegment.clone().applyMatrix4( this.matrixWorld ),\n          face: null,\n          faceIndex: null,\n          object: this\n\n        } );\n\n      }\n\n    }\n\n  };\n\n}() );\n\nTHREE.Line.prototype.clone = function ( object ) {\n\n  if ( object === undefined ) object = new THREE.Line( this.geometry, this.material, this.type );\n\n  THREE.Object3D.prototype.clone.call( this, object );\n\n  return object;\n\n};\n\n// File:src/objects/Mesh.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nTHREE.Mesh = function ( geometry, material ) {\n\n  THREE.Object3D.call( this );\n\n  this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n  this.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n  this.updateMorphTargets();\n\n};\n\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Mesh.prototype.updateMorphTargets = function () {\n\n  if ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\n\n    this.morphTargetBase = - 1;\n    this.morphTargetForcedOrder = [];\n    this.morphTargetInfluences = [];\n    this.morphTargetDictionary = {};\n\n    for ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\n\n      this.morphTargetInfluences.push( 0 );\n      this.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\n\n    }\n\n  }\n\n};\n\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\n\n  if ( this.morphTargetDictionary[ name ] !== undefined ) {\n\n    return this.morphTargetDictionary[ name ];\n\n  }\n\n  console.log( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\n\n  return 0;\n\n};\n\n\nTHREE.Mesh.prototype.raycast = ( function () {\n\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n  var sphere = new THREE.Sphere();\n\n  var vA = new THREE.Vector3();\n  var vB = new THREE.Vector3();\n  var vC = new THREE.Vector3();\n\n  return function ( raycaster, intersects ) {\n\n    var geometry = this.geometry;\n\n    // Checking boundingSphere distance to ray\n\n    if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n    sphere.copy( geometry.boundingSphere );\n    sphere.applyMatrix4( this.matrixWorld );\n\n    if ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\n\n      return;\n\n    }\n\n    // Check boundingBox before continuing\n\n    inverseMatrix.getInverse( this.matrixWorld );\n    ray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n    if ( geometry.boundingBox !== null ) {\n\n      if ( ray.isIntersectionBox( geometry.boundingBox ) === false )  {\n\n        return;\n\n      }\n\n    }\n\n    if ( geometry instanceof THREE.BufferGeometry ) {\n\n      var material = this.material;\n\n      if ( material === undefined ) return;\n\n      var attributes = geometry.attributes;\n\n      var a, b, c;\n      var precision = raycaster.precision;\n\n      if ( attributes.index !== undefined ) {\n\n        var indices = attributes.index.array;\n        var positions = attributes.position.array;\n        var offsets = geometry.offsets;\n\n        if ( offsets.length === 0 ) {\n\n          offsets = [ { start: 0, count: indices.length, index: 0 } ];\n\n        }\n\n        for ( var oi = 0, ol = offsets.length; oi < ol; ++oi ) {\n\n          var start = offsets[ oi ].start;\n          var count = offsets[ oi ].count;\n          var index = offsets[ oi ].index;\n\n          for ( var i = start, il = start + count; i < il; i += 3 ) {\n\n            a = index + indices[ i ];\n            b = index + indices[ i + 1 ];\n            c = index + indices[ i + 2 ];\n\n            vA.set(\n              positions[ a * 3 ],\n              positions[ a * 3 + 1 ],\n              positions[ a * 3 + 2 ]\n            );\n            vB.set(\n              positions[ b * 3 ],\n              positions[ b * 3 + 1 ],\n              positions[ b * 3 + 2 ]\n            );\n            vC.set(\n              positions[ c * 3 ],\n              positions[ c * 3 + 1 ],\n              positions[ c * 3 + 2 ]\n            );\n\n\n            if ( material.side === THREE.BackSide ) {\n\n              var intersectionPoint = ray.intersectTriangle( vC, vB, vA, true );\n\n            } else {\n\n              var intersectionPoint = ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide );\n\n            }\n\n            if ( intersectionPoint === null ) continue;\n\n            intersectionPoint.applyMatrix4( this.matrixWorld );\n\n            var distance = raycaster.ray.origin.distanceTo( intersectionPoint );\n\n            if ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\n\n            intersects.push( {\n\n              distance: distance,\n              point: intersectionPoint,\n              indices: [ a, b, c ],\n              face: null,\n              faceIndex: null,\n              object: this\n\n            } );\n\n          }\n\n        }\n\n      } else {\n\n        var positions = attributes.position.array;\n\n        for ( var i = 0, j = 0, il = positions.length; i < il; i += 3, j += 9 ) {\n\n          a = i;\n          b = i + 1;\n          c = i + 2;\n\n          vA.set(\n            positions[ j ],\n            positions[ j + 1 ],\n            positions[ j + 2 ]\n          );\n          vB.set(\n            positions[ j + 3 ],\n            positions[ j + 4 ],\n            positions[ j + 5 ]\n          );\n          vC.set(\n            positions[ j + 6 ],\n            positions[ j + 7 ],\n            positions[ j + 8 ]\n          );\n\n\n          if ( material.side === THREE.BackSide ) {\n\n            var intersectionPoint = ray.intersectTriangle( vC, vB, vA, true );\n\n          } else {\n\n            var intersectionPoint = ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide );\n\n          }\n\n          if ( intersectionPoint === null ) continue;\n\n          intersectionPoint.applyMatrix4( this.matrixWorld );\n\n          var distance = raycaster.ray.origin.distanceTo( intersectionPoint );\n\n          if ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\n\n          intersects.push( {\n\n            distance: distance,\n            point: intersectionPoint,\n            indices: [ a, b, c ],\n            face: null,\n            faceIndex: null,\n            object: this\n\n          } );\n\n        }\n\n      }\n\n    } else if ( geometry instanceof THREE.Geometry ) {\n\n      var isFaceMaterial = this.material instanceof THREE.MeshFaceMaterial;\n      var objectMaterials = isFaceMaterial === true ? this.material.materials : null;\n\n      var a, b, c, d;\n      var precision = raycaster.precision;\n\n      var vertices = geometry.vertices;\n\n      for ( var f = 0, fl = geometry.faces.length; f < fl; f ++ ) {\n\n        var face = geometry.faces[ f ];\n\n        var material = isFaceMaterial === true ? objectMaterials[ face.materialIndex ] : this.material;\n\n        if ( material === undefined ) continue;\n\n        a = vertices[ face.a ];\n        b = vertices[ face.b ];\n        c = vertices[ face.c ];\n\n        if ( material.morphTargets === true ) {\n\n          var morphTargets = geometry.morphTargets;\n          var morphInfluences = this.morphTargetInfluences;\n\n          vA.set( 0, 0, 0 );\n          vB.set( 0, 0, 0 );\n          vC.set( 0, 0, 0 );\n\n          for ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n            var influence = morphInfluences[ t ];\n\n            if ( influence === 0 ) continue;\n\n            var targets = morphTargets[ t ].vertices;\n\n            vA.x += ( targets[ face.a ].x - a.x ) * influence;\n            vA.y += ( targets[ face.a ].y - a.y ) * influence;\n            vA.z += ( targets[ face.a ].z - a.z ) * influence;\n\n            vB.x += ( targets[ face.b ].x - b.x ) * influence;\n            vB.y += ( targets[ face.b ].y - b.y ) * influence;\n            vB.z += ( targets[ face.b ].z - b.z ) * influence;\n\n            vC.x += ( targets[ face.c ].x - c.x ) * influence;\n            vC.y += ( targets[ face.c ].y - c.y ) * influence;\n            vC.z += ( targets[ face.c ].z - c.z ) * influence;\n\n          }\n\n          vA.add( a );\n          vB.add( b );\n          vC.add( c );\n\n          a = vA;\n          b = vB;\n          c = vC;\n\n        }\n\n        if ( material.side === THREE.BackSide ) {\n\n          var intersectionPoint = ray.intersectTriangle( c, b, a, true );\n\n        } else {\n\n          var intersectionPoint = ray.intersectTriangle( a, b, c, material.side !== THREE.DoubleSide );\n\n        }\n\n        if ( intersectionPoint === null ) continue;\n\n        intersectionPoint.applyMatrix4( this.matrixWorld );\n\n        var distance = raycaster.ray.origin.distanceTo( intersectionPoint );\n\n        if ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\n\n        intersects.push( {\n\n          distance: distance,\n          point: intersectionPoint,\n          face: face,\n          faceIndex: f,\n          object: this\n\n        } );\n\n      }\n\n    }\n\n  };\n\n}() );\n\nTHREE.Mesh.prototype.clone = function ( object, recursive ) {\n\n  if ( object === undefined ) object = new THREE.Mesh( this.geometry, this.material );\n\n  THREE.Object3D.prototype.clone.call( this, object, recursive );\n\n  return object;\n\n};\n\n// File:src/objects/Bone.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nTHREE.Bone = function ( belongsToSkin ) {\n\n  THREE.Object3D.call( this );\n\n  this.skin = belongsToSkin;\n\n  this.accumulatedRotWeight = 0;\n  this.accumulatedPosWeight = 0;\n  this.accumulatedSclWeight = 0;\n\n};\n\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Bone.prototype.updateMatrixWorld = function ( force ) {\n\n  THREE.Object3D.prototype.updateMatrixWorld.call( this, force );\n\n  // Reset weights to be re-accumulated in the next frame\n\n  this.accumulatedRotWeight = 0;\n  this.accumulatedPosWeight = 0;\n  this.accumulatedSclWeight = 0;\n\n};\n\n\n// File:src/objects/Skeleton.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\n\n  this.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\n\n  this.identityMatrix = new THREE.Matrix4();\n\n  // copy the bone array\n\n  bones = bones || [];\n\n  this.bones = bones.slice( 0 );\n\n  // create a bone texture or an array of floats\n\n  if ( this.useVertexTexture ) {\n\n    // layout (1 matrix = 4 pixels)\n    //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n    //  with  8x8  pixel texture max   16 bones  (8 * 8  / 4)\n    //       16x16 pixel texture max   64 bones (16 * 16 / 4)\n    //       32x32 pixel texture max  256 bones (32 * 32 / 4)\n    //       64x64 pixel texture max 1024 bones (64 * 64 / 4)\n\n    var size;\n\n    if ( this.bones.length > 256 )\n      size = 64;\n    else if ( this.bones.length > 64 )\n      size = 32;\n    else if ( this.bones.length > 16 )\n      size = 16;\n    else\n      size = 8;\n\n    this.boneTextureWidth = size;\n    this.boneTextureHeight = size;\n\n    this.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\n    this.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\n    this.boneTexture.minFilter = THREE.NearestFilter;\n    this.boneTexture.magFilter = THREE.NearestFilter;\n    this.boneTexture.generateMipmaps = false;\n    this.boneTexture.flipY = false;\n\n  } else {\n\n    this.boneMatrices = new Float32Array( 16 * this.bones.length );\n\n  }\n\n  // use the supplied bone inverses or calculate the inverses\n\n  if ( boneInverses === undefined ) {\n\n    this.calculateInverses();\n\n  } else {\n\n    if ( this.bones.length === boneInverses.length ) {\n\n      this.boneInverses = boneInverses.slice( 0 );\n\n    } else {\n\n      console.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\n\n      this.boneInverses = [];\n\n      for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n        this.boneInverses.push( new THREE.Matrix4() );\n\n      }\n\n    }\n\n  }\n\n};\n\nTHREE.Skeleton.prototype.calculateInverses = function () {\n\n  this.boneInverses = [];\n\n  for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n    var inverse = new THREE.Matrix4();\n\n    if ( this.bones[ b ] ) {\n\n      inverse.getInverse( this.bones[ b ].matrixWorld );\n\n    }\n\n    this.boneInverses.push( inverse );\n\n  }\n\n};\n\nTHREE.Skeleton.prototype.pose = function () {\n\n  var bone;\n\n  // recover the bind-time world matrices\n\n  for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n    bone = this.bones[ b ];\n\n    if ( bone ) {\n\n      bone.matrixWorld.getInverse( this.boneInverses[ b ] );\n\n    }\n\n  }\n\n  // compute the local matrices, positions, rotations and scales\n\n  for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n    bone = this.bones[ b ];\n\n    if ( bone ) {\n\n      if ( bone.parent ) {\n\n        bone.matrix.getInverse( bone.parent.matrixWorld );\n        bone.matrix.multiply( bone.matrixWorld );\n\n      }\n      else {\n\n        bone.matrix.copy( bone.matrixWorld );\n\n      }\n\n      bone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n    }\n\n  }\n\n};\n\nTHREE.Skeleton.prototype.update = function () {\n\n  var offsetMatrix = new THREE.Matrix4();\n\n  // flatten bone matrices to array\n\n  for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n    // compute the offset between the current and the original transform\n\n    var matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\n\n    offsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\n    offsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\n\n  }\n\n  if ( this.useVertexTexture ) {\n\n    this.boneTexture.needsUpdate = true;\n\n  }\n\n};\n\n\n// File:src/objects/SkinnedMesh.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\n\n  THREE.Mesh.call( this, geometry, material );\n\n  this.bindMode = \"attached\";\n  this.bindMatrix = new THREE.Matrix4();\n  this.bindMatrixInverse = new THREE.Matrix4();\n\n  // init bones\n\n  // TODO: remove bone creation as there is no reason (other than\n  // convenience) for THREE.SkinnedMesh to do this.\n\n  var bones = [];\n\n  if ( this.geometry && this.geometry.bones !== undefined ) {\n\n    var bone, gbone, p, q, s;\n\n    for ( var b = 0, bl = this.geometry.bones.length; b < bl; ++b ) {\n\n      gbone = this.geometry.bones[ b ];\n\n      p = gbone.pos;\n      q = gbone.rotq;\n      s = gbone.scl;\n\n      bone = new THREE.Bone( this );\n      bones.push( bone );\n\n      bone.name = gbone.name;\n      bone.position.set( p[ 0 ], p[ 1 ], p[ 2 ] );\n      bone.quaternion.set( q[ 0 ], q[ 1 ], q[ 2 ], q[ 3 ] );\n\n      if ( s !== undefined ) {\n\n        bone.scale.set( s[ 0 ], s[ 1 ], s[ 2 ] );\n\n      } else {\n\n        bone.scale.set( 1, 1, 1 );\n\n      }\n\n    }\n\n    for ( var b = 0, bl = this.geometry.bones.length; b < bl; ++b ) {\n\n      gbone = this.geometry.bones[ b ];\n\n      if ( gbone.parent !== - 1 ) {\n\n        bones[ gbone.parent ].add( bones[ b ] );\n\n      } else {\n\n        this.add( bones[ b ] );\n\n      }\n\n    }\n\n  }\n\n  this.normalizeSkinWeights();\n\n  this.updateMatrixWorld( true );\n  this.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ) );\n\n};\n\n\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\n\nTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\n\n  this.skeleton = skeleton;\n\n  if ( bindMatrix === undefined ) {\n\n    this.updateMatrixWorld( true );\n\n    bindMatrix = this.matrixWorld;\n\n  }\n\n  this.bindMatrix.copy( bindMatrix );\n  this.bindMatrixInverse.getInverse( bindMatrix );\n\n};\n\nTHREE.SkinnedMesh.prototype.pose = function () {\n\n  this.skeleton.pose();\n\n};\n\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\n\n  if ( this.geometry instanceof THREE.Geometry ) {\n\n    for ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\n\n      var sw = this.geometry.skinWeights[ i ];\n\n      var scale = 1.0 / sw.lengthManhattan();\n\n      if ( scale !== Infinity ) {\n\n        sw.multiplyScalar( scale );\n\n      } else {\n\n        sw.set( 1 ); // this will be normalized by the shader anyway\n\n      }\n\n    }\n\n  } else {\n\n    // skinning weights assumed to be normalized for THREE.BufferGeometry\n\n  }\n\n};\n\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\n\n  THREE.Mesh.prototype.updateMatrixWorld.call( this, true );\n\n  if ( this.bindMode === \"attached\" ) {\n\n    this.bindMatrixInverse.getInverse( this.matrixWorld );\n\n  } else if ( this.bindMode === \"detached\" ) {\n\n    this.bindMatrixInverse.getInverse( this.bindMatrix );\n\n  } else {\n\n    console.warn( 'THREE.SkinnedMesh unreckognized bindMode: ' + this.bindMode );\n\n  }\n\n};\n\nTHREE.SkinnedMesh.prototype.clone = function( object ) {\n\n  if ( object === undefined ) {\n\n    object = new THREE.SkinnedMesh( this.geometry, this.material, this.useVertexTexture );\n\n  }\n\n  THREE.Mesh.prototype.clone.call( this, object );\n\n  return object;\n\n};\n\n\n// File:src/objects/MorphAnimMesh.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MorphAnimMesh = function ( geometry, material ) {\n\n  THREE.Mesh.call( this, geometry, material );\n\n  // API\n\n  this.duration = 1000; // milliseconds\n  this.mirroredLoop = false;\n  this.time = 0;\n\n  // internals\n\n  this.lastKeyframe = 0;\n  this.currentKeyframe = 0;\n\n  this.direction = 1;\n  this.directionBackwards = false;\n\n  this.setFrameRange( 0, this.geometry.morphTargets.length - 1 );\n\n};\n\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\n\nTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\n\n  this.startKeyframe = start;\n  this.endKeyframe = end;\n\n  this.length = this.endKeyframe - this.startKeyframe + 1;\n\n};\n\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\n\n  this.direction = 1;\n  this.directionBackwards = false;\n\n};\n\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\n\n  this.direction = - 1;\n  this.directionBackwards = true;\n\n};\n\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\n\n  var geometry = this.geometry;\n\n  if ( ! geometry.animations ) geometry.animations = {};\n\n  var firstAnimation, animations = geometry.animations;\n\n  var pattern = /([a-z]+)_?(\\d+)/;\n\n  for ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\n\n    var morph = geometry.morphTargets[ i ];\n    var parts = morph.name.match( pattern );\n\n    if ( parts && parts.length > 1 ) {\n\n      var label = parts[ 1 ];\n      var num = parts[ 2 ];\n\n      if ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\n\n      var animation = animations[ label ];\n\n      if ( i < animation.start ) animation.start = i;\n      if ( i > animation.end ) animation.end = i;\n\n      if ( ! firstAnimation ) firstAnimation = label;\n\n    }\n\n  }\n\n  geometry.firstAnimation = firstAnimation;\n\n};\n\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\n\n  if ( ! this.geometry.animations ) this.geometry.animations = {};\n\n  this.geometry.animations[ label ] = { start: start, end: end };\n\n};\n\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\n\n  var animation = this.geometry.animations[ label ];\n\n  if ( animation ) {\n\n    this.setFrameRange( animation.start, animation.end );\n    this.duration = 1000 * ( ( animation.end - animation.start ) / fps );\n    this.time = 0;\n\n  } else {\n\n    console.warn( 'animation[' + label + '] undefined' );\n\n  }\n\n};\n\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\n\n  var frameTime = this.duration / this.length;\n\n  this.time += this.direction * delta;\n\n  if ( this.mirroredLoop ) {\n\n    if ( this.time > this.duration || this.time < 0 ) {\n\n      this.direction *= - 1;\n\n      if ( this.time > this.duration ) {\n\n        this.time = this.duration;\n        this.directionBackwards = true;\n\n      }\n\n      if ( this.time < 0 ) {\n\n        this.time = 0;\n        this.directionBackwards = false;\n\n      }\n\n    }\n\n  } else {\n\n    this.time = this.time % this.duration;\n\n    if ( this.time < 0 ) this.time += this.duration;\n\n  }\n\n  var keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\n\n  if ( keyframe !== this.currentKeyframe ) {\n\n    this.morphTargetInfluences[ this.lastKeyframe ] = 0;\n    this.morphTargetInfluences[ this.currentKeyframe ] = 1;\n\n    this.morphTargetInfluences[ keyframe ] = 0;\n\n    this.lastKeyframe = this.currentKeyframe;\n    this.currentKeyframe = keyframe;\n\n  }\n\n  var mix = ( this.time % frameTime ) / frameTime;\n\n  if ( this.directionBackwards ) {\n\n    mix = 1 - mix;\n\n  }\n\n  this.morphTargetInfluences[ this.currentKeyframe ] = mix;\n  this.morphTargetInfluences[ this.lastKeyframe ] = 1 - mix;\n\n};\n\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\n\n  var influences = this.morphTargetInfluences;\n\n  for ( var i = 0, l = influences.length; i < l; i ++ ) {\n\n    influences[ i ] = 0;\n\n  }\n\n  if ( a > -1 ) influences[ a ] = 1 - t;\n  if ( b > -1 ) influences[ b ] = t;\n\n};\n\nTHREE.MorphAnimMesh.prototype.clone = function ( object ) {\n\n  if ( object === undefined ) object = new THREE.MorphAnimMesh( this.geometry, this.material );\n\n  object.duration = this.duration;\n  object.mirroredLoop = this.mirroredLoop;\n  object.time = this.time;\n\n  object.lastKeyframe = this.lastKeyframe;\n  object.currentKeyframe = this.currentKeyframe;\n\n  object.direction = this.direction;\n  object.directionBackwards = this.directionBackwards;\n\n  THREE.Mesh.prototype.clone.call( this, object );\n\n  return object;\n\n};\n\n// File:src/objects/LOD.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.LOD = function () {\n\n  THREE.Object3D.call( this );\n\n  this.objects = [];\n\n};\n\n\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\n\n  if ( distance === undefined ) distance = 0;\n\n  distance = Math.abs( distance );\n\n  for ( var l = 0; l < this.objects.length; l ++ ) {\n\n    if ( distance < this.objects[ l ].distance ) {\n\n      break;\n\n    }\n\n  }\n\n  this.objects.splice( l, 0, { distance: distance, object: object } );\n  this.add( object );\n\n};\n\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\n\n  for ( var i = 1, l = this.objects.length; i < l; i ++ ) {\n\n    if ( distance < this.objects[ i ].distance ) {\n\n      break;\n\n    }\n\n  }\n\n  return this.objects[ i - 1 ].object;\n\n};\n\nTHREE.LOD.prototype.raycast = ( function () {\n\n  var matrixPosition = new THREE.Vector3();\n\n  return function ( raycaster, intersects ) {\n\n    matrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n    var distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n    this.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n  };\n\n}() );\n\nTHREE.LOD.prototype.update = function () {\n\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n\n  return function ( camera ) {\n\n    if ( this.objects.length > 1 ) {\n\n      v1.setFromMatrixPosition( camera.matrixWorld );\n      v2.setFromMatrixPosition( this.matrixWorld );\n\n      var distance = v1.distanceTo( v2 );\n\n      this.objects[ 0 ].object.visible = true;\n\n      for ( var i = 1, l = this.objects.length; i < l; i ++ ) {\n\n        if ( distance >= this.objects[ i ].distance ) {\n\n          this.objects[ i - 1 ].object.visible = false;\n          this.objects[ i     ].object.visible = true;\n\n        } else {\n\n          break;\n\n        }\n\n      }\n\n      for ( ; i < l; i ++ ) {\n\n        this.objects[ i ].object.visible = false;\n\n      }\n\n    }\n\n  };\n\n}();\n\nTHREE.LOD.prototype.clone = function ( object ) {\n\n  if ( object === undefined ) object = new THREE.LOD();\n\n  THREE.Object3D.prototype.clone.call( this, object );\n\n  for ( var i = 0, l = this.objects.length; i < l; i ++ ) {\n    var x = this.objects[ i ].object.clone();\n    x.visible = i === 0;\n    object.addLevel( x, this.objects[ i ].distance );\n  }\n\n  return object;\n\n};\n\n// File:src/objects/Sprite.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Sprite = ( function () {\n\n  var vertices = new Float32Array( [ - 0.5, - 0.5, 0, 0.5, - 0.5, 0, 0.5, 0.5, 0 ] );\n\n  var geometry = new THREE.BufferGeometry();\n  geometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\n  return function ( material ) {\n\n    THREE.Object3D.call( this );\n\n    this.geometry = geometry;\n    this.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\n\n  };\n\n} )();\n\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Sprite.prototype.raycast = ( function () {\n\n  var matrixPosition = new THREE.Vector3();\n\n  return function ( raycaster, intersects ) {\n\n    matrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n    var distance = raycaster.ray.distanceToPoint( matrixPosition );\n\n    if ( distance > this.scale.x ) {\n\n      return;\n\n    }\n\n    intersects.push( {\n\n      distance: distance,\n      point: this.position,\n      face: null,\n      object: this\n\n    } );\n\n  };\n\n}() );\n\nTHREE.Sprite.prototype.updateMatrix = function () {\n\n  this.matrix.compose( this.position, this.quaternion, this.scale );\n\n  this.matrixWorldNeedsUpdate = true;\n\n};\n\nTHREE.Sprite.prototype.clone = function ( object ) {\n\n  if ( object === undefined ) object = new THREE.Sprite( this.material );\n\n  THREE.Object3D.prototype.clone.call( this, object );\n\n  return object;\n\n};\n\n// Backwards compatibility\n\nTHREE.Particle = THREE.Sprite;\n\n// File:src/scenes/Scene.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Scene = function () {\n\n  THREE.Object3D.call( this );\n\n  this.fog = null;\n  this.overrideMaterial = null;\n\n  this.autoUpdate = true; // checked by the renderer\n  this.matrixAutoUpdate = false;\n\n  this.__lights = [];\n\n  this.__objectsAdded = [];\n  this.__objectsRemoved = [];\n\n};\n\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Scene.prototype.__addObject = function ( object ) {\n\n  if ( object instanceof THREE.Light ) {\n\n    if ( this.__lights.indexOf( object ) === - 1 ) {\n\n      this.__lights.push( object );\n\n    }\n\n    if ( object.target && object.target.parent === undefined ) {\n\n      this.add( object.target );\n\n    }\n\n  } else if ( ! ( object instanceof THREE.Camera || object instanceof THREE.Bone ) ) {\n\n    this.__objectsAdded.push( object );\n\n    // check if previously removed\n\n    var i = this.__objectsRemoved.indexOf( object );\n\n    if ( i !== - 1 ) {\n\n      this.__objectsRemoved.splice( i, 1 );\n\n    }\n\n  }\n\n  this.dispatchEvent( { type: 'objectAdded', object: object } );\n  object.dispatchEvent( { type: 'addedToScene', scene: this } );\n\n  for ( var c = 0; c < object.children.length; c ++ ) {\n\n    this.__addObject( object.children[ c ] );\n\n  }\n\n};\n\nTHREE.Scene.prototype.__removeObject = function ( object ) {\n\n  if ( object instanceof THREE.Light ) {\n\n    var i = this.__lights.indexOf( object );\n\n    if ( i !== - 1 ) {\n\n      this.__lights.splice( i, 1 );\n\n    }\n\n    if ( object.shadowCascadeArray ) {\n\n      for ( var x = 0; x < object.shadowCascadeArray.length; x ++ ) {\n\n        this.__removeObject( object.shadowCascadeArray[ x ] );\n\n      }\n\n    }\n\n  } else if ( ! ( object instanceof THREE.Camera ) ) {\n\n    this.__objectsRemoved.push( object );\n\n    // check if previously added\n\n    var i = this.__objectsAdded.indexOf( object );\n\n    if ( i !== - 1 ) {\n\n      this.__objectsAdded.splice( i, 1 );\n\n    }\n\n  }\n\n  this.dispatchEvent( { type: 'objectRemoved', object: object } );\n  object.dispatchEvent( { type: 'removedFromScene', scene: this } );\n\n  for ( var c = 0; c < object.children.length; c ++ ) {\n\n    this.__removeObject( object.children[ c ] );\n\n  }\n\n};\n\nTHREE.Scene.prototype.clone = function ( object ) {\n\n  if ( object === undefined ) object = new THREE.Scene();\n\n  THREE.Object3D.prototype.clone.call( this, object );\n\n  if ( this.fog !== null ) object.fog = this.fog.clone();\n  if ( this.overrideMaterial !== null ) object.overrideMaterial = this.overrideMaterial.clone();\n\n  object.autoUpdate = this.autoUpdate;\n  object.matrixAutoUpdate = this.matrixAutoUpdate;\n\n  return object;\n\n};\n\n// File:src/scenes/Fog.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Fog = function ( color, near, far ) {\n\n  this.name = '';\n\n  this.color = new THREE.Color( color );\n\n  this.near = ( near !== undefined ) ? near : 1;\n  this.far = ( far !== undefined ) ? far : 1000;\n\n};\n\nTHREE.Fog.prototype.clone = function () {\n\n  return new THREE.Fog( this.color.getHex(), this.near, this.far );\n\n};\n\n// File:src/scenes/FogExp2.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.FogExp2 = function ( color, density ) {\n\n  this.name = '';\n\n  this.color = new THREE.Color( color );\n  this.density = ( density !== undefined ) ? density : 0.00025;\n\n};\n\nTHREE.FogExp2.prototype.clone = function () {\n\n  return new THREE.FogExp2( this.color.getHex(), this.density );\n\n};\n\n// File:src/renderers/CanvasRenderer.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.CanvasRenderer = function ( parameters ) {\n\n  console.log( 'THREE.CanvasRenderer', THREE.REVISION );\n\n  var smoothstep = THREE.Math.smoothstep;\n\n  parameters = parameters || {};\n\n  var _this = this,\n  _renderData, _elements, _lights,\n  _projector = new THREE.Projector(),\n\n  _canvas = parameters.canvas !== undefined\n       ? parameters.canvas\n       : document.createElement( 'canvas' ),\n\n  _canvasWidth = _canvas.width,\n  _canvasHeight = _canvas.height,\n  _canvasWidthHalf = Math.floor( _canvasWidth / 2 ),\n  _canvasHeightHalf = Math.floor( _canvasHeight / 2 ),\n\n  _viewportX = 0,\n  _viewportY = 0,\n  _viewportWidth = _canvasWidth,\n  _viewportHeight = _canvasHeight,\n\n  _context = _canvas.getContext( '2d', {\n    alpha: parameters.alpha === true\n  } ),\n\n  _clearColor = new THREE.Color( 0x000000 ),\n  _clearAlpha = 0,\n\n  _contextGlobalAlpha = 1,\n  _contextGlobalCompositeOperation = 0,\n  _contextStrokeStyle = null,\n  _contextFillStyle = null,\n  _contextLineWidth = null,\n  _contextLineCap = null,\n  _contextLineJoin = null,\n  _contextLineDash = [],\n\n  _camera,\n\n  _v1, _v2, _v3, _v4,\n  _v5 = new THREE.RenderableVertex(),\n  _v6 = new THREE.RenderableVertex(),\n\n  _v1x, _v1y, _v2x, _v2y, _v3x, _v3y,\n  _v4x, _v4y, _v5x, _v5y, _v6x, _v6y,\n\n  _color = new THREE.Color(),\n  _color1 = new THREE.Color(),\n  _color2 = new THREE.Color(),\n  _color3 = new THREE.Color(),\n  _color4 = new THREE.Color(),\n\n  _diffuseColor = new THREE.Color(),\n  _emissiveColor = new THREE.Color(),\n\n  _lightColor = new THREE.Color(),\n\n  _patterns = {},\n\n  _image, _uvs,\n  _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,\n\n  _clipBox = new THREE.Box2(),\n  _clearBox = new THREE.Box2(),\n  _elemBox = new THREE.Box2(),\n\n  _ambientLight = new THREE.Color(),\n  _directionalLights = new THREE.Color(),\n  _pointLights = new THREE.Color(),\n\n  _vector3 = new THREE.Vector3(), // Needed for PointLight\n  _centroid = new THREE.Vector3(),\n  _normal = new THREE.Vector3(),\n  _normalViewMatrix = new THREE.Matrix3();\n\n  // dash+gap fallbacks for Firefox and everything else\n\n  if ( _context.setLineDash === undefined ) {\n\n    _context.setLineDash = function () {}\n\n  }\n\n  this.domElement = _canvas;\n\n  this.devicePixelRatio = parameters.devicePixelRatio !== undefined\n         ? parameters.devicePixelRatio\n         : self.devicePixelRatio !== undefined\n           ? self.devicePixelRatio\n           : 1;\n\n  this.autoClear = true;\n  this.sortObjects = true;\n  this.sortElements = true;\n\n  this.info = {\n\n    render: {\n\n      vertices: 0,\n      faces: 0\n\n    }\n\n  }\n\n  // WebGLRenderer compatibility\n\n  this.supportsVertexTextures = function () {};\n  this.setFaceCulling = function () {};\n\n  this.setSize = function ( width, height, updateStyle ) {\n\n    _canvasWidth = width * this.devicePixelRatio;\n    _canvasHeight = height * this.devicePixelRatio;\n\n    _canvas.width = _canvasWidth;\n    _canvas.height = _canvasHeight;\n\n    _canvasWidthHalf = Math.floor( _canvasWidth / 2 );\n    _canvasHeightHalf = Math.floor( _canvasHeight / 2 );\n\n    if ( updateStyle !== false ) {\n\n      _canvas.style.width = width + 'px';\n      _canvas.style.height = height + 'px';\n\n    }\n\n    _clipBox.min.set( -_canvasWidthHalf, -_canvasHeightHalf ),\n    _clipBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n    _clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n    _clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n    _contextGlobalAlpha = 1;\n    _contextGlobalCompositeOperation = 0;\n    _contextStrokeStyle = null;\n    _contextFillStyle = null;\n    _contextLineWidth = null;\n    _contextLineCap = null;\n    _contextLineJoin = null;\n\n    this.setViewport( 0, 0, width, height );\n\n  };\n\n  this.setViewport = function ( x, y, width, height ) {\n\n    _viewportX = x * this.devicePixelRatio;\n    _viewportY = y * this.devicePixelRatio;\n\n    _viewportWidth = width * this.devicePixelRatio;\n    _viewportHeight = height * this.devicePixelRatio;\n\n  };\n\n  this.setScissor = function () {};\n  this.enableScissorTest = function () {};\n\n  this.setClearColor = function ( color, alpha ) {\n\n    _clearColor.set( color );\n    _clearAlpha = alpha !== undefined ? alpha : 1;\n\n    _clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n    _clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n  };\n\n  this.setClearColorHex = function ( hex, alpha ) {\n\n    console.warn( 'THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\n    this.setClearColor( hex, alpha );\n\n  };\n\n  this.getClearColor = function () {\n\n    return _clearColor;\n\n  };\n\n  this.getClearAlpha = function () {\n\n    return _clearAlpha;\n\n  };\n\n  this.getMaxAnisotropy = function () {\n\n    return 0;\n\n  };\n\n  this.clear = function () {\n\n    if ( _clearBox.empty() === false ) {\n\n      _clearBox.intersect( _clipBox );\n      _clearBox.expandByScalar( 2 );\n\n      _clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n      _clearBox.min.y =  - _clearBox.min.y + _canvasHeightHalf;\n      _clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n      _clearBox.max.y =  - _clearBox.max.y + _canvasHeightHalf;\n\n      if ( _clearAlpha < 1 ) {\n\n        _context.clearRect(\n          _clearBox.min.x | 0,\n          _clearBox.min.y | 0,\n          ( _clearBox.max.x - _clearBox.min.x ) | 0,\n          ( _clearBox.max.y - _clearBox.min.y ) | 0\n        );\n\n      }\n\n      if ( _clearAlpha > 0 ) {\n\n        setBlending( THREE.NormalBlending );\n        setOpacity( 1 );\n\n        setFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearAlpha + ')' );\n\n        _context.fillRect(\n          _clearBox.min.x | 0,\n          _clearBox.min.y | 0,\n          ( _clearBox.max.x - _clearBox.min.x ) | 0,\n          ( _clearBox.max.y - _clearBox.min.y ) | 0\n        );\n\n      }\n\n      _clearBox.makeEmpty();\n\n    }\n\n  };\n\n  // compatibility\n\n  this.clearColor = function () {};\n  this.clearDepth = function () {};\n  this.clearStencil = function () {};\n\n  this.render = function ( scene, camera ) {\n\n    if ( camera instanceof THREE.Camera === false ) {\n\n      console.error( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );\n      return;\n\n    }\n\n    if ( this.autoClear === true ) this.clear();\n\n    _this.info.render.vertices = 0;\n    _this.info.render.faces = 0;\n\n    _context.setTransform( _viewportWidth / _canvasWidth, 0, 0, - _viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY );\n    _context.translate( _canvasWidthHalf, _canvasHeightHalf );\n\n    _renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\n    _elements = _renderData.elements;\n    _lights = _renderData.lights;\n    _camera = camera;\n\n    _normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\n\n    /* DEBUG\n    setFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\n    _context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\n    */\n\n    calculateLights();\n\n    for ( var e = 0, el = _elements.length; e < el; e ++ ) {\n\n      var element = _elements[ e ];\n\n      var material = element.material;\n\n      if ( material === undefined || material.opacity === 0 ) continue;\n\n      _elemBox.makeEmpty();\n\n      if ( element instanceof THREE.RenderableSprite ) {\n\n        _v1 = element;\n        _v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;\n\n        renderSprite( _v1, element, material );\n\n      } else if ( element instanceof THREE.RenderableLine ) {\n\n        _v1 = element.v1; _v2 = element.v2;\n\n        _v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n        _v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\n        _elemBox.setFromPoints( [\n          _v1.positionScreen,\n          _v2.positionScreen\n        ] );\n\n        if ( _clipBox.isIntersectionBox( _elemBox ) === true ) {\n\n          renderLine( _v1, _v2, element, material );\n\n        }\n\n      } else if ( element instanceof THREE.RenderableFace ) {\n\n        _v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\n\n        if ( _v1.positionScreen.z < - 1 || _v1.positionScreen.z > 1 ) continue;\n        if ( _v2.positionScreen.z < - 1 || _v2.positionScreen.z > 1 ) continue;\n        if ( _v3.positionScreen.z < - 1 || _v3.positionScreen.z > 1 ) continue;\n\n        _v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n        _v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n        _v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;\n\n        if ( material.overdraw > 0 ) {\n\n          expand( _v1.positionScreen, _v2.positionScreen, material.overdraw );\n          expand( _v2.positionScreen, _v3.positionScreen, material.overdraw );\n          expand( _v3.positionScreen, _v1.positionScreen, material.overdraw );\n\n        }\n\n        _elemBox.setFromPoints( [\n          _v1.positionScreen,\n          _v2.positionScreen,\n          _v3.positionScreen\n        ] );\n\n        if ( _clipBox.isIntersectionBox( _elemBox ) === true ) {\n\n          renderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );\n\n        }\n\n      }\n\n      /* DEBUG\n      setLineWidth( 1 );\n      setStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\n      _context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\n      */\n\n      _clearBox.union( _elemBox );\n\n    }\n\n    /* DEBUG\n    setLineWidth( 1 );\n    setStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\n    _context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\n    */\n\n    _context.setTransform( 1, 0, 0, 1, 0, 0 );\n\n  };\n\n  //\n\n  function calculateLights() {\n\n    _ambientLight.setRGB( 0, 0, 0 );\n    _directionalLights.setRGB( 0, 0, 0 );\n    _pointLights.setRGB( 0, 0, 0 );\n\n    for ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n      var light = _lights[ l ];\n      var lightColor = light.color;\n\n      if ( light instanceof THREE.AmbientLight ) {\n\n        _ambientLight.add( lightColor );\n\n      } else if ( light instanceof THREE.DirectionalLight ) {\n\n        // for sprites\n\n        _directionalLights.add( lightColor );\n\n      } else if ( light instanceof THREE.PointLight ) {\n\n        // for sprites\n\n        _pointLights.add( lightColor );\n\n      }\n\n    }\n\n  }\n\n  function calculateLight( position, normal, color ) {\n\n    for ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n      var light = _lights[ l ];\n\n      _lightColor.copy( light.color );\n\n      if ( light instanceof THREE.DirectionalLight ) {\n\n        var lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\n\n        var amount = normal.dot( lightPosition );\n\n        if ( amount <= 0 ) continue;\n\n        amount *= light.intensity;\n\n        color.add( _lightColor.multiplyScalar( amount ) );\n\n      } else if ( light instanceof THREE.PointLight ) {\n\n        var lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );\n\n        var amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\n\n        if ( amount <= 0 ) continue;\n\n        amount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\n\n        if ( amount == 0 ) continue;\n\n        amount *= light.intensity;\n\n        color.add( _lightColor.multiplyScalar( amount ) );\n\n      }\n\n    }\n\n  }\n\n  function renderSprite( v1, element, material ) {\n\n    setOpacity( material.opacity );\n    setBlending( material.blending );\n\n    var scaleX = element.scale.x * _canvasWidthHalf;\n    var scaleY = element.scale.y * _canvasHeightHalf;\n\n    var dist = 0.5 * Math.sqrt( scaleX * scaleX + scaleY * scaleY ); // allow for rotated sprite\n    _elemBox.min.set( v1.x - dist, v1.y - dist );\n    _elemBox.max.set( v1.x + dist, v1.y + dist );\n\n    if ( material instanceof THREE.SpriteMaterial ) {\n\n      var texture = material.map;\n\n      if ( texture !== null && texture.image !== undefined ) {\n\n        if ( texture.hasEventListener( 'update', onTextureUpdate ) === false ) {\n\n          if ( texture.image.width > 0 ) {\n\n            textureToPattern( texture );\n\n          }\n\n          texture.addEventListener( 'update', onTextureUpdate );\n\n        }\n\n        var pattern = _patterns[ texture.id ];\n\n        if ( pattern !== undefined ) {\n\n          setFillStyle( pattern );\n\n        } else {\n\n          setFillStyle( 'rgba( 0, 0, 0, 1 )' );\n\n        }\n\n        //\n\n        var bitmap = texture.image;\n\n        var ox = bitmap.width * texture.offset.x;\n        var oy = bitmap.height * texture.offset.y;\n\n        var sx = bitmap.width * texture.repeat.x;\n        var sy = bitmap.height * texture.repeat.y;\n\n        var cx = scaleX / sx;\n        var cy = scaleY / sy;\n\n        _context.save();\n        _context.translate( v1.x, v1.y );\n        if ( material.rotation !== 0 ) _context.rotate( material.rotation );\n        _context.translate( - scaleX / 2, - scaleY / 2 );\n        _context.scale( cx, cy );\n        _context.translate( - ox, - oy );\n        _context.fillRect( ox, oy, sx, sy );\n        _context.restore();\n\n      } else {\n\n        // no texture\n\n        setFillStyle( material.color.getStyle() );\n\n        _context.save();\n        _context.translate( v1.x, v1.y );\n        if ( material.rotation !== 0 ) _context.rotate( material.rotation );\n        _context.scale( scaleX, - scaleY );\n        _context.fillRect( - 0.5, - 0.5, 1, 1 );\n        _context.restore();\n\n      }\n\n    } else if ( material instanceof THREE.SpriteCanvasMaterial ) {\n\n      setStrokeStyle( material.color.getStyle() );\n      setFillStyle( material.color.getStyle() );\n\n      _context.save();\n      _context.translate( v1.x, v1.y );\n      if ( material.rotation !== 0 ) _context.rotate( material.rotation );\n      _context.scale( scaleX, scaleY );\n\n      material.program( _context );\n\n      _context.restore();\n\n    }\n\n    /* DEBUG\n    setStrokeStyle( 'rgb(255,255,0)' );\n    _context.beginPath();\n    _context.moveTo( v1.x - 10, v1.y );\n    _context.lineTo( v1.x + 10, v1.y );\n    _context.moveTo( v1.x, v1.y - 10 );\n    _context.lineTo( v1.x, v1.y + 10 );\n    _context.stroke();\n    */\n\n  }\n\n  function renderLine( v1, v2, element, material ) {\n\n    setOpacity( material.opacity );\n    setBlending( material.blending );\n\n    _context.beginPath();\n    _context.moveTo( v1.positionScreen.x, v1.positionScreen.y );\n    _context.lineTo( v2.positionScreen.x, v2.positionScreen.y );\n\n    if ( material instanceof THREE.LineBasicMaterial ) {\n\n      setLineWidth( material.linewidth );\n      setLineCap( material.linecap );\n      setLineJoin( material.linejoin );\n\n      if ( material.vertexColors !== THREE.VertexColors ) {\n\n        setStrokeStyle( material.color.getStyle() );\n\n      } else {\n\n        var colorStyle1 = element.vertexColors[ 0 ].getStyle();\n        var colorStyle2 = element.vertexColors[ 1 ].getStyle();\n\n        if ( colorStyle1 === colorStyle2 ) {\n\n          setStrokeStyle( colorStyle1 );\n\n        } else {\n\n          try {\n\n            var grad = _context.createLinearGradient(\n              v1.positionScreen.x,\n              v1.positionScreen.y,\n              v2.positionScreen.x,\n              v2.positionScreen.y\n            );\n            grad.addColorStop( 0, colorStyle1 );\n            grad.addColorStop( 1, colorStyle2 );\n\n          } catch ( exception ) {\n\n            grad = colorStyle1;\n\n          }\n\n          setStrokeStyle( grad );\n\n        }\n\n      }\n\n      _context.stroke();\n      _elemBox.expandByScalar( material.linewidth * 2 );\n\n    } else if ( material instanceof THREE.LineDashedMaterial ) {\n\n      setLineWidth( material.linewidth );\n      setLineCap( material.linecap );\n      setLineJoin( material.linejoin );\n      setStrokeStyle( material.color.getStyle() );\n      setLineDash( [ material.dashSize, material.gapSize ] );\n\n      _context.stroke();\n\n      _elemBox.expandByScalar( material.linewidth * 2 );\n\n      setLineDash( [] );\n\n    }\n\n  }\n\n  function renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {\n\n    _this.info.render.vertices += 3;\n    _this.info.render.faces ++;\n\n    setOpacity( material.opacity );\n    setBlending( material.blending );\n\n    _v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;\n    _v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;\n    _v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;\n\n    drawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );\n\n    if ( ( material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial ) && material.map === null ) {\n\n      _diffuseColor.copy( material.color );\n      _emissiveColor.copy( material.emissive );\n\n      if ( material.vertexColors === THREE.FaceColors ) {\n\n        _diffuseColor.multiply( element.color );\n\n      }\n\n      _color.copy( _ambientLight );\n\n      _centroid.copy( v1.positionWorld ).add( v2.positionWorld ).add( v3.positionWorld ).divideScalar( 3 );\n\n      calculateLight( _centroid, element.normalModel, _color );\n\n      _color.multiply( _diffuseColor ).add( _emissiveColor );\n\n      material.wireframe === true\n         ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n         : fillPath( _color );\n\n    } else if ( material instanceof THREE.MeshBasicMaterial ||\n            material instanceof THREE.MeshLambertMaterial ||\n            material instanceof THREE.MeshPhongMaterial ) {\n\n      if ( material.map !== null ) {\n\n        if ( material.map.mapping instanceof THREE.UVMapping ) {\n\n          _uvs = element.uvs;\n          patternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );\n\n        }\n\n      } else if ( material.envMap !== null ) {\n\n        if ( material.envMap.mapping instanceof THREE.SphericalReflectionMapping ) {\n\n          _normal.copy( element.vertexNormalsModel[ uv1 ] ).applyMatrix3( _normalViewMatrix );\n          _uv1x = 0.5 * _normal.x + 0.5;\n          _uv1y = 0.5 * _normal.y + 0.5;\n\n          _normal.copy( element.vertexNormalsModel[ uv2 ] ).applyMatrix3( _normalViewMatrix );\n          _uv2x = 0.5 * _normal.x + 0.5;\n          _uv2y = 0.5 * _normal.y + 0.5;\n\n          _normal.copy( element.vertexNormalsModel[ uv3 ] ).applyMatrix3( _normalViewMatrix );\n          _uv3x = 0.5 * _normal.x + 0.5;\n          _uv3y = 0.5 * _normal.y + 0.5;\n\n          patternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );\n\n        } else if ( material.envMap.mapping instanceof THREE.SphericalRefractionMapping ) {\n\n          _normal.copy( element.vertexNormalsModel[ uv1 ] ).applyMatrix3( _normalViewMatrix );\n          _uv1x = - 0.5 * _normal.x + 0.5;\n          _uv1y = - 0.5 * _normal.y + 0.5;\n\n          _normal.copy( element.vertexNormalsModel[ uv2 ] ).applyMatrix3( _normalViewMatrix );\n          _uv2x = - 0.5 * _normal.x + 0.5;\n          _uv2y = - 0.5 * _normal.y + 0.5;\n\n          _normal.copy( element.vertexNormalsModel[ uv3 ] ).applyMatrix3( _normalViewMatrix );\n          _uv3x = - 0.5 * _normal.x + 0.5;\n          _uv3y = - 0.5 * _normal.y + 0.5;\n\n          patternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );\n\n        }\n\n\n      } else {\n\n        _color.copy( material.color );\n\n        if ( material.vertexColors === THREE.FaceColors ) {\n\n          _color.multiply( element.color );\n\n        }\n\n        material.wireframe === true\n           ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n           : fillPath( _color );\n\n      }\n\n    } else if ( material instanceof THREE.MeshDepthMaterial ) {\n\n      _color.r = _color.g = _color.b = 1 - smoothstep( v1.positionScreen.z * v1.positionScreen.w, _camera.near, _camera.far );\n\n      material.wireframe === true\n           ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n           : fillPath( _color );\n\n    } else if ( material instanceof THREE.MeshNormalMaterial ) {\n\n      _normal.copy( element.normalModel ).applyMatrix3( _normalViewMatrix );\n\n      _color.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\n\n      material.wireframe === true\n         ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n         : fillPath( _color );\n\n    } else {\n\n      _color.setRGB( 1, 1, 1 );\n\n      material.wireframe === true\n         ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n         : fillPath( _color );\n\n    }\n\n  }\n\n  //\n\n  function drawTriangle( x0, y0, x1, y1, x2, y2 ) {\n\n    _context.beginPath();\n    _context.moveTo( x0, y0 );\n    _context.lineTo( x1, y1 );\n    _context.lineTo( x2, y2 );\n    _context.closePath();\n\n  }\n\n  function strokePath( color, linewidth, linecap, linejoin ) {\n\n    setLineWidth( linewidth );\n    setLineCap( linecap );\n    setLineJoin( linejoin );\n    setStrokeStyle( color.getStyle() );\n\n    _context.stroke();\n\n    _elemBox.expandByScalar( linewidth * 2 );\n\n  }\n\n  function fillPath( color ) {\n\n    setFillStyle( color.getStyle() );\n    _context.fill();\n\n  }\n\n  function onTextureUpdate ( event ) {\n\n    textureToPattern( event.target );\n\n  }\n\n  function textureToPattern( texture ) {\n\n    if ( texture instanceof THREE.CompressedTexture ) return;\n\n    var repeatX = texture.wrapS === THREE.RepeatWrapping;\n    var repeatY = texture.wrapT === THREE.RepeatWrapping;\n\n    var image = texture.image;\n\n    var canvas = document.createElement( 'canvas' );\n    canvas.width = image.width;\n    canvas.height = image.height;\n\n    var context = canvas.getContext( '2d' );\n    context.setTransform( 1, 0, 0, - 1, 0, image.height );\n    context.drawImage( image, 0, 0 );\n\n    _patterns[ texture.id ] = _context.createPattern(\n      canvas, repeatX === true && repeatY === true\n         ? 'repeat'\n         : repeatX === true && repeatY === false\n           ? 'repeat-x'\n           : repeatX === false && repeatY === true\n             ? 'repeat-y'\n             : 'no-repeat'\n    );\n\n  }\n\n  function patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {\n\n    if ( texture instanceof THREE.DataTexture ) return;\n\n    if ( texture.hasEventListener( 'update', onTextureUpdate ) === false ) {\n\n      if ( texture.image !== undefined && texture.image.width > 0 ) {\n\n        textureToPattern( texture );\n\n      }\n\n      texture.addEventListener( 'update', onTextureUpdate );\n\n    }\n\n    var pattern = _patterns[ texture.id ];\n\n    if ( pattern !== undefined ) {\n\n      setFillStyle( pattern );\n\n    } else {\n\n      setFillStyle( 'rgba(0,0,0,1)' );\n      _context.fill();\n\n      return;\n\n    }\n\n    // http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n    var a, b, c, d, e, f, det, idet,\n    offsetX = texture.offset.x / texture.repeat.x,\n    offsetY = texture.offset.y / texture.repeat.y,\n    width = texture.image.width * texture.repeat.x,\n    height = texture.image.height * texture.repeat.y;\n\n    u0 = ( u0 + offsetX ) * width;\n    v0 = ( v0 + offsetY ) * height;\n\n    u1 = ( u1 + offsetX ) * width;\n    v1 = ( v1 + offsetY ) * height;\n\n    u2 = ( u2 + offsetX ) * width;\n    v2 = ( v2 + offsetY ) * height;\n\n    x1 -= x0; y1 -= y0;\n    x2 -= x0; y2 -= y0;\n\n    u1 -= u0; v1 -= v0;\n    u2 -= u0; v2 -= v0;\n\n    det = u1 * v2 - u2 * v1;\n\n    if ( det === 0 ) return;\n\n    idet = 1 / det;\n\n    a = ( v2 * x1 - v1 * x2 ) * idet;\n    b = ( v2 * y1 - v1 * y2 ) * idet;\n    c = ( u1 * x2 - u2 * x1 ) * idet;\n    d = ( u1 * y2 - u2 * y1 ) * idet;\n\n    e = x0 - a * u0 - c * v0;\n    f = y0 - b * u0 - d * v0;\n\n    _context.save();\n    _context.transform( a, b, c, d, e, f );\n    _context.fill();\n    _context.restore();\n\n  }\n\n  function clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {\n\n    // http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n    var a, b, c, d, e, f, det, idet,\n    width = image.width - 1,\n    height = image.height - 1;\n\n    u0 *= width; v0 *= height;\n    u1 *= width; v1 *= height;\n    u2 *= width; v2 *= height;\n\n    x1 -= x0; y1 -= y0;\n    x2 -= x0; y2 -= y0;\n\n    u1 -= u0; v1 -= v0;\n    u2 -= u0; v2 -= v0;\n\n    det = u1 * v2 - u2 * v1;\n\n    idet = 1 / det;\n\n    a = ( v2 * x1 - v1 * x2 ) * idet;\n    b = ( v2 * y1 - v1 * y2 ) * idet;\n    c = ( u1 * x2 - u2 * x1 ) * idet;\n    d = ( u1 * y2 - u2 * y1 ) * idet;\n\n    e = x0 - a * u0 - c * v0;\n    f = y0 - b * u0 - d * v0;\n\n    _context.save();\n    _context.transform( a, b, c, d, e, f );\n    _context.clip();\n    _context.drawImage( image, 0, 0 );\n    _context.restore();\n\n  }\n\n  // Hide anti-alias gaps\n\n  function expand( v1, v2, pixels ) {\n\n    var x = v2.x - v1.x, y = v2.y - v1.y,\n    det = x * x + y * y, idet;\n\n    if ( det === 0 ) return;\n\n    idet = pixels / Math.sqrt( det );\n\n    x *= idet; y *= idet;\n\n    v2.x += x; v2.y += y;\n    v1.x -= x; v1.y -= y;\n\n  }\n\n  // Context cached methods.\n\n  function setOpacity( value ) {\n\n    if ( _contextGlobalAlpha !== value ) {\n\n      _context.globalAlpha = value;\n      _contextGlobalAlpha = value;\n\n    }\n\n  }\n\n  function setBlending( value ) {\n\n    if ( _contextGlobalCompositeOperation !== value ) {\n\n      if ( value === THREE.NormalBlending ) {\n\n        _context.globalCompositeOperation = 'source-over';\n\n      } else if ( value === THREE.AdditiveBlending ) {\n\n        _context.globalCompositeOperation = 'lighter';\n\n      } else if ( value === THREE.SubtractiveBlending ) {\n\n        _context.globalCompositeOperation = 'darker';\n\n      }\n\n      _contextGlobalCompositeOperation = value;\n\n    }\n\n  }\n\n  function setLineWidth( value ) {\n\n    if ( _contextLineWidth !== value ) {\n\n      _context.lineWidth = value;\n      _contextLineWidth = value;\n\n    }\n\n  }\n\n  function setLineCap( value ) {\n\n    // \"butt\", \"round\", \"square\"\n\n    if ( _contextLineCap !== value ) {\n\n      _context.lineCap = value;\n      _contextLineCap = value;\n\n    }\n\n  }\n\n  function setLineJoin( value ) {\n\n    // \"round\", \"bevel\", \"miter\"\n\n    if ( _contextLineJoin !== value ) {\n\n      _context.lineJoin = value;\n      _contextLineJoin = value;\n\n    }\n\n  }\n\n  function setStrokeStyle( value ) {\n\n    if ( _contextStrokeStyle !== value ) {\n\n      _context.strokeStyle = value;\n      _contextStrokeStyle = value;\n\n    }\n\n  }\n\n  function setFillStyle( value ) {\n\n    if ( _contextFillStyle !== value ) {\n\n      _context.fillStyle = value;\n      _contextFillStyle = value;\n\n    }\n\n  }\n\n  function setLineDash( value ) {\n\n    if ( _contextLineDash.length !== value.length ) {\n\n      _context.setLineDash( value );\n      _contextLineDash = value;\n\n    }\n\n  }\n\n};\n\n// File:src/renderers/shaders/ShaderChunk.js\n\nTHREE.ShaderChunk = {};\n\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\n\nTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n  if ( gl_FragColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\n\nTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n  vLightBack = vec3( 0.0 );\\n\\n#endif\\n\\ntransformedNormal = normalize( transformedNormal );\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n  vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\n vec3 dirVector = normalize( lDirection.xyz );\\n\\n float dotProduct = dot( transformedNormal, dirVector );\\n vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n  #ifdef DOUBLE_SIDED\\n\\n   vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n   #ifdef WRAP_AROUND\\n\\n      vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n   #endif\\n\\n  #endif\\n\\n  #ifdef WRAP_AROUND\\n\\n    vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n    directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\\n\\n   #ifdef DOUBLE_SIDED\\n\\n     directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\\n\\n   #endif\\n\\n  #endif\\n\\n  vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\\n\\n  #ifdef DOUBLE_SIDED\\n\\n   vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\\n\\n #endif\\n\\n}\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n    vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n   vec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n    float lDistance = 1.0;\\n    if ( pointLightDistance[ i ] > 0.0 )\\n      lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\n\\n    lVector = normalize( lVector );\\n   float dotProduct = dot( transformedNormal, lVector );\\n\\n   vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n    #ifdef DOUBLE_SIDED\\n\\n     vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n     #ifdef WRAP_AROUND\\n\\n        vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n     #endif\\n\\n    #endif\\n\\n    #ifdef WRAP_AROUND\\n\\n      vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n      pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\\n\\n     #ifdef DOUBLE_SIDED\\n\\n       pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\\n\\n     #endif\\n\\n    #endif\\n\\n    vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\\n\\n    #ifdef DOUBLE_SIDED\\n\\n     vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\\n\\n   #endif\\n\\n  }\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n  for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n   vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n    vec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n    float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\\n\\n   if ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n      spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n     float lDistance = 1.0;\\n      if ( spotLightDistance[ i ] > 0.0 )\\n       lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\\n\\n     lVector = normalize( lVector );\\n\\n     float dotProduct = dot( transformedNormal, lVector );\\n     vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n     #ifdef DOUBLE_SIDED\\n\\n       vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n        #ifdef WRAP_AROUND\\n\\n          vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n        #endif\\n\\n      #endif\\n\\n      #ifdef WRAP_AROUND\\n\\n        vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n       spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\\n\\n        #ifdef DOUBLE_SIDED\\n\\n         spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\\n\\n        #endif\\n\\n      #endif\\n\\n      vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\\n\\n     #ifdef DOUBLE_SIDED\\n\\n       vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\\n\\n      #endif\\n\\n    }\\n\\n }\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n  for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n   vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\\n    vec3 lVector = normalize( lDirection.xyz );\\n\\n   float dotProduct = dot( transformedNormal, lVector );\\n\\n   float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n   float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\\n\\n    vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n   #ifdef DOUBLE_SIDED\\n\\n     vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n    #endif\\n\\n  }\\n\\n#endif\\n\\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\\n\\n#ifdef DOUBLE_SIDED\\n\\n vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n  uniform sampler2D map;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/default_vertex.glsl\n\nTHREE.ShaderChunk[ 'default_vertex'] = \"vec4 mvPosition;\\n\\n#ifdef USE_SKINNING\\n\\n mvPosition = modelViewMatrix * skinned;\\n\\n#endif\\n\\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\\n\\n  mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\\n\\n#endif\\n\\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\\n\\n mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\";\n\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n  varying vec2 vUv;\\n\\n#endif\\n\\n#ifdef USE_MAP\\n\\n uniform sampler2D map;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\n\nTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n  mat4 skinMatrix = mat4( 0.0 );\\n  skinMatrix += skinWeight.x * boneMatX;\\n  skinMatrix += skinWeight.y * boneMatY;\\n  skinMatrix += skinWeight.z * boneMatZ;\\n  skinMatrix += skinWeight.w * boneMatW;\\n  skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n  #ifdef USE_MORPHNORMALS\\n\\n vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\\n\\n #else\\n\\n vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\\n\\n  #endif\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n #ifdef USE_LOGDEPTHBUF_EXT\\n\\n    varying float vFragDepth;\\n\\n #endif\\n\\n  uniform float logDepthBufFC;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'lightmap_pars_vertex'] = \"#ifdef USE_LIGHTMAP\\n\\n varying vec2 vUv2;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\n\nTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"vec3 normal = normalize( vNormal );\\nvec3 viewPosition = normalize( vViewPosition );\\n\\n#ifdef DOUBLE_SIDED\\n\\n  normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n normal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n vec3 pointDiffuse = vec3( 0.0 );\\n  vec3 pointSpecular = vec3( 0.0 );\\n\\n for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n   vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n   vec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n   float lDistance = 1.0;\\n    if ( pointLightDistance[ i ] > 0.0 )\\n      lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\n\\n    lVector = normalize( lVector );\\n\\n       // diffuse\\n\\n    float dotProduct = dot( normal, lVector );\\n\\n    #ifdef WRAP_AROUND\\n\\n      float pointDiffuseWeightFull = max( dotProduct, 0.0 );\\n      float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n      vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\\n\\n   #else\\n\\n     float pointDiffuseWeight = max( dotProduct, 0.0 );\\n\\n    #endif\\n\\n    pointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\\n\\n        // specular\\n\\n   vec3 pointHalfVector = normalize( lVector + viewPosition );\\n   float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\\n    float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\\n\\n    float specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n    vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\\n   pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\\n\\n }\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n  vec3 spotDiffuse = vec3( 0.0 );\\n vec3 spotSpecular = vec3( 0.0 );\\n\\n  for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n    vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n    vec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n   float lDistance = 1.0;\\n    if ( spotLightDistance[ i ] > 0.0 )\\n     lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\\n\\n   lVector = normalize( lVector );\\n\\n   float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\\n\\n    if ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n      spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n         // diffuse\\n\\n      float dotProduct = dot( normal, lVector );\\n\\n      #ifdef WRAP_AROUND\\n\\n        float spotDiffuseWeightFull = max( dotProduct, 0.0 );\\n       float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n       vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\\n\\n      #else\\n\\n       float spotDiffuseWeight = max( dotProduct, 0.0 );\\n\\n     #endif\\n\\n      spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\\n\\n          // specular\\n\\n     vec3 spotHalfVector = normalize( lVector + viewPosition );\\n      float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\\n      float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\\n\\n      float specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n      vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\\n      spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\\n\\n    }\\n\\n }\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n vec3 dirDiffuse = vec3( 0.0 );\\n  vec3 dirSpecular = vec3( 0.0 );\\n\\n for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\n   vec3 dirVector = normalize( lDirection.xyz );\\n\\n       // diffuse\\n\\n    float dotProduct = dot( normal, dirVector );\\n\\n    #ifdef WRAP_AROUND\\n\\n      float dirDiffuseWeightFull = max( dotProduct, 0.0 );\\n      float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n      vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\\n\\n   #else\\n\\n     float dirDiffuseWeight = max( dotProduct, 0.0 );\\n\\n    #endif\\n\\n    dirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\\n\\n    // specular\\n\\n   vec3 dirHalfVector = normalize( dirVector + viewPosition );\\n   float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\\n    float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\\n\\n    /*\\n    // fresnel term from skin shader\\n    const float F0 = 0.128;\\n\\n   float base = 1.0 - dot( viewPosition, dirHalfVector );\\n    float exponential = pow( base, 5.0 );\\n\\n   float fresnel = exponential + F0 * ( 1.0 - exponential );\\n   */\\n\\n    /*\\n    // fresnel term from fresnel shader\\n   const float mFresnelBias = 0.08;\\n    const float mFresnelScale = 0.3;\\n    const float mFresnelPower = 5.0;\\n\\n    float fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\\n   */\\n\\n    float specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n    //    dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\\n\\n    vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\\n   dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\\n\\n\\n }\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n  vec3 hemiDiffuse = vec3( 0.0 );\\n vec3 hemiSpecular = vec3( 0.0 );\\n\\n  for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n   vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\\n    vec3 lVector = normalize( lDirection.xyz );\\n\\n   // diffuse\\n\\n    float dotProduct = dot( normal, lVector );\\n    float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n   vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n   hemiDiffuse += diffuse * hemiColor;\\n\\n   // specular (sky light)\\n\\n   vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\\n   float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\\n    float hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\\n\\n    // specular (ground light)\\n\\n    vec3 lVectorGround = -lVector;\\n\\n    vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\\n    float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\\n    float hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\\n\\n    float dotProductGround = dot( normal, lVectorGround );\\n\\n    float specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n    vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\\n    vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\\n    hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\\n\\n  }\\n\\n#endif\\n\\nvec3 totalDiffuse = vec3( 0.0 );\\nvec3 totalSpecular = vec3( 0.0 );\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n  totalDiffuse += dirDiffuse;\\n totalSpecular += dirSpecular;\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n  totalDiffuse += hemiDiffuse;\\n  totalSpecular += hemiSpecular;\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n  totalDiffuse += pointDiffuse;\\n totalSpecular += pointSpecular;\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n  totalDiffuse += spotDiffuse;\\n  totalSpecular += spotSpecular;\\n\\n#endif\\n\\n#ifdef METAL\\n\\n  gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\\n\\n#else\\n\\n gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n uniform vec3 fogColor;\\n\\n  #ifdef FOG_EXP2\\n\\n   uniform float fogDensity;\\n\\n #else\\n\\n   uniform float fogNear;\\n    uniform float fogFar;\\n #endif\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\n\nTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n vec3 morphedNormal = vec3( 0.0 );\\n\\n morphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n  morphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n  morphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n  morphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n  morphedNormal += normal;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n uniform float reflectivity;\\n uniform samplerCube envMap;\\n uniform float flipEnvMap;\\n uniform int combine;\\n\\n  #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\n    uniform bool useRefract;\\n    uniform float refractionRatio;\\n\\n  #else\\n\\n   varying vec3 vReflect;\\n\\n  #endif\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\n\nTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n  gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n uniform sampler2D normalMap;\\n  uniform vec2 normalScale;\\n\\n     // Per-Pixel Tangent Space Normal Mapping\\n     // http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n    vec3 q0 = dFdx( eye_pos.xyz );\\n    vec3 q1 = dFdy( eye_pos.xyz );\\n    vec2 st0 = dFdx( vUv.st );\\n    vec2 st1 = dFdy( vUv.st );\\n\\n    vec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n    vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n   vec3 N = normalize( surf_norm );\\n\\n    vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n    mapN.xy = normalScale * mapN.xy;\\n    mat3 tsn = mat3( S, T, N );\\n   return normalize( tsn * mapN );\\n\\n }\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n  varying vec3 vWorldPosition;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n varying vec2 vUv2;\\n  uniform sampler2D lightMap;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\n\nTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n  for( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n   vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n  }\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\n\nTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n vWorldPosition = worldPosition.xyz;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\n\nTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n  vec4 texelColor = texture2D( map, vUv );\\n\\n  #ifdef GAMMA_INPUT\\n\\n    texelColor.xyz *= texelColor.xyz;\\n\\n #endif\\n\\n  gl_FragColor = gl_FragColor * texelColor;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/lightmap_vertex.glsl\n\nTHREE.ShaderChunk[ 'lightmap_vertex'] = \"#ifdef USE_LIGHTMAP\\n\\n  vUv2 = uv2;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\n\nTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n varying vec3 vColor;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\n\nTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n  #ifdef GAMMA_INPUT\\n\\n    vColor = color * color;\\n\\n #else\\n\\n   vColor = color;\\n\\n #endif\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\n\nTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n  #ifdef USE_MORPHTARGETS\\n\\n vec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\\n\\n  #else\\n\\n vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\\n\\n #endif\\n\\n  vec4 skinned = vec4( 0.0 );\\n skinned += boneMatX * skinVertex * skinWeight.x;\\n  skinned += boneMatY * skinVertex * skinWeight.y;\\n  skinned += boneMatZ * skinVertex * skinWeight.z;\\n  skinned += boneMatW * skinVertex * skinWeight.w;\\n  skinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\\n\\n varying vec3 vReflect;\\n\\n  uniform float refractionRatio;\\n  uniform bool useRefract;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\n\nTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"#ifdef GAMMA_OUTPUT\\n\\n gl_FragColor.xyz = sqrt( gl_FragColor.xyz );\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n varying vec3 vColor;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambient;\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\n\\nuniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n  uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n  uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n  uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n  uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n  uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n uniform vec3 wrapRGB;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/map_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'map_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n  varying vec2 vUv;\\n uniform vec4 offsetRepeat;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\n\nTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n  vec3 reflectVec;\\n\\n  #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\n    vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n   // http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\n    // Transforming Normal Vectors with the Inverse Transformation\\n\\n    vec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\\n\\n   if ( useRefract ) {\\n\\n     reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n   } else { \\n\\n     reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n    }\\n\\n #else\\n\\n   reflectVec = vReflect;\\n\\n  #endif\\n\\n  #ifdef DOUBLE_SIDED\\n\\n   float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n    vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n  #else\\n\\n   vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n #endif\\n\\n  #ifdef GAMMA_INPUT\\n\\n    cubeColor.xyz *= cubeColor.xyz;\\n\\n #endif\\n\\n  if ( combine == 1 ) {\\n\\n   gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\\n\\n } else if ( combine == 2 ) {\\n\\n    gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\\n\\n  } else {\\n\\n    gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\\n\\n  }\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n uniform sampler2D specularMap;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\n\nTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n  gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\\n\\n #ifdef USE_LOGDEPTHBUF_EXT\\n\\n    vFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n    gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n  #endif\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n  #ifndef USE_MORPHNORMALS\\n\\n  uniform float morphTargetInfluences[ 8 ];\\n\\n #else\\n\\n uniform float morphTargetInfluences[ 4 ];\\n\\n #endif\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\n\nTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n vec4 texelSpecular = texture2D( specularMap, vUv );\\n specularStrength = texelSpecular.r;\\n\\n#else\\n\\n  specularStrength = 1.0;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\n\nTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n  #ifdef USE_LOGDEPTHBUF_EXT\\n\\n    float depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n #else\\n\\n   float depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n  #endif\\n\\n  #ifdef FOG_EXP2\\n\\n   const float LOG2 = 1.442695;\\n    float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\n   fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n\\n #else\\n\\n   float fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n #endif\\n  \\n  gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n uniform sampler2D bumpMap;\\n  uniform float bumpScale;\\n\\n      // Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n     //  http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n      // Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n vec2 dHdxy_fwd() {\\n\\n    vec2 dSTdx = dFdx( vUv );\\n   vec2 dSTdy = dFdy( vUv );\\n\\n   float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n    float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n    float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n    return vec2( dBx, dBy );\\n\\n  }\\n\\n vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n    vec3 vSigmaX = dFdx( surf_pos );\\n    vec3 vSigmaY = dFdy( surf_pos );\\n    vec3 vN = surf_norm;    // normalized\\n\\n   vec3 R1 = cross( vSigmaY, vN );\\n   vec3 R2 = cross( vN, vSigmaX );\\n\\n   float fDet = dot( vSigmaX, R1 );\\n\\n    vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n    return normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n  }\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\n\nTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"vec3 objectNormal;\\n\\n#ifdef USE_SKINNING\\n\\n objectNormal = skinnedNormal.xyz;\\n\\n#endif\\n\\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\\n\\n  objectNormal = morphedNormal;\\n\\n#endif\\n\\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\\n\\n  objectNormal = normal;\\n\\n#endif\\n\\n#ifdef FLIP_SIDED\\n\\n objectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n  uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n  uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n  uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n  uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n  uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\\n uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n varying vec3 vWorldPosition;\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n  uniform vec3 wrapRGB;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\nvarying vec3 vNormal;\";\n\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\n\nTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n  mat4 boneMatX = getBoneMatrix( skinIndex.x );\\n mat4 boneMatY = getBoneMatrix( skinIndex.y );\\n mat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n mat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/map_vertex.glsl\n\nTHREE.ShaderChunk[ 'map_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\n\nTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n  gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n varying vec4 vShadowCoord[ MAX_SHADOWS ];\\n uniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\n\nTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n  gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\n\nTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n vec3 morphed = vec3( 0.0 );\\n morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n  morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n  morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n  morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n  #ifndef USE_MORPHNORMALS\\n\\n  morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n  morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n  morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n  morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n  #endif\\n\\n  morphed += position;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\n\nTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\\n\\n  vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\\n worldNormal = normalize( worldNormal );\\n\\n vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n  if ( useRefract ) {\\n\\n   vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n } else {\\n\\n    vReflect = reflect( cameraToVertex, worldNormal );\\n\\n  }\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\n\nTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n  #ifdef SHADOWMAP_DEBUG\\n\\n    vec3 frustumColors[3];\\n    frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n   frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n   frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n #endif\\n\\n  #ifdef SHADOWMAP_CASCADE\\n\\n    int inFrustumCount = 0;\\n\\n #endif\\n\\n  float fDepth;\\n vec3 shadowColor = vec3( 1.0 );\\n\\n for( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n   vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n       // if ( something && something ) breaks ATI OpenGL shader compiler\\n        // if ( all( something, something ) ) using this instead\\n\\n    bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n    bool inFrustum = all( inFrustumVec );\\n\\n       // don't shadow pixels outside of light frustum\\n       // use just first frustum (for cascades)\\n        // don't shadow pixels behind far plane of light frustum\\n\\n    #ifdef SHADOWMAP_CASCADE\\n\\n      inFrustumCount += int( inFrustum );\\n     bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\\n\\n   #else\\n\\n     bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n    #endif\\n\\n    bool frustumTest = all( frustumTestVec );\\n\\n   if ( frustumTest ) {\\n\\n      shadowCoord.z += shadowBias[ i ];\\n\\n     #if defined( SHADOWMAP_TYPE_PCF )\\n\\n           // Percentage-close filtering\\n           // (9 pixel kernel)\\n           // http://fabiensanglard.net/shadowmappingPCF/\\n\\n        float shadow = 0.0;\\n\\n   /*\\n            // nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n            // must enroll loop manually\\n\\n        for ( float y = -1.25; y <= 1.25; y += 1.25 )\\n         for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n           vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n                // doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n               //vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n           float fDepth = unpackDepth( rgbaDepth );\\n\\n            if ( fDepth < shadowCoord.z )\\n             shadow += 1.0;\\n\\n        }\\n\\n       shadow /= 9.0;\\n\\n    */\\n\\n        const float shadowDelta = 1.0 / 9.0;\\n\\n        float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n        float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n        float dx0 = -1.25 * xPixelOffset;\\n       float dy0 = -1.25 * yPixelOffset;\\n       float dx1 = 1.25 * xPixelOffset;\\n        float dy1 = 1.25 * yPixelOffset;\\n\\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n        if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n        shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n     #elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n            // Percentage-close filtering\\n           // (9 pixel kernel)\\n           // http://fabiensanglard.net/shadowmappingPCF/\\n\\n        float shadow = 0.0;\\n\\n       float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n        float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n        float dx0 = -1.0 * xPixelOffset;\\n        float dy0 = -1.0 * yPixelOffset;\\n        float dx1 = 1.0 * xPixelOffset;\\n       float dy1 = 1.0 * yPixelOffset;\\n\\n       mat3 shadowKernel;\\n        mat3 depthKernel;\\n\\n       depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n        depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n        depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n        depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n        depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n       depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n        depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n        depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n        depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n        vec3 shadowZ = vec3( shadowCoord.z );\\n       shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n       shadowKernel[0] *= vec3(0.25);\\n\\n        shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n       shadowKernel[1] *= vec3(0.25);\\n\\n        shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n       shadowKernel[2] *= vec3(0.25);\\n\\n        vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n       shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n       shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n       vec4 shadowValues;\\n        shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n        shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n        shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n        shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n        shadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n        shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n     #else\\n\\n       vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n       float fDepth = unpackDepth( rgbaDepth );\\n\\n        if ( fDepth < shadowCoord.z )\\n\\n   // spot with multiple shadows is darker\\n\\n         shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n    // spot with multiple shadows has the same color as single shadow spot\\n\\n    //          shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n      #endif\\n\\n    }\\n\\n\\n   #ifdef SHADOWMAP_DEBUG\\n\\n      #ifdef SHADOWMAP_CASCADE\\n\\n        if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\\n\\n     #else\\n\\n       if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\\n\\n      #endif\\n\\n    #endif\\n\\n  }\\n\\n #ifdef GAMMA_OUTPUT\\n\\n   shadowColor *= shadowColor;\\n\\n #endif\\n\\n  gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\n\nTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n #ifdef USE_SKINNING\\n\\n   vec4 worldPosition = modelMatrix * skinned;\\n\\n #endif\\n\\n  #if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\\n\\n    vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\\n\\n  #endif\\n\\n  #if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\\n\\n    vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\\n\\n #endif\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n uniform sampler2D shadowMap[ MAX_SHADOWS ];\\n uniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n  uniform float shadowDarkness[ MAX_SHADOWS ];\\n  uniform float shadowBias[ MAX_SHADOWS ];\\n\\n  varying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n float unpackDepth( const in vec4 rgba_depth ) {\\n\\n   const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n    float depth = dot( rgba_depth, bit_shift );\\n   return depth;\\n\\n }\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n uniform mat4 bindMatrix;\\n  uniform mat4 bindMatrixInverse;\\n\\n #ifdef BONE_TEXTURE\\n\\n   uniform sampler2D boneTexture;\\n    uniform int boneTextureWidth;\\n   uniform int boneTextureHeight;\\n\\n    mat4 getBoneMatrix( const in float i ) {\\n\\n      float j = i * 4.0;\\n      float x = mod( j, float( boneTextureWidth ) );\\n      float y = floor( j / float( boneTextureWidth ) );\\n\\n     float dx = 1.0 / float( boneTextureWidth );\\n     float dy = 1.0 / float( boneTextureHeight );\\n\\n      y = dy * ( y + 0.5 );\\n\\n     vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n      vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n      vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n      vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n      mat4 bone = mat4( v1, v2, v3, v4 );\\n\\n     return bone;\\n\\n    }\\n\\n #else\\n\\n   uniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n   mat4 getBoneMatrix( const in float i ) {\\n\\n      mat4 bone = boneGlobalMatrices[ int(i) ];\\n     return bone;\\n\\n    }\\n\\n #endif\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n uniform float logDepthBufFC;\\n\\n  #ifdef USE_LOGDEPTHBUF_EXT\\n\\n    #extension GL_EXT_frag_depth : enable\\n   varying float vFragDepth;\\n\\n #endif\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\n\nTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n  gl_FragColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n uniform sampler2D alphaMap;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/UniformsUtils.js\n\n/**\n * Uniform Utilities\n */\n\nTHREE.UniformsUtils = {\n\n  merge: function ( uniforms ) {\n\n    var u, p, tmp, merged = {};\n\n    for ( u = 0; u < uniforms.length; u ++ ) {\n\n      tmp = this.clone( uniforms[ u ] );\n\n      for ( p in tmp ) {\n\n        merged[ p ] = tmp[ p ];\n\n      }\n\n    }\n\n    return merged;\n\n  },\n\n  clone: function ( uniforms_src ) {\n\n    var u, p, parameter, parameter_src, uniforms_dst = {};\n\n    for ( u in uniforms_src ) {\n\n      uniforms_dst[ u ] = {};\n\n      for ( p in uniforms_src[ u ] ) {\n\n        parameter_src = uniforms_src[ u ][ p ];\n\n        if ( parameter_src instanceof THREE.Color ||\n           parameter_src instanceof THREE.Vector2 ||\n           parameter_src instanceof THREE.Vector3 ||\n           parameter_src instanceof THREE.Vector4 ||\n           parameter_src instanceof THREE.Matrix4 ||\n           parameter_src instanceof THREE.Texture ) {\n\n          uniforms_dst[ u ][ p ] = parameter_src.clone();\n\n        } else if ( parameter_src instanceof Array ) {\n\n          uniforms_dst[ u ][ p ] = parameter_src.slice();\n\n        } else {\n\n          uniforms_dst[ u ][ p ] = parameter_src;\n\n        }\n\n      }\n\n    }\n\n    return uniforms_dst;\n\n  }\n\n};\n\n// File:src/renderers/shaders/UniformsLib.js\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nTHREE.UniformsLib = {\n\n  common: {\n\n    \"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\n    \"opacity\" : { type: \"f\", value: 1.0 },\n\n    \"map\" : { type: \"t\", value: null },\n    \"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\n\n    \"lightMap\" : { type: \"t\", value: null },\n    \"specularMap\" : { type: \"t\", value: null },\n    \"alphaMap\" : { type: \"t\", value: null },\n\n    \"envMap\" : { type: \"t\", value: null },\n    \"flipEnvMap\" : { type: \"f\", value: - 1 },\n    \"useRefract\" : { type: \"i\", value: 0 },\n    \"reflectivity\" : { type: \"f\", value: 1.0 },\n    \"refractionRatio\" : { type: \"f\", value: 0.98 },\n    \"combine\" : { type: \"i\", value: 0 },\n\n    \"morphTargetInfluences\" : { type: \"f\", value: 0 }\n\n  },\n\n  bump: {\n\n    \"bumpMap\" : { type: \"t\", value: null },\n    \"bumpScale\" : { type: \"f\", value: 1 }\n\n  },\n\n  normalmap: {\n\n    \"normalMap\" : { type: \"t\", value: null },\n    \"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\n  },\n\n  fog : {\n\n    \"fogDensity\" : { type: \"f\", value: 0.00025 },\n    \"fogNear\" : { type: \"f\", value: 1 },\n    \"fogFar\" : { type: \"f\", value: 2000 },\n    \"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\n\n  },\n\n  lights: {\n\n    \"ambientLightColor\" : { type: \"fv\", value: [] },\n\n    \"directionalLightDirection\" : { type: \"fv\", value: [] },\n    \"directionalLightColor\" : { type: \"fv\", value: [] },\n\n    \"hemisphereLightDirection\" : { type: \"fv\", value: [] },\n    \"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\n    \"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\n\n    \"pointLightColor\" : { type: \"fv\", value: [] },\n    \"pointLightPosition\" : { type: \"fv\", value: [] },\n    \"pointLightDistance\" : { type: \"fv1\", value: [] },\n\n    \"spotLightColor\" : { type: \"fv\", value: [] },\n    \"spotLightPosition\" : { type: \"fv\", value: [] },\n    \"spotLightDirection\" : { type: \"fv\", value: [] },\n    \"spotLightDistance\" : { type: \"fv1\", value: [] },\n    \"spotLightAngleCos\" : { type: \"fv1\", value: [] },\n    \"spotLightExponent\" : { type: \"fv1\", value: [] }\n\n  },\n\n  particle: {\n\n    \"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\n    \"opacity\" : { type: \"f\", value: 1.0 },\n    \"size\" : { type: \"f\", value: 1.0 },\n    \"scale\" : { type: \"f\", value: 1.0 },\n    \"map\" : { type: \"t\", value: null },\n\n    \"fogDensity\" : { type: \"f\", value: 0.00025 },\n    \"fogNear\" : { type: \"f\", value: 1 },\n    \"fogFar\" : { type: \"f\", value: 2000 },\n    \"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\n\n  },\n\n  shadowmap: {\n\n    \"shadowMap\": { type: \"tv\", value: [] },\n    \"shadowMapSize\": { type: \"v2v\", value: [] },\n\n    \"shadowBias\" : { type: \"fv1\", value: [] },\n    \"shadowDarkness\": { type: \"fv1\", value: [] },\n\n    \"shadowMatrix\" : { type: \"m4v\", value: [] }\n\n  }\n\n};\n\n// File:src/renderers/shaders/ShaderLib.js\n\n/**\n * Webgl Shader Library for three.js\n *\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\n\nTHREE.ShaderLib = {\n\n  'basic': {\n\n    uniforms: THREE.UniformsUtils.merge( [\n\n      THREE.UniformsLib[ \"common\" ],\n      THREE.UniformsLib[ \"fog\" ],\n      THREE.UniformsLib[ \"shadowmap\" ]\n\n    ] ),\n\n    vertexShader: [\n\n      THREE.ShaderChunk[ \"map_pars_vertex\" ],\n      THREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\n      THREE.ShaderChunk[ \"envmap_pars_vertex\" ],\n      THREE.ShaderChunk[ \"color_pars_vertex\" ],\n      THREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\n      THREE.ShaderChunk[ \"skinning_pars_vertex\" ],\n      THREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\n      THREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n      \"void main() {\",\n\n        THREE.ShaderChunk[ \"map_vertex\" ],\n        THREE.ShaderChunk[ \"lightmap_vertex\" ],\n        THREE.ShaderChunk[ \"color_vertex\" ],\n        THREE.ShaderChunk[ \"skinbase_vertex\" ],\n\n      \" #ifdef USE_ENVMAP\",\n\n        THREE.ShaderChunk[ \"morphnormal_vertex\" ],\n        THREE.ShaderChunk[ \"skinnormal_vertex\" ],\n        THREE.ShaderChunk[ \"defaultnormal_vertex\" ],\n\n      \" #endif\",\n\n        THREE.ShaderChunk[ \"morphtarget_vertex\" ],\n        THREE.ShaderChunk[ \"skinning_vertex\" ],\n        THREE.ShaderChunk[ \"default_vertex\" ],\n        THREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n        THREE.ShaderChunk[ \"worldpos_vertex\" ],\n        THREE.ShaderChunk[ \"envmap_vertex\" ],\n        THREE.ShaderChunk[ \"shadowmap_vertex\" ],\n\n      \"}\"\n\n    ].join(\"\\n\"),\n\n    fragmentShader: [\n\n      \"uniform vec3 diffuse;\",\n      \"uniform float opacity;\",\n\n      THREE.ShaderChunk[ \"color_pars_fragment\" ],\n      THREE.ShaderChunk[ \"map_pars_fragment\" ],\n      THREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"envmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"fog_pars_fragment\" ],\n      THREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n      \"void main() {\",\n\n      \" gl_FragColor = vec4( diffuse, opacity );\",\n\n        THREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n        THREE.ShaderChunk[ \"map_fragment\" ],\n        THREE.ShaderChunk[ \"alphamap_fragment\" ],\n        THREE.ShaderChunk[ \"alphatest_fragment\" ],\n        THREE.ShaderChunk[ \"specularmap_fragment\" ],\n        THREE.ShaderChunk[ \"lightmap_fragment\" ],\n        THREE.ShaderChunk[ \"color_fragment\" ],\n        THREE.ShaderChunk[ \"envmap_fragment\" ],\n        THREE.ShaderChunk[ \"shadowmap_fragment\" ],\n\n        THREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\n\n        THREE.ShaderChunk[ \"fog_fragment\" ],\n\n      \"}\"\n\n    ].join(\"\\n\")\n\n  },\n\n  'lambert': {\n\n    uniforms: THREE.UniformsUtils.merge( [\n\n      THREE.UniformsLib[ \"common\" ],\n      THREE.UniformsLib[ \"fog\" ],\n      THREE.UniformsLib[ \"lights\" ],\n      THREE.UniformsLib[ \"shadowmap\" ],\n\n      {\n        \"ambient\"  : { type: \"c\", value: new THREE.Color( 0xffffff ) },\n        \"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\n        \"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\n      }\n\n    ] ),\n\n    vertexShader: [\n\n      \"#define LAMBERT\",\n\n      \"varying vec3 vLightFront;\",\n\n      \"#ifdef DOUBLE_SIDED\",\n\n      \" varying vec3 vLightBack;\",\n\n      \"#endif\",\n\n      THREE.ShaderChunk[ \"map_pars_vertex\" ],\n      THREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\n      THREE.ShaderChunk[ \"envmap_pars_vertex\" ],\n      THREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\n      THREE.ShaderChunk[ \"color_pars_vertex\" ],\n      THREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\n      THREE.ShaderChunk[ \"skinning_pars_vertex\" ],\n      THREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\n      THREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n      \"void main() {\",\n\n        THREE.ShaderChunk[ \"map_vertex\" ],\n        THREE.ShaderChunk[ \"lightmap_vertex\" ],\n        THREE.ShaderChunk[ \"color_vertex\" ],\n\n        THREE.ShaderChunk[ \"morphnormal_vertex\" ],\n        THREE.ShaderChunk[ \"skinbase_vertex\" ],\n        THREE.ShaderChunk[ \"skinnormal_vertex\" ],\n        THREE.ShaderChunk[ \"defaultnormal_vertex\" ],\n\n        THREE.ShaderChunk[ \"morphtarget_vertex\" ],\n        THREE.ShaderChunk[ \"skinning_vertex\" ],\n        THREE.ShaderChunk[ \"default_vertex\" ],\n        THREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n        THREE.ShaderChunk[ \"worldpos_vertex\" ],\n        THREE.ShaderChunk[ \"envmap_vertex\" ],\n        THREE.ShaderChunk[ \"lights_lambert_vertex\" ],\n        THREE.ShaderChunk[ \"shadowmap_vertex\" ],\n\n      \"}\"\n\n    ].join(\"\\n\"),\n\n    fragmentShader: [\n\n      \"uniform float opacity;\",\n\n      \"varying vec3 vLightFront;\",\n\n      \"#ifdef DOUBLE_SIDED\",\n\n      \" varying vec3 vLightBack;\",\n\n      \"#endif\",\n\n      THREE.ShaderChunk[ \"color_pars_fragment\" ],\n      THREE.ShaderChunk[ \"map_pars_fragment\" ],\n      THREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"envmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"fog_pars_fragment\" ],\n      THREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n      \"void main() {\",\n\n      \" gl_FragColor = vec4( vec3( 1.0 ), opacity );\",\n\n        THREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n        THREE.ShaderChunk[ \"map_fragment\" ],\n        THREE.ShaderChunk[ \"alphamap_fragment\" ],\n        THREE.ShaderChunk[ \"alphatest_fragment\" ],\n        THREE.ShaderChunk[ \"specularmap_fragment\" ],\n\n      \" #ifdef DOUBLE_SIDED\",\n\n          //\"float isFront = float( gl_FrontFacing );\",\n          //\"gl_FragColor.xyz *= isFront * vLightFront + ( 1.0 - isFront ) * vLightBack;\",\n\n      \"   if ( gl_FrontFacing )\",\n      \"     gl_FragColor.xyz *= vLightFront;\",\n      \"   else\",\n      \"     gl_FragColor.xyz *= vLightBack;\",\n\n      \" #else\",\n\n      \"   gl_FragColor.xyz *= vLightFront;\",\n\n      \" #endif\",\n\n        THREE.ShaderChunk[ \"lightmap_fragment\" ],\n        THREE.ShaderChunk[ \"color_fragment\" ],\n        THREE.ShaderChunk[ \"envmap_fragment\" ],\n        THREE.ShaderChunk[ \"shadowmap_fragment\" ],\n\n        THREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\n\n        THREE.ShaderChunk[ \"fog_fragment\" ],\n\n      \"}\"\n\n    ].join(\"\\n\")\n\n  },\n\n  'phong': {\n\n    uniforms: THREE.UniformsUtils.merge( [\n\n      THREE.UniformsLib[ \"common\" ],\n      THREE.UniformsLib[ \"bump\" ],\n      THREE.UniformsLib[ \"normalmap\" ],\n      THREE.UniformsLib[ \"fog\" ],\n      THREE.UniformsLib[ \"lights\" ],\n      THREE.UniformsLib[ \"shadowmap\" ],\n\n      {\n        \"ambient\"  : { type: \"c\", value: new THREE.Color( 0xffffff ) },\n        \"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\n        \"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\n        \"shininess\": { type: \"f\", value: 30 },\n        \"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\n      }\n\n    ] ),\n\n    vertexShader: [\n\n      \"#define PHONG\",\n\n      \"varying vec3 vViewPosition;\",\n      \"varying vec3 vNormal;\",\n\n      THREE.ShaderChunk[ \"map_pars_vertex\" ],\n      THREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\n      THREE.ShaderChunk[ \"envmap_pars_vertex\" ],\n      THREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\n      THREE.ShaderChunk[ \"color_pars_vertex\" ],\n      THREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\n      THREE.ShaderChunk[ \"skinning_pars_vertex\" ],\n      THREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\n      THREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n      \"void main() {\",\n\n        THREE.ShaderChunk[ \"map_vertex\" ],\n        THREE.ShaderChunk[ \"lightmap_vertex\" ],\n        THREE.ShaderChunk[ \"color_vertex\" ],\n\n        THREE.ShaderChunk[ \"morphnormal_vertex\" ],\n        THREE.ShaderChunk[ \"skinbase_vertex\" ],\n        THREE.ShaderChunk[ \"skinnormal_vertex\" ],\n        THREE.ShaderChunk[ \"defaultnormal_vertex\" ],\n\n      \" vNormal = normalize( transformedNormal );\",\n\n        THREE.ShaderChunk[ \"morphtarget_vertex\" ],\n        THREE.ShaderChunk[ \"skinning_vertex\" ],\n        THREE.ShaderChunk[ \"default_vertex\" ],\n        THREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n      \" vViewPosition = -mvPosition.xyz;\",\n\n        THREE.ShaderChunk[ \"worldpos_vertex\" ],\n        THREE.ShaderChunk[ \"envmap_vertex\" ],\n        THREE.ShaderChunk[ \"lights_phong_vertex\" ],\n        THREE.ShaderChunk[ \"shadowmap_vertex\" ],\n\n      \"}\"\n\n    ].join(\"\\n\"),\n\n    fragmentShader: [\n\n      \"uniform vec3 diffuse;\",\n      \"uniform float opacity;\",\n\n      \"uniform vec3 ambient;\",\n      \"uniform vec3 emissive;\",\n      \"uniform vec3 specular;\",\n      \"uniform float shininess;\",\n\n      THREE.ShaderChunk[ \"color_pars_fragment\" ],\n      THREE.ShaderChunk[ \"map_pars_fragment\" ],\n      THREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"envmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"fog_pars_fragment\" ],\n      THREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\n      THREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n      \"void main() {\",\n\n      \" gl_FragColor = vec4( vec3( 1.0 ), opacity );\",\n\n        THREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n        THREE.ShaderChunk[ \"map_fragment\" ],\n        THREE.ShaderChunk[ \"alphamap_fragment\" ],\n        THREE.ShaderChunk[ \"alphatest_fragment\" ],\n        THREE.ShaderChunk[ \"specularmap_fragment\" ],\n\n        THREE.ShaderChunk[ \"lights_phong_fragment\" ],\n\n        THREE.ShaderChunk[ \"lightmap_fragment\" ],\n        THREE.ShaderChunk[ \"color_fragment\" ],\n        THREE.ShaderChunk[ \"envmap_fragment\" ],\n        THREE.ShaderChunk[ \"shadowmap_fragment\" ],\n\n        THREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\n\n        THREE.ShaderChunk[ \"fog_fragment\" ],\n\n      \"}\"\n\n    ].join(\"\\n\")\n\n  },\n\n  'particle_basic': {\n\n    uniforms: THREE.UniformsUtils.merge( [\n\n      THREE.UniformsLib[ \"particle\" ],\n      THREE.UniformsLib[ \"shadowmap\" ]\n\n    ] ),\n\n    vertexShader: [\n\n      \"uniform float size;\",\n      \"uniform float scale;\",\n\n      THREE.ShaderChunk[ \"color_pars_vertex\" ],\n      THREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\n      THREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n      \"void main() {\",\n\n        THREE.ShaderChunk[ \"color_vertex\" ],\n\n      \" vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\n\n      \" #ifdef USE_SIZEATTENUATION\",\n      \"   gl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\n      \" #else\",\n      \"   gl_PointSize = size;\",\n      \" #endif\",\n\n      \" gl_Position = projectionMatrix * mvPosition;\",\n\n        THREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n        THREE.ShaderChunk[ \"worldpos_vertex\" ],\n        THREE.ShaderChunk[ \"shadowmap_vertex\" ],\n\n      \"}\"\n\n    ].join(\"\\n\"),\n\n    fragmentShader: [\n\n      \"uniform vec3 psColor;\",\n      \"uniform float opacity;\",\n\n      THREE.ShaderChunk[ \"color_pars_fragment\" ],\n      THREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\n      THREE.ShaderChunk[ \"fog_pars_fragment\" ],\n      THREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n      \"void main() {\",\n\n      \" gl_FragColor = vec4( psColor, opacity );\",\n\n        THREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n        THREE.ShaderChunk[ \"map_particle_fragment\" ],\n        THREE.ShaderChunk[ \"alphatest_fragment\" ],\n        THREE.ShaderChunk[ \"color_fragment\" ],\n        THREE.ShaderChunk[ \"shadowmap_fragment\" ],\n        THREE.ShaderChunk[ \"fog_fragment\" ],\n\n      \"}\"\n\n    ].join(\"\\n\")\n\n  },\n\n  'dashed': {\n\n    uniforms: THREE.UniformsUtils.merge( [\n\n      THREE.UniformsLib[ \"common\" ],\n      THREE.UniformsLib[ \"fog\" ],\n\n      {\n        \"scale\"    : { type: \"f\", value: 1 },\n        \"dashSize\" : { type: \"f\", value: 1 },\n        \"totalSize\": { type: \"f\", value: 2 }\n      }\n\n    ] ),\n\n    vertexShader: [\n\n      \"uniform float scale;\",\n      \"attribute float lineDistance;\",\n\n      \"varying float vLineDistance;\",\n\n      THREE.ShaderChunk[ \"color_pars_vertex\" ],\n      THREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n      \"void main() {\",\n\n        THREE.ShaderChunk[ \"color_vertex\" ],\n\n      \" vLineDistance = scale * lineDistance;\",\n\n      \" vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\n      \" gl_Position = projectionMatrix * mvPosition;\",\n\n        THREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n      \"}\"\n\n    ].join(\"\\n\"),\n\n    fragmentShader: [\n\n      \"uniform vec3 diffuse;\",\n      \"uniform float opacity;\",\n\n      \"uniform float dashSize;\",\n      \"uniform float totalSize;\",\n\n      \"varying float vLineDistance;\",\n\n      THREE.ShaderChunk[ \"color_pars_fragment\" ],\n      THREE.ShaderChunk[ \"fog_pars_fragment\" ],\n      THREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n      \"void main() {\",\n\n      \" if ( mod( vLineDistance, totalSize ) > dashSize ) {\",\n\n      \"   discard;\",\n\n      \" }\",\n\n      \" gl_FragColor = vec4( diffuse, opacity );\",\n\n        THREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n        THREE.ShaderChunk[ \"color_fragment\" ],\n        THREE.ShaderChunk[ \"fog_fragment\" ],\n\n      \"}\"\n\n    ].join(\"\\n\")\n\n  },\n\n  'depth': {\n\n    uniforms: {\n\n      \"mNear\": { type: \"f\", value: 1.0 },\n      \"mFar\" : { type: \"f\", value: 2000.0 },\n      \"opacity\" : { type: \"f\", value: 1.0 }\n\n    },\n\n    vertexShader: [\n\n      THREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\n      THREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n      \"void main() {\",\n\n        THREE.ShaderChunk[ \"morphtarget_vertex\" ],\n        THREE.ShaderChunk[ \"default_vertex\" ],\n        THREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n      \"}\"\n\n    ].join(\"\\n\"),\n\n    fragmentShader: [\n\n      \"uniform float mNear;\",\n      \"uniform float mFar;\",\n      \"uniform float opacity;\",\n\n      THREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n      \"void main() {\",\n\n        THREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n\n      \" #ifdef USE_LOGDEPTHBUF_EXT\",\n\n      \"   float depth = gl_FragDepthEXT / gl_FragCoord.w;\",\n\n      \" #else\",\n\n      \"   float depth = gl_FragCoord.z / gl_FragCoord.w;\",\n\n      \" #endif\",\n\n      \" float color = 1.0 - smoothstep( mNear, mFar, depth );\",\n      \" gl_FragColor = vec4( vec3( color ), opacity );\",\n\n      \"}\"\n\n    ].join(\"\\n\")\n\n  },\n\n  'normal': {\n\n    uniforms: {\n\n      \"opacity\" : { type: \"f\", value: 1.0 }\n\n    },\n\n    vertexShader: [\n\n      \"varying vec3 vNormal;\",\n\n      THREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\n      THREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n      \"void main() {\",\n\n      \" vNormal = normalize( normalMatrix * normal );\",\n\n        THREE.ShaderChunk[ \"morphtarget_vertex\" ],\n        THREE.ShaderChunk[ \"default_vertex\" ],\n        THREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n      \"}\"\n\n    ].join(\"\\n\"),\n\n    fragmentShader: [\n\n      \"uniform float opacity;\",\n      \"varying vec3 vNormal;\",\n\n      THREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n      \"void main() {\",\n\n      \" gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\n\n        THREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n\n      \"}\"\n\n    ].join(\"\\n\")\n\n  },\n\n  /* -------------------------------------------------------------------------\n  //  Normal map shader\n  //    - Blinn-Phong\n  //    - normal + diffuse + specular + AO + displacement + reflection + shadow maps\n  //    - point and directional lights (use with \"lights: true\" material option)\n   ------------------------------------------------------------------------- */\n\n  'normalmap' : {\n\n    uniforms: THREE.UniformsUtils.merge( [\n\n      THREE.UniformsLib[ \"fog\" ],\n      THREE.UniformsLib[ \"lights\" ],\n      THREE.UniformsLib[ \"shadowmap\" ],\n\n      {\n\n      \"enableAO\"          : { type: \"i\", value: 0 },\n      \"enableDiffuse\"     : { type: \"i\", value: 0 },\n      \"enableSpecular\"    : { type: \"i\", value: 0 },\n      \"enableReflection\"  : { type: \"i\", value: 0 },\n      \"enableDisplacement\": { type: \"i\", value: 0 },\n\n      \"tDisplacement\": { type: \"t\", value: null }, // must go first as this is vertex texture\n      \"tDiffuse\"     : { type: \"t\", value: null },\n      \"tCube\"        : { type: \"t\", value: null },\n      \"tNormal\"      : { type: \"t\", value: null },\n      \"tSpecular\"    : { type: \"t\", value: null },\n      \"tAO\"          : { type: \"t\", value: null },\n\n      \"uNormalScale\": { type: \"v2\", value: new THREE.Vector2( 1, 1 ) },\n\n      \"uDisplacementBias\": { type: \"f\", value: 0.0 },\n      \"uDisplacementScale\": { type: \"f\", value: 1.0 },\n\n      \"diffuse\": { type: \"c\", value: new THREE.Color( 0xffffff ) },\n      \"specular\": { type: \"c\", value: new THREE.Color( 0x111111 ) },\n      \"ambient\": { type: \"c\", value: new THREE.Color( 0xffffff ) },\n      \"shininess\": { type: \"f\", value: 30 },\n      \"opacity\": { type: \"f\", value: 1 },\n\n      \"useRefract\": { type: \"i\", value: 0 },\n      \"refractionRatio\": { type: \"f\", value: 0.98 },\n      \"reflectivity\": { type: \"f\", value: 0.5 },\n\n      \"uOffset\" : { type: \"v2\", value: new THREE.Vector2( 0, 0 ) },\n      \"uRepeat\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) },\n\n      \"wrapRGB\" : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\n\n      }\n\n    ] ),\n\n    fragmentShader: [\n\n      \"uniform vec3 ambient;\",\n      \"uniform vec3 diffuse;\",\n      \"uniform vec3 specular;\",\n      \"uniform float shininess;\",\n      \"uniform float opacity;\",\n\n      \"uniform bool enableDiffuse;\",\n      \"uniform bool enableSpecular;\",\n      \"uniform bool enableAO;\",\n      \"uniform bool enableReflection;\",\n\n      \"uniform sampler2D tDiffuse;\",\n      \"uniform sampler2D tNormal;\",\n      \"uniform sampler2D tSpecular;\",\n      \"uniform sampler2D tAO;\",\n\n      \"uniform samplerCube tCube;\",\n\n      \"uniform vec2 uNormalScale;\",\n\n      \"uniform bool useRefract;\",\n      \"uniform float refractionRatio;\",\n      \"uniform float reflectivity;\",\n\n      \"varying vec3 vTangent;\",\n      \"varying vec3 vBinormal;\",\n      \"varying vec3 vNormal;\",\n      \"varying vec2 vUv;\",\n\n      \"uniform vec3 ambientLightColor;\",\n\n      \"#if MAX_DIR_LIGHTS > 0\",\n\n      \" uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\",\n      \" uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\",\n\n      \"#endif\",\n\n      \"#if MAX_HEMI_LIGHTS > 0\",\n\n      \" uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\",\n      \" uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\",\n      \" uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\",\n\n      \"#endif\",\n\n      \"#if MAX_POINT_LIGHTS > 0\",\n\n      \" uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\",\n      \" uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\",\n      \" uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\",\n\n      \"#endif\",\n\n      \"#if MAX_SPOT_LIGHTS > 0\",\n\n      \" uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\",\n      \" uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\",\n      \" uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\",\n      \" uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\",\n      \" uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\",\n      \" uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\",\n\n      \"#endif\",\n\n      \"#ifdef WRAP_AROUND\",\n\n      \" uniform vec3 wrapRGB;\",\n\n      \"#endif\",\n\n      \"varying vec3 vWorldPosition;\",\n      \"varying vec3 vViewPosition;\",\n\n      THREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\n      THREE.ShaderChunk[ \"fog_pars_fragment\" ],\n      THREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n      \"void main() {\",\n        THREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n\n      \" gl_FragColor = vec4( vec3( 1.0 ), opacity );\",\n\n      \" vec3 specularTex = vec3( 1.0 );\",\n\n      \" vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\",\n      \" normalTex.xy *= uNormalScale;\",\n      \" normalTex = normalize( normalTex );\",\n\n      \" if( enableDiffuse ) {\",\n\n      \"   #ifdef GAMMA_INPUT\",\n\n      \"     vec4 texelColor = texture2D( tDiffuse, vUv );\",\n      \"     texelColor.xyz *= texelColor.xyz;\",\n\n      \"     gl_FragColor = gl_FragColor * texelColor;\",\n\n      \"   #else\",\n\n      \"     gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\",\n\n      \"   #endif\",\n\n      \" }\",\n\n      \" if( enableAO ) {\",\n\n      \"   #ifdef GAMMA_INPUT\",\n\n      \"     vec4 aoColor = texture2D( tAO, vUv );\",\n      \"     aoColor.xyz *= aoColor.xyz;\",\n\n      \"     gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\",\n\n      \"   #else\",\n\n      \"     gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\",\n\n      \"   #endif\",\n\n      \" }\",\n\n      THREE.ShaderChunk[ \"alphatest_fragment\" ],\n\n      \" if( enableSpecular )\",\n      \"   specularTex = texture2D( tSpecular, vUv ).xyz;\",\n\n      \" mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\",\n      \" vec3 finalNormal = tsb * normalTex;\",\n\n      \" #ifdef FLIP_SIDED\",\n\n      \"   finalNormal = -finalNormal;\",\n\n      \" #endif\",\n\n      \" vec3 normal = normalize( finalNormal );\",\n      \" vec3 viewPosition = normalize( vViewPosition );\",\n\n        // point lights\n\n      \" #if MAX_POINT_LIGHTS > 0\",\n\n      \"   vec3 pointDiffuse = vec3( 0.0 );\",\n      \"   vec3 pointSpecular = vec3( 0.0 );\",\n\n      \"   for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\",\n\n      \"     vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\",\n      \"     vec3 pointVector = lPosition.xyz + vViewPosition.xyz;\",\n\n      \"     float pointDistance = 1.0;\",\n      \"     if ( pointLightDistance[ i ] > 0.0 )\",\n      \"       pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\",\n\n      \"     pointVector = normalize( pointVector );\",\n\n            // diffuse\n\n      \"     #ifdef WRAP_AROUND\",\n\n      \"       float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\",\n      \"       float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\",\n\n      \"       vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\",\n\n      \"     #else\",\n\n      \"       float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\",\n\n      \"     #endif\",\n\n      \"     pointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\",\n\n            // specular\n\n      \"     vec3 pointHalfVector = normalize( pointVector + viewPosition );\",\n      \"     float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\",\n      \"     float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\",\n\n      \"     float specularNormalization = ( shininess + 2.0 ) / 8.0;\",\n\n      \"     vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );\",\n      \"     pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\",\n\n      \"   }\",\n\n      \" #endif\",\n\n        // spot lights\n\n      \" #if MAX_SPOT_LIGHTS > 0\",\n\n      \"   vec3 spotDiffuse = vec3( 0.0 );\",\n      \"   vec3 spotSpecular = vec3( 0.0 );\",\n\n      \"   for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\",\n\n      \"     vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\",\n      \"     vec3 spotVector = lPosition.xyz + vViewPosition.xyz;\",\n\n      \"     float spotDistance = 1.0;\",\n      \"     if ( spotLightDistance[ i ] > 0.0 )\",\n      \"       spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\",\n\n      \"     spotVector = normalize( spotVector );\",\n\n      \"     float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\",\n\n      \"     if ( spotEffect > spotLightAngleCos[ i ] ) {\",\n\n      \"       spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\",\n\n              // diffuse\n\n      \"       #ifdef WRAP_AROUND\",\n\n      \"         float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\",\n      \"         float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\",\n\n      \"         vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\",\n\n      \"       #else\",\n\n      \"         float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\",\n\n      \"       #endif\",\n\n      \"       spotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\",\n\n              // specular\n\n      \"       vec3 spotHalfVector = normalize( spotVector + viewPosition );\",\n      \"       float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\",\n      \"       float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\",\n\n      \"       float specularNormalization = ( shininess + 2.0 ) / 8.0;\",\n\n      \"       vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );\",\n      \"       spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\",\n\n      \"     }\",\n\n      \"   }\",\n\n      \" #endif\",\n\n        // directional lights\n\n      \" #if MAX_DIR_LIGHTS > 0\",\n\n      \"   vec3 dirDiffuse = vec3( 0.0 );\",\n      \"   vec3 dirSpecular = vec3( 0.0 );\",\n\n      \"   for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\",\n\n      \"     vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\",\n      \"     vec3 dirVector = normalize( lDirection.xyz );\",\n\n            // diffuse\n\n      \"     #ifdef WRAP_AROUND\",\n\n      \"       float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\",\n      \"       float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\",\n\n      \"       vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\",\n\n      \"     #else\",\n\n      \"       float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\",\n\n      \"     #endif\",\n\n      \"     dirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\",\n\n            // specular\n\n      \"     vec3 dirHalfVector = normalize( dirVector + viewPosition );\",\n      \"     float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\",\n      \"     float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\",\n\n      \"     float specularNormalization = ( shininess + 2.0 ) / 8.0;\",\n\n      \"     vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\",\n      \"     dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\",\n\n      \"   }\",\n\n      \" #endif\",\n\n        // hemisphere lights\n\n      \" #if MAX_HEMI_LIGHTS > 0\",\n\n      \"   vec3 hemiDiffuse = vec3( 0.0 );\",\n      \"   vec3 hemiSpecular = vec3( 0.0 );\" ,\n\n      \"   for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\",\n\n      \"     vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\",\n      \"     vec3 lVector = normalize( lDirection.xyz );\",\n\n            // diffuse\n\n      \"     float dotProduct = dot( normal, lVector );\",\n      \"     float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\",\n\n      \"     vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\",\n\n      \"     hemiDiffuse += diffuse * hemiColor;\",\n\n            // specular (sky light)\n\n\n      \"     vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\",\n      \"     float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\",\n      \"     float hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\",\n\n            // specular (ground light)\n\n      \"     vec3 lVectorGround = -lVector;\",\n\n      \"     vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\",\n      \"     float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\",\n      \"     float hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\",\n\n      \"     float dotProductGround = dot( normal, lVectorGround );\",\n\n      \"     float specularNormalization = ( shininess + 2.0 ) / 8.0;\",\n\n      \"     vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\",\n      \"     vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\",\n      \"     hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\",\n\n      \"   }\",\n\n      \" #endif\",\n\n        // all lights contribution summation\n\n      \" vec3 totalDiffuse = vec3( 0.0 );\",\n      \" vec3 totalSpecular = vec3( 0.0 );\",\n\n      \" #if MAX_DIR_LIGHTS > 0\",\n\n      \"   totalDiffuse += dirDiffuse;\",\n      \"   totalSpecular += dirSpecular;\",\n\n      \" #endif\",\n\n      \" #if MAX_HEMI_LIGHTS > 0\",\n\n      \"   totalDiffuse += hemiDiffuse;\",\n      \"   totalSpecular += hemiSpecular;\",\n\n      \" #endif\",\n\n      \" #if MAX_POINT_LIGHTS > 0\",\n\n      \"   totalDiffuse += pointDiffuse;\",\n      \"   totalSpecular += pointSpecular;\",\n\n      \" #endif\",\n\n      \" #if MAX_SPOT_LIGHTS > 0\",\n\n      \"   totalDiffuse += spotDiffuse;\",\n      \"   totalSpecular += spotSpecular;\",\n\n      \" #endif\",\n\n      \" #ifdef METAL\",\n\n      \"   gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\",\n\n      \" #else\",\n\n      \"   gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\",\n\n      \" #endif\",\n\n      \" if ( enableReflection ) {\",\n\n      \"   vec3 vReflect;\",\n      \"   vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\",\n\n      \"   if ( useRefract ) {\",\n\n      \"     vReflect = refract( cameraToVertex, normal, refractionRatio );\",\n\n      \"   } else {\",\n\n      \"     vReflect = reflect( cameraToVertex, normal );\",\n\n      \"   }\",\n\n      \"   vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\",\n\n      \"   #ifdef GAMMA_INPUT\",\n\n      \"     cubeColor.xyz *= cubeColor.xyz;\",\n\n      \"   #endif\",\n\n      \"   gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\",\n\n      \" }\",\n\n        THREE.ShaderChunk[ \"shadowmap_fragment\" ],\n        THREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\n        THREE.ShaderChunk[ \"fog_fragment\" ],\n\n      \"}\"\n\n    ].join(\"\\n\"),\n\n    vertexShader: [\n\n      \"attribute vec4 tangent;\",\n\n      \"uniform vec2 uOffset;\",\n      \"uniform vec2 uRepeat;\",\n\n      \"uniform bool enableDisplacement;\",\n\n      \"#ifdef VERTEX_TEXTURES\",\n\n      \" uniform sampler2D tDisplacement;\",\n      \" uniform float uDisplacementScale;\",\n      \" uniform float uDisplacementBias;\",\n\n      \"#endif\",\n\n      \"varying vec3 vTangent;\",\n      \"varying vec3 vBinormal;\",\n      \"varying vec3 vNormal;\",\n      \"varying vec2 vUv;\",\n\n      \"varying vec3 vWorldPosition;\",\n      \"varying vec3 vViewPosition;\",\n\n      THREE.ShaderChunk[ \"skinning_pars_vertex\" ],\n      THREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\n      THREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n      \"void main() {\",\n\n        THREE.ShaderChunk[ \"skinbase_vertex\" ],\n        THREE.ShaderChunk[ \"skinnormal_vertex\" ],\n\n        // normal, tangent and binormal vectors\n\n      \" #ifdef USE_SKINNING\",\n\n      \"   vNormal = normalize( normalMatrix * skinnedNormal.xyz );\",\n\n      \"   vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\",\n      \"   vTangent = normalize( normalMatrix * skinnedTangent.xyz );\",\n\n      \" #else\",\n\n      \"   vNormal = normalize( normalMatrix * normal );\",\n      \"   vTangent = normalize( normalMatrix * tangent.xyz );\",\n\n      \" #endif\",\n\n      \" vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\",\n\n      \" vUv = uv * uRepeat + uOffset;\",\n\n        // displacement mapping\n\n      \" vec3 displacedPosition;\",\n\n      \" #ifdef VERTEX_TEXTURES\",\n\n      \"   if ( enableDisplacement ) {\",\n\n      \"     vec3 dv = texture2D( tDisplacement, uv ).xyz;\",\n      \"     float df = uDisplacementScale * dv.x + uDisplacementBias;\",\n      \"     displacedPosition = position + normalize( normal ) * df;\",\n\n      \"   } else {\",\n\n      \"     #ifdef USE_SKINNING\",\n\n      \"       vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\",\n\n      \"       vec4 skinned = vec4( 0.0 );\",\n      \"       skinned += boneMatX * skinVertex * skinWeight.x;\",\n      \"       skinned += boneMatY * skinVertex * skinWeight.y;\",\n      \"       skinned += boneMatZ * skinVertex * skinWeight.z;\",\n      \"       skinned += boneMatW * skinVertex * skinWeight.w;\",\n      \"       skinned  = bindMatrixInverse * skinned;\",\n\n      \"       displacedPosition = skinned.xyz;\",\n\n      \"     #else\",\n\n      \"       displacedPosition = position;\",\n\n      \"     #endif\",\n\n      \"   }\",\n\n      \" #else\",\n\n      \"   #ifdef USE_SKINNING\",\n\n      \"     vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\",\n\n      \"     vec4 skinned = vec4( 0.0 );\",\n      \"     skinned += boneMatX * skinVertex * skinWeight.x;\",\n      \"     skinned += boneMatY * skinVertex * skinWeight.y;\",\n      \"     skinned += boneMatZ * skinVertex * skinWeight.z;\",\n      \"     skinned += boneMatW * skinVertex * skinWeight.w;\",\n      \"     skinned  = bindMatrixInverse * skinned;\",\n\n      \"     displacedPosition = skinned.xyz;\",\n\n      \"   #else\",\n\n      \"     displacedPosition = position;\",\n\n      \"   #endif\",\n\n      \" #endif\",\n\n        //\n\n      \" vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\",\n      \" vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\",\n\n      \" gl_Position = projectionMatrix * mvPosition;\",\n\n        THREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n        //\n\n      \" vWorldPosition = worldPosition.xyz;\",\n      \" vViewPosition = -mvPosition.xyz;\",\n\n        // shadows\n\n      \" #ifdef USE_SHADOWMAP\",\n\n      \"   for( int i = 0; i < MAX_SHADOWS; i ++ ) {\",\n\n      \"     vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\",\n\n      \"   }\",\n\n      \" #endif\",\n\n      \"}\"\n\n    ].join(\"\\n\")\n\n  },\n\n  /* -------------------------------------------------------------------------\n  //  Cube map shader\n   ------------------------------------------------------------------------- */\n\n  'cube': {\n\n    uniforms: { \"tCube\": { type: \"t\", value: null },\n          \"tFlip\": { type: \"f\", value: - 1 } },\n\n    vertexShader: [\n\n      \"varying vec3 vWorldPosition;\",\n\n      THREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n      \"void main() {\",\n\n      \" vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\n      \" vWorldPosition = worldPosition.xyz;\",\n\n      \" gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n        THREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n      \"}\"\n\n    ].join(\"\\n\"),\n\n    fragmentShader: [\n\n      \"uniform samplerCube tCube;\",\n      \"uniform float tFlip;\",\n\n      \"varying vec3 vWorldPosition;\",\n\n      THREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n      \"void main() {\",\n\n      \" gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\n\n        THREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n\n      \"}\"\n\n    ].join(\"\\n\")\n\n  },\n\n  /* Depth encoding into RGBA texture\n   *\n   * based on SpiderGL shadow map example\n   * http://spidergl.org/example.php?id=6\n   *\n   * originally from\n   * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\n   *\n   * see also\n   * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\n   */\n\n  'depthRGBA': {\n\n    uniforms: {},\n\n    vertexShader: [\n\n      THREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\n      THREE.ShaderChunk[ \"skinning_pars_vertex\" ],\n      THREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n      \"void main() {\",\n\n        THREE.ShaderChunk[ \"skinbase_vertex\" ],\n        THREE.ShaderChunk[ \"morphtarget_vertex\" ],\n        THREE.ShaderChunk[ \"skinning_vertex\" ],\n        THREE.ShaderChunk[ \"default_vertex\" ],\n        THREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n      \"}\"\n\n    ].join(\"\\n\"),\n\n    fragmentShader: [\n\n      THREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n      \"vec4 pack_depth( const in float depth ) {\",\n\n      \" const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\n      \" const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\n      \" vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"  vec4 res = fract( depth * bit_shift );\",\n      \" res -= res.xxyz * bit_mask;\",\n      \" return res;\",\n\n      \"}\",\n\n      \"void main() {\",\n\n        THREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n\n      \" #ifdef USE_LOGDEPTHBUF_EXT\",\n\n      \"   gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\n\n      \" #else\",\n\n      \"   gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\n\n      \" #endif\",\n\n        //\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\n        //\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\n        //\"gl_FragData[ 0 ] = pack_depth( z );\",\n        //\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\n\n      \"}\"\n\n    ].join(\"\\n\")\n\n  }\n\n};\n\n// File:src/renderers/WebGLRenderer.js\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nTHREE.WebGLRenderer = function ( parameters ) {\n\n  console.log( 'THREE.WebGLRenderer', THREE.REVISION );\n\n  parameters = parameters || {};\n\n  var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\n  _context = parameters.context !== undefined ? parameters.context : null,\n\n  _precision = parameters.precision !== undefined ? parameters.precision : 'highp',\n\n  _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n  _depth = parameters.depth !== undefined ? parameters.depth : true,\n  _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n  _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n  _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n  _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n  _logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false,\n\n  _clearColor = new THREE.Color( 0x000000 ),\n  _clearAlpha = 0;\n\n  var opaqueObjects = [];\n  var transparentObjects = [];\n\n  // public properties\n\n  this.domElement = _canvas;\n  this.context = null;\n  this.devicePixelRatio = parameters.devicePixelRatio !== undefined\n         ? parameters.devicePixelRatio\n         : self.devicePixelRatio !== undefined\n           ? self.devicePixelRatio\n           : 1;\n\n  // clearing\n\n  this.autoClear = true;\n  this.autoClearColor = true;\n  this.autoClearDepth = true;\n  this.autoClearStencil = true;\n\n  // scene graph\n\n  this.sortObjects = true;\n\n  // physically based shading\n\n  this.gammaInput = false;\n  this.gammaOutput = false;\n\n  // shadow map\n\n  this.shadowMapEnabled = false;\n  this.shadowMapAutoUpdate = true;\n  this.shadowMapType = THREE.PCFShadowMap;\n  this.shadowMapCullFace = THREE.CullFaceFront;\n  this.shadowMapDebug = false;\n  this.shadowMapCascade = false;\n\n  // morphs\n\n  this.maxMorphTargets = 8;\n  this.maxMorphNormals = 4;\n\n  // flags\n\n  this.autoScaleCubemaps = true;\n\n  // custom render plugins\n\n  this.renderPluginsPre = [];\n  this.renderPluginsPost = [];\n\n  // info\n\n  this.info = {\n\n    memory: {\n\n      programs: 0,\n      geometries: 0,\n      textures: 0\n\n    },\n\n    render: {\n\n      calls: 0,\n      vertices: 0,\n      faces: 0,\n      points: 0\n\n    }\n\n  };\n\n  // internal properties\n\n  var _this = this,\n\n  _programs = [],\n\n  // internal state cache\n\n  _currentProgram = null,\n  _currentFramebuffer = null,\n  _currentMaterialId = - 1,\n  _currentGeometryGroupHash = null,\n  _currentCamera = null,\n\n  _usedTextureUnits = 0,\n\n  // GL state cache\n\n  _oldDoubleSided = - 1,\n  _oldFlipSided = - 1,\n\n  _oldBlending = - 1,\n\n  _oldBlendEquation = - 1,\n  _oldBlendSrc = - 1,\n  _oldBlendDst = - 1,\n\n  _oldDepthTest = - 1,\n  _oldDepthWrite = - 1,\n\n  _oldPolygonOffset = null,\n  _oldPolygonOffsetFactor = null,\n  _oldPolygonOffsetUnits = null,\n\n  _oldLineWidth = null,\n\n  _viewportX = 0,\n  _viewportY = 0,\n  _viewportWidth = _canvas.width,\n  _viewportHeight = _canvas.height,\n  _currentWidth = 0,\n  _currentHeight = 0,\n\n  _newAttributes = new Uint8Array( 16 ),\n  _enabledAttributes = new Uint8Array( 16 ),\n\n  // frustum\n\n  _frustum = new THREE.Frustum(),\n\n   // camera matrices cache\n\n  _projScreenMatrix = new THREE.Matrix4(),\n  _projScreenMatrixPS = new THREE.Matrix4(),\n\n  _vector3 = new THREE.Vector3(),\n\n  // light arrays cache\n\n  _direction = new THREE.Vector3(),\n\n  _lightsNeedUpdate = true,\n\n  _lights = {\n\n    ambient: [ 0, 0, 0 ],\n    directional: { length: 0, colors:[], positions: [] },\n    point: { length: 0, colors: [], positions: [], distances: [] },\n    spot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [] },\n    hemi: { length: 0, skyColors: [], groundColors: [], positions: [] }\n\n  };\n\n  // initialize\n\n  var _gl;\n\n  var _glExtensionTextureFloat;\n  var _glExtensionTextureFloatLinear;\n  var _glExtensionStandardDerivatives;\n  var _glExtensionTextureFilterAnisotropic;\n  var _glExtensionCompressedTextureS3TC;\n  var _glExtensionElementIndexUint;\n  var _glExtensionFragDepth;\n\n\n  initGL();\n\n  setDefaultGLState();\n\n  this.context = _gl;\n\n  // GPU capabilities\n\n  var _maxTextures = _gl.getParameter( _gl.MAX_TEXTURE_IMAGE_UNITS );\n  var _maxVertexTextures = _gl.getParameter( _gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n  var _maxTextureSize = _gl.getParameter( _gl.MAX_TEXTURE_SIZE );\n  var _maxCubemapSize = _gl.getParameter( _gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n  var _maxAnisotropy = _glExtensionTextureFilterAnisotropic ? _gl.getParameter( _glExtensionTextureFilterAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT ) : 0;\n\n  var _supportsVertexTextures = ( _maxVertexTextures > 0 );\n  var _supportsBoneTextures = _supportsVertexTextures && _glExtensionTextureFloat;\n\n  var _compressedTextureFormats = _glExtensionCompressedTextureS3TC ? _gl.getParameter( _gl.COMPRESSED_TEXTURE_FORMATS ) : [];\n\n  //\n\n  var _vertexShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.HIGH_FLOAT );\n  var _vertexShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.MEDIUM_FLOAT );\n  var _vertexShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.LOW_FLOAT );\n\n  var _fragmentShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.HIGH_FLOAT );\n  var _fragmentShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.MEDIUM_FLOAT );\n  var _fragmentShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.LOW_FLOAT );\n\n  // clamp precision to maximum available\n\n  var highpAvailable = _vertexShaderPrecisionHighpFloat.precision > 0 && _fragmentShaderPrecisionHighpFloat.precision > 0;\n  var mediumpAvailable = _vertexShaderPrecisionMediumpFloat.precision > 0 && _fragmentShaderPrecisionMediumpFloat.precision > 0;\n\n  if ( _precision === 'highp' && ! highpAvailable ) {\n\n    if ( mediumpAvailable ) {\n\n      _precision = 'mediump';\n      console.warn( 'THREE.WebGLRenderer: highp not supported, using mediump.' );\n\n    } else {\n\n      _precision = 'lowp';\n      console.warn( 'THREE.WebGLRenderer: highp and mediump not supported, using lowp.' );\n\n    }\n\n  }\n\n  if ( _precision === 'mediump' && ! mediumpAvailable ) {\n\n    _precision = 'lowp';\n    console.warn( 'THREE.WebGLRenderer: mediump not supported, using lowp.' );\n\n  }\n\n  // API\n\n  this.getContext = function () {\n\n    return _gl;\n\n  };\n\n  this.supportsVertexTextures = function () {\n\n    return _supportsVertexTextures;\n\n  };\n\n  this.supportsFloatTextures = function () {\n\n    return _glExtensionTextureFloat;\n\n  };\n\n  this.supportsStandardDerivatives = function () {\n\n    return _glExtensionStandardDerivatives;\n\n  };\n\n  this.supportsCompressedTextureS3TC = function () {\n\n    return _glExtensionCompressedTextureS3TC;\n\n  };\n\n  this.getMaxAnisotropy  = function () {\n\n    return _maxAnisotropy;\n\n  };\n\n  this.getPrecision = function () {\n\n    return _precision;\n\n  };\n\n  this.setSize = function ( width, height, updateStyle ) {\n\n    _canvas.width = width * this.devicePixelRatio;\n    _canvas.height = height * this.devicePixelRatio;\n\n    if ( updateStyle !== false ) {\n\n      _canvas.style.width = width + 'px';\n      _canvas.style.height = height + 'px';\n\n    }\n\n    this.setViewport( 0, 0, width, height );\n\n  };\n\n  this.setViewport = function ( x, y, width, height ) {\n\n    _viewportX = x * this.devicePixelRatio;\n    _viewportY = y * this.devicePixelRatio;\n\n    _viewportWidth = width * this.devicePixelRatio;\n    _viewportHeight = height * this.devicePixelRatio;\n\n    _gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\n\n  };\n\n  this.setScissor = function ( x, y, width, height ) {\n\n    _gl.scissor(\n      x * this.devicePixelRatio,\n      y * this.devicePixelRatio,\n      width * this.devicePixelRatio,\n      height * this.devicePixelRatio\n    );\n\n  };\n\n  this.enableScissorTest = function ( enable ) {\n\n    enable ? _gl.enable( _gl.SCISSOR_TEST ) : _gl.disable( _gl.SCISSOR_TEST );\n\n  };\n\n  // Clearing\n\n  this.setClearColor = function ( color, alpha ) {\n\n    _clearColor.set( color );\n    _clearAlpha = alpha !== undefined ? alpha : 1;\n\n    _gl.clearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n  };\n\n  this.setClearColorHex = function ( hex, alpha ) {\n\n    console.warn( 'THREE.WebGLRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\n    this.setClearColor( hex, alpha );\n\n  };\n\n  this.getClearColor = function () {\n\n    return _clearColor;\n\n  };\n\n  this.getClearAlpha = function () {\n\n    return _clearAlpha;\n\n  };\n\n  this.clear = function ( color, depth, stencil ) {\n\n    var bits = 0;\n\n    if ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n    if ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n    if ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n    _gl.clear( bits );\n\n  };\n\n  this.clearColor = function () {\n\n    _gl.clear( _gl.COLOR_BUFFER_BIT );\n\n  };\n\n  this.clearDepth = function () {\n\n    _gl.clear( _gl.DEPTH_BUFFER_BIT );\n\n  };\n\n  this.clearStencil = function () {\n\n    _gl.clear( _gl.STENCIL_BUFFER_BIT );\n\n  };\n\n  this.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n    this.setRenderTarget( renderTarget );\n    this.clear( color, depth, stencil );\n\n  };\n\n  // Plugins\n\n  this.addPostPlugin = function ( plugin ) {\n\n    plugin.init( this );\n    this.renderPluginsPost.push( plugin );\n\n  };\n\n  this.addPrePlugin = function ( plugin ) {\n\n    plugin.init( this );\n    this.renderPluginsPre.push( plugin );\n\n  };\n\n  // Rendering\n\n  this.updateShadowMap = function ( scene, camera ) {\n\n    _currentProgram = null;\n    _oldBlending = - 1;\n    _oldDepthTest = - 1;\n    _oldDepthWrite = - 1;\n    _currentGeometryGroupHash = - 1;\n    _currentMaterialId = - 1;\n    _lightsNeedUpdate = true;\n    _oldDoubleSided = - 1;\n    _oldFlipSided = - 1;\n\n    initObjects( scene );\n\n    this.shadowMapPlugin.update( scene, camera );\n\n  };\n\n  // Internal functions\n\n  // Buffer allocation\n\n  function createParticleBuffers ( geometry ) {\n\n    geometry.__webglVertexBuffer = _gl.createBuffer();\n    geometry.__webglColorBuffer = _gl.createBuffer();\n\n    _this.info.memory.geometries ++;\n\n  };\n\n  function createLineBuffers ( geometry ) {\n\n    geometry.__webglVertexBuffer = _gl.createBuffer();\n    geometry.__webglColorBuffer = _gl.createBuffer();\n    geometry.__webglLineDistanceBuffer = _gl.createBuffer();\n\n    _this.info.memory.geometries ++;\n\n  };\n\n  function createMeshBuffers ( geometryGroup ) {\n\n    geometryGroup.__webglVertexBuffer = _gl.createBuffer();\n    geometryGroup.__webglNormalBuffer = _gl.createBuffer();\n    geometryGroup.__webglTangentBuffer = _gl.createBuffer();\n    geometryGroup.__webglColorBuffer = _gl.createBuffer();\n    geometryGroup.__webglUVBuffer = _gl.createBuffer();\n    geometryGroup.__webglUV2Buffer = _gl.createBuffer();\n\n    geometryGroup.__webglSkinIndicesBuffer = _gl.createBuffer();\n    geometryGroup.__webglSkinWeightsBuffer = _gl.createBuffer();\n\n    geometryGroup.__webglFaceBuffer = _gl.createBuffer();\n    geometryGroup.__webglLineBuffer = _gl.createBuffer();\n\n    var m, ml;\n\n    if ( geometryGroup.numMorphTargets ) {\n\n      geometryGroup.__webglMorphTargetsBuffers = [];\n\n      for ( m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {\n\n        geometryGroup.__webglMorphTargetsBuffers.push( _gl.createBuffer() );\n\n      }\n\n    }\n\n    if ( geometryGroup.numMorphNormals ) {\n\n      geometryGroup.__webglMorphNormalsBuffers = [];\n\n      for ( m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {\n\n        geometryGroup.__webglMorphNormalsBuffers.push( _gl.createBuffer() );\n\n      }\n\n    }\n\n    _this.info.memory.geometries ++;\n\n  };\n\n  // Events\n\n  var onGeometryDispose = function ( event ) {\n\n    var geometry = event.target;\n\n    geometry.removeEventListener( 'dispose', onGeometryDispose );\n\n    deallocateGeometry( geometry );\n\n  };\n\n  var onTextureDispose = function ( event ) {\n\n    var texture = event.target;\n\n    texture.removeEventListener( 'dispose', onTextureDispose );\n\n    deallocateTexture( texture );\n\n    _this.info.memory.textures --;\n\n\n  };\n\n  var onRenderTargetDispose = function ( event ) {\n\n    var renderTarget = event.target;\n\n    renderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n    deallocateRenderTarget( renderTarget );\n\n    _this.info.memory.textures --;\n\n  };\n\n  var onMaterialDispose = function ( event ) {\n\n    var material = event.target;\n\n    material.removeEventListener( 'dispose', onMaterialDispose );\n\n    deallocateMaterial( material );\n\n  };\n\n  // Buffer deallocation\n\n  var deleteBuffers = function ( geometry ) {\n\n    if ( geometry.__webglVertexBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglVertexBuffer );\n    if ( geometry.__webglNormalBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglNormalBuffer );\n    if ( geometry.__webglTangentBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglTangentBuffer );\n    if ( geometry.__webglColorBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglColorBuffer );\n    if ( geometry.__webglUVBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglUVBuffer );\n    if ( geometry.__webglUV2Buffer !== undefined ) _gl.deleteBuffer( geometry.__webglUV2Buffer );\n\n    if ( geometry.__webglSkinIndicesBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglSkinIndicesBuffer );\n    if ( geometry.__webglSkinWeightsBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglSkinWeightsBuffer );\n\n    if ( geometry.__webglFaceBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglFaceBuffer );\n    if ( geometry.__webglLineBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglLineBuffer );\n\n    if ( geometry.__webglLineDistanceBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglLineDistanceBuffer );\n    // custom attributes\n\n    if ( geometry.__webglCustomAttributesList !== undefined ) {\n\n      for ( var id in geometry.__webglCustomAttributesList ) {\n\n        _gl.deleteBuffer( geometry.__webglCustomAttributesList[ id ].buffer );\n\n      }\n\n    }\n\n    _this.info.memory.geometries --;\n\n  };\n\n  var deallocateGeometry = function ( geometry ) {\n\n    geometry.__webglInit = undefined;\n\n    if ( geometry instanceof THREE.BufferGeometry ) {\n\n      var attributes = geometry.attributes;\n\n      for ( var key in attributes ) {\n\n        if ( attributes[ key ].buffer !== undefined ) {\n\n          _gl.deleteBuffer( attributes[ key ].buffer );\n\n        }\n\n      }\n\n      _this.info.memory.geometries --;\n\n    } else {\n\n      if ( geometry.geometryGroups !== undefined ) {\n\n        for ( var i = 0,l = geometry.geometryGroupsList.length; i<l;i++ ) {\n\n          var geometryGroup = geometry.geometryGroupsList[ i ];\n\n          if ( geometryGroup.numMorphTargets !== undefined ) {\n\n            for ( var m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {\n\n              _gl.deleteBuffer( geometryGroup.__webglMorphTargetsBuffers[ m ] );\n\n            }\n\n          }\n\n          if ( geometryGroup.numMorphNormals !== undefined ) {\n\n            for ( var m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {\n\n              _gl.deleteBuffer( geometryGroup.__webglMorphNormalsBuffers[ m ] );\n\n            }\n\n          }\n\n          deleteBuffers( geometryGroup );\n\n        }\n\n      } else {\n\n        deleteBuffers( geometry );\n\n      }\n\n    }\n\n  };\n\n  var deallocateTexture = function ( texture ) {\n\n    if ( texture.image && texture.image.__webglTextureCube ) {\n\n      // cube texture\n\n      _gl.deleteTexture( texture.image.__webglTextureCube );\n\n    } else {\n\n      // 2D texture\n\n      if ( ! texture.__webglInit ) return;\n\n      texture.__webglInit = false;\n      _gl.deleteTexture( texture.__webglTexture );\n\n    }\n\n  };\n\n  var deallocateRenderTarget = function ( renderTarget ) {\n\n    if ( ! renderTarget || ! renderTarget.__webglTexture ) return;\n\n    _gl.deleteTexture( renderTarget.__webglTexture );\n\n    if ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\n\n      for ( var i = 0; i < 6; i ++ ) {\n\n        _gl.deleteFramebuffer( renderTarget.__webglFramebuffer[ i ] );\n        _gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer[ i ] );\n\n      }\n\n    } else {\n\n      _gl.deleteFramebuffer( renderTarget.__webglFramebuffer );\n      _gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer );\n\n    }\n\n  };\n\n  var deallocateMaterial = function ( material ) {\n\n    var program = material.program.program;\n\n    if ( program === undefined ) return;\n\n    material.program = undefined;\n\n    // only deallocate GL program if this was the last use of shared program\n    // assumed there is only single copy of any program in the _programs list\n    // (that's how it's constructed)\n\n    var i, il, programInfo;\n    var deleteProgram = false;\n\n    for ( i = 0, il = _programs.length; i < il; i ++ ) {\n\n      programInfo = _programs[ i ];\n\n      if ( programInfo.program === program ) {\n\n        programInfo.usedTimes --;\n\n        if ( programInfo.usedTimes === 0 ) {\n\n          deleteProgram = true;\n\n        }\n\n        break;\n\n      }\n\n    }\n\n    if ( deleteProgram === true ) {\n\n      // avoid using array.splice, this is costlier than creating new array from scratch\n\n      var newPrograms = [];\n\n      for ( i = 0, il = _programs.length; i < il; i ++ ) {\n\n        programInfo = _programs[ i ];\n\n        if ( programInfo.program !== program ) {\n\n          newPrograms.push( programInfo );\n\n        }\n\n      }\n\n      _programs = newPrograms;\n\n      _gl.deleteProgram( program );\n\n      _this.info.memory.programs --;\n\n    }\n\n  };\n\n  // Buffer initialization\n\n  function initCustomAttributes ( geometry, object ) {\n\n    var nvertices = geometry.vertices.length;\n\n    var material = object.material;\n\n    if ( material.attributes ) {\n\n      if ( geometry.__webglCustomAttributesList === undefined ) {\n\n        geometry.__webglCustomAttributesList = [];\n\n      }\n\n      for ( var a in material.attributes ) {\n\n        var attribute = material.attributes[ a ];\n\n        if ( ! attribute.__webglInitialized || attribute.createUniqueBuffers ) {\n\n          attribute.__webglInitialized = true;\n\n          var size = 1;   // \"f\" and \"i\"\n\n          if ( attribute.type === 'v2' ) size = 2;\n          else if ( attribute.type === 'v3' ) size = 3;\n          else if ( attribute.type === 'v4' ) size = 4;\n          else if ( attribute.type === 'c'  ) size = 3;\n\n          attribute.size = size;\n\n          attribute.array = new Float32Array( nvertices * size );\n\n          attribute.buffer = _gl.createBuffer();\n          attribute.buffer.belongsToAttribute = a;\n\n          attribute.needsUpdate = true;\n\n        }\n\n        geometry.__webglCustomAttributesList.push( attribute );\n\n      }\n\n    }\n\n  };\n\n  function initParticleBuffers ( geometry, object ) {\n\n    var nvertices = geometry.vertices.length;\n\n    geometry.__vertexArray = new Float32Array( nvertices * 3 );\n    geometry.__colorArray = new Float32Array( nvertices * 3 );\n\n    geometry.__sortArray = [];\n\n    geometry.__webglParticleCount = nvertices;\n\n    initCustomAttributes ( geometry, object );\n\n  };\n\n  function initLineBuffers ( geometry, object ) {\n\n    var nvertices = geometry.vertices.length;\n\n    geometry.__vertexArray = new Float32Array( nvertices * 3 );\n    geometry.__colorArray = new Float32Array( nvertices * 3 );\n    geometry.__lineDistanceArray = new Float32Array( nvertices * 1 );\n\n    geometry.__webglLineCount = nvertices;\n\n    initCustomAttributes ( geometry, object );\n\n  };\n\n  function initMeshBuffers ( geometryGroup, object ) {\n\n    var geometry = object.geometry,\n      faces3 = geometryGroup.faces3,\n\n      nvertices = faces3.length * 3,\n      ntris     = faces3.length * 1,\n      nlines    = faces3.length * 3,\n\n      material = getBufferMaterial( object, geometryGroup ),\n\n      uvType = bufferGuessUVType( material ),\n      normalType = bufferGuessNormalType( material ),\n      vertexColorType = bufferGuessVertexColorType( material );\n\n    // console.log( \"uvType\", uvType, \"normalType\", normalType, \"vertexColorType\", vertexColorType, object, geometryGroup, material );\n\n    geometryGroup.__vertexArray = new Float32Array( nvertices * 3 );\n\n    if ( normalType ) {\n\n      geometryGroup.__normalArray = new Float32Array( nvertices * 3 );\n\n    }\n\n    if ( geometry.hasTangents ) {\n\n      geometryGroup.__tangentArray = new Float32Array( nvertices * 4 );\n\n    }\n\n    if ( vertexColorType ) {\n\n      geometryGroup.__colorArray = new Float32Array( nvertices * 3 );\n\n    }\n\n    if ( uvType ) {\n\n      if ( geometry.faceVertexUvs.length > 0 ) {\n\n        geometryGroup.__uvArray = new Float32Array( nvertices * 2 );\n\n      }\n\n      if ( geometry.faceVertexUvs.length > 1 ) {\n\n        geometryGroup.__uv2Array = new Float32Array( nvertices * 2 );\n\n      }\n\n    }\n\n    if ( object.geometry.skinWeights.length && object.geometry.skinIndices.length ) {\n\n      geometryGroup.__skinIndexArray = new Float32Array( nvertices * 4 );\n      geometryGroup.__skinWeightArray = new Float32Array( nvertices * 4 );\n\n    }\n\n    var UintArray = _glExtensionElementIndexUint !== null && ntris > 21845 ? Uint32Array : Uint16Array; // 65535 / 3\n\n    geometryGroup.__typeArray = UintArray;\n    geometryGroup.__faceArray = new UintArray( ntris * 3 );\n    geometryGroup.__lineArray = new UintArray( nlines * 2 );\n\n    var m, ml;\n\n    if ( geometryGroup.numMorphTargets ) {\n\n      geometryGroup.__morphTargetsArrays = [];\n\n      for ( m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {\n\n        geometryGroup.__morphTargetsArrays.push( new Float32Array( nvertices * 3 ) );\n\n      }\n\n    }\n\n    if ( geometryGroup.numMorphNormals ) {\n\n      geometryGroup.__morphNormalsArrays = [];\n\n      for ( m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {\n\n        geometryGroup.__morphNormalsArrays.push( new Float32Array( nvertices * 3 ) );\n\n      }\n\n    }\n\n    geometryGroup.__webglFaceCount = ntris * 3;\n    geometryGroup.__webglLineCount = nlines * 2;\n\n\n    // custom attributes\n\n    if ( material.attributes ) {\n\n      if ( geometryGroup.__webglCustomAttributesList === undefined ) {\n\n        geometryGroup.__webglCustomAttributesList = [];\n\n      }\n\n      for ( var a in material.attributes ) {\n\n        // Do a shallow copy of the attribute object so different geometryGroup chunks use different\n        // attribute buffers which are correctly indexed in the setMeshBuffers function\n\n        var originalAttribute = material.attributes[ a ];\n\n        var attribute = {};\n\n        for ( var property in originalAttribute ) {\n\n          attribute[ property ] = originalAttribute[ property ];\n\n        }\n\n        if ( ! attribute.__webglInitialized || attribute.createUniqueBuffers ) {\n\n          attribute.__webglInitialized = true;\n\n          var size = 1;   // \"f\" and \"i\"\n\n          if ( attribute.type === 'v2' ) size = 2;\n          else if ( attribute.type === 'v3' ) size = 3;\n          else if ( attribute.type === 'v4' ) size = 4;\n          else if ( attribute.type === 'c'  ) size = 3;\n\n          attribute.size = size;\n\n          attribute.array = new Float32Array( nvertices * size );\n\n          attribute.buffer = _gl.createBuffer();\n          attribute.buffer.belongsToAttribute = a;\n\n          originalAttribute.needsUpdate = true;\n          attribute.__original = originalAttribute;\n\n        }\n\n        geometryGroup.__webglCustomAttributesList.push( attribute );\n\n      }\n\n    }\n\n    geometryGroup.__inittedArrays = true;\n\n  };\n\n  function getBufferMaterial( object, geometryGroup ) {\n\n    return object.material instanceof THREE.MeshFaceMaterial\n       ? object.material.materials[ geometryGroup.materialIndex ]\n       : object.material;\n\n  };\n\n  function materialNeedsSmoothNormals ( material ) {\n\n    return material && material.shading !== undefined && material.shading === THREE.SmoothShading;\n\n  };\n\n  function bufferGuessNormalType ( material ) {\n\n    // only MeshBasicMaterial and MeshDepthMaterial don't need normals\n\n    if ( ( material instanceof THREE.MeshBasicMaterial && ! material.envMap ) || material instanceof THREE.MeshDepthMaterial ) {\n\n      return false;\n\n    }\n\n    if ( materialNeedsSmoothNormals( material ) ) {\n\n      return THREE.SmoothShading;\n\n    } else {\n\n      return THREE.FlatShading;\n\n    }\n\n  };\n\n  function bufferGuessVertexColorType( material ) {\n\n    if ( material.vertexColors ) {\n\n      return material.vertexColors;\n\n    }\n\n    return false;\n\n  };\n\n  function bufferGuessUVType( material ) {\n\n    // material must use some texture to require uvs\n\n    if ( material.map ||\n         material.lightMap ||\n         material.bumpMap ||\n         material.normalMap ||\n         material.specularMap ||\n         material.alphaMap ||\n         material instanceof THREE.ShaderMaterial ) {\n\n      return true;\n\n    }\n\n    return false;\n\n  };\n\n  //\n\n  function initDirectBuffers( geometry ) {\n\n    for ( var name in geometry.attributes ) {\n\n      var bufferType = ( name === 'index' ) ? _gl.ELEMENT_ARRAY_BUFFER : _gl.ARRAY_BUFFER;\n\n      var attribute = geometry.attributes[ name ];\n      attribute.buffer = _gl.createBuffer();\n\n      _gl.bindBuffer( bufferType, attribute.buffer );\n      _gl.bufferData( bufferType, attribute.array, _gl.STATIC_DRAW );\n\n    }\n\n  }\n\n  // Buffer setting\n\n  function setParticleBuffers ( geometry, hint, object ) {\n\n    var v, c, vertex, offset, index, color,\n\n    vertices = geometry.vertices,\n    vl = vertices.length,\n\n    colors = geometry.colors,\n    cl = colors.length,\n\n    vertexArray = geometry.__vertexArray,\n    colorArray = geometry.__colorArray,\n\n    sortArray = geometry.__sortArray,\n\n    dirtyVertices = geometry.verticesNeedUpdate,\n    dirtyElements = geometry.elementsNeedUpdate,\n    dirtyColors = geometry.colorsNeedUpdate,\n\n    customAttributes = geometry.__webglCustomAttributesList,\n    i, il,\n    a, ca, cal, value,\n    customAttribute;\n\n    if ( object.sortParticles ) {\n\n      _projScreenMatrixPS.copy( _projScreenMatrix );\n      _projScreenMatrixPS.multiply( object.matrixWorld );\n\n      for ( v = 0; v < vl; v ++ ) {\n\n        vertex = vertices[ v ];\n\n        _vector3.copy( vertex );\n        _vector3.applyProjection( _projScreenMatrixPS );\n\n        sortArray[ v ] = [ _vector3.z, v ];\n\n      }\n\n      sortArray.sort( numericalSort );\n\n      for ( v = 0; v < vl; v ++ ) {\n\n        vertex = vertices[ sortArray[ v ][ 1 ] ];\n\n        offset = v * 3;\n\n        vertexArray[ offset ]     = vertex.x;\n        vertexArray[ offset + 1 ] = vertex.y;\n        vertexArray[ offset + 2 ] = vertex.z;\n\n      }\n\n      for ( c = 0; c < cl; c ++ ) {\n\n        offset = c * 3;\n\n        color = colors[ sortArray[ c ][ 1 ] ];\n\n        colorArray[ offset ]     = color.r;\n        colorArray[ offset + 1 ] = color.g;\n        colorArray[ offset + 2 ] = color.b;\n\n      }\n\n      if ( customAttributes ) {\n\n        for ( i = 0, il = customAttributes.length; i < il; i ++ ) {\n\n          customAttribute = customAttributes[ i ];\n\n          if ( ! ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) ) continue;\n\n          offset = 0;\n\n          cal = customAttribute.value.length;\n\n          if ( customAttribute.size === 1 ) {\n\n            for ( ca = 0; ca < cal; ca ++ ) {\n\n              index = sortArray[ ca ][ 1 ];\n\n              customAttribute.array[ ca ] = customAttribute.value[ index ];\n\n            }\n\n          } else if ( customAttribute.size === 2 ) {\n\n            for ( ca = 0; ca < cal; ca ++ ) {\n\n              index = sortArray[ ca ][ 1 ];\n\n              value = customAttribute.value[ index ];\n\n              customAttribute.array[ offset ]   = value.x;\n              customAttribute.array[ offset + 1 ] = value.y;\n\n              offset += 2;\n\n            }\n\n          } else if ( customAttribute.size === 3 ) {\n\n            if ( customAttribute.type === 'c' ) {\n\n              for ( ca = 0; ca < cal; ca ++ ) {\n\n                index = sortArray[ ca ][ 1 ];\n\n                value = customAttribute.value[ index ];\n\n                customAttribute.array[ offset ]     = value.r;\n                customAttribute.array[ offset + 1 ] = value.g;\n                customAttribute.array[ offset + 2 ] = value.b;\n\n                offset += 3;\n\n              }\n\n            } else {\n\n              for ( ca = 0; ca < cal; ca ++ ) {\n\n                index = sortArray[ ca ][ 1 ];\n\n                value = customAttribute.value[ index ];\n\n                customAttribute.array[ offset ]   = value.x;\n                customAttribute.array[ offset + 1 ] = value.y;\n                customAttribute.array[ offset + 2 ] = value.z;\n\n                offset += 3;\n\n              }\n\n            }\n\n          } else if ( customAttribute.size === 4 ) {\n\n            for ( ca = 0; ca < cal; ca ++ ) {\n\n              index = sortArray[ ca ][ 1 ];\n\n              value = customAttribute.value[ index ];\n\n              customAttribute.array[ offset ]      = value.x;\n              customAttribute.array[ offset + 1  ] = value.y;\n              customAttribute.array[ offset + 2  ] = value.z;\n              customAttribute.array[ offset + 3  ] = value.w;\n\n              offset += 4;\n\n            }\n\n          }\n\n        }\n\n      }\n\n    } else {\n\n      if ( dirtyVertices ) {\n\n        for ( v = 0; v < vl; v ++ ) {\n\n          vertex = vertices[ v ];\n\n          offset = v * 3;\n\n          vertexArray[ offset ]     = vertex.x;\n          vertexArray[ offset + 1 ] = vertex.y;\n          vertexArray[ offset + 2 ] = vertex.z;\n\n        }\n\n      }\n\n      if ( dirtyColors ) {\n\n        for ( c = 0; c < cl; c ++ ) {\n\n          color = colors[ c ];\n\n          offset = c * 3;\n\n          colorArray[ offset ]     = color.r;\n          colorArray[ offset + 1 ] = color.g;\n          colorArray[ offset + 2 ] = color.b;\n\n        }\n\n      }\n\n      if ( customAttributes ) {\n\n        for ( i = 0, il = customAttributes.length; i < il; i ++ ) {\n\n          customAttribute = customAttributes[ i ];\n\n          if ( customAttribute.needsUpdate &&\n             ( customAttribute.boundTo === undefined ||\n               customAttribute.boundTo === 'vertices' ) ) {\n\n            cal = customAttribute.value.length;\n\n            offset = 0;\n\n            if ( customAttribute.size === 1 ) {\n\n              for ( ca = 0; ca < cal; ca ++ ) {\n\n                customAttribute.array[ ca ] = customAttribute.value[ ca ];\n\n              }\n\n            } else if ( customAttribute.size === 2 ) {\n\n              for ( ca = 0; ca < cal; ca ++ ) {\n\n                value = customAttribute.value[ ca ];\n\n                customAttribute.array[ offset ]   = value.x;\n                customAttribute.array[ offset + 1 ] = value.y;\n\n                offset += 2;\n\n              }\n\n            } else if ( customAttribute.size === 3 ) {\n\n              if ( customAttribute.type === 'c' ) {\n\n                for ( ca = 0; ca < cal; ca ++ ) {\n\n                  value = customAttribute.value[ ca ];\n\n                  customAttribute.array[ offset ]   = value.r;\n                  customAttribute.array[ offset + 1 ] = value.g;\n                  customAttribute.array[ offset + 2 ] = value.b;\n\n                  offset += 3;\n\n                }\n\n              } else {\n\n                for ( ca = 0; ca < cal; ca ++ ) {\n\n                  value = customAttribute.value[ ca ];\n\n                  customAttribute.array[ offset ]   = value.x;\n                  customAttribute.array[ offset + 1 ] = value.y;\n                  customAttribute.array[ offset + 2 ] = value.z;\n\n                  offset += 3;\n\n                }\n\n              }\n\n            } else if ( customAttribute.size === 4 ) {\n\n              for ( ca = 0; ca < cal; ca ++ ) {\n\n                value = customAttribute.value[ ca ];\n\n                customAttribute.array[ offset ]      = value.x;\n                customAttribute.array[ offset + 1  ] = value.y;\n                customAttribute.array[ offset + 2  ] = value.z;\n                customAttribute.array[ offset + 3  ] = value.w;\n\n                offset += 4;\n\n              }\n\n            }\n\n          }\n\n        }\n\n      }\n\n    }\n\n    if ( dirtyVertices || object.sortParticles ) {\n\n      _gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );\n      _gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\n\n    }\n\n    if ( dirtyColors || object.sortParticles ) {\n\n      _gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );\n      _gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\n\n    }\n\n    if ( customAttributes ) {\n\n      for ( i = 0, il = customAttributes.length; i < il; i ++ ) {\n\n        customAttribute = customAttributes[ i ];\n\n        if ( customAttribute.needsUpdate || object.sortParticles ) {\n\n          _gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\n          _gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\n\n        }\n\n      }\n\n    }\n\n  }\n\n  function setLineBuffers ( geometry, hint ) {\n\n    var v, c, d, vertex, offset, color,\n\n    vertices = geometry.vertices,\n    colors = geometry.colors,\n    lineDistances = geometry.lineDistances,\n\n    vl = vertices.length,\n    cl = colors.length,\n    dl = lineDistances.length,\n\n    vertexArray = geometry.__vertexArray,\n    colorArray = geometry.__colorArray,\n    lineDistanceArray = geometry.__lineDistanceArray,\n\n    dirtyVertices = geometry.verticesNeedUpdate,\n    dirtyColors = geometry.colorsNeedUpdate,\n    dirtyLineDistances = geometry.lineDistancesNeedUpdate,\n\n    customAttributes = geometry.__webglCustomAttributesList,\n\n    i, il,\n    a, ca, cal, value,\n    customAttribute;\n\n    if ( dirtyVertices ) {\n\n      for ( v = 0; v < vl; v ++ ) {\n\n        vertex = vertices[ v ];\n\n        offset = v * 3;\n\n        vertexArray[ offset ]     = vertex.x;\n        vertexArray[ offset + 1 ] = vertex.y;\n        vertexArray[ offset + 2 ] = vertex.z;\n\n      }\n\n      _gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );\n      _gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\n\n    }\n\n    if ( dirtyColors ) {\n\n      for ( c = 0; c < cl; c ++ ) {\n\n        color = colors[ c ];\n\n        offset = c * 3;\n\n        colorArray[ offset ]     = color.r;\n        colorArray[ offset + 1 ] = color.g;\n        colorArray[ offset + 2 ] = color.b;\n\n      }\n\n      _gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );\n      _gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\n\n    }\n\n    if ( dirtyLineDistances ) {\n\n      for ( d = 0; d < dl; d ++ ) {\n\n        lineDistanceArray[ d ] = lineDistances[ d ];\n\n      }\n\n      _gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglLineDistanceBuffer );\n      _gl.bufferData( _gl.ARRAY_BUFFER, lineDistanceArray, hint );\n\n    }\n\n    if ( customAttributes ) {\n\n      for ( i = 0, il = customAttributes.length; i < il; i ++ ) {\n\n        customAttribute = customAttributes[ i ];\n\n        if ( customAttribute.needsUpdate &&\n           ( customAttribute.boundTo === undefined ||\n             customAttribute.boundTo === 'vertices' ) ) {\n\n          offset = 0;\n\n          cal = customAttribute.value.length;\n\n          if ( customAttribute.size === 1 ) {\n\n            for ( ca = 0; ca < cal; ca ++ ) {\n\n              customAttribute.array[ ca ] = customAttribute.value[ ca ];\n\n            }\n\n          } else if ( customAttribute.size === 2 ) {\n\n            for ( ca = 0; ca < cal; ca ++ ) {\n\n              value = customAttribute.value[ ca ];\n\n              customAttribute.array[ offset ]   = value.x;\n              customAttribute.array[ offset + 1 ] = value.y;\n\n              offset += 2;\n\n            }\n\n          } else if ( customAttribute.size === 3 ) {\n\n            if ( customAttribute.type === 'c' ) {\n\n              for ( ca = 0; ca < cal; ca ++ ) {\n\n                value = customAttribute.value[ ca ];\n\n                customAttribute.array[ offset ]   = value.r;\n                customAttribute.array[ offset + 1 ] = value.g;\n                customAttribute.array[ offset + 2 ] = value.b;\n\n                offset += 3;\n\n              }\n\n            } else {\n\n              for ( ca = 0; ca < cal; ca ++ ) {\n\n                value = customAttribute.value[ ca ];\n\n                customAttribute.array[ offset ]   = value.x;\n                customAttribute.array[ offset + 1 ] = value.y;\n                customAttribute.array[ offset + 2 ] = value.z;\n\n                offset += 3;\n\n              }\n\n            }\n\n          } else if ( customAttribute.size === 4 ) {\n\n            for ( ca = 0; ca < cal; ca ++ ) {\n\n              value = customAttribute.value[ ca ];\n\n              customAttribute.array[ offset ]    = value.x;\n              customAttribute.array[ offset + 1  ] = value.y;\n              customAttribute.array[ offset + 2  ] = value.z;\n              customAttribute.array[ offset + 3  ] = value.w;\n\n              offset += 4;\n\n            }\n\n          }\n\n          _gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\n          _gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\n\n        }\n\n      }\n\n    }\n\n  }\n\n  function setMeshBuffers( geometryGroup, object, hint, dispose, material ) {\n\n    if ( ! geometryGroup.__inittedArrays ) {\n\n      return;\n\n    }\n\n    var normalType = bufferGuessNormalType( material ),\n    vertexColorType = bufferGuessVertexColorType( material ),\n    uvType = bufferGuessUVType( material ),\n\n    needsSmoothNormals = ( normalType === THREE.SmoothShading );\n\n    var f, fl, fi, face,\n    vertexNormals, faceNormal, normal,\n    vertexColors, faceColor,\n    vertexTangents,\n    uv, uv2, v1, v2, v3, v4, t1, t2, t3, t4, n1, n2, n3, n4,\n    c1, c2, c3,\n    sw1, sw2, sw3, sw4,\n    si1, si2, si3, si4,\n    sa1, sa2, sa3, sa4,\n    sb1, sb2, sb3, sb4,\n    m, ml, i, il,\n    vn, uvi, uv2i,\n    vk, vkl, vka,\n    nka, chf, faceVertexNormals,\n    a,\n\n    vertexIndex = 0,\n\n    offset = 0,\n    offset_uv = 0,\n    offset_uv2 = 0,\n    offset_face = 0,\n    offset_normal = 0,\n    offset_tangent = 0,\n    offset_line = 0,\n    offset_color = 0,\n    offset_skin = 0,\n    offset_morphTarget = 0,\n    offset_custom = 0,\n    offset_customSrc = 0,\n\n    value,\n\n    vertexArray = geometryGroup.__vertexArray,\n    uvArray = geometryGroup.__uvArray,\n    uv2Array = geometryGroup.__uv2Array,\n    normalArray = geometryGroup.__normalArray,\n    tangentArray = geometryGroup.__tangentArray,\n    colorArray = geometryGroup.__colorArray,\n\n    skinIndexArray = geometryGroup.__skinIndexArray,\n    skinWeightArray = geometryGroup.__skinWeightArray,\n\n    morphTargetsArrays = geometryGroup.__morphTargetsArrays,\n    morphNormalsArrays = geometryGroup.__morphNormalsArrays,\n\n    customAttributes = geometryGroup.__webglCustomAttributesList,\n    customAttribute,\n\n    faceArray = geometryGroup.__faceArray,\n    lineArray = geometryGroup.__lineArray,\n\n    geometry = object.geometry, // this is shared for all chunks\n\n    dirtyVertices = geometry.verticesNeedUpdate,\n    dirtyElements = geometry.elementsNeedUpdate,\n    dirtyUvs = geometry.uvsNeedUpdate,\n    dirtyNormals = geometry.normalsNeedUpdate,\n    dirtyTangents = geometry.tangentsNeedUpdate,\n    dirtyColors = geometry.colorsNeedUpdate,\n    dirtyMorphTargets = geometry.morphTargetsNeedUpdate,\n\n    vertices = geometry.vertices,\n    chunk_faces3 = geometryGroup.faces3,\n    obj_faces = geometry.faces,\n\n    obj_uvs  = geometry.faceVertexUvs[ 0 ],\n    obj_uvs2 = geometry.faceVertexUvs[ 1 ],\n\n    obj_colors = geometry.colors,\n\n    obj_skinIndices = geometry.skinIndices,\n    obj_skinWeights = geometry.skinWeights,\n\n    morphTargets = geometry.morphTargets,\n    morphNormals = geometry.morphNormals;\n\n    if ( dirtyVertices ) {\n\n      for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n        face = obj_faces[ chunk_faces3[ f ] ];\n\n        v1 = vertices[ face.a ];\n        v2 = vertices[ face.b ];\n        v3 = vertices[ face.c ];\n\n        vertexArray[ offset ]     = v1.x;\n        vertexArray[ offset + 1 ] = v1.y;\n        vertexArray[ offset + 2 ] = v1.z;\n\n        vertexArray[ offset + 3 ] = v2.x;\n        vertexArray[ offset + 4 ] = v2.y;\n        vertexArray[ offset + 5 ] = v2.z;\n\n        vertexArray[ offset + 6 ] = v3.x;\n        vertexArray[ offset + 7 ] = v3.y;\n        vertexArray[ offset + 8 ] = v3.z;\n\n        offset += 9;\n\n      }\n\n      _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\n      _gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\n\n    }\n\n    if ( dirtyMorphTargets ) {\n\n      for ( vk = 0, vkl = morphTargets.length; vk < vkl; vk ++ ) {\n\n        offset_morphTarget = 0;\n\n        for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n          chf = chunk_faces3[ f ];\n          face = obj_faces[ chf ];\n\n          // morph positions\n\n          v1 = morphTargets[ vk ].vertices[ face.a ];\n          v2 = morphTargets[ vk ].vertices[ face.b ];\n          v3 = morphTargets[ vk ].vertices[ face.c ];\n\n          vka = morphTargetsArrays[ vk ];\n\n          vka[ offset_morphTarget ]     = v1.x;\n          vka[ offset_morphTarget + 1 ] = v1.y;\n          vka[ offset_morphTarget + 2 ] = v1.z;\n\n          vka[ offset_morphTarget + 3 ] = v2.x;\n          vka[ offset_morphTarget + 4 ] = v2.y;\n          vka[ offset_morphTarget + 5 ] = v2.z;\n\n          vka[ offset_morphTarget + 6 ] = v3.x;\n          vka[ offset_morphTarget + 7 ] = v3.y;\n          vka[ offset_morphTarget + 8 ] = v3.z;\n\n          // morph normals\n\n          if ( material.morphNormals ) {\n\n            if ( needsSmoothNormals ) {\n\n              faceVertexNormals = morphNormals[ vk ].vertexNormals[ chf ];\n\n              n1 = faceVertexNormals.a;\n              n2 = faceVertexNormals.b;\n              n3 = faceVertexNormals.c;\n\n            } else {\n\n              n1 = morphNormals[ vk ].faceNormals[ chf ];\n              n2 = n1;\n              n3 = n1;\n\n            }\n\n            nka = morphNormalsArrays[ vk ];\n\n            nka[ offset_morphTarget ]     = n1.x;\n            nka[ offset_morphTarget + 1 ] = n1.y;\n            nka[ offset_morphTarget + 2 ] = n1.z;\n\n            nka[ offset_morphTarget + 3 ] = n2.x;\n            nka[ offset_morphTarget + 4 ] = n2.y;\n            nka[ offset_morphTarget + 5 ] = n2.z;\n\n            nka[ offset_morphTarget + 6 ] = n3.x;\n            nka[ offset_morphTarget + 7 ] = n3.y;\n            nka[ offset_morphTarget + 8 ] = n3.z;\n\n          }\n\n          //\n\n          offset_morphTarget += 9;\n\n        }\n\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ vk ] );\n        _gl.bufferData( _gl.ARRAY_BUFFER, morphTargetsArrays[ vk ], hint );\n\n        if ( material.morphNormals ) {\n\n          _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ vk ] );\n          _gl.bufferData( _gl.ARRAY_BUFFER, morphNormalsArrays[ vk ], hint );\n\n        }\n\n      }\n\n    }\n\n    if ( obj_skinWeights.length ) {\n\n      for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n        face = obj_faces[ chunk_faces3[ f ] ];\n\n        // weights\n\n        sw1 = obj_skinWeights[ face.a ];\n        sw2 = obj_skinWeights[ face.b ];\n        sw3 = obj_skinWeights[ face.c ];\n\n        skinWeightArray[ offset_skin ]     = sw1.x;\n        skinWeightArray[ offset_skin + 1 ] = sw1.y;\n        skinWeightArray[ offset_skin + 2 ] = sw1.z;\n        skinWeightArray[ offset_skin + 3 ] = sw1.w;\n\n        skinWeightArray[ offset_skin + 4 ] = sw2.x;\n        skinWeightArray[ offset_skin + 5 ] = sw2.y;\n        skinWeightArray[ offset_skin + 6 ] = sw2.z;\n        skinWeightArray[ offset_skin + 7 ] = sw2.w;\n\n        skinWeightArray[ offset_skin + 8 ]  = sw3.x;\n        skinWeightArray[ offset_skin + 9 ]  = sw3.y;\n        skinWeightArray[ offset_skin + 10 ] = sw3.z;\n        skinWeightArray[ offset_skin + 11 ] = sw3.w;\n\n        // indices\n\n        si1 = obj_skinIndices[ face.a ];\n        si2 = obj_skinIndices[ face.b ];\n        si3 = obj_skinIndices[ face.c ];\n\n        skinIndexArray[ offset_skin ]     = si1.x;\n        skinIndexArray[ offset_skin + 1 ] = si1.y;\n        skinIndexArray[ offset_skin + 2 ] = si1.z;\n        skinIndexArray[ offset_skin + 3 ] = si1.w;\n\n        skinIndexArray[ offset_skin + 4 ] = si2.x;\n        skinIndexArray[ offset_skin + 5 ] = si2.y;\n        skinIndexArray[ offset_skin + 6 ] = si2.z;\n        skinIndexArray[ offset_skin + 7 ] = si2.w;\n\n        skinIndexArray[ offset_skin + 8 ]  = si3.x;\n        skinIndexArray[ offset_skin + 9 ]  = si3.y;\n        skinIndexArray[ offset_skin + 10 ] = si3.z;\n        skinIndexArray[ offset_skin + 11 ] = si3.w;\n\n        offset_skin += 12;\n\n      }\n\n      if ( offset_skin > 0 ) {\n\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );\n        _gl.bufferData( _gl.ARRAY_BUFFER, skinIndexArray, hint );\n\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );\n        _gl.bufferData( _gl.ARRAY_BUFFER, skinWeightArray, hint );\n\n      }\n\n    }\n\n    if ( dirtyColors && vertexColorType ) {\n\n      for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n        face = obj_faces[ chunk_faces3[ f ] ];\n\n        vertexColors = face.vertexColors;\n        faceColor = face.color;\n\n        if ( vertexColors.length === 3 && vertexColorType === THREE.VertexColors ) {\n\n          c1 = vertexColors[ 0 ];\n          c2 = vertexColors[ 1 ];\n          c3 = vertexColors[ 2 ];\n\n        } else {\n\n          c1 = faceColor;\n          c2 = faceColor;\n          c3 = faceColor;\n\n        }\n\n        colorArray[ offset_color ]     = c1.r;\n        colorArray[ offset_color + 1 ] = c1.g;\n        colorArray[ offset_color + 2 ] = c1.b;\n\n        colorArray[ offset_color + 3 ] = c2.r;\n        colorArray[ offset_color + 4 ] = c2.g;\n        colorArray[ offset_color + 5 ] = c2.b;\n\n        colorArray[ offset_color + 6 ] = c3.r;\n        colorArray[ offset_color + 7 ] = c3.g;\n        colorArray[ offset_color + 8 ] = c3.b;\n\n        offset_color += 9;\n\n      }\n\n      if ( offset_color > 0 ) {\n\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );\n        _gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\n\n      }\n\n    }\n\n    if ( dirtyTangents && geometry.hasTangents ) {\n\n      for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n        face = obj_faces[ chunk_faces3[ f ] ];\n\n        vertexTangents = face.vertexTangents;\n\n        t1 = vertexTangents[ 0 ];\n        t2 = vertexTangents[ 1 ];\n        t3 = vertexTangents[ 2 ];\n\n        tangentArray[ offset_tangent ]     = t1.x;\n        tangentArray[ offset_tangent + 1 ] = t1.y;\n        tangentArray[ offset_tangent + 2 ] = t1.z;\n        tangentArray[ offset_tangent + 3 ] = t1.w;\n\n        tangentArray[ offset_tangent + 4 ] = t2.x;\n        tangentArray[ offset_tangent + 5 ] = t2.y;\n        tangentArray[ offset_tangent + 6 ] = t2.z;\n        tangentArray[ offset_tangent + 7 ] = t2.w;\n\n        tangentArray[ offset_tangent + 8 ]  = t3.x;\n        tangentArray[ offset_tangent + 9 ]  = t3.y;\n        tangentArray[ offset_tangent + 10 ] = t3.z;\n        tangentArray[ offset_tangent + 11 ] = t3.w;\n\n        offset_tangent += 12;\n\n      }\n\n      _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );\n      _gl.bufferData( _gl.ARRAY_BUFFER, tangentArray, hint );\n\n    }\n\n    if ( dirtyNormals && normalType ) {\n\n      for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n        face = obj_faces[ chunk_faces3[ f ] ];\n\n        vertexNormals = face.vertexNormals;\n        faceNormal = face.normal;\n\n        if ( vertexNormals.length === 3 && needsSmoothNormals ) {\n\n          for ( i = 0; i < 3; i ++ ) {\n\n            vn = vertexNormals[ i ];\n\n            normalArray[ offset_normal ]     = vn.x;\n            normalArray[ offset_normal + 1 ] = vn.y;\n            normalArray[ offset_normal + 2 ] = vn.z;\n\n            offset_normal += 3;\n\n          }\n\n        } else {\n\n          for ( i = 0; i < 3; i ++ ) {\n\n            normalArray[ offset_normal ]     = faceNormal.x;\n            normalArray[ offset_normal + 1 ] = faceNormal.y;\n            normalArray[ offset_normal + 2 ] = faceNormal.z;\n\n            offset_normal += 3;\n\n          }\n\n        }\n\n      }\n\n      _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );\n      _gl.bufferData( _gl.ARRAY_BUFFER, normalArray, hint );\n\n    }\n\n    if ( dirtyUvs && obj_uvs && uvType ) {\n\n      for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n        fi = chunk_faces3[ f ];\n\n        uv = obj_uvs[ fi ];\n\n        if ( uv === undefined ) continue;\n\n        for ( i = 0; i < 3; i ++ ) {\n\n          uvi = uv[ i ];\n\n          uvArray[ offset_uv ]     = uvi.x;\n          uvArray[ offset_uv + 1 ] = uvi.y;\n\n          offset_uv += 2;\n\n        }\n\n      }\n\n      if ( offset_uv > 0 ) {\n\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );\n        _gl.bufferData( _gl.ARRAY_BUFFER, uvArray, hint );\n\n      }\n\n    }\n\n    if ( dirtyUvs && obj_uvs2 && uvType ) {\n\n      for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n        fi = chunk_faces3[ f ];\n\n        uv2 = obj_uvs2[ fi ];\n\n        if ( uv2 === undefined ) continue;\n\n        for ( i = 0; i < 3; i ++ ) {\n\n          uv2i = uv2[ i ];\n\n          uv2Array[ offset_uv2 ]     = uv2i.x;\n          uv2Array[ offset_uv2 + 1 ] = uv2i.y;\n\n          offset_uv2 += 2;\n\n        }\n\n      }\n\n      if ( offset_uv2 > 0 ) {\n\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );\n        _gl.bufferData( _gl.ARRAY_BUFFER, uv2Array, hint );\n\n      }\n\n    }\n\n    if ( dirtyElements ) {\n\n      for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n        faceArray[ offset_face ]   = vertexIndex;\n        faceArray[ offset_face + 1 ] = vertexIndex + 1;\n        faceArray[ offset_face + 2 ] = vertexIndex + 2;\n\n        offset_face += 3;\n\n        lineArray[ offset_line ]     = vertexIndex;\n        lineArray[ offset_line + 1 ] = vertexIndex + 1;\n\n        lineArray[ offset_line + 2 ] = vertexIndex;\n        lineArray[ offset_line + 3 ] = vertexIndex + 2;\n\n        lineArray[ offset_line + 4 ] = vertexIndex + 1;\n        lineArray[ offset_line + 5 ] = vertexIndex + 2;\n\n        offset_line += 6;\n\n        vertexIndex += 3;\n\n      }\n\n      _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );\n      _gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, faceArray, hint );\n\n      _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );\n      _gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, lineArray, hint );\n\n    }\n\n    if ( customAttributes ) {\n\n      for ( i = 0, il = customAttributes.length; i < il; i ++ ) {\n\n        customAttribute = customAttributes[ i ];\n\n        if ( ! customAttribute.__original.needsUpdate ) continue;\n\n        offset_custom = 0;\n        offset_customSrc = 0;\n\n        if ( customAttribute.size === 1 ) {\n\n          if ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\n\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n              face = obj_faces[ chunk_faces3[ f ] ];\n\n              customAttribute.array[ offset_custom ]     = customAttribute.value[ face.a ];\n              customAttribute.array[ offset_custom + 1 ] = customAttribute.value[ face.b ];\n              customAttribute.array[ offset_custom + 2 ] = customAttribute.value[ face.c ];\n\n              offset_custom += 3;\n\n            }\n\n          } else if ( customAttribute.boundTo === 'faces' ) {\n\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n              value = customAttribute.value[ chunk_faces3[ f ] ];\n\n              customAttribute.array[ offset_custom ]     = value;\n              customAttribute.array[ offset_custom + 1 ] = value;\n              customAttribute.array[ offset_custom + 2 ] = value;\n\n              offset_custom += 3;\n\n            }\n\n          }\n\n        } else if ( customAttribute.size === 2 ) {\n\n          if ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\n\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n              face = obj_faces[ chunk_faces3[ f ] ];\n\n              v1 = customAttribute.value[ face.a ];\n              v2 = customAttribute.value[ face.b ];\n              v3 = customAttribute.value[ face.c ];\n\n              customAttribute.array[ offset_custom ]     = v1.x;\n              customAttribute.array[ offset_custom + 1 ] = v1.y;\n\n              customAttribute.array[ offset_custom + 2 ] = v2.x;\n              customAttribute.array[ offset_custom + 3 ] = v2.y;\n\n              customAttribute.array[ offset_custom + 4 ] = v3.x;\n              customAttribute.array[ offset_custom + 5 ] = v3.y;\n\n              offset_custom += 6;\n\n            }\n\n          } else if ( customAttribute.boundTo === 'faces' ) {\n\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n              value = customAttribute.value[ chunk_faces3[ f ] ];\n\n              v1 = value;\n              v2 = value;\n              v3 = value;\n\n              customAttribute.array[ offset_custom ]     = v1.x;\n              customAttribute.array[ offset_custom + 1 ] = v1.y;\n\n              customAttribute.array[ offset_custom + 2 ] = v2.x;\n              customAttribute.array[ offset_custom + 3 ] = v2.y;\n\n              customAttribute.array[ offset_custom + 4 ] = v3.x;\n              customAttribute.array[ offset_custom + 5 ] = v3.y;\n\n              offset_custom += 6;\n\n            }\n\n          }\n\n        } else if ( customAttribute.size === 3 ) {\n\n          var pp;\n\n          if ( customAttribute.type === 'c' ) {\n\n            pp = [ 'r', 'g', 'b' ];\n\n          } else {\n\n            pp = [ 'x', 'y', 'z' ];\n\n          }\n\n          if ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\n\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n              face = obj_faces[ chunk_faces3[ f ] ];\n\n              v1 = customAttribute.value[ face.a ];\n              v2 = customAttribute.value[ face.b ];\n              v3 = customAttribute.value[ face.c ];\n\n              customAttribute.array[ offset_custom ]     = v1[ pp[ 0 ] ];\n              customAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\n              customAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\n\n              customAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\n              customAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\n              customAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\n\n              customAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\n              customAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\n              customAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\n\n              offset_custom += 9;\n\n            }\n\n          } else if ( customAttribute.boundTo === 'faces' ) {\n\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n              value = customAttribute.value[ chunk_faces3[ f ] ];\n\n              v1 = value;\n              v2 = value;\n              v3 = value;\n\n              customAttribute.array[ offset_custom ]     = v1[ pp[ 0 ] ];\n              customAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\n              customAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\n\n              customAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\n              customAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\n              customAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\n\n              customAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\n              customAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\n              customAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\n\n              offset_custom += 9;\n\n            }\n\n          } else if ( customAttribute.boundTo === 'faceVertices' ) {\n\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n              value = customAttribute.value[ chunk_faces3[ f ] ];\n\n              v1 = value[ 0 ];\n              v2 = value[ 1 ];\n              v3 = value[ 2 ];\n\n              customAttribute.array[ offset_custom ]     = v1[ pp[ 0 ] ];\n              customAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\n              customAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\n\n              customAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\n              customAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\n              customAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\n\n              customAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\n              customAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\n              customAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\n\n              offset_custom += 9;\n\n            }\n\n          }\n\n        } else if ( customAttribute.size === 4 ) {\n\n          if ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\n\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n              face = obj_faces[ chunk_faces3[ f ] ];\n\n              v1 = customAttribute.value[ face.a ];\n              v2 = customAttribute.value[ face.b ];\n              v3 = customAttribute.value[ face.c ];\n\n              customAttribute.array[ offset_custom  ]   = v1.x;\n              customAttribute.array[ offset_custom + 1  ] = v1.y;\n              customAttribute.array[ offset_custom + 2  ] = v1.z;\n              customAttribute.array[ offset_custom + 3  ] = v1.w;\n\n              customAttribute.array[ offset_custom + 4  ] = v2.x;\n              customAttribute.array[ offset_custom + 5  ] = v2.y;\n              customAttribute.array[ offset_custom + 6  ] = v2.z;\n              customAttribute.array[ offset_custom + 7  ] = v2.w;\n\n              customAttribute.array[ offset_custom + 8  ] = v3.x;\n              customAttribute.array[ offset_custom + 9  ] = v3.y;\n              customAttribute.array[ offset_custom + 10 ] = v3.z;\n              customAttribute.array[ offset_custom + 11 ] = v3.w;\n\n              offset_custom += 12;\n\n            }\n\n          } else if ( customAttribute.boundTo === 'faces' ) {\n\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n              value = customAttribute.value[ chunk_faces3[ f ] ];\n\n              v1 = value;\n              v2 = value;\n              v3 = value;\n\n              customAttribute.array[ offset_custom  ]   = v1.x;\n              customAttribute.array[ offset_custom + 1  ] = v1.y;\n              customAttribute.array[ offset_custom + 2  ] = v1.z;\n              customAttribute.array[ offset_custom + 3  ] = v1.w;\n\n              customAttribute.array[ offset_custom + 4  ] = v2.x;\n              customAttribute.array[ offset_custom + 5  ] = v2.y;\n              customAttribute.array[ offset_custom + 6  ] = v2.z;\n              customAttribute.array[ offset_custom + 7  ] = v2.w;\n\n              customAttribute.array[ offset_custom + 8  ] = v3.x;\n              customAttribute.array[ offset_custom + 9  ] = v3.y;\n              customAttribute.array[ offset_custom + 10 ] = v3.z;\n              customAttribute.array[ offset_custom + 11 ] = v3.w;\n\n              offset_custom += 12;\n\n            }\n\n          } else if ( customAttribute.boundTo === 'faceVertices' ) {\n\n            for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n              value = customAttribute.value[ chunk_faces3[ f ] ];\n\n              v1 = value[ 0 ];\n              v2 = value[ 1 ];\n              v3 = value[ 2 ];\n\n              customAttribute.array[ offset_custom  ]   = v1.x;\n              customAttribute.array[ offset_custom + 1  ] = v1.y;\n              customAttribute.array[ offset_custom + 2  ] = v1.z;\n              customAttribute.array[ offset_custom + 3  ] = v1.w;\n\n              customAttribute.array[ offset_custom + 4  ] = v2.x;\n              customAttribute.array[ offset_custom + 5  ] = v2.y;\n              customAttribute.array[ offset_custom + 6  ] = v2.z;\n              customAttribute.array[ offset_custom + 7  ] = v2.w;\n\n              customAttribute.array[ offset_custom + 8  ] = v3.x;\n              customAttribute.array[ offset_custom + 9  ] = v3.y;\n              customAttribute.array[ offset_custom + 10 ] = v3.z;\n              customAttribute.array[ offset_custom + 11 ] = v3.w;\n\n              offset_custom += 12;\n\n            }\n\n          }\n\n        }\n\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\n        _gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\n\n      }\n\n    }\n\n    if ( dispose ) {\n\n      delete geometryGroup.__inittedArrays;\n      delete geometryGroup.__colorArray;\n      delete geometryGroup.__normalArray;\n      delete geometryGroup.__tangentArray;\n      delete geometryGroup.__uvArray;\n      delete geometryGroup.__uv2Array;\n      delete geometryGroup.__faceArray;\n      delete geometryGroup.__vertexArray;\n      delete geometryGroup.__lineArray;\n      delete geometryGroup.__skinIndexArray;\n      delete geometryGroup.__skinWeightArray;\n\n    }\n\n  };\n\n  function setDirectBuffers( geometry, hint ) {\n\n    var attributes = geometry.attributes;\n\n    var attributeName, attributeItem;\n\n    for ( attributeName in attributes ) {\n\n      attributeItem = attributes[ attributeName ];\n\n      if ( attributeItem.needsUpdate ) {\n\n        if ( attributeName === 'index' ) {\n\n          _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attributeItem.buffer );\n          _gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, attributeItem.array, hint );\n\n        } else {\n\n          _gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );\n          _gl.bufferData( _gl.ARRAY_BUFFER, attributeItem.array, hint );\n\n        }\n\n        attributeItem.needsUpdate = false;\n\n      }\n\n    }\n\n  }\n\n  // Buffer rendering\n\n  this.renderBufferImmediate = function ( object, program, material ) {\n\n    initAttributes();\n\n    if ( object.hasPositions && ! object.__webglVertexBuffer ) object.__webglVertexBuffer = _gl.createBuffer();\n    if ( object.hasNormals && ! object.__webglNormalBuffer ) object.__webglNormalBuffer = _gl.createBuffer();\n    if ( object.hasUvs && ! object.__webglUvBuffer ) object.__webglUvBuffer = _gl.createBuffer();\n    if ( object.hasColors && ! object.__webglColorBuffer ) object.__webglColorBuffer = _gl.createBuffer();\n\n    if ( object.hasPositions ) {\n\n      _gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglVertexBuffer );\n      _gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n      enableAttribute( program.attributes.position );\n      _gl.vertexAttribPointer( program.attributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n    }\n\n    if ( object.hasNormals ) {\n\n      _gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglNormalBuffer );\n\n      if ( material.shading === THREE.FlatShading ) {\n\n        var nx, ny, nz,\n          nax, nbx, ncx, nay, nby, ncy, naz, nbz, ncz,\n          normalArray,\n          i, il = object.count * 3;\n\n        for ( i = 0; i < il; i += 9 ) {\n\n          normalArray = object.normalArray;\n\n          nax  = normalArray[ i ];\n          nay  = normalArray[ i + 1 ];\n          naz  = normalArray[ i + 2 ];\n\n          nbx  = normalArray[ i + 3 ];\n          nby  = normalArray[ i + 4 ];\n          nbz  = normalArray[ i + 5 ];\n\n          ncx  = normalArray[ i + 6 ];\n          ncy  = normalArray[ i + 7 ];\n          ncz  = normalArray[ i + 8 ];\n\n          nx = ( nax + nbx + ncx ) / 3;\n          ny = ( nay + nby + ncy ) / 3;\n          nz = ( naz + nbz + ncz ) / 3;\n\n          normalArray[ i ]   = nx;\n          normalArray[ i + 1 ] = ny;\n          normalArray[ i + 2 ] = nz;\n\n          normalArray[ i + 3 ] = nx;\n          normalArray[ i + 4 ] = ny;\n          normalArray[ i + 5 ] = nz;\n\n          normalArray[ i + 6 ] = nx;\n          normalArray[ i + 7 ] = ny;\n          normalArray[ i + 8 ] = nz;\n\n        }\n\n      }\n\n      _gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n      enableAttribute( program.attributes.normal );\n      _gl.vertexAttribPointer( program.attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n    }\n\n    if ( object.hasUvs && material.map ) {\n\n      _gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglUvBuffer );\n      _gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n      enableAttribute( program.attributes.uv );\n      _gl.vertexAttribPointer( program.attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n    }\n\n    if ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\n\n      _gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglColorBuffer );\n      _gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n      enableAttribute( program.attributes.color );\n      _gl.vertexAttribPointer( program.attributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n    }\n\n    disableUnusedAttributes();\n\n    _gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n    object.count = 0;\n\n  };\n\n  function setupVertexAttributes( material, programAttributes, geometryAttributes, startIndex ) {\n\n    for ( var attributeName in programAttributes ) {\n\n      var attributePointer = programAttributes[ attributeName ];\n      var attributeItem = geometryAttributes[ attributeName ];\n\n      if ( attributePointer >= 0 ) {\n\n        if ( attributeItem ) {\n\n          var attributeSize = attributeItem.itemSize;\n\n          _gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );\n          enableAttribute( attributePointer );\n          _gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, startIndex * attributeSize * 4 ); // 4 bytes per Float32\n\n        } else if ( material.defaultAttributeValues ) {\n\n          if ( material.defaultAttributeValues[ attributeName ].length === 2 ) {\n\n            _gl.vertexAttrib2fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\n\n          } else if ( material.defaultAttributeValues[ attributeName ].length === 3 ) {\n\n            _gl.vertexAttrib3fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\n\n          }\n\n        }\n\n      }\n\n    }\n\n    disableUnusedAttributes();\n\n  }\n\n  this.renderBufferDirect = function ( camera, lights, fog, material, geometry, object ) {\n\n    if ( material.visible === false ) return;\n\n    var linewidth, a, attribute;\n    var attributeItem, attributeName, attributePointer, attributeSize;\n\n    var program = setProgram( camera, lights, fog, material, object );\n\n    var programAttributes = program.attributes;\n    var geometryAttributes = geometry.attributes;\n\n    var updateBuffers = false,\n      wireframeBit = material.wireframe ? 1 : 0,\n      geometryHash = ( geometry.id * 0xffffff ) + ( program.id * 2 ) + wireframeBit;\n\n    if ( geometryHash !== _currentGeometryGroupHash ) {\n\n      _currentGeometryGroupHash = geometryHash;\n      updateBuffers = true;\n\n    }\n\n    if ( updateBuffers ) {\n\n      initAttributes();\n\n    }\n\n    // render mesh\n\n    if ( object instanceof THREE.Mesh ) {\n\n      var index = geometryAttributes[ 'index' ];\n\n      if ( index ) {\n\n        // indexed triangles\n\n        var type, size;\n\n        if ( index.array instanceof Uint32Array ) {\n\n          type = _gl.UNSIGNED_INT;\n          size = 4;\n\n        } else {\n\n          type = _gl.UNSIGNED_SHORT;\n          size = 2;\n\n        }\n\n        var offsets = geometry.offsets;\n\n        if ( offsets.length === 0 ) {\n\n          if ( updateBuffers ) {\n\n            setupVertexAttributes( material, programAttributes, geometryAttributes, 0 );\n            _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\n\n          }\n\n          _gl.drawElements( _gl.TRIANGLES, index.array.length, type, 0 );\n\n          _this.info.render.calls ++;\n          _this.info.render.vertices += index.array.length; // not really true, here vertices can be shared\n          _this.info.render.faces += index.array.length / 3;\n\n        } else {\n\n          // if there is more than 1 chunk\n          // must set attribute pointers to use new offsets for each chunk\n          // even if geometry and materials didn't change\n\n          updateBuffers = true;\n\n          for ( var i = 0, il = offsets.length; i < il; i ++ ) {\n\n            var startIndex = offsets[ i ].index;\n\n            if ( updateBuffers ) {\n\n              setupVertexAttributes( material, programAttributes, geometryAttributes, startIndex );\n              _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\n\n            }\n\n            // render indexed triangles\n\n            _gl.drawElements( _gl.TRIANGLES, offsets[ i ].count, type, offsets[ i ].start * size );\n\n            _this.info.render.calls ++;\n            _this.info.render.vertices += offsets[ i ].count; // not really true, here vertices can be shared\n            _this.info.render.faces += offsets[ i ].count / 3;\n\n          }\n\n        }\n\n      } else {\n\n        // non-indexed triangles\n\n        if ( updateBuffers ) {\n\n          setupVertexAttributes( material, programAttributes, geometryAttributes, 0 );\n\n        }\n\n        var position = geometry.attributes[ 'position' ];\n\n        // render non-indexed triangles\n\n        _gl.drawArrays( _gl.TRIANGLES, 0, position.array.length / 3 );\n\n        _this.info.render.calls ++;\n        _this.info.render.vertices += position.array.length / 3;\n        _this.info.render.faces += position.array.length / 9;\n\n      }\n\n    } else if ( object instanceof THREE.PointCloud ) {\n\n      // render particles\n\n      if ( updateBuffers ) {\n\n        setupVertexAttributes( material, programAttributes, geometryAttributes, 0 );\n\n      }\n\n      var position = geometryAttributes[ 'position' ];\n\n      // render particles\n\n      _gl.drawArrays( _gl.POINTS, 0, position.array.length / 3 );\n\n      _this.info.render.calls ++;\n      _this.info.render.points += position.array.length / 3;\n\n    } else if ( object instanceof THREE.Line ) {\n\n      var mode = ( object.type === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;\n\n      setLineWidth( material.linewidth );\n\n      var index = geometryAttributes[ 'index' ];\n\n      if ( index ) {\n\n        // indexed lines\n\n        var type, size;\n\n        if ( index.array instanceof Uint32Array ) {\n\n          type = _gl.UNSIGNED_INT;\n          size = 4;\n\n        } else {\n\n          type = _gl.UNSIGNED_SHORT;\n          size = 2;\n\n        }\n\n        var offsets = geometry.offsets;\n\n        if ( offsets.length === 0 ) {\n\n          if ( updateBuffers ) {\n\n            setupVertexAttributes( material, programAttributes, geometryAttributes, 0 );\n            _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\n\n          }\n\n          _gl.drawElements( mode, index.array.length, type, 0 ); // 2 bytes per Uint16Array\n\n          _this.info.render.calls ++;\n          _this.info.render.vertices += index.array.length; // not really true, here vertices can be shared\n\n        } else {\n\n          // if there is more than 1 chunk\n          // must set attribute pointers to use new offsets for each chunk\n          // even if geometry and materials didn't change\n\n          if ( offsets.length > 1 ) updateBuffers = true;\n\n          for ( var i = 0, il = offsets.length; i < il; i ++ ) {\n\n            var startIndex = offsets[ i ].index;\n\n            if ( updateBuffers ) {\n\n              setupVertexAttributes( material, programAttributes, geometryAttributes, startIndex );\n              _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\n\n            }\n\n            // render indexed lines\n\n            _gl.drawElements( mode, offsets[ i ].count, type, offsets[ i ].start * size ); // 2 bytes per Uint16Array\n\n            _this.info.render.calls ++;\n            _this.info.render.vertices += offsets[ i ].count; // not really true, here vertices can be shared\n\n          }\n\n        }\n\n      } else {\n\n        // non-indexed lines\n\n        if ( updateBuffers ) {\n\n          setupVertexAttributes( material, programAttributes, geometryAttributes, 0 );\n\n        }\n\n        var position = geometryAttributes[ 'position' ];\n\n        _gl.drawArrays( mode, 0, position.array.length / 3 );\n\n        _this.info.render.calls ++;\n        _this.info.render.points += position.array.length / 3;\n\n      }\n\n    }\n\n  };\n\n  this.renderBuffer = function ( camera, lights, fog, material, geometryGroup, object ) {\n\n    if ( material.visible === false ) return;\n\n    var linewidth, a, attribute, i, il;\n\n    var program = setProgram( camera, lights, fog, material, object );\n\n    var attributes = program.attributes;\n\n    var updateBuffers = false,\n      wireframeBit = material.wireframe ? 1 : 0,\n      geometryGroupHash = ( geometryGroup.id * 0xffffff ) + ( program.id * 2 ) + wireframeBit;\n\n    if ( geometryGroupHash !== _currentGeometryGroupHash ) {\n\n      _currentGeometryGroupHash = geometryGroupHash;\n      updateBuffers = true;\n\n    }\n\n    if ( updateBuffers ) {\n\n      initAttributes();\n\n    }\n\n    // vertices\n\n    if ( ! material.morphTargets && attributes.position >= 0 ) {\n\n      if ( updateBuffers ) {\n\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\n        enableAttribute( attributes.position );\n        _gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n      }\n\n    } else {\n\n      if ( object.morphTargetBase ) {\n\n        setupMorphTargets( material, geometryGroup, object );\n\n      }\n\n    }\n\n\n    if ( updateBuffers ) {\n\n      // custom attributes\n\n      // Use the per-geometryGroup custom attribute arrays which are setup in initMeshBuffers\n\n      if ( geometryGroup.__webglCustomAttributesList ) {\n\n        for ( i = 0, il = geometryGroup.__webglCustomAttributesList.length; i < il; i ++ ) {\n\n          attribute = geometryGroup.__webglCustomAttributesList[ i ];\n\n          if ( attributes[ attribute.buffer.belongsToAttribute ] >= 0 ) {\n\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, attribute.buffer );\n            enableAttribute( attributes[ attribute.buffer.belongsToAttribute ] );\n            _gl.vertexAttribPointer( attributes[ attribute.buffer.belongsToAttribute ], attribute.size, _gl.FLOAT, false, 0, 0 );\n\n          }\n\n        }\n\n      }\n\n\n      // colors\n\n      if ( attributes.color >= 0 ) {\n\n        if ( object.geometry.colors.length > 0 || object.geometry.faces.length > 0 ) {\n\n          _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );\n          enableAttribute( attributes.color );\n          _gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n        } else if ( material.defaultAttributeValues ) {\n\n\n          _gl.vertexAttrib3fv( attributes.color, material.defaultAttributeValues.color );\n\n        }\n\n      }\n\n      // normals\n\n      if ( attributes.normal >= 0 ) {\n\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );\n        enableAttribute( attributes.normal );\n        _gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n      }\n\n      // tangents\n\n      if ( attributes.tangent >= 0 ) {\n\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );\n        enableAttribute( attributes.tangent );\n        _gl.vertexAttribPointer( attributes.tangent, 4, _gl.FLOAT, false, 0, 0 );\n\n      }\n\n      // uvs\n\n      if ( attributes.uv >= 0 ) {\n\n        if ( object.geometry.faceVertexUvs[ 0 ] ) {\n\n          _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );\n          enableAttribute( attributes.uv );\n          _gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n        } else if ( material.defaultAttributeValues ) {\n\n\n          _gl.vertexAttrib2fv( attributes.uv, material.defaultAttributeValues.uv );\n\n        }\n\n      }\n\n      if ( attributes.uv2 >= 0 ) {\n\n        if ( object.geometry.faceVertexUvs[ 1 ] ) {\n\n          _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );\n          enableAttribute( attributes.uv2 );\n          _gl.vertexAttribPointer( attributes.uv2, 2, _gl.FLOAT, false, 0, 0 );\n\n        } else if ( material.defaultAttributeValues ) {\n\n\n          _gl.vertexAttrib2fv( attributes.uv2, material.defaultAttributeValues.uv2 );\n\n        }\n\n      }\n\n      if ( material.skinning &&\n         attributes.skinIndex >= 0 && attributes.skinWeight >= 0 ) {\n\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );\n        enableAttribute( attributes.skinIndex );\n        _gl.vertexAttribPointer( attributes.skinIndex, 4, _gl.FLOAT, false, 0, 0 );\n\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );\n        enableAttribute( attributes.skinWeight );\n        _gl.vertexAttribPointer( attributes.skinWeight, 4, _gl.FLOAT, false, 0, 0 );\n\n      }\n\n      // line distances\n\n      if ( attributes.lineDistance >= 0 ) {\n\n        _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglLineDistanceBuffer );\n        enableAttribute( attributes.lineDistance );\n        _gl.vertexAttribPointer( attributes.lineDistance, 1, _gl.FLOAT, false, 0, 0 );\n\n      }\n\n    }\n\n    disableUnusedAttributes();\n\n    // render mesh\n\n    if ( object instanceof THREE.Mesh ) {\n\n      var type = geometryGroup.__typeArray === Uint32Array ? _gl.UNSIGNED_INT : _gl.UNSIGNED_SHORT;\n\n      // wireframe\n\n      if ( material.wireframe ) {\n\n        setLineWidth( material.wireframeLinewidth );\n        if ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );\n        _gl.drawElements( _gl.LINES, geometryGroup.__webglLineCount, type, 0 );\n\n      // triangles\n\n      } else {\n\n        if ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );\n        _gl.drawElements( _gl.TRIANGLES, geometryGroup.__webglFaceCount, type, 0 );\n\n      }\n\n      _this.info.render.calls ++;\n      _this.info.render.vertices += geometryGroup.__webglFaceCount;\n      _this.info.render.faces += geometryGroup.__webglFaceCount / 3;\n\n    // render lines\n\n    } else if ( object instanceof THREE.Line ) {\n\n      var mode = ( object.type === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;\n\n      setLineWidth( material.linewidth );\n\n      _gl.drawArrays( mode, 0, geometryGroup.__webglLineCount );\n\n      _this.info.render.calls ++;\n\n    // render particles\n\n    } else if ( object instanceof THREE.PointCloud ) {\n\n      _gl.drawArrays( _gl.POINTS, 0, geometryGroup.__webglParticleCount );\n\n      _this.info.render.calls ++;\n      _this.info.render.points += geometryGroup.__webglParticleCount;\n\n    }\n\n  };\n\n  function initAttributes() {\n\n    for ( var i = 0, l = _newAttributes.length; i < l; i ++ ) {\n\n      _newAttributes[ i ] = 0;\n\n    }\n\n  }\n\n  function enableAttribute( attribute ) {\n\n    _newAttributes[ attribute ] = 1;\n\n    if ( _enabledAttributes[ attribute ] === 0 ) {\n\n      _gl.enableVertexAttribArray( attribute );\n      _enabledAttributes[ attribute ] = 1;\n\n    }\n\n  }\n\n  function disableUnusedAttributes() {\n\n    for ( var i = 0, l = _enabledAttributes.length; i < l; i ++ ) {\n\n      if ( _enabledAttributes[ i ] !== _newAttributes[ i ] ) {\n\n        _gl.disableVertexAttribArray( i );\n        _enabledAttributes[ i ] = 0;\n\n      }\n\n    }\n\n  }\n\n  function setupMorphTargets ( material, geometryGroup, object ) {\n\n    // set base\n\n    var attributes = material.program.attributes;\n\n    if ( object.morphTargetBase !== - 1 && attributes.position >= 0 ) {\n\n      _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ object.morphTargetBase ] );\n      enableAttribute( attributes.position );\n      _gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n    } else if ( attributes.position >= 0 ) {\n\n      _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\n      enableAttribute( attributes.position );\n      _gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n    }\n\n    if ( object.morphTargetForcedOrder.length ) {\n\n      // set forced order\n\n      var m = 0;\n      var order = object.morphTargetForcedOrder;\n      var influences = object.morphTargetInfluences;\n\n      while ( m < material.numSupportedMorphTargets && m < order.length ) {\n\n        if ( attributes[ 'morphTarget' + m ] >= 0 ) {\n\n          _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ order[ m ] ] );\n          enableAttribute( attributes[ 'morphTarget' + m ] );\n          _gl.vertexAttribPointer( attributes[ 'morphTarget' + m ], 3, _gl.FLOAT, false, 0, 0 );\n\n        }\n\n        if ( attributes[ 'morphNormal' + m ] >= 0 && material.morphNormals ) {\n\n          _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ order[ m ] ] );\n          enableAttribute( attributes[ 'morphNormal' + m ] );\n          _gl.vertexAttribPointer( attributes[ 'morphNormal' + m ], 3, _gl.FLOAT, false, 0, 0 );\n\n        }\n\n        object.__webglMorphTargetInfluences[ m ] = influences[ order[ m ] ];\n\n        m ++;\n      }\n\n    } else {\n\n      // find the most influencing\n\n      var influence, activeInfluenceIndices = [];\n      var influences = object.morphTargetInfluences;\n      var i, il = influences.length;\n\n      for ( i = 0; i < il; i ++ ) {\n\n        influence = influences[ i ];\n\n        if ( influence > 0 ) {\n\n          activeInfluenceIndices.push( [ influence, i ] );\n\n        }\n\n      }\n\n      if ( activeInfluenceIndices.length > material.numSupportedMorphTargets ) {\n\n        activeInfluenceIndices.sort( numericalSort );\n        activeInfluenceIndices.length = material.numSupportedMorphTargets;\n\n      } else if ( activeInfluenceIndices.length > material.numSupportedMorphNormals ) {\n\n        activeInfluenceIndices.sort( numericalSort );\n\n      } else if ( activeInfluenceIndices.length === 0 ) {\n\n        activeInfluenceIndices.push( [ 0, 0 ] );\n\n      };\n\n      var influenceIndex, m = 0;\n\n      while ( m < material.numSupportedMorphTargets ) {\n\n        if ( activeInfluenceIndices[ m ] ) {\n\n          influenceIndex = activeInfluenceIndices[ m ][ 1 ];\n\n          if ( attributes[ 'morphTarget' + m ] >= 0 ) {\n\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ influenceIndex ] );\n            enableAttribute( attributes[ 'morphTarget' + m ] );\n            _gl.vertexAttribPointer( attributes[ 'morphTarget' + m ], 3, _gl.FLOAT, false, 0, 0 );\n\n          }\n\n          if ( attributes[ 'morphNormal' + m ] >= 0 && material.morphNormals ) {\n\n            _gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ influenceIndex ] );\n            enableAttribute( attributes[ 'morphNormal' + m ] );\n            _gl.vertexAttribPointer( attributes[ 'morphNormal' + m ], 3, _gl.FLOAT, false, 0, 0 );\n\n\n          }\n\n          object.__webglMorphTargetInfluences[ m ] = influences[ influenceIndex ];\n\n        } else {\n\n          /*\n          _gl.vertexAttribPointer( attributes[ \"morphTarget\" + m ], 3, _gl.FLOAT, false, 0, 0 );\n\n          if ( material.morphNormals ) {\n\n            _gl.vertexAttribPointer( attributes[ \"morphNormal\" + m ], 3, _gl.FLOAT, false, 0, 0 );\n\n          }\n          */\n\n          object.__webglMorphTargetInfluences[ m ] = 0;\n\n        }\n\n        m ++;\n\n      }\n\n    }\n\n    // load updated influences uniform\n\n    if ( material.program.uniforms.morphTargetInfluences !== null ) {\n\n      _gl.uniform1fv( material.program.uniforms.morphTargetInfluences, object.__webglMorphTargetInfluences );\n\n    }\n\n  };\n\n  // Sorting\n\n  function painterSortStable ( a, b ) {\n\n    if ( a.z !== b.z ) {\n\n      return b.z - a.z;\n\n    } else {\n\n      return a.id - b.id;\n\n    }\n\n  };\n\n  function reversePainterSortStable ( a, b ) {\n\n    if ( a.z !== b.z ) {\n\n      return a.z - b.z;\n\n    } else {\n\n      return a.id - b.id;\n\n    }\n\n  };\n\n  function numericalSort ( a, b ) {\n\n    return b[ 0 ] - a[ 0 ];\n\n  };\n\n\n  // Rendering\n\n  this.render = function ( scene, camera, renderTarget, forceClear ) {\n\n    if ( camera instanceof THREE.Camera === false ) {\n\n      console.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n      return;\n\n    }\n\n    var i, il,\n\n    webglObject, object,\n    renderList,\n\n    lights = scene.__lights,\n    fog = scene.fog;\n\n    // reset caching for this frame\n\n    _currentMaterialId = - 1;\n    _currentCamera = null;\n    _lightsNeedUpdate = true;\n\n    // update scene graph\n\n    if ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n    // update camera matrices and frustum\n\n    if ( camera.parent === undefined ) camera.updateMatrixWorld();\n\n    // update Skeleton objects\n    function updateSkeletons( object ) {\n\n      if ( object instanceof THREE.SkinnedMesh ) {\n\n        object.skeleton.update();\n\n      }\n\n      for ( var i = 0, l = object.children.length; i < l; i ++ ) {\n\n        updateSkeletons( object.children[ i ] );\n\n      }\n\n    }\n\n    updateSkeletons( scene );\n\n    camera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n    _projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n    _frustum.setFromMatrix( _projScreenMatrix );\n\n    initObjects( scene );\n\n    opaqueObjects.length = 0;\n    transparentObjects.length = 0;\n\n    projectObject( scene, scene, camera );\n\n    if ( _this.sortObjects === true ) {\n\n      opaqueObjects.sort( painterSortStable );\n      transparentObjects.sort( reversePainterSortStable );\n\n    }\n\n    // custom render plugins (pre pass)\n\n    renderPlugins( this.renderPluginsPre, scene, camera );\n\n    //\n\n    _this.info.render.calls = 0;\n    _this.info.render.vertices = 0;\n    _this.info.render.faces = 0;\n    _this.info.render.points = 0;\n\n    this.setRenderTarget( renderTarget );\n\n    if ( this.autoClear || forceClear ) {\n\n      this.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\n\n    }\n\n    // set matrices for regular objects (frustum culled)\n\n\n\n\n    // set matrices for immediate objects\n\n    renderList = scene.__webglObjectsImmediate;\n\n    for ( i = 0, il = renderList.length; i < il; i ++ ) {\n\n      webglObject = renderList[ i ];\n      object = webglObject.object;\n\n      if ( object.visible ) {\n\n        setupMatrices( object, camera );\n\n        unrollImmediateBufferMaterial( webglObject );\n\n      }\n\n    }\n\n    if ( scene.overrideMaterial ) {\n\n      var material = scene.overrideMaterial;\n\n      this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n      this.setDepthTest( material.depthTest );\n      this.setDepthWrite( material.depthWrite );\n      setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n      renderObjects( opaqueObjects, camera, lights, fog, true, material );\n      renderObjects( transparentObjects, camera, lights, fog, true, material );\n      renderObjectsImmediate( scene.__webglObjectsImmediate, '', camera, lights, fog, false, material );\n\n    } else {\n\n      var material = null;\n\n      // opaque pass (front-to-back order)\n\n      this.setBlending( THREE.NoBlending );\n\n      renderObjects( opaqueObjects, camera, lights, fog, false, material );\n      renderObjectsImmediate( scene.__webglObjectsImmediate, 'opaque', camera, lights, fog, false, material );\n\n      // transparent pass (back-to-front order)\n\n      renderObjects( transparentObjects, camera, lights, fog, true, material );\n      renderObjectsImmediate( scene.__webglObjectsImmediate, 'transparent', camera, lights, fog, true, material );\n\n    }\n\n    // custom render plugins (post pass)\n\n    renderPlugins( this.renderPluginsPost, scene, camera );\n\n\n    // Generate mipmap if we're using any kind of mipmap filtering\n\n    if ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\n\n      updateRenderTargetMipmap( renderTarget );\n\n    }\n\n    // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n    this.setDepthTest( true );\n    this.setDepthWrite( true );\n\n    // _gl.finish();\n\n  };\n\n  function projectObject(scene, object,camera){\n\n    if ( object.visible === false ) return;\n\n    var webglObjects = scene.__webglObjects[ object.id ];\n\n    if ( webglObjects && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\n\n      updateObject( scene, object );\n\n      for ( var i = 0, l = webglObjects.length; i < l; i ++ ) {\n\n        var webglObject = webglObjects[i];\n\n        unrollBufferMaterial( webglObject );\n\n        webglObject.render = true;\n\n        if ( _this.sortObjects === true ) {\n\n          if ( object.renderDepth !== null ) {\n\n            webglObject.z = object.renderDepth;\n\n          } else {\n\n            _vector3.setFromMatrixPosition( object.matrixWorld );\n            _vector3.applyProjection( _projScreenMatrix );\n\n            webglObject.z = _vector3.z;\n\n          }\n\n        }\n\n      }\n\n    }\n\n    for ( var i = 0, l = object.children.length; i < l; i ++ ) {\n\n      projectObject( scene, object.children[ i ], camera );\n\n    }\n\n  }\n\n  function renderPlugins( plugins, scene, camera ) {\n\n    if ( plugins.length === 0 ) return;\n\n    for ( var i = 0, il = plugins.length; i < il; i ++ ) {\n\n      // reset state for plugin (to start from clean slate)\n\n      _currentProgram = null;\n      _currentCamera = null;\n\n      _oldBlending = - 1;\n      _oldDepthTest = - 1;\n      _oldDepthWrite = - 1;\n      _oldDoubleSided = - 1;\n      _oldFlipSided = - 1;\n      _currentGeometryGroupHash = - 1;\n      _currentMaterialId = - 1;\n\n      _lightsNeedUpdate = true;\n\n      plugins[ i ].render( scene, camera, _currentWidth, _currentHeight );\n\n      // reset state after plugin (anything could have changed)\n\n      _currentProgram = null;\n      _currentCamera = null;\n\n      _oldBlending = - 1;\n      _oldDepthTest = - 1;\n      _oldDepthWrite = - 1;\n      _oldDoubleSided = - 1;\n      _oldFlipSided = - 1;\n      _currentGeometryGroupHash = - 1;\n      _currentMaterialId = - 1;\n\n      _lightsNeedUpdate = true;\n\n    }\n\n  };\n\n  function renderObjects( renderList, camera, lights, fog, useBlending, overrideMaterial ) {\n\n    var webglObject, object, buffer, material;\n\n    for ( var i = renderList.length - 1; i !== - 1; i -- ) {\n\n      webglObject = renderList[ i ];\n\n      object = webglObject.object;\n      buffer = webglObject.buffer;\n\n      setupMatrices( object, camera );\n\n      if ( overrideMaterial ) {\n\n        material = overrideMaterial;\n\n      } else {\n\n        material = webglObject.material;\n\n        if ( ! material ) continue;\n\n        if ( useBlending ) _this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n\n        _this.setDepthTest( material.depthTest );\n        _this.setDepthWrite( material.depthWrite );\n        setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n      }\n\n      _this.setMaterialFaces( material );\n\n      if ( buffer instanceof THREE.BufferGeometry ) {\n\n        _this.renderBufferDirect( camera, lights, fog, material, buffer, object );\n\n      } else {\n\n        _this.renderBuffer( camera, lights, fog, material, buffer, object );\n\n      }\n\n    }\n\n  };\n\n  function renderObjectsImmediate ( renderList, materialType, camera, lights, fog, useBlending, overrideMaterial ) {\n\n    var webglObject, object, material, program;\n\n    for ( var i = 0, il = renderList.length; i < il; i ++ ) {\n\n      webglObject = renderList[ i ];\n      object = webglObject.object;\n\n      if ( object.visible ) {\n\n        if ( overrideMaterial ) {\n\n          material = overrideMaterial;\n\n        } else {\n\n          material = webglObject[ materialType ];\n\n          if ( ! material ) continue;\n\n          if ( useBlending ) _this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n\n          _this.setDepthTest( material.depthTest );\n          _this.setDepthWrite( material.depthWrite );\n          setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n        }\n\n        _this.renderImmediateObject( camera, lights, fog, material, object );\n\n      }\n\n    }\n\n  };\n\n  this.renderImmediateObject = function ( camera, lights, fog, material, object ) {\n\n    var program = setProgram( camera, lights, fog, material, object );\n\n    _currentGeometryGroupHash = - 1;\n\n    _this.setMaterialFaces( material );\n\n    if ( object.immediateRenderCallback ) {\n\n      object.immediateRenderCallback( program, _gl, _frustum );\n\n    } else {\n\n      object.render( function ( object ) { _this.renderBufferImmediate( object, program, material ); } );\n\n    }\n\n  };\n\n  function unrollImmediateBufferMaterial ( globject ) {\n\n    var object = globject.object,\n      material = object.material;\n\n    if ( material.transparent ) {\n\n      globject.transparent = material;\n      globject.opaque = null;\n\n    } else {\n\n      globject.opaque = material;\n      globject.transparent = null;\n\n    }\n\n  };\n\n  function unrollBufferMaterial ( globject ) {\n\n    var object = globject.object;\n    var buffer = globject.buffer;\n\n    var geometry = object.geometry;\n    var material = object.material;\n\n    if ( material instanceof THREE.MeshFaceMaterial ) {\n\n      var materialIndex = geometry instanceof THREE.BufferGeometry ? 0 : buffer.materialIndex;\n\n      material = material.materials[ materialIndex ];\n\n      if ( material.transparent ) {\n\n        globject.material = material;\n        transparentObjects.push( globject );\n\n      } else {\n\n        globject.material = material;\n        opaqueObjects.push( globject );\n\n      }\n\n    } else {\n\n      if ( material ) {\n\n        if ( material.transparent ) {\n\n          globject.material = material;\n          transparentObjects.push( globject );\n\n        } else {\n\n          globject.material = material;\n          opaqueObjects.push( globject );\n\n        }\n\n      }\n\n    }\n\n  };\n\n  // Objects refresh\n\n  var initObjects = function ( scene ) {\n\n    if ( ! scene.__webglObjects ) {\n\n      scene.__webglObjects = {};\n      scene.__webglObjectsImmediate = [];\n\n    }\n\n    while ( scene.__objectsAdded.length ) {\n\n      addObject( scene.__objectsAdded[ 0 ], scene );\n      scene.__objectsAdded.splice( 0, 1 );\n\n    }\n\n    while ( scene.__objectsRemoved.length ) {\n\n      removeObject( scene.__objectsRemoved[ 0 ], scene );\n      scene.__objectsRemoved.splice( 0, 1 );\n\n    }\n\n  };\n\n  // Objects adding\n\n  function addObject( object, scene ) {\n\n    var g, geometry, geometryGroup;\n\n    if ( object.__webglInit === undefined ) {\n\n      object.__webglInit = true;\n\n      object._modelViewMatrix = new THREE.Matrix4();\n      object._normalMatrix = new THREE.Matrix3();\n\n    }\n\n    geometry = object.geometry;\n\n    if ( geometry === undefined ) {\n\n      // ImmediateRenderObject\n\n    } else if ( geometry.__webglInit === undefined ) {\n\n      geometry.__webglInit = true;\n      geometry.addEventListener( 'dispose', onGeometryDispose );\n\n      if ( geometry instanceof THREE.BufferGeometry ) {\n\n        initDirectBuffers( geometry );\n\n      } else if ( object instanceof THREE.Mesh ) {\n\n        if ( object.__webglActive !== undefined ) {\n\n          removeObject( object, scene );\n\n        }\n\n        initGeometryGroups(scene, object, geometry);\n\n      } else if ( object instanceof THREE.Line ) {\n\n        if ( ! geometry.__webglVertexBuffer ) {\n\n          createLineBuffers( geometry );\n          initLineBuffers( geometry, object );\n\n          geometry.verticesNeedUpdate = true;\n          geometry.colorsNeedUpdate = true;\n          geometry.lineDistancesNeedUpdate = true;\n\n        }\n\n      } else if ( object instanceof THREE.PointCloud ) {\n\n        if ( ! geometry.__webglVertexBuffer ) {\n\n          createParticleBuffers( geometry );\n          initParticleBuffers( geometry, object );\n\n          geometry.verticesNeedUpdate = true;\n          geometry.colorsNeedUpdate = true;\n\n        }\n\n      }\n\n    }\n\n    if ( object.__webglActive === undefined) {\n\n      if ( object instanceof THREE.Mesh ) {\n\n        geometry = object.geometry;\n\n        if ( geometry instanceof THREE.BufferGeometry ) {\n\n          addBuffer( scene.__webglObjects, geometry, object );\n\n        } else if ( geometry instanceof THREE.Geometry ) {\n\n          for ( var i = 0,l = geometry.geometryGroupsList.length; i<l;i++ ) {\n\n            geometryGroup = geometry.geometryGroupsList[ i ];\n            addBuffer( scene.__webglObjects, geometryGroup, object );\n\n          }\n        }\n\n      } else if ( object instanceof THREE.Line ||\n            object instanceof THREE.PointCloud ) {\n\n        geometry = object.geometry;\n        addBuffer( scene.__webglObjects, geometry, object );\n\n      } else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {\n\n        addBufferImmediate( scene.__webglObjectsImmediate, object );\n\n      }\n\n      object.__webglActive = true;\n\n    }\n\n  };\n\n  function initGeometryGroups( scene, object, geometry ) {\n\n    var g, geometryGroup, material,addBuffers = false;\n    material = object.material;\n\n    if ( geometry.geometryGroups === undefined || geometry.groupsNeedUpdate ) {\n\n      delete scene.__webglObjects[object.id];\n      geometry.makeGroups( material instanceof THREE.MeshFaceMaterial, _glExtensionElementIndexUint ? 4294967296 : 65535  );\n      geometry.groupsNeedUpdate = false;\n\n    }\n\n    // create separate VBOs per geometry chunk\n\n    for ( var i = 0, il = geometry.geometryGroupsList.length; i < il; i ++ ) {\n\n      geometryGroup = geometry.geometryGroupsList[ i ];\n\n      // initialise VBO on the first access\n\n      if ( ! geometryGroup.__webglVertexBuffer ) {\n\n        createMeshBuffers( geometryGroup );\n        initMeshBuffers( geometryGroup, object );\n\n        geometry.verticesNeedUpdate = true;\n        geometry.morphTargetsNeedUpdate = true;\n        geometry.elementsNeedUpdate = true;\n        geometry.uvsNeedUpdate = true;\n        geometry.normalsNeedUpdate = true;\n        geometry.tangentsNeedUpdate = true;\n        geometry.colorsNeedUpdate = true;\n\n        addBuffers = true;\n\n      } else {\n\n        addBuffers = false;\n\n      }\n\n      if ( addBuffers || object.__webglActive === undefined ) {\n        addBuffer( scene.__webglObjects, geometryGroup, object );\n      }\n\n    }\n\n    object.__webglActive = true;\n\n  }\n\n  function addBuffer( objlist, buffer, object ) {\n\n    var id = object.id;\n    objlist[id] = objlist[id] || [];\n    objlist[id].push(\n      {\n        id: id,\n        buffer: buffer,\n        object: object,\n        material: null,\n        z: 0\n      }\n    );\n\n  };\n\n  function addBufferImmediate( objlist, object ) {\n\n    objlist.push(\n      {\n        id: null,\n        object: object,\n        opaque: null,\n        transparent: null,\n        z: 0\n      }\n    );\n\n  };\n\n  // Objects updates\n\n  function updateObject(scene, object ) {\n\n    var geometry = object.geometry,\n      geometryGroup, customAttributesDirty, material;\n\n    if ( geometry instanceof THREE.BufferGeometry ) {\n\n      setDirectBuffers( geometry, _gl.DYNAMIC_DRAW );\n\n    } else if ( object instanceof THREE.Mesh ) {\n\n      // check all geometry groups\n      if ( geometry.buffersNeedUpdate || geometry.groupsNeedUpdate ) {\n\n        if ( geometry instanceof THREE.BufferGeometry ) {\n\n          initDirectBuffers( geometry );\n\n        } else if ( object instanceof THREE.Mesh ) {\n\n          initGeometryGroups(scene, object,geometry);\n\n        }\n\n      }\n\n      for ( var i = 0, il = geometry.geometryGroupsList.length; i < il; i ++ ) {\n\n        geometryGroup = geometry.geometryGroupsList[ i ];\n\n        material = getBufferMaterial( object, geometryGroup );\n\n        if ( geometry.buffersNeedUpdate || geometry.groupsNeedUpdate) {\n\n          initMeshBuffers( geometryGroup, object );\n\n        }\n\n        customAttributesDirty = material.attributes && areCustomAttributesDirty( material );\n\n        if ( geometry.verticesNeedUpdate || geometry.morphTargetsNeedUpdate || geometry.elementsNeedUpdate ||\n           geometry.uvsNeedUpdate || geometry.normalsNeedUpdate ||\n           geometry.colorsNeedUpdate || geometry.tangentsNeedUpdate || customAttributesDirty ) {\n\n          setMeshBuffers( geometryGroup, object, _gl.DYNAMIC_DRAW, ! geometry.dynamic, material );\n\n        }\n\n      }\n\n      geometry.verticesNeedUpdate = false;\n      geometry.morphTargetsNeedUpdate = false;\n      geometry.elementsNeedUpdate = false;\n      geometry.uvsNeedUpdate = false;\n      geometry.normalsNeedUpdate = false;\n      geometry.colorsNeedUpdate = false;\n      geometry.tangentsNeedUpdate = false;\n\n      geometry.buffersNeedUpdate = false;\n\n      material.attributes && clearCustomAttributes( material );\n\n    } else if ( object instanceof THREE.Line ) {\n\n      material = getBufferMaterial( object, geometry );\n\n      customAttributesDirty = material.attributes && areCustomAttributesDirty( material );\n\n      if ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || geometry.lineDistancesNeedUpdate || customAttributesDirty ) {\n\n        setLineBuffers( geometry, _gl.DYNAMIC_DRAW );\n\n      }\n\n      geometry.verticesNeedUpdate = false;\n      geometry.colorsNeedUpdate = false;\n      geometry.lineDistancesNeedUpdate = false;\n\n      material.attributes && clearCustomAttributes( material );\n\n\n    } else if ( object instanceof THREE.PointCloud ) {\n\n      material = getBufferMaterial( object, geometry );\n\n      customAttributesDirty = material.attributes && areCustomAttributesDirty( material );\n\n      if ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || object.sortParticles || customAttributesDirty ) {\n\n        setParticleBuffers( geometry, _gl.DYNAMIC_DRAW, object );\n\n      }\n\n      geometry.verticesNeedUpdate = false;\n      geometry.colorsNeedUpdate = false;\n\n      material.attributes && clearCustomAttributes( material );\n\n    }\n\n  };\n\n  // Objects updates - custom attributes check\n\n  function areCustomAttributesDirty( material ) {\n\n    for ( var a in material.attributes ) {\n\n      if ( material.attributes[ a ].needsUpdate ) return true;\n\n    }\n\n    return false;\n\n  };\n\n  function clearCustomAttributes( material ) {\n\n    for ( var a in material.attributes ) {\n\n      material.attributes[ a ].needsUpdate = false;\n\n    }\n\n  };\n\n  // Objects removal\n\n  function removeObject( object, scene ) {\n\n    if ( object instanceof THREE.Mesh  ||\n       object instanceof THREE.PointCloud ||\n       object instanceof THREE.Line ) {\n\n      removeInstancesWebglObjects( scene.__webglObjects, object );\n\n    } else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {\n\n      removeInstances( scene.__webglObjectsImmediate, object );\n\n    }\n\n    delete object.__webglActive;\n\n  };\n\n\n\n  function removeInstancesWebglObjects( objlist, object ) {\n\n    delete objlist[ object.id ];\n\n  };\n\n  function removeInstances( objlist, object ) {\n\n    for ( var o = objlist.length - 1; o >= 0; o -- ) {\n\n      if ( objlist[ o ].object === object ) {\n\n        objlist.splice( o, 1 );\n\n      }\n\n    }\n\n  };\n\n  // Materials\n\n  this.initMaterial = function ( material, lights, fog, object ) {\n\n    material.addEventListener( 'dispose', onMaterialDispose );\n\n    var u, a, identifiers, i, parameters, maxLightCount, maxBones, maxShadows, shaderID;\n\n    if ( material instanceof THREE.MeshDepthMaterial ) {\n\n      shaderID = 'depth';\n\n    } else if ( material instanceof THREE.MeshNormalMaterial ) {\n\n      shaderID = 'normal';\n\n    } else if ( material instanceof THREE.MeshBasicMaterial ) {\n\n      shaderID = 'basic';\n\n    } else if ( material instanceof THREE.MeshLambertMaterial ) {\n\n      shaderID = 'lambert';\n\n    } else if ( material instanceof THREE.MeshPhongMaterial ) {\n\n      shaderID = 'phong';\n\n    } else if ( material instanceof THREE.LineBasicMaterial ) {\n\n      shaderID = 'basic';\n\n    } else if ( material instanceof THREE.LineDashedMaterial ) {\n\n      shaderID = 'dashed';\n\n    } else if ( material instanceof THREE.PointCloudMaterial ) {\n\n      shaderID = 'particle_basic';\n\n    }\n\n    if ( shaderID ) {\n\n      var shader = THREE.ShaderLib[ shaderID ];\n\n      material.__webglShader = {\n        uniforms: THREE.UniformsUtils.clone( shader.uniforms ),\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader\n      }\n\n    } else {\n\n      material.__webglShader = {\n        uniforms: material.uniforms,\n        vertexShader: material.vertexShader,\n        fragmentShader: material.fragmentShader\n      }\n\n    }\n\n    // heuristics to create shader parameters according to lights in the scene\n    // (not to blow over maxLights budget)\n\n    maxLightCount = allocateLights( lights );\n\n    maxShadows = allocateShadows( lights );\n\n    maxBones = allocateBones( object );\n\n    parameters = {\n\n      precision: _precision,\n      supportsVertexTextures: _supportsVertexTextures,\n\n      map: !! material.map,\n      envMap: !! material.envMap,\n      lightMap: !! material.lightMap,\n      bumpMap: !! material.bumpMap,\n      normalMap: !! material.normalMap,\n      specularMap: !! material.specularMap,\n      alphaMap: !! material.alphaMap,\n\n      vertexColors: material.vertexColors,\n\n      fog: fog,\n      useFog: material.fog,\n      fogExp: fog instanceof THREE.FogExp2,\n\n      sizeAttenuation: material.sizeAttenuation,\n      logarithmicDepthBuffer: _logarithmicDepthBuffer,\n\n      skinning: material.skinning,\n      maxBones: maxBones,\n      useVertexTexture: _supportsBoneTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n\n      morphTargets: material.morphTargets,\n      morphNormals: material.morphNormals,\n      maxMorphTargets: this.maxMorphTargets,\n      maxMorphNormals: this.maxMorphNormals,\n\n      maxDirLights: maxLightCount.directional,\n      maxPointLights: maxLightCount.point,\n      maxSpotLights: maxLightCount.spot,\n      maxHemiLights: maxLightCount.hemi,\n\n      maxShadows: maxShadows,\n      shadowMapEnabled: this.shadowMapEnabled && object.receiveShadow && maxShadows > 0,\n      shadowMapType: this.shadowMapType,\n      shadowMapDebug: this.shadowMapDebug,\n      shadowMapCascade: this.shadowMapCascade,\n\n      alphaTest: material.alphaTest,\n      metal: material.metal,\n      wrapAround: material.wrapAround,\n      doubleSided: material.side === THREE.DoubleSide,\n      flipSided: material.side === THREE.BackSide\n\n    };\n\n    // Generate code\n\n    var chunks = [];\n\n    if ( shaderID ) {\n\n      chunks.push( shaderID );\n\n    } else {\n\n      chunks.push( material.fragmentShader );\n      chunks.push( material.vertexShader );\n\n    }\n\n    for ( var d in material.defines ) {\n\n      chunks.push( d );\n      chunks.push( material.defines[ d ] );\n\n    }\n\n    for ( var p in parameters ) {\n\n      chunks.push( p );\n      chunks.push( parameters[ p ] );\n\n    }\n\n    var code = chunks.join();\n\n    var program;\n\n    // Check if code has been already compiled\n\n    for ( var p = 0, pl = _programs.length; p < pl; p ++ ) {\n\n      var programInfo = _programs[ p ];\n\n      if ( programInfo.code === code ) {\n\n        program = programInfo;\n        program.usedTimes ++;\n\n        break;\n\n      }\n\n    }\n\n    if ( program === undefined ) {\n\n      program = new THREE.WebGLProgram( this, code, material, parameters );\n      _programs.push( program );\n\n      _this.info.memory.programs = _programs.length;\n\n    }\n\n    material.program = program;\n\n    var attributes = material.program.attributes;\n\n    if ( material.morphTargets ) {\n\n      material.numSupportedMorphTargets = 0;\n\n      var id, base = 'morphTarget';\n\n      for ( i = 0; i < this.maxMorphTargets; i ++ ) {\n\n        id = base + i;\n\n        if ( attributes[ id ] >= 0 ) {\n\n          material.numSupportedMorphTargets ++;\n\n        }\n\n      }\n\n    }\n\n    if ( material.morphNormals ) {\n\n      material.numSupportedMorphNormals = 0;\n\n      var id, base = 'morphNormal';\n\n      for ( i = 0; i < this.maxMorphNormals; i ++ ) {\n\n        id = base + i;\n\n        if ( attributes[ id ] >= 0 ) {\n\n          material.numSupportedMorphNormals ++;\n\n        }\n\n      }\n\n    }\n\n    material.uniformsList = [];\n\n    for ( u in material.__webglShader.uniforms ) {\n\n      var location = material.program.uniforms[ u ];\n\n      if ( location ) {\n        material.uniformsList.push( [ material.__webglShader.uniforms[ u ], location ] );\n      }\n\n    }\n\n  };\n\n  function setProgram( camera, lights, fog, material, object ) {\n\n    _usedTextureUnits = 0;\n\n    if ( material.needsUpdate ) {\n\n      if ( material.program ) deallocateMaterial( material );\n\n      _this.initMaterial( material, lights, fog, object );\n      material.needsUpdate = false;\n\n    }\n\n    if ( material.morphTargets ) {\n\n      if ( ! object.__webglMorphTargetInfluences ) {\n\n        object.__webglMorphTargetInfluences = new Float32Array( _this.maxMorphTargets );\n\n      }\n\n    }\n\n    var refreshProgram = false;\n    var refreshMaterial = false;\n    var refreshLights = false;\n\n    var program = material.program,\n      p_uniforms = program.uniforms,\n      m_uniforms = material.__webglShader.uniforms;\n\n    if ( program.id !== _currentProgram ) {\n\n      _gl.useProgram( program.program );\n      _currentProgram = program.id;\n\n      refreshProgram = true;\n      refreshMaterial = true;\n      refreshLights = true;\n\n    }\n\n    if ( material.id !== _currentMaterialId ) {\n\n      if ( _currentMaterialId === -1 ) refreshLights = true;\n      _currentMaterialId = material.id;\n\n      refreshMaterial = true;\n\n    }\n\n    if ( refreshProgram || camera !== _currentCamera ) {\n\n      _gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n      if ( _logarithmicDepthBuffer ) {\n\n        _gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n      }\n\n\n      if ( camera !== _currentCamera ) _currentCamera = camera;\n\n      // load material specific uniforms\n      // (shader material also gets them for the sake of genericity)\n\n      if ( material instanceof THREE.ShaderMaterial ||\n         material instanceof THREE.MeshPhongMaterial ||\n         material.envMap ) {\n\n        if ( p_uniforms.cameraPosition !== null ) {\n\n          _vector3.setFromMatrixPosition( camera.matrixWorld );\n          _gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\n\n        }\n\n      }\n\n      if ( material instanceof THREE.MeshPhongMaterial ||\n         material instanceof THREE.MeshLambertMaterial ||\n         material instanceof THREE.ShaderMaterial ||\n         material.skinning ) {\n\n        if ( p_uniforms.viewMatrix !== null ) {\n\n          _gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\n\n        }\n\n      }\n\n    }\n\n    // skinning uniforms must be set even if material didn't change\n    // auto-setting of texture unit for bone texture must go before other textures\n    // not sure why, but otherwise weird things happen\n\n    if ( material.skinning ) {\n\n      if ( object.bindMatrix && p_uniforms.bindMatrix !== null ) {\n\n        _gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\n\n      }\n\n      if ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== null ) {\n\n        _gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\n\n      }\n\n      if ( _supportsBoneTextures && object.skeleton && object.skeleton.useVertexTexture ) {\n\n        if ( p_uniforms.boneTexture !== null ) {\n\n          var textureUnit = getTextureUnit();\n\n          _gl.uniform1i( p_uniforms.boneTexture, textureUnit );\n          _this.setTexture( object.skeleton.boneTexture, textureUnit );\n\n        }\n\n        if ( p_uniforms.boneTextureWidth !== null ) {\n\n          _gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\n\n        }\n\n        if ( p_uniforms.boneTextureHeight !== null ) {\n\n          _gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\n\n        }\n\n      } else if ( object.skeleton && object.skeleton.boneMatrices ) {\n\n        if ( p_uniforms.boneGlobalMatrices !== null ) {\n\n          _gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\n\n        }\n\n      }\n\n    }\n\n    if ( refreshMaterial ) {\n\n      // refresh uniforms common to several materials\n\n      if ( fog && material.fog ) {\n\n        refreshUniformsFog( m_uniforms, fog );\n\n      }\n\n      if ( material instanceof THREE.MeshPhongMaterial ||\n         material instanceof THREE.MeshLambertMaterial ||\n         material.lights ) {\n\n        if ( _lightsNeedUpdate ) {\n\n          refreshLights = true;\n          setupLights( lights );\n          _lightsNeedUpdate = false;\n        }\n\n        if ( refreshLights ) {\n          refreshUniformsLights( m_uniforms, _lights );\n          markUniformsLightsNeedsUpdate( m_uniforms, true );\n        } else {\n          markUniformsLightsNeedsUpdate( m_uniforms, false );\n        }\n\n      }\n\n      if ( material instanceof THREE.MeshBasicMaterial ||\n         material instanceof THREE.MeshLambertMaterial ||\n         material instanceof THREE.MeshPhongMaterial ) {\n\n        refreshUniformsCommon( m_uniforms, material );\n\n      }\n\n      // refresh single material specific uniforms\n\n      if ( material instanceof THREE.LineBasicMaterial ) {\n\n        refreshUniformsLine( m_uniforms, material );\n\n      } else if ( material instanceof THREE.LineDashedMaterial ) {\n\n        refreshUniformsLine( m_uniforms, material );\n        refreshUniformsDash( m_uniforms, material );\n\n      } else if ( material instanceof THREE.PointCloudMaterial ) {\n\n        refreshUniformsParticle( m_uniforms, material );\n\n      } else if ( material instanceof THREE.MeshPhongMaterial ) {\n\n        refreshUniformsPhong( m_uniforms, material );\n\n      } else if ( material instanceof THREE.MeshLambertMaterial ) {\n\n        refreshUniformsLambert( m_uniforms, material );\n\n      } else if ( material instanceof THREE.MeshDepthMaterial ) {\n\n        m_uniforms.mNear.value = camera.near;\n        m_uniforms.mFar.value = camera.far;\n        m_uniforms.opacity.value = material.opacity;\n\n      } else if ( material instanceof THREE.MeshNormalMaterial ) {\n\n        m_uniforms.opacity.value = material.opacity;\n\n      }\n\n      if ( object.receiveShadow && ! material._shadowPass ) {\n\n        refreshUniformsShadow( m_uniforms, lights );\n\n      }\n\n      // load common uniforms\n\n      loadUniformsGeneric( material.uniformsList );\n\n    }\n\n    loadUniformsMatrices( p_uniforms, object );\n\n    if ( p_uniforms.modelMatrix !== null ) {\n\n      _gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\n\n    }\n\n    return program;\n\n  };\n\n  // Uniforms (refresh uniforms objects)\n\n  function refreshUniformsCommon ( uniforms, material ) {\n\n    uniforms.opacity.value = material.opacity;\n\n    if ( _this.gammaInput ) {\n\n      uniforms.diffuse.value.copyGammaToLinear( material.color );\n\n    } else {\n\n      uniforms.diffuse.value = material.color;\n\n    }\n\n    uniforms.map.value = material.map;\n    uniforms.lightMap.value = material.lightMap;\n    uniforms.specularMap.value = material.specularMap;\n    uniforms.alphaMap.value = material.alphaMap;\n\n    if ( material.bumpMap ) {\n\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n\n    }\n\n    if ( material.normalMap ) {\n\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy( material.normalScale );\n\n    }\n\n    // uv repeat and offset setting priorities\n    //  1. color map\n    //  2. specular map\n    //  3. normal map\n    //  4. bump map\n    //  5. alpha map\n\n    var uvScaleMap;\n\n    if ( material.map ) {\n\n      uvScaleMap = material.map;\n\n    } else if ( material.specularMap ) {\n\n      uvScaleMap = material.specularMap;\n\n    } else if ( material.normalMap ) {\n\n      uvScaleMap = material.normalMap;\n\n    } else if ( material.bumpMap ) {\n\n      uvScaleMap = material.bumpMap;\n\n    } else if ( material.alphaMap ) {\n\n      uvScaleMap = material.alphaMap;\n\n    }\n\n    if ( uvScaleMap !== undefined ) {\n\n      var offset = uvScaleMap.offset;\n      var repeat = uvScaleMap.repeat;\n\n      uniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n    }\n\n    uniforms.envMap.value = material.envMap;\n    uniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\n\n    if ( _this.gammaInput ) {\n\n      //uniforms.reflectivity.value = material.reflectivity * material.reflectivity;\n      uniforms.reflectivity.value = material.reflectivity;\n\n    } else {\n\n      uniforms.reflectivity.value = material.reflectivity;\n\n    }\n\n    uniforms.refractionRatio.value = material.refractionRatio;\n    uniforms.combine.value = material.combine;\n    uniforms.useRefract.value = material.envMap && material.envMap.mapping instanceof THREE.CubeRefractionMapping;\n\n  };\n\n  function refreshUniformsLine ( uniforms, material ) {\n\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n\n  };\n\n  function refreshUniformsDash ( uniforms, material ) {\n\n    uniforms.dashSize.value = material.dashSize;\n    uniforms.totalSize.value = material.dashSize + material.gapSize;\n    uniforms.scale.value = material.scale;\n\n  };\n\n  function refreshUniformsParticle ( uniforms, material ) {\n\n    uniforms.psColor.value = material.color;\n    uniforms.opacity.value = material.opacity;\n    uniforms.size.value = material.size;\n    uniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\n\n    uniforms.map.value = material.map;\n\n  };\n\n  function refreshUniformsFog ( uniforms, fog ) {\n\n    uniforms.fogColor.value = fog.color;\n\n    if ( fog instanceof THREE.Fog ) {\n\n      uniforms.fogNear.value = fog.near;\n      uniforms.fogFar.value = fog.far;\n\n    } else if ( fog instanceof THREE.FogExp2 ) {\n\n      uniforms.fogDensity.value = fog.density;\n\n    }\n\n  };\n\n  function refreshUniformsPhong ( uniforms, material ) {\n\n    uniforms.shininess.value = material.shininess;\n\n    if ( _this.gammaInput ) {\n\n      uniforms.ambient.value.copyGammaToLinear( material.ambient );\n      uniforms.emissive.value.copyGammaToLinear( material.emissive );\n      uniforms.specular.value.copyGammaToLinear( material.specular );\n\n    } else {\n\n      uniforms.ambient.value = material.ambient;\n      uniforms.emissive.value = material.emissive;\n      uniforms.specular.value = material.specular;\n\n    }\n\n    if ( material.wrapAround ) {\n\n      uniforms.wrapRGB.value.copy( material.wrapRGB );\n\n    }\n\n  };\n\n  function refreshUniformsLambert ( uniforms, material ) {\n\n    if ( _this.gammaInput ) {\n\n      uniforms.ambient.value.copyGammaToLinear( material.ambient );\n      uniforms.emissive.value.copyGammaToLinear( material.emissive );\n\n    } else {\n\n      uniforms.ambient.value = material.ambient;\n      uniforms.emissive.value = material.emissive;\n\n    }\n\n    if ( material.wrapAround ) {\n\n      uniforms.wrapRGB.value.copy( material.wrapRGB );\n\n    }\n\n  };\n\n  function refreshUniformsLights ( uniforms, lights ) {\n\n    uniforms.ambientLightColor.value = lights.ambient;\n\n    uniforms.directionalLightColor.value = lights.directional.colors;\n    uniforms.directionalLightDirection.value = lights.directional.positions;\n\n    uniforms.pointLightColor.value = lights.point.colors;\n    uniforms.pointLightPosition.value = lights.point.positions;\n    uniforms.pointLightDistance.value = lights.point.distances;\n\n    uniforms.spotLightColor.value = lights.spot.colors;\n    uniforms.spotLightPosition.value = lights.spot.positions;\n    uniforms.spotLightDistance.value = lights.spot.distances;\n    uniforms.spotLightDirection.value = lights.spot.directions;\n    uniforms.spotLightAngleCos.value = lights.spot.anglesCos;\n    uniforms.spotLightExponent.value = lights.spot.exponents;\n\n    uniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\n    uniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\n    uniforms.hemisphereLightDirection.value = lights.hemi.positions;\n\n  };\n\n  // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n  function markUniformsLightsNeedsUpdate ( uniforms, boolean ) {\n\n    uniforms.ambientLightColor.needsUpdate = boolean;\n\n    uniforms.directionalLightColor.needsUpdate = boolean;\n    uniforms.directionalLightDirection.needsUpdate = boolean;\n\n    uniforms.pointLightColor.needsUpdate = boolean;\n    uniforms.pointLightPosition.needsUpdate = boolean;\n    uniforms.pointLightDistance.needsUpdate = boolean;\n\n    uniforms.spotLightColor.needsUpdate = boolean;\n    uniforms.spotLightPosition.needsUpdate = boolean;\n    uniforms.spotLightDistance.needsUpdate = boolean;\n    uniforms.spotLightDirection.needsUpdate = boolean;\n    uniforms.spotLightAngleCos.needsUpdate = boolean;\n    uniforms.spotLightExponent.needsUpdate = boolean;\n\n    uniforms.hemisphereLightSkyColor.needsUpdate = boolean;\n    uniforms.hemisphereLightGroundColor.needsUpdate = boolean;\n    uniforms.hemisphereLightDirection.needsUpdate = boolean;\n\n  };\n\n  function refreshUniformsShadow ( uniforms, lights ) {\n\n    if ( uniforms.shadowMatrix ) {\n\n      var j = 0;\n\n      for ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n        var light = lights[ i ];\n\n        if ( ! light.castShadow ) continue;\n\n        if ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) ) {\n\n          uniforms.shadowMap.value[ j ] = light.shadowMap;\n          uniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\n\n          uniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\n\n          uniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\n          uniforms.shadowBias.value[ j ] = light.shadowBias;\n\n          j ++;\n\n        }\n\n      }\n\n    }\n\n  };\n\n  // Uniforms (load to GPU)\n\n  function loadUniformsMatrices ( uniforms, object ) {\n\n    _gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object._modelViewMatrix.elements );\n\n    if ( uniforms.normalMatrix ) {\n\n      _gl.uniformMatrix3fv( uniforms.normalMatrix, false, object._normalMatrix.elements );\n\n    }\n\n  };\n\n  function getTextureUnit() {\n\n    var textureUnit = _usedTextureUnits;\n\n    if ( textureUnit >= _maxTextures ) {\n\n      console.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + _maxTextures );\n\n    }\n\n    _usedTextureUnits += 1;\n\n    return textureUnit;\n\n  };\n\n  function loadUniformsGeneric ( uniforms ) {\n\n    var texture, textureUnit, offset;\n\n    for ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\n\n      var uniform = uniforms[ j ][ 0 ];\n\n      // needsUpdate property is not added to all uniforms.\n      if ( uniform.needsUpdate === false ) continue;\n\n      var type = uniform.type;\n      var value = uniform.value;\n      var location = uniforms[ j ][ 1 ];\n\n      switch ( type ) {\n\n        case '1i':\n          _gl.uniform1i( location, value );\n          break;\n\n        case '1f':\n          _gl.uniform1f( location, value );\n          break;\n\n        case '2f':\n          _gl.uniform2f( location, value[ 0 ], value[ 1 ] );\n          break;\n\n        case '3f':\n          _gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\n          break;\n\n        case '4f':\n          _gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\n          break;\n\n        case '1iv':\n          _gl.uniform1iv( location, value );\n          break;\n\n        case '3iv':\n          _gl.uniform3iv( location, value );\n          break;\n\n        case '1fv':\n          _gl.uniform1fv( location, value );\n          break;\n\n        case '2fv':\n          _gl.uniform2fv( location, value );\n          break;\n\n        case '3fv':\n          _gl.uniform3fv( location, value );\n          break;\n\n        case '4fv':\n          _gl.uniform4fv( location, value );\n          break;\n\n        case 'Matrix3fv':\n          _gl.uniformMatrix3fv( location, false, value );\n          break;\n\n        case 'Matrix4fv':\n          _gl.uniformMatrix4fv( location, false, value );\n          break;\n\n        //\n\n        case 'i':\n\n          // single integer\n          _gl.uniform1i( location, value );\n\n          break;\n\n        case 'f':\n\n          // single float\n          _gl.uniform1f( location, value );\n\n          break;\n\n        case 'v2':\n\n          // single THREE.Vector2\n          _gl.uniform2f( location, value.x, value.y );\n\n          break;\n\n        case 'v3':\n\n          // single THREE.Vector3\n          _gl.uniform3f( location, value.x, value.y, value.z );\n\n          break;\n\n        case 'v4':\n\n          // single THREE.Vector4\n          _gl.uniform4f( location, value.x, value.y, value.z, value.w );\n\n          break;\n\n        case 'c':\n\n          // single THREE.Color\n          _gl.uniform3f( location, value.r, value.g, value.b );\n\n          break;\n\n        case 'iv1':\n\n          // flat array of integers (JS or typed array)\n          _gl.uniform1iv( location, value );\n\n          break;\n\n        case 'iv':\n\n          // flat array of integers with 3 x N size (JS or typed array)\n          _gl.uniform3iv( location, value );\n\n          break;\n\n        case 'fv1':\n\n          // flat array of floats (JS or typed array)\n          _gl.uniform1fv( location, value );\n\n          break;\n\n        case 'fv':\n\n          // flat array of floats with 3 x N size (JS or typed array)\n          _gl.uniform3fv( location, value );\n\n          break;\n\n        case 'v2v':\n\n          // array of THREE.Vector2\n\n          if ( uniform._array === undefined ) {\n\n            uniform._array = new Float32Array( 2 * value.length );\n\n          }\n\n          for ( var i = 0, il = value.length; i < il; i ++ ) {\n\n            offset = i * 2;\n\n            uniform._array[ offset ]   = value[ i ].x;\n            uniform._array[ offset + 1 ] = value[ i ].y;\n\n          }\n\n          _gl.uniform2fv( location, uniform._array );\n\n          break;\n\n        case 'v3v':\n\n          // array of THREE.Vector3\n\n          if ( uniform._array === undefined ) {\n\n            uniform._array = new Float32Array( 3 * value.length );\n\n          }\n\n          for ( var i = 0, il = value.length; i < il; i ++ ) {\n\n            offset = i * 3;\n\n            uniform._array[ offset ]   = value[ i ].x;\n            uniform._array[ offset + 1 ] = value[ i ].y;\n            uniform._array[ offset + 2 ] = value[ i ].z;\n\n          }\n\n          _gl.uniform3fv( location, uniform._array );\n\n          break;\n\n        case 'v4v':\n\n          // array of THREE.Vector4\n\n          if ( uniform._array === undefined ) {\n\n            uniform._array = new Float32Array( 4 * value.length );\n\n          }\n\n          for ( var i = 0, il = value.length; i < il; i ++ ) {\n\n            offset = i * 4;\n\n            uniform._array[ offset ]   = value[ i ].x;\n            uniform._array[ offset + 1 ] = value[ i ].y;\n            uniform._array[ offset + 2 ] = value[ i ].z;\n            uniform._array[ offset + 3 ] = value[ i ].w;\n\n          }\n\n          _gl.uniform4fv( location, uniform._array );\n\n          break;\n\n        case 'm3':\n\n          // single THREE.Matrix3\n          _gl.uniformMatrix3fv( location, false, value.elements );\n\n          break;\n\n        case 'm3v':\n\n          // array of THREE.Matrix3\n\n          if ( uniform._array === undefined ) {\n\n            uniform._array = new Float32Array( 9 * value.length );\n\n          }\n\n          for ( var i = 0, il = value.length; i < il; i ++ ) {\n\n            value[ i ].flattenToArrayOffset( uniform._array, i * 9 );\n\n          }\n\n          _gl.uniformMatrix3fv( location, false, uniform._array );\n\n          break;\n\n        case 'm4':\n\n          // single THREE.Matrix4\n          _gl.uniformMatrix4fv( location, false, value.elements );\n\n          break;\n\n        case 'm4v':\n\n          // array of THREE.Matrix4\n\n          if ( uniform._array === undefined ) {\n\n            uniform._array = new Float32Array( 16 * value.length );\n\n          }\n\n          for ( var i = 0, il = value.length; i < il; i ++ ) {\n\n            value[ i ].flattenToArrayOffset( uniform._array, i * 16 );\n\n          }\n\n          _gl.uniformMatrix4fv( location, false, uniform._array );\n\n          break;\n\n        case 't':\n\n          // single THREE.Texture (2d or cube)\n\n          texture = value;\n          textureUnit = getTextureUnit();\n\n          _gl.uniform1i( location, textureUnit );\n\n          if ( ! texture ) continue;\n\n          if ( texture instanceof THREE.CubeTexture ||\n             ( texture.image instanceof Array && texture.image.length === 6 ) ) { // CompressedTexture can have Array in image :/\n\n            setCubeTexture( texture, textureUnit );\n\n          } else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\n\n            setCubeTextureDynamic( texture, textureUnit );\n\n          } else {\n\n            _this.setTexture( texture, textureUnit );\n\n          }\n\n          break;\n\n        case 'tv':\n\n          // array of THREE.Texture (2d)\n\n          if ( uniform._array === undefined ) {\n\n            uniform._array = [];\n\n          }\n\n          for ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\n\n            uniform._array[ i ] = getTextureUnit();\n\n          }\n\n          _gl.uniform1iv( location, uniform._array );\n\n          for ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\n\n            texture = uniform.value[ i ];\n            textureUnit = uniform._array[ i ];\n\n            if ( ! texture ) continue;\n\n            _this.setTexture( texture, textureUnit );\n\n          }\n\n          break;\n\n        default:\n\n          console.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\n\n      }\n\n    }\n\n  };\n\n  function setupMatrices ( object, camera ) {\n\n    object._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n    object._normalMatrix.getNormalMatrix( object._modelViewMatrix );\n\n  };\n\n  //\n\n  function setColorGamma( array, offset, color, intensitySq ) {\n\n    array[ offset ]     = color.r * color.r * intensitySq;\n    array[ offset + 1 ] = color.g * color.g * intensitySq;\n    array[ offset + 2 ] = color.b * color.b * intensitySq;\n\n  };\n\n  function setColorLinear( array, offset, color, intensity ) {\n\n    array[ offset ]     = color.r * intensity;\n    array[ offset + 1 ] = color.g * intensity;\n    array[ offset + 2 ] = color.b * intensity;\n\n  };\n\n  function setupLights ( lights ) {\n\n    var l, ll, light, n,\n    r = 0, g = 0, b = 0,\n    color, skyColor, groundColor,\n    intensity,  intensitySq,\n    position,\n    distance,\n\n    zlights = _lights,\n\n    dirColors = zlights.directional.colors,\n    dirPositions = zlights.directional.positions,\n\n    pointColors = zlights.point.colors,\n    pointPositions = zlights.point.positions,\n    pointDistances = zlights.point.distances,\n\n    spotColors = zlights.spot.colors,\n    spotPositions = zlights.spot.positions,\n    spotDistances = zlights.spot.distances,\n    spotDirections = zlights.spot.directions,\n    spotAnglesCos = zlights.spot.anglesCos,\n    spotExponents = zlights.spot.exponents,\n\n    hemiSkyColors = zlights.hemi.skyColors,\n    hemiGroundColors = zlights.hemi.groundColors,\n    hemiPositions = zlights.hemi.positions,\n\n    dirLength = 0,\n    pointLength = 0,\n    spotLength = 0,\n    hemiLength = 0,\n\n    dirCount = 0,\n    pointCount = 0,\n    spotCount = 0,\n    hemiCount = 0,\n\n    dirOffset = 0,\n    pointOffset = 0,\n    spotOffset = 0,\n    hemiOffset = 0;\n\n    for ( l = 0, ll = lights.length; l < ll; l ++ ) {\n\n      light = lights[ l ];\n\n      if ( light.onlyShadow ) continue;\n\n      color = light.color;\n      intensity = light.intensity;\n      distance = light.distance;\n\n      if ( light instanceof THREE.AmbientLight ) {\n\n        if ( ! light.visible ) continue;\n\n        if ( _this.gammaInput ) {\n\n          r += color.r * color.r;\n          g += color.g * color.g;\n          b += color.b * color.b;\n\n        } else {\n\n          r += color.r;\n          g += color.g;\n          b += color.b;\n\n        }\n\n      } else if ( light instanceof THREE.DirectionalLight ) {\n\n        dirCount += 1;\n\n        if ( ! light.visible ) continue;\n\n        _direction.setFromMatrixPosition( light.matrixWorld );\n        _vector3.setFromMatrixPosition( light.target.matrixWorld );\n        _direction.sub( _vector3 );\n        _direction.normalize();\n\n        dirOffset = dirLength * 3;\n\n        dirPositions[ dirOffset ]     = _direction.x;\n        dirPositions[ dirOffset + 1 ] = _direction.y;\n        dirPositions[ dirOffset + 2 ] = _direction.z;\n\n        if ( _this.gammaInput ) {\n\n          setColorGamma( dirColors, dirOffset, color, intensity * intensity );\n\n        } else {\n\n          setColorLinear( dirColors, dirOffset, color, intensity );\n\n        }\n\n        dirLength += 1;\n\n      } else if ( light instanceof THREE.PointLight ) {\n\n        pointCount += 1;\n\n        if ( ! light.visible ) continue;\n\n        pointOffset = pointLength * 3;\n\n        if ( _this.gammaInput ) {\n\n          setColorGamma( pointColors, pointOffset, color, intensity * intensity );\n\n        } else {\n\n          setColorLinear( pointColors, pointOffset, color, intensity );\n\n        }\n\n        _vector3.setFromMatrixPosition( light.matrixWorld );\n\n        pointPositions[ pointOffset ]     = _vector3.x;\n        pointPositions[ pointOffset + 1 ] = _vector3.y;\n        pointPositions[ pointOffset + 2 ] = _vector3.z;\n\n        pointDistances[ pointLength ] = distance;\n\n        pointLength += 1;\n\n      } else if ( light instanceof THREE.SpotLight ) {\n\n        spotCount += 1;\n\n        if ( ! light.visible ) continue;\n\n        spotOffset = spotLength * 3;\n\n        if ( _this.gammaInput ) {\n\n          setColorGamma( spotColors, spotOffset, color, intensity * intensity );\n\n        } else {\n\n          setColorLinear( spotColors, spotOffset, color, intensity );\n\n        }\n\n        _vector3.setFromMatrixPosition( light.matrixWorld );\n\n        spotPositions[ spotOffset ]     = _vector3.x;\n        spotPositions[ spotOffset + 1 ] = _vector3.y;\n        spotPositions[ spotOffset + 2 ] = _vector3.z;\n\n        spotDistances[ spotLength ] = distance;\n\n        _direction.copy( _vector3 );\n        _vector3.setFromMatrixPosition( light.target.matrixWorld );\n        _direction.sub( _vector3 );\n        _direction.normalize();\n\n        spotDirections[ spotOffset ]     = _direction.x;\n        spotDirections[ spotOffset + 1 ] = _direction.y;\n        spotDirections[ spotOffset + 2 ] = _direction.z;\n\n        spotAnglesCos[ spotLength ] = Math.cos( light.angle );\n        spotExponents[ spotLength ] = light.exponent;\n\n        spotLength += 1;\n\n      } else if ( light instanceof THREE.HemisphereLight ) {\n\n        hemiCount += 1;\n\n        if ( ! light.visible ) continue;\n\n        _direction.setFromMatrixPosition( light.matrixWorld );\n        _direction.normalize();\n\n        hemiOffset = hemiLength * 3;\n\n        hemiPositions[ hemiOffset ]     = _direction.x;\n        hemiPositions[ hemiOffset + 1 ] = _direction.y;\n        hemiPositions[ hemiOffset + 2 ] = _direction.z;\n\n        skyColor = light.color;\n        groundColor = light.groundColor;\n\n        if ( _this.gammaInput ) {\n\n          intensitySq = intensity * intensity;\n\n          setColorGamma( hemiSkyColors, hemiOffset, skyColor, intensitySq );\n          setColorGamma( hemiGroundColors, hemiOffset, groundColor, intensitySq );\n\n        } else {\n\n          setColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\n          setColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\n\n        }\n\n        hemiLength += 1;\n\n      }\n\n    }\n\n    // null eventual remains from removed lights\n    // (this is to avoid if in shader)\n\n    for ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\n    for ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\n    for ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\n    for ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\n    for ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\n\n    zlights.directional.length = dirLength;\n    zlights.point.length = pointLength;\n    zlights.spot.length = spotLength;\n    zlights.hemi.length = hemiLength;\n\n    zlights.ambient[ 0 ] = r;\n    zlights.ambient[ 1 ] = g;\n    zlights.ambient[ 2 ] = b;\n\n  };\n\n  // GL state setting\n\n  this.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n    if ( cullFace === THREE.CullFaceNone ) {\n\n      _gl.disable( _gl.CULL_FACE );\n\n    } else {\n\n      if ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\n\n        _gl.frontFace( _gl.CW );\n\n      } else {\n\n        _gl.frontFace( _gl.CCW );\n\n      }\n\n      if ( cullFace === THREE.CullFaceBack ) {\n\n        _gl.cullFace( _gl.BACK );\n\n      } else if ( cullFace === THREE.CullFaceFront ) {\n\n        _gl.cullFace( _gl.FRONT );\n\n      } else {\n\n        _gl.cullFace( _gl.FRONT_AND_BACK );\n\n      }\n\n      _gl.enable( _gl.CULL_FACE );\n\n    }\n\n  };\n\n  this.setMaterialFaces = function ( material ) {\n\n    var doubleSided = material.side === THREE.DoubleSide;\n    var flipSided = material.side === THREE.BackSide;\n\n    if ( _oldDoubleSided !== doubleSided ) {\n\n      if ( doubleSided ) {\n\n        _gl.disable( _gl.CULL_FACE );\n\n      } else {\n\n        _gl.enable( _gl.CULL_FACE );\n\n      }\n\n      _oldDoubleSided = doubleSided;\n\n    }\n\n    if ( _oldFlipSided !== flipSided ) {\n\n      if ( flipSided ) {\n\n        _gl.frontFace( _gl.CW );\n\n      } else {\n\n        _gl.frontFace( _gl.CCW );\n\n      }\n\n      _oldFlipSided = flipSided;\n\n    }\n\n  };\n\n  this.setDepthTest = function ( depthTest ) {\n\n    if ( _oldDepthTest !== depthTest ) {\n\n      if ( depthTest ) {\n\n        _gl.enable( _gl.DEPTH_TEST );\n\n      } else {\n\n        _gl.disable( _gl.DEPTH_TEST );\n\n      }\n\n      _oldDepthTest = depthTest;\n\n    }\n\n  };\n\n  this.setDepthWrite = function ( depthWrite ) {\n\n    if ( _oldDepthWrite !== depthWrite ) {\n\n      _gl.depthMask( depthWrite );\n      _oldDepthWrite = depthWrite;\n\n    }\n\n  };\n\n  function setLineWidth ( width ) {\n\n    if ( width !== _oldLineWidth ) {\n\n      _gl.lineWidth( width );\n\n      _oldLineWidth = width;\n\n    }\n\n  };\n\n  function setPolygonOffset ( polygonoffset, factor, units ) {\n\n    if ( _oldPolygonOffset !== polygonoffset ) {\n\n      if ( polygonoffset ) {\n\n        _gl.enable( _gl.POLYGON_OFFSET_FILL );\n\n      } else {\n\n        _gl.disable( _gl.POLYGON_OFFSET_FILL );\n\n      }\n\n      _oldPolygonOffset = polygonoffset;\n\n    }\n\n    if ( polygonoffset && ( _oldPolygonOffsetFactor !== factor || _oldPolygonOffsetUnits !== units ) ) {\n\n      _gl.polygonOffset( factor, units );\n\n      _oldPolygonOffsetFactor = factor;\n      _oldPolygonOffsetUnits = units;\n\n    }\n\n  };\n\n  this.setBlending = function ( blending, blendEquation, blendSrc, blendDst ) {\n\n    if ( blending !== _oldBlending ) {\n\n      if ( blending === THREE.NoBlending ) {\n\n        _gl.disable( _gl.BLEND );\n\n      } else if ( blending === THREE.AdditiveBlending ) {\n\n        _gl.enable( _gl.BLEND );\n        _gl.blendEquation( _gl.FUNC_ADD );\n        _gl.blendFunc( _gl.SRC_ALPHA, _gl.ONE );\n\n      } else if ( blending === THREE.SubtractiveBlending ) {\n\n        // TODO: Find blendFuncSeparate() combination\n        _gl.enable( _gl.BLEND );\n        _gl.blendEquation( _gl.FUNC_ADD );\n        _gl.blendFunc( _gl.ZERO, _gl.ONE_MINUS_SRC_COLOR );\n\n      } else if ( blending === THREE.MultiplyBlending ) {\n\n        // TODO: Find blendFuncSeparate() combination\n        _gl.enable( _gl.BLEND );\n        _gl.blendEquation( _gl.FUNC_ADD );\n        _gl.blendFunc( _gl.ZERO, _gl.SRC_COLOR );\n\n      } else if ( blending === THREE.CustomBlending ) {\n\n        _gl.enable( _gl.BLEND );\n\n      } else {\n\n        _gl.enable( _gl.BLEND );\n        _gl.blendEquationSeparate( _gl.FUNC_ADD, _gl.FUNC_ADD );\n        _gl.blendFuncSeparate( _gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA, _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA );\n\n      }\n\n      _oldBlending = blending;\n\n    }\n\n    if ( blending === THREE.CustomBlending ) {\n\n      if ( blendEquation !== _oldBlendEquation ) {\n\n        _gl.blendEquation( paramThreeToGL( blendEquation ) );\n\n        _oldBlendEquation = blendEquation;\n\n      }\n\n      if ( blendSrc !== _oldBlendSrc || blendDst !== _oldBlendDst ) {\n\n        _gl.blendFunc( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ) );\n\n        _oldBlendSrc = blendSrc;\n        _oldBlendDst = blendDst;\n\n      }\n\n    } else {\n\n      _oldBlendEquation = null;\n      _oldBlendSrc = null;\n      _oldBlendDst = null;\n\n    }\n\n  };\n\n  // Textures\n\n  function setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\n\n    if ( isImagePowerOfTwo ) {\n\n      _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\n      _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\n\n      _gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\n      _gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\n\n    } else {\n\n      _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n      _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n      _gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n      _gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n    }\n\n    if ( _glExtensionTextureFilterAnisotropic && texture.type !== THREE.FloatType ) {\n\n      if ( texture.anisotropy > 1 || texture.__oldAnisotropy ) {\n\n        _gl.texParameterf( textureType, _glExtensionTextureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _maxAnisotropy ) );\n        texture.__oldAnisotropy = texture.anisotropy;\n\n      }\n\n    }\n\n  };\n\n  this.setTexture = function ( texture, slot ) {\n\n    if ( texture.needsUpdate ) {\n\n      if ( ! texture.__webglInit ) {\n\n        texture.__webglInit = true;\n\n        texture.addEventListener( 'dispose', onTextureDispose );\n\n        texture.__webglTexture = _gl.createTexture();\n\n        _this.info.memory.textures ++;\n\n      }\n\n      _gl.activeTexture( _gl.TEXTURE0 + slot );\n      _gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );\n\n      _gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n      _gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n      _gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n      var image = texture.image,\n      isImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\n      glFormat = paramThreeToGL( texture.format ),\n      glType = paramThreeToGL( texture.type );\n\n      setTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\n\n      var mipmap, mipmaps = texture.mipmaps;\n\n      if ( texture instanceof THREE.DataTexture ) {\n\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n\n        if ( mipmaps.length > 0 && isImagePowerOfTwo ) {\n\n          for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n            mipmap = mipmaps[ i ];\n            _gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n          }\n\n          texture.generateMipmaps = false;\n\n        } else {\n\n          _gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n        }\n\n      } else if ( texture instanceof THREE.CompressedTexture ) {\n\n        for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n          mipmap = mipmaps[ i ];\n          if ( texture.format !== THREE.RGBAFormat ) {\n            _gl.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n          } else {\n            _gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n          }\n\n        }\n\n      } else { // regular Texture (image, video, canvas)\n\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n\n        if ( mipmaps.length > 0 && isImagePowerOfTwo ) {\n\n          for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n            mipmap = mipmaps[ i ];\n            _gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n          }\n\n          texture.generateMipmaps = false;\n\n        } else {\n\n          _gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\n\n        }\n\n      }\n\n      if ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n      texture.needsUpdate = false;\n\n      if ( texture.onUpdate ) texture.onUpdate();\n\n    } else {\n\n      _gl.activeTexture( _gl.TEXTURE0 + slot );\n      _gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );\n\n    }\n\n  };\n\n  function clampToMaxSize ( image, maxSize ) {\n\n    if ( image.width <= maxSize && image.height <= maxSize ) {\n\n      return image;\n\n    }\n\n    // Warning: Scaling through the canvas will only work with images that use\n    // premultiplied alpha.\n\n    var maxDimension = Math.max( image.width, image.height );\n    var newWidth = Math.floor( image.width * maxSize / maxDimension );\n    var newHeight = Math.floor( image.height * maxSize / maxDimension );\n\n    var canvas = document.createElement( 'canvas' );\n    canvas.width = newWidth;\n    canvas.height = newHeight;\n\n    var ctx = canvas.getContext( '2d' );\n    ctx.drawImage( image, 0, 0, image.width, image.height, 0, 0, newWidth, newHeight );\n\n    return canvas;\n\n  }\n\n  function setCubeTexture ( texture, slot ) {\n\n    if ( texture.image.length === 6 ) {\n\n      if ( texture.needsUpdate ) {\n\n        if ( ! texture.image.__webglTextureCube ) {\n\n          texture.addEventListener( 'dispose', onTextureDispose );\n\n          texture.image.__webglTextureCube = _gl.createTexture();\n\n          _this.info.memory.textures ++;\n\n        }\n\n        _gl.activeTexture( _gl.TEXTURE0 + slot );\n        _gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );\n\n        _gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n        var isCompressed = texture instanceof THREE.CompressedTexture;\n\n        var cubeImage = [];\n\n        for ( var i = 0; i < 6; i ++ ) {\n\n          if ( _this.autoScaleCubemaps && ! isCompressed ) {\n\n            cubeImage[ i ] = clampToMaxSize( texture.image[ i ], _maxCubemapSize );\n\n          } else {\n\n            cubeImage[ i ] = texture.image[ i ];\n\n          }\n\n        }\n\n        var image = cubeImage[ 0 ],\n        isImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\n        glFormat = paramThreeToGL( texture.format ),\n        glType = paramThreeToGL( texture.type );\n\n        setTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\n\n        for ( var i = 0; i < 6; i ++ ) {\n\n          if ( ! isCompressed ) {\n\n            _gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n          } else {\n\n            var mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n            for ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n              mipmap = mipmaps[ j ];\n              if ( texture.format !== THREE.RGBAFormat ) {\n\n                _gl.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n              } else {\n                _gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n              }\n\n            }\n          }\n        }\n\n        if ( texture.generateMipmaps && isImagePowerOfTwo ) {\n\n          _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n        }\n\n        texture.needsUpdate = false;\n\n        if ( texture.onUpdate ) texture.onUpdate();\n\n      } else {\n\n        _gl.activeTexture( _gl.TEXTURE0 + slot );\n        _gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );\n\n      }\n\n    }\n\n  };\n\n  function setCubeTextureDynamic ( texture, slot ) {\n\n    _gl.activeTexture( _gl.TEXTURE0 + slot );\n    _gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.__webglTexture );\n\n  };\n\n  // Render targets\n\n  function setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\n\n    _gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n    _gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, renderTarget.__webglTexture, 0 );\n\n  };\n\n  function setupRenderBuffer ( renderbuffer, renderTarget  ) {\n\n    _gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n    if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n      _gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n      _gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n    /* For some reason this is not working. Defaulting to RGBA4.\n    } else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n      _gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\n      _gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n    */\n    } else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n      _gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n      _gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n    } else {\n\n      _gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n    }\n\n  };\n\n  this.setRenderTarget = function ( renderTarget ) {\n\n    var isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\n\n    if ( renderTarget && ! renderTarget.__webglFramebuffer ) {\n\n      if ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\n      if ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\n\n      renderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n      renderTarget.__webglTexture = _gl.createTexture();\n\n      _this.info.memory.textures ++;\n\n      // Setup texture, create render and frame buffers\n\n      var isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\n        glFormat = paramThreeToGL( renderTarget.format ),\n        glType = paramThreeToGL( renderTarget.type );\n\n      if ( isCube ) {\n\n        renderTarget.__webglFramebuffer = [];\n        renderTarget.__webglRenderbuffer = [];\n\n        _gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );\n        setTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\n\n        for ( var i = 0; i < 6; i ++ ) {\n\n          renderTarget.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n          renderTarget.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n          _gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n          setupFrameBuffer( renderTarget.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n          setupRenderBuffer( renderTarget.__webglRenderbuffer[ i ], renderTarget );\n\n        }\n\n        if ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n      } else {\n\n        renderTarget.__webglFramebuffer = _gl.createFramebuffer();\n\n        if ( renderTarget.shareDepthFrom ) {\n\n          renderTarget.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\n\n        } else {\n\n          renderTarget.__webglRenderbuffer = _gl.createRenderbuffer();\n\n        }\n\n        _gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );\n        setTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\n\n        _gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n        setupFrameBuffer( renderTarget.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\n\n        if ( renderTarget.shareDepthFrom ) {\n\n          if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n            _gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );\n\n          } else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n            _gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );\n\n          }\n\n        } else {\n\n          setupRenderBuffer( renderTarget.__webglRenderbuffer, renderTarget );\n\n        }\n\n        if ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n      }\n\n      // Release everything\n\n      if ( isCube ) {\n\n        _gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n      } else {\n\n        _gl.bindTexture( _gl.TEXTURE_2D, null );\n\n      }\n\n      _gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n      _gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n    }\n\n    var framebuffer, width, height, vx, vy;\n\n    if ( renderTarget ) {\n\n      if ( isCube ) {\n\n        framebuffer = renderTarget.__webglFramebuffer[ renderTarget.activeCubeFace ];\n\n      } else {\n\n        framebuffer = renderTarget.__webglFramebuffer;\n\n      }\n\n      width = renderTarget.width;\n      height = renderTarget.height;\n\n      vx = 0;\n      vy = 0;\n\n    } else {\n\n      framebuffer = null;\n\n      width = _viewportWidth;\n      height = _viewportHeight;\n\n      vx = _viewportX;\n      vy = _viewportY;\n\n    }\n\n    if ( framebuffer !== _currentFramebuffer ) {\n\n      _gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n      _gl.viewport( vx, vy, width, height );\n\n      _currentFramebuffer = framebuffer;\n\n    }\n\n    _currentWidth = width;\n    _currentHeight = height;\n\n  };\n\n  function updateRenderTargetMipmap ( renderTarget ) {\n\n    if ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\n\n      _gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );\n      _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n      _gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n    } else {\n\n      _gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );\n      _gl.generateMipmap( _gl.TEXTURE_2D );\n      _gl.bindTexture( _gl.TEXTURE_2D, null );\n\n    }\n\n  };\n\n  // Fallback filters for non-power-of-2 textures\n\n  function filterFallback ( f ) {\n\n    if ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\n\n      return _gl.NEAREST;\n\n    }\n\n    return _gl.LINEAR;\n\n  };\n\n  // Map three.js constants to WebGL constants\n\n  function paramThreeToGL ( p ) {\n\n    if ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\n    if ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\n    if ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\n\n    if ( p === THREE.NearestFilter ) return _gl.NEAREST;\n    if ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\n    if ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\n\n    if ( p === THREE.LinearFilter ) return _gl.LINEAR;\n    if ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\n    if ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\n\n    if ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\n    if ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\n    if ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\n    if ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\n\n    if ( p === THREE.ByteType ) return _gl.BYTE;\n    if ( p === THREE.ShortType ) return _gl.SHORT;\n    if ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\n    if ( p === THREE.IntType ) return _gl.INT;\n    if ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\n    if ( p === THREE.FloatType ) return _gl.FLOAT;\n\n    if ( p === THREE.AlphaFormat ) return _gl.ALPHA;\n    if ( p === THREE.RGBFormat ) return _gl.RGB;\n    if ( p === THREE.RGBAFormat ) return _gl.RGBA;\n    if ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\n    if ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\n\n    if ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\n    if ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\n    if ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\n\n    if ( p === THREE.ZeroFactor ) return _gl.ZERO;\n    if ( p === THREE.OneFactor ) return _gl.ONE;\n    if ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\n    if ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\n    if ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\n    if ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\n    if ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\n    if ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\n\n    if ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\n    if ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\n    if ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\n\n    if ( _glExtensionCompressedTextureS3TC !== undefined ) {\n\n      if ( p === THREE.RGB_S3TC_DXT1_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGB_S3TC_DXT1_EXT;\n      if ( p === THREE.RGBA_S3TC_DXT1_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n      if ( p === THREE.RGBA_S3TC_DXT3_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n      if ( p === THREE.RGBA_S3TC_DXT5_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n    }\n\n    return 0;\n\n  };\n\n  // Allocations\n\n  function allocateBones ( object ) {\n\n    if ( _supportsBoneTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\n\n      return 1024;\n\n    } else {\n\n      // default for when object is not specified\n      // ( for example when prebuilding shader\n      //   to be used with multiple objects )\n      //\n      //  - leave some extra space for other uniforms\n      //  - limit here is ANGLE's 254 max uniform vectors\n      //    (up to 54 should be safe)\n\n      var nVertexUniforms = _gl.getParameter( _gl.MAX_VERTEX_UNIFORM_VECTORS );\n      var nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n      var maxBones = nVertexMatrices;\n\n      if ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\n\n        maxBones = Math.min( object.skeleton.bones.length, maxBones );\n\n        if ( maxBones < object.skeleton.bones.length ) {\n\n          console.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\n\n        }\n\n      }\n\n      return maxBones;\n\n    }\n\n  };\n\n  function allocateLights( lights ) {\n\n    var dirLights = 0;\n    var pointLights = 0;\n    var spotLights = 0;\n    var hemiLights = 0;\n\n    for ( var l = 0, ll = lights.length; l < ll; l ++ ) {\n\n      var light = lights[ l ];\n\n      if ( light.onlyShadow || light.visible === false ) continue;\n\n      if ( light instanceof THREE.DirectionalLight ) dirLights ++;\n      if ( light instanceof THREE.PointLight ) pointLights ++;\n      if ( light instanceof THREE.SpotLight ) spotLights ++;\n      if ( light instanceof THREE.HemisphereLight ) hemiLights ++;\n\n    }\n\n    return { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\n\n  };\n\n  function allocateShadows( lights ) {\n\n    var maxShadows = 0;\n\n    for ( var l = 0, ll = lights.length; l < ll; l ++ ) {\n\n      var light = lights[ l ];\n\n      if ( ! light.castShadow ) continue;\n\n      if ( light instanceof THREE.SpotLight ) maxShadows ++;\n      if ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) maxShadows ++;\n\n    }\n\n    return maxShadows;\n\n  };\n\n  // Initialization\n\n  function initGL() {\n\n    try {\n\n      var attributes = {\n        alpha: _alpha,\n        depth: _depth,\n        stencil: _stencil,\n        antialias: _antialias,\n        premultipliedAlpha: _premultipliedAlpha,\n        preserveDrawingBuffer: _preserveDrawingBuffer\n      };\n\n      _gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\n\n      if ( _gl === null ) {\n\n        throw 'Error creating WebGL context.';\n\n      }\n\n    } catch ( error ) {\n\n      console.error( error );\n\n    }\n\n    _glExtensionTextureFloat = _gl.getExtension( 'OES_texture_float' );\n    _glExtensionTextureFloatLinear = _gl.getExtension( 'OES_texture_float_linear' );\n    _glExtensionStandardDerivatives = _gl.getExtension( 'OES_standard_derivatives' );\n\n    _glExtensionTextureFilterAnisotropic = _gl.getExtension( 'EXT_texture_filter_anisotropic' ) || _gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || _gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\n    _glExtensionCompressedTextureS3TC = _gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || _gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || _gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\n    _glExtensionElementIndexUint = _gl.getExtension( 'OES_element_index_uint' );\n\n\n    if ( _glExtensionTextureFloat === null ) {\n\n      console.log( 'THREE.WebGLRenderer: Float textures not supported.' );\n\n    }\n\n    if ( _glExtensionStandardDerivatives === null ) {\n\n      console.log( 'THREE.WebGLRenderer: Standard derivatives not supported.' );\n\n    }\n\n    if ( _glExtensionTextureFilterAnisotropic === null ) {\n\n      console.log( 'THREE.WebGLRenderer: Anisotropic texture filtering not supported.' );\n\n    }\n\n    if ( _glExtensionCompressedTextureS3TC === null ) {\n\n      console.log( 'THREE.WebGLRenderer: S3TC compressed textures not supported.' );\n\n    }\n\n    if ( _glExtensionElementIndexUint === null ) {\n\n      console.log( 'THREE.WebGLRenderer: elementindex as unsigned integer not supported.' );\n\n    }\n\n    if ( _gl.getShaderPrecisionFormat === undefined ) {\n\n      _gl.getShaderPrecisionFormat = function () {\n\n        return {\n          'rangeMin': 1,\n          'rangeMax': 1,\n          'precision': 1\n        };\n\n      }\n    }\n\n    if ( _logarithmicDepthBuffer ) {\n\n      _glExtensionFragDepth = _gl.getExtension( 'EXT_frag_depth' );\n\n    }\n\n  };\n\n  function setDefaultGLState () {\n\n    _gl.clearColor( 0, 0, 0, 1 );\n    _gl.clearDepth( 1 );\n    _gl.clearStencil( 0 );\n\n    _gl.enable( _gl.DEPTH_TEST );\n    _gl.depthFunc( _gl.LEQUAL );\n\n    _gl.frontFace( _gl.CCW );\n    _gl.cullFace( _gl.BACK );\n    _gl.enable( _gl.CULL_FACE );\n\n    _gl.enable( _gl.BLEND );\n    _gl.blendEquation( _gl.FUNC_ADD );\n    _gl.blendFunc( _gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA );\n\n    _gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\n\n    _gl.clearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n  };\n\n  // default plugins (order is important)\n\n  this.shadowMapPlugin = new THREE.ShadowMapPlugin();\n  this.addPrePlugin( this.shadowMapPlugin );\n\n  this.addPostPlugin( new THREE.SpritePlugin() );\n  this.addPostPlugin( new THREE.LensFlarePlugin() );\n\n};\n\n// File:src/renderers/WebGLRenderTarget.js\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\n\n  this.width = width;\n  this.height = height;\n\n  options = options || {};\n\n  this.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\n  this.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\n\n  this.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\n  this.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\n\n  this.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\n\n  this.offset = new THREE.Vector2( 0, 0 );\n  this.repeat = new THREE.Vector2( 1, 1 );\n\n  this.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\n  this.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\n\n  this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n  this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\n  this.generateMipmaps = true;\n\n  this.shareDepthFrom = null;\n\n};\n\nTHREE.WebGLRenderTarget.prototype = {\n\n  constructor: THREE.WebGLRenderTarget,\n\n  setSize: function ( width, height ) {\n\n    this.width = width;\n    this.height = height;\n\n  },\n\n  clone: function () {\n\n    var tmp = new THREE.WebGLRenderTarget( this.width, this.height );\n\n    tmp.wrapS = this.wrapS;\n    tmp.wrapT = this.wrapT;\n\n    tmp.magFilter = this.magFilter;\n    tmp.minFilter = this.minFilter;\n\n    tmp.anisotropy = this.anisotropy;\n\n    tmp.offset.copy( this.offset );\n    tmp.repeat.copy( this.repeat );\n\n    tmp.format = this.format;\n    tmp.type = this.type;\n\n    tmp.depthBuffer = this.depthBuffer;\n    tmp.stencilBuffer = this.stencilBuffer;\n\n    tmp.generateMipmaps = this.generateMipmaps;\n\n    tmp.shareDepthFrom = this.shareDepthFrom;\n\n    return tmp;\n\n  },\n\n  dispose: function () {\n\n    this.dispatchEvent( { type: 'dispose' } );\n\n  }\n\n};\n\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\n\n// File:src/renderers/WebGLRenderTargetCube.js\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\n\n  THREE.WebGLRenderTarget.call( this, width, height, options );\n\n  this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\n};\n\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\n\n// File:src/renderers/webgl/WebGLProgram.js\n\nTHREE.WebGLProgram = ( function () {\n\n  var programIdCount = 0;\n\n  var generateDefines = function ( defines ) {\n\n    var value, chunk, chunks = [];\n\n    for ( var d in defines ) {\n\n      value = defines[ d ];\n      if ( value === false ) continue;\n\n      chunk = \"#define \" + d + \" \" + value;\n      chunks.push( chunk );\n\n    }\n\n    return chunks.join( \"\\n\" );\n\n  };\n\n  var cacheUniformLocations = function ( gl, program, identifiers ) {\n\n    var uniforms = {};\n\n    for ( var i = 0, l = identifiers.length; i < l; i ++ ) {\n\n      var id = identifiers[ i ];\n      uniforms[ id ] = gl.getUniformLocation( program, id );\n\n    }\n\n    return uniforms;\n\n  };\n\n  var cacheAttributeLocations = function ( gl, program, identifiers ) {\n\n    var attributes = {};\n\n    for ( var i = 0, l = identifiers.length; i < l; i ++ ) {\n\n      var id = identifiers[ i ];\n      attributes[ id ] = gl.getAttribLocation( program, id );\n\n    }\n\n    return attributes;\n\n  };\n\n  return function ( renderer, code, material, parameters ) {\n\n    var _this = renderer;\n    var _gl = _this.context;\n\n    var defines = material.defines;\n    var uniforms = material.__webglShader.uniforms;\n    var attributes = material.attributes;\n\n    var vertexShader = material.__webglShader.vertexShader;\n    var fragmentShader = material.__webglShader.fragmentShader;\n\n    var index0AttributeName = material.index0AttributeName;\n\n    if ( index0AttributeName === undefined && parameters.morphTargets === true ) {\n\n      // programs with morphTargets displace position out of attribute 0\n\n      index0AttributeName = 'position';\n\n    }\n\n    var shadowMapTypeDefine = \"SHADOWMAP_TYPE_BASIC\";\n\n    if ( parameters.shadowMapType === THREE.PCFShadowMap ) {\n\n      shadowMapTypeDefine = \"SHADOWMAP_TYPE_PCF\";\n\n    } else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\n\n      shadowMapTypeDefine = \"SHADOWMAP_TYPE_PCF_SOFT\";\n\n    }\n\n    // console.log( \"building new program \" );\n\n    //\n\n    var customDefines = generateDefines( defines );\n\n    //\n\n    var program = _gl.createProgram();\n\n    var prefix_vertex, prefix_fragment;\n\n    if ( material instanceof THREE.RawShaderMaterial ) {\n\n      prefix_vertex = '';\n      prefix_fragment = '';\n\n    } else {\n\n      prefix_vertex = [\n\n        \"precision \" + parameters.precision + \" float;\",\n        \"precision \" + parameters.precision + \" int;\",\n\n        customDefines,\n\n        parameters.supportsVertexTextures ? \"#define VERTEX_TEXTURES\" : \"\",\n\n        _this.gammaInput ? \"#define GAMMA_INPUT\" : \"\",\n        _this.gammaOutput ? \"#define GAMMA_OUTPUT\" : \"\",\n\n        \"#define MAX_DIR_LIGHTS \" + parameters.maxDirLights,\n        \"#define MAX_POINT_LIGHTS \" + parameters.maxPointLights,\n        \"#define MAX_SPOT_LIGHTS \" + parameters.maxSpotLights,\n        \"#define MAX_HEMI_LIGHTS \" + parameters.maxHemiLights,\n\n        \"#define MAX_SHADOWS \" + parameters.maxShadows,\n\n        \"#define MAX_BONES \" + parameters.maxBones,\n\n        parameters.map ? \"#define USE_MAP\" : \"\",\n        parameters.envMap ? \"#define USE_ENVMAP\" : \"\",\n        parameters.lightMap ? \"#define USE_LIGHTMAP\" : \"\",\n        parameters.bumpMap ? \"#define USE_BUMPMAP\" : \"\",\n        parameters.normalMap ? \"#define USE_NORMALMAP\" : \"\",\n        parameters.specularMap ? \"#define USE_SPECULARMAP\" : \"\",\n        parameters.alphaMap ? \"#define USE_ALPHAMAP\" : \"\",\n        parameters.vertexColors ? \"#define USE_COLOR\" : \"\",\n\n        parameters.skinning ? \"#define USE_SKINNING\" : \"\",\n        parameters.useVertexTexture ? \"#define BONE_TEXTURE\" : \"\",\n\n        parameters.morphTargets ? \"#define USE_MORPHTARGETS\" : \"\",\n        parameters.morphNormals ? \"#define USE_MORPHNORMALS\" : \"\",\n        parameters.wrapAround ? \"#define WRAP_AROUND\" : \"\",\n        parameters.doubleSided ? \"#define DOUBLE_SIDED\" : \"\",\n        parameters.flipSided ? \"#define FLIP_SIDED\" : \"\",\n\n        parameters.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\",\n        parameters.shadowMapEnabled ? \"#define \" + shadowMapTypeDefine : \"\",\n        parameters.shadowMapDebug ? \"#define SHADOWMAP_DEBUG\" : \"\",\n        parameters.shadowMapCascade ? \"#define SHADOWMAP_CASCADE\" : \"\",\n\n        parameters.sizeAttenuation ? \"#define USE_SIZEATTENUATION\" : \"\",\n\n        parameters.logarithmicDepthBuffer ? \"#define USE_LOGDEPTHBUF\" : \"\",\n        //_this._glExtensionFragDepth ? \"#define USE_LOGDEPTHBUF_EXT\" : \"\",\n\n\n        \"uniform mat4 modelMatrix;\",\n        \"uniform mat4 modelViewMatrix;\",\n        \"uniform mat4 projectionMatrix;\",\n        \"uniform mat4 viewMatrix;\",\n        \"uniform mat3 normalMatrix;\",\n        \"uniform vec3 cameraPosition;\",\n\n        \"attribute vec3 position;\",\n        \"attribute vec3 normal;\",\n        \"attribute vec2 uv;\",\n        \"attribute vec2 uv2;\",\n\n        \"#ifdef USE_COLOR\",\n\n        \" attribute vec3 color;\",\n\n        \"#endif\",\n\n        \"#ifdef USE_MORPHTARGETS\",\n\n        \" attribute vec3 morphTarget0;\",\n        \" attribute vec3 morphTarget1;\",\n        \" attribute vec3 morphTarget2;\",\n        \" attribute vec3 morphTarget3;\",\n\n        \" #ifdef USE_MORPHNORMALS\",\n\n        \"   attribute vec3 morphNormal0;\",\n        \"   attribute vec3 morphNormal1;\",\n        \"   attribute vec3 morphNormal2;\",\n        \"   attribute vec3 morphNormal3;\",\n\n        \" #else\",\n\n        \"   attribute vec3 morphTarget4;\",\n        \"   attribute vec3 morphTarget5;\",\n        \"   attribute vec3 morphTarget6;\",\n        \"   attribute vec3 morphTarget7;\",\n\n        \" #endif\",\n\n        \"#endif\",\n\n        \"#ifdef USE_SKINNING\",\n\n        \" attribute vec4 skinIndex;\",\n        \" attribute vec4 skinWeight;\",\n\n        \"#endif\",\n\n        \"\"\n\n      ].join( '\\n' );\n\n      prefix_fragment = [\n\n        \"precision \" + parameters.precision + \" float;\",\n        \"precision \" + parameters.precision + \" int;\",\n\n        ( parameters.bumpMap || parameters.normalMap ) ? \"#extension GL_OES_standard_derivatives : enable\" : \"\",\n\n        customDefines,\n\n        \"#define MAX_DIR_LIGHTS \" + parameters.maxDirLights,\n        \"#define MAX_POINT_LIGHTS \" + parameters.maxPointLights,\n        \"#define MAX_SPOT_LIGHTS \" + parameters.maxSpotLights,\n        \"#define MAX_HEMI_LIGHTS \" + parameters.maxHemiLights,\n\n        \"#define MAX_SHADOWS \" + parameters.maxShadows,\n\n        parameters.alphaTest ? \"#define ALPHATEST \" + parameters.alphaTest: \"\",\n\n        _this.gammaInput ? \"#define GAMMA_INPUT\" : \"\",\n        _this.gammaOutput ? \"#define GAMMA_OUTPUT\" : \"\",\n\n        ( parameters.useFog && parameters.fog ) ? \"#define USE_FOG\" : \"\",\n        ( parameters.useFog && parameters.fogExp ) ? \"#define FOG_EXP2\" : \"\",\n\n        parameters.map ? \"#define USE_MAP\" : \"\",\n        parameters.envMap ? \"#define USE_ENVMAP\" : \"\",\n        parameters.lightMap ? \"#define USE_LIGHTMAP\" : \"\",\n        parameters.bumpMap ? \"#define USE_BUMPMAP\" : \"\",\n        parameters.normalMap ? \"#define USE_NORMALMAP\" : \"\",\n        parameters.specularMap ? \"#define USE_SPECULARMAP\" : \"\",\n        parameters.alphaMap ? \"#define USE_ALPHAMAP\" : \"\",\n        parameters.vertexColors ? \"#define USE_COLOR\" : \"\",\n\n        parameters.metal ? \"#define METAL\" : \"\",\n        parameters.wrapAround ? \"#define WRAP_AROUND\" : \"\",\n        parameters.doubleSided ? \"#define DOUBLE_SIDED\" : \"\",\n        parameters.flipSided ? \"#define FLIP_SIDED\" : \"\",\n\n        parameters.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\",\n        parameters.shadowMapEnabled ? \"#define \" + shadowMapTypeDefine : \"\",\n        parameters.shadowMapDebug ? \"#define SHADOWMAP_DEBUG\" : \"\",\n        parameters.shadowMapCascade ? \"#define SHADOWMAP_CASCADE\" : \"\",\n\n        parameters.logarithmicDepthBuffer ? \"#define USE_LOGDEPTHBUF\" : \"\",\n        //_this._glExtensionFragDepth ? \"#define USE_LOGDEPTHBUF_EXT\" : \"\",\n\n        \"uniform mat4 viewMatrix;\",\n        \"uniform vec3 cameraPosition;\",\n        \"\"\n\n      ].join( '\\n' );\n\n    }\n\n    var glVertexShader = new THREE.WebGLShader( _gl, _gl.VERTEX_SHADER, prefix_vertex + vertexShader );\n    var glFragmentShader = new THREE.WebGLShader( _gl, _gl.FRAGMENT_SHADER, prefix_fragment + fragmentShader );\n\n    _gl.attachShader( program, glVertexShader );\n    _gl.attachShader( program, glFragmentShader );\n\n    if ( index0AttributeName !== undefined ) {\n\n      // Force a particular attribute to index 0.\n      // because potentially expensive emulation is done by browser if attribute 0 is disabled.\n      // And, color, for example is often automatically bound to index 0 so disabling it\n\n      _gl.bindAttribLocation( program, 0, index0AttributeName );\n\n    }\n\n    _gl.linkProgram( program );\n\n    if ( _gl.getProgramParameter( program, _gl.LINK_STATUS ) === false ) {\n\n      console.error( 'THREE.WebGLProgram: Could not initialise shader.' );\n      console.error( 'gl.VALIDATE_STATUS', _gl.getProgramParameter( program, _gl.VALIDATE_STATUS ) );\n      console.error( 'gl.getError()', _gl.getError() );\n\n    }\n\n    if ( _gl.getProgramInfoLog( program ) !== '' ) {\n\n      console.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', _gl.getProgramInfoLog( program ) );\n\n    }\n\n    // clean up\n\n    _gl.deleteShader( glVertexShader );\n    _gl.deleteShader( glFragmentShader );\n\n    // cache uniform locations\n\n    var identifiers = [\n\n      'viewMatrix', 'modelViewMatrix', 'projectionMatrix', 'normalMatrix', 'modelMatrix', 'cameraPosition', 'morphTargetInfluences', 'bindMatrix', 'bindMatrixInverse'\n\n    ];\n\n    if ( parameters.useVertexTexture ) {\n\n      identifiers.push( 'boneTexture' );\n      identifiers.push( 'boneTextureWidth' );\n      identifiers.push( 'boneTextureHeight' );\n\n    } else {\n\n      identifiers.push( 'boneGlobalMatrices' );\n\n    }\n\n    if ( parameters.logarithmicDepthBuffer ) {\n\n      identifiers.push('logDepthBufFC');\n\n    }\n\n\n    for ( var u in uniforms ) {\n\n      identifiers.push( u );\n\n    }\n\n    this.uniforms = cacheUniformLocations( _gl, program, identifiers );\n\n    // cache attributes locations\n\n    identifiers = [\n\n      \"position\", \"normal\", \"uv\", \"uv2\", \"tangent\", \"color\",\n      \"skinIndex\", \"skinWeight\", \"lineDistance\"\n\n    ];\n\n    for ( var i = 0; i < parameters.maxMorphTargets; i ++ ) {\n\n      identifiers.push( \"morphTarget\" + i );\n\n    }\n\n    for ( var i = 0; i < parameters.maxMorphNormals; i ++ ) {\n\n      identifiers.push( \"morphNormal\" + i );\n\n    }\n\n    for ( var a in attributes ) {\n\n      identifiers.push( a );\n\n    }\n\n    this.attributes = cacheAttributeLocations( _gl, program, identifiers );\n\n    //\n\n    this.id = programIdCount ++;\n    this.code = code;\n    this.usedTimes = 1;\n    this.program = program;\n    this.vertexShader = glVertexShader;\n    this.fragmentShader = glFragmentShader;\n\n    return this;\n\n  };\n\n} )();\n\n// File:src/renderers/webgl/WebGLShader.js\n\nTHREE.WebGLShader = ( function () {\n\n  var addLineNumbers = function ( string ) {\n\n    var lines = string.split( '\\n' );\n\n    for ( var i = 0; i < lines.length; i ++ ) {\n\n      lines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n    }\n\n    return lines.join( '\\n' );\n\n  };\n\n  return function ( gl, type, string ) {\n\n    var shader = gl.createShader( type );\n\n    gl.shaderSource( shader, string );\n    gl.compileShader( shader );\n\n    if ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n      console.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n    }\n\n    if ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n      console.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', gl.getShaderInfoLog( shader ) );\n      console.warn( addLineNumbers( string ) );\n\n    }\n\n    // --enable-privileged-webgl-extension\n    // console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n    return shader;\n\n  };\n\n} )();\n\n// File:src/renderers/renderables/RenderableVertex.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.RenderableVertex = function () {\n\n  this.position = new THREE.Vector3();\n  this.positionWorld = new THREE.Vector3();\n  this.positionScreen = new THREE.Vector4();\n\n  this.visible = true;\n\n};\n\nTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\n\n  this.positionWorld.copy( vertex.positionWorld );\n  this.positionScreen.copy( vertex.positionScreen );\n\n};\n\n// File:src/renderers/renderables/RenderableFace.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.RenderableFace = function () {\n\n  this.id = 0;\n\n  this.v1 = new THREE.RenderableVertex();\n  this.v2 = new THREE.RenderableVertex();\n  this.v3 = new THREE.RenderableVertex();\n\n  this.normalModel = new THREE.Vector3();\n\n  this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n  this.vertexNormalsLength = 0;\n\n  this.color = new THREE.Color();\n  this.material = null;\n  this.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\n  this.z = 0;\n\n};\n\n// File:src/renderers/renderables/RenderableObject.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.RenderableObject = function () {\n\n  this.id = 0;\n\n  this.object = null;\n  this.z = 0;\n\n};\n\n// File:src/renderers/renderables/RenderableSprite.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.RenderableSprite = function () {\n\n  this.id = 0;\n\n  this.object = null;\n\n  this.x = 0;\n  this.y = 0;\n  this.z = 0;\n\n  this.rotation = 0;\n  this.scale = new THREE.Vector2();\n\n  this.material = null;\n\n};\n\n// File:src/renderers/renderables/RenderableLine.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.RenderableLine = function () {\n\n  this.id = 0;\n\n  this.v1 = new THREE.RenderableVertex();\n  this.v2 = new THREE.RenderableVertex();\n\n  this.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n  this.material = null;\n\n  this.z = 0;\n\n};\n\n// File:src/extras/GeometryUtils.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.GeometryUtils = {\n\n  merge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n    console.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\n    var matrix;\n\n    if ( geometry2 instanceof THREE.Mesh ) {\n\n      geometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n      matrix = geometry2.matrix;\n      geometry2 = geometry2.geometry;\n\n    }\n\n    geometry1.merge( geometry2, matrix, materialIndexOffset );\n\n  },\n\n  center: function ( geometry ) {\n\n    console.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n    return geometry.center();\n\n  }\n\n};\n\n// File:src/extras/ImageUtils.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Daosheng Mu / https://github.com/DaoshengMu/\n */\n\nTHREE.ImageUtils = {\n\n  crossOrigin: undefined,\n\n  loadTexture: function ( url, mapping, onLoad, onError ) {\n\n    var loader = new THREE.ImageLoader();\n    loader.crossOrigin = this.crossOrigin;\n\n    var texture = new THREE.Texture( undefined, mapping );\n\n    loader.load( url, function ( image ) {\n\n      texture.image = image;\n      texture.needsUpdate = true;\n\n      if ( onLoad ) onLoad( texture );\n\n    }, undefined, function ( event ) {\n\n      if ( onError ) onError( event );\n\n    } );\n\n    texture.sourceFile = url;\n\n    return texture;\n\n  },\n\n  loadTextureCube: function ( array, mapping, onLoad, onError ) {\n\n    var images = [];\n\n    var loader = new THREE.ImageLoader();\n    loader.crossOrigin = this.crossOrigin;\n\n    var texture = new THREE.CubeTexture( images, mapping );\n\n    // no flipping needed for cube textures\n\n    texture.flipY = false;\n\n    var loaded = 0;\n\n    var loadTexture = function ( i ) {\n\n      loader.load( array[ i ], function ( image ) {\n\n        texture.images[ i ] = image;\n\n        loaded += 1;\n\n        if ( loaded === 6 ) {\n\n          texture.needsUpdate = true;\n\n          if ( onLoad ) onLoad( texture );\n\n        }\n\n      } );\n\n    }\n\n    for ( var i = 0, il = array.length; i < il; ++ i ) {\n\n      loadTexture( i );\n\n    }\n\n    return texture;\n\n  },\n\n  loadCompressedTexture: function () {\n\n    console.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\n\n  },\n\n  loadCompressedTextureCube: function () {\n\n    console.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\n\n  },\n\n  getNormalMap: function ( image, depth ) {\n\n    // Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\n\n    var cross = function ( a, b ) {\n\n      return [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\n\n    }\n\n    var subtract = function ( a, b ) {\n\n      return [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\n\n    }\n\n    var normalize = function ( a ) {\n\n      var l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\n      return [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\n\n    }\n\n    depth = depth | 1;\n\n    var width = image.width;\n    var height = image.height;\n\n    var canvas = document.createElement( 'canvas' );\n    canvas.width = width;\n    canvas.height = height;\n\n    var context = canvas.getContext( '2d' );\n    context.drawImage( image, 0, 0 );\n\n    var data = context.getImageData( 0, 0, width, height ).data;\n    var imageData = context.createImageData( width, height );\n    var output = imageData.data;\n\n    for ( var x = 0; x < width; x ++ ) {\n\n      for ( var y = 0; y < height; y ++ ) {\n\n        var ly = y - 1 < 0 ? 0 : y - 1;\n        var uy = y + 1 > height - 1 ? height - 1 : y + 1;\n        var lx = x - 1 < 0 ? 0 : x - 1;\n        var ux = x + 1 > width - 1 ? width - 1 : x + 1;\n\n        var points = [];\n        var origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\n        points.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\n        points.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\n        points.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\n        points.push( [  1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\n        points.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\n        points.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\n        points.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\n        points.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\n\n        var normals = [];\n        var num_points = points.length;\n\n        for ( var i = 0; i < num_points; i ++ ) {\n\n          var v1 = points[ i ];\n          var v2 = points[ ( i + 1 ) % num_points ];\n          v1 = subtract( v1, origin );\n          v2 = subtract( v2, origin );\n          normals.push( normalize( cross( v1, v2 ) ) );\n\n        }\n\n        var normal = [ 0, 0, 0 ];\n\n        for ( var i = 0; i < normals.length; i ++ ) {\n\n          normal[ 0 ] += normals[ i ][ 0 ];\n          normal[ 1 ] += normals[ i ][ 1 ];\n          normal[ 2 ] += normals[ i ][ 2 ];\n\n        }\n\n        normal[ 0 ] /= normals.length;\n        normal[ 1 ] /= normals.length;\n        normal[ 2 ] /= normals.length;\n\n        var idx = ( y * width + x ) * 4;\n\n        output[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\n        output[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\n        output[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\n        output[ idx + 3 ] = 255;\n\n      }\n\n    }\n\n    context.putImageData( imageData, 0, 0 );\n\n    return canvas;\n\n  },\n\n  generateDataTexture: function ( width, height, color ) {\n\n    var size = width * height;\n    var data = new Uint8Array( 3 * size );\n\n    var r = Math.floor( color.r * 255 );\n    var g = Math.floor( color.g * 255 );\n    var b = Math.floor( color.b * 255 );\n\n    for ( var i = 0; i < size; i ++ ) {\n\n      data[ i * 3 ]      = r;\n      data[ i * 3 + 1 ] = g;\n      data[ i * 3 + 2 ] = b;\n\n    }\n\n    var texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\n    texture.needsUpdate = true;\n\n    return texture;\n\n  }\n\n};\n\n// File:src/extras/SceneUtils.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.SceneUtils = {\n\n  createMultiMaterialObject: function ( geometry, materials ) {\n\n    var group = new THREE.Object3D();\n\n    for ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n      group.add( new THREE.Mesh( geometry, materials[ i ] ) );\n\n    }\n\n    return group;\n\n  },\n\n  detach: function ( child, parent, scene ) {\n\n    child.applyMatrix( parent.matrixWorld );\n    parent.remove( child );\n    scene.add( child );\n\n  },\n\n  attach: function ( child, scene, parent ) {\n\n    var matrixWorldInverse = new THREE.Matrix4();\n    matrixWorldInverse.getInverse( parent.matrixWorld );\n    child.applyMatrix( matrixWorldInverse );\n\n    scene.remove( child );\n    parent.add( child );\n\n  }\n\n};\n\n// File:src/extras/FontUtils.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * For Text operations in three.js (See TextGeometry)\n *\n * It uses techniques used in:\n *\n *  typeface.js and canvastext\n *    For converting fonts and rendering with javascript\n *    http://typeface.neocracy.org\n *\n *  Triangulation ported from AS3\n *    Simple Polygon Triangulation\n *    http://actionsnippet.com/?p=1462\n *\n *  A Method to triangulate shapes with holes\n *    http://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\n *\n */\n\nTHREE.FontUtils = {\n\n  faces: {},\n\n  // Just for now. face[weight][style]\n\n  face: 'helvetiker',\n  weight: 'normal',\n  style: 'normal',\n  size: 150,\n  divisions: 10,\n\n  getFace: function () {\n\n    try {\n\n      return this.faces[ this.face ][ this.weight ][ this.style ];\n\n    } catch (e) {\n\n      throw \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\n\n    };\n\n  },\n\n  loadFace: function ( data ) {\n\n    var family = data.familyName.toLowerCase();\n\n    var ThreeFont = this;\n\n    ThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\n\n    ThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\n    ThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\n\n    var face = ThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\n\n    return data;\n\n  },\n\n  drawText: function ( text ) {\n\n    var characterPts = [], allPts = [];\n\n    // RenderText\n\n    var i, p,\n      face = this.getFace(),\n      scale = this.size / face.resolution,\n      offset = 0,\n      chars = String( text ).split( '' ),\n      length = chars.length;\n\n    var fontPaths = [];\n\n    for ( i = 0; i < length; i ++ ) {\n\n      var path = new THREE.Path();\n\n      var ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\n      offset += ret.offset;\n\n      fontPaths.push( ret.path );\n\n    }\n\n    // get the width\n\n    var width = offset / 2;\n    //\n    // for ( p = 0; p < allPts.length; p++ ) {\n    //\n    //  allPts[ p ].x -= width;\n    //\n    // }\n\n    //var extract = this.extractPoints( allPts, characterPts );\n    //extract.contour = allPts;\n\n    //extract.paths = fontPaths;\n    //extract.offset = width;\n\n    return { paths: fontPaths, offset: width };\n\n  },\n\n\n\n\n  extractGlyphPoints: function ( c, face, scale, offset, path ) {\n\n    var pts = [];\n\n    var i, i2, divisions,\n      outline, action, length,\n      scaleX, scaleY,\n      x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\n      laste,\n      glyph = face.glyphs[ c ] || face.glyphs[ '?' ];\n\n    if ( ! glyph ) return;\n\n    if ( glyph.o ) {\n\n      outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n      length = outline.length;\n\n      scaleX = scale;\n      scaleY = scale;\n\n      for ( i = 0; i < length; ) {\n\n        action = outline[ i ++ ];\n\n        //console.log( action );\n\n        switch ( action ) {\n\n        case 'm':\n\n          // Move To\n\n          x = outline[ i ++ ] * scaleX + offset;\n          y = outline[ i ++ ] * scaleY;\n\n          path.moveTo( x, y );\n          break;\n\n        case 'l':\n\n          // Line To\n\n          x = outline[ i ++ ] * scaleX + offset;\n          y = outline[ i ++ ] * scaleY;\n          path.lineTo( x,y );\n          break;\n\n        case 'q':\n\n          // QuadraticCurveTo\n\n          cpx  = outline[ i ++ ] * scaleX + offset;\n          cpy  = outline[ i ++ ] * scaleY;\n          cpx1 = outline[ i ++ ] * scaleX + offset;\n          cpy1 = outline[ i ++ ] * scaleY;\n\n          path.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n          laste = pts[ pts.length - 1 ];\n\n          if ( laste ) {\n\n            cpx0 = laste.x;\n            cpy0 = laste.y;\n\n            for ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\n\n              var t = i2 / divisions;\n              var tx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\n              var ty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\n            }\n\n          }\n\n          break;\n\n        case 'b':\n\n          // Cubic Bezier Curve\n\n          cpx  = outline[ i ++ ] *  scaleX + offset;\n          cpy  = outline[ i ++ ] *  scaleY;\n          cpx1 = outline[ i ++ ] *  scaleX + offset;\n          cpy1 = outline[ i ++ ] *  scaleY;\n          cpx2 = outline[ i ++ ] *  scaleX + offset;\n          cpy2 = outline[ i ++ ] *  scaleY;\n\n          path.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n          laste = pts[ pts.length - 1 ];\n\n          if ( laste ) {\n\n            cpx0 = laste.x;\n            cpy0 = laste.y;\n\n            for ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\n\n              var t = i2 / divisions;\n              var tx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\n              var ty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\n\n            }\n\n          }\n\n          break;\n\n        }\n\n      }\n    }\n\n\n\n    return { offset: glyph.ha * scale, path:path };\n  }\n\n};\n\n\nTHREE.FontUtils.generateShapes = function ( text, parameters ) {\n\n  // Parameters\n\n  parameters = parameters || {};\n\n  var size = parameters.size !== undefined ? parameters.size : 100;\n  var curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\n\n  var font = parameters.font !== undefined ? parameters.font : 'helvetiker';\n  var weight = parameters.weight !== undefined ? parameters.weight : 'normal';\n  var style = parameters.style !== undefined ? parameters.style : 'normal';\n\n  THREE.FontUtils.size = size;\n  THREE.FontUtils.divisions = curveSegments;\n\n  THREE.FontUtils.face = font;\n  THREE.FontUtils.weight = weight;\n  THREE.FontUtils.style = style;\n\n  // Get a Font data json object\n\n  var data = THREE.FontUtils.drawText( text );\n\n  var paths = data.paths;\n  var shapes = [];\n\n  for ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n    Array.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n  }\n\n  return shapes;\n\n};\n\n\n/**\n * This code is a quick port of code written in C++ which was submitted to\n * flipcode.com by John W. Ratcliff  // July 22, 2000\n * See original code and more information here:\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n *\n * ported to actionscript by Zevan Rosser\n * www.actionsnippet.com\n *\n * ported to javascript by Joshua Koo\n * http://www.lab4games.net/zz85/blog\n *\n */\n\n\n( function ( namespace ) {\n\n  var EPSILON = 0.0000000001;\n\n  // takes in an contour array and returns\n\n  var process = function ( contour, indices ) {\n\n    var n = contour.length;\n\n    if ( n < 3 ) return null;\n\n    var result = [],\n      verts = [],\n      vertIndices = [];\n\n    /* we want a counter-clockwise polygon in verts */\n\n    var u, v, w;\n\n    if ( area( contour ) > 0.0 ) {\n\n      for ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n    } else {\n\n      for ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n    }\n\n    var nv = n;\n\n    /*  remove nv - 2 vertices, creating 1 triangle every time */\n\n    var count = 2 * nv;   /* error detection */\n\n    for ( v = nv - 1; nv > 2; ) {\n\n      /* if we loop, it is probably a non-simple polygon */\n\n      if ( ( count -- ) <= 0 ) {\n\n        //** Triangulate: ERROR - probable bad polygon!\n\n        //throw ( \"Warning, unable to triangulate polygon!\" );\n        //return null;\n        // Sometimes warning is fine, especially polygons are triangulated in reverse.\n        console.log( 'Warning, unable to triangulate polygon!' );\n\n        if ( indices ) return vertIndices;\n        return result;\n\n      }\n\n      /* three consecutive vertices in current polygon, <u,v,w> */\n\n      u = v;    if ( nv <= u ) u = 0;     /* previous */\n      v = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n      w = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\n      if ( snip( contour, u, v, w, nv, verts ) ) {\n\n        var a, b, c, s, t;\n\n        /* true names of the vertices */\n\n        a = verts[ u ];\n        b = verts[ v ];\n        c = verts[ w ];\n\n        /* output Triangle */\n\n        result.push( [ contour[ a ],\n          contour[ b ],\n          contour[ c ] ] );\n\n\n        vertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n        /* remove v from the remaining polygon */\n\n        for ( s = v, t = v + 1; t < nv; s++, t++ ) {\n\n          verts[ s ] = verts[ t ];\n\n        }\n\n        nv --;\n\n        /* reset error detection counter */\n\n        count = 2 * nv;\n\n      }\n\n    }\n\n    if ( indices ) return vertIndices;\n    return result;\n\n  };\n\n  // calculate area of the contour polygon\n\n  var area = function ( contour ) {\n\n    var n = contour.length;\n    var a = 0.0;\n\n    for ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n      a += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n    }\n\n    return a * 0.5;\n\n  };\n\n  var snip = function ( contour, u, v, w, n, verts ) {\n\n    var p;\n    var ax, ay, bx, by;\n    var cx, cy, px, py;\n\n    ax = contour[ verts[ u ] ].x;\n    ay = contour[ verts[ u ] ].y;\n\n    bx = contour[ verts[ v ] ].x;\n    by = contour[ verts[ v ] ].y;\n\n    cx = contour[ verts[ w ] ].x;\n    cy = contour[ verts[ w ] ].y;\n\n    if ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\n\n    var aX, aY, bX, bY, cX, cY;\n    var apx, apy, bpx, bpy, cpx, cpy;\n    var cCROSSap, bCROSScp, aCROSSbp;\n\n    aX = cx - bx;  aY = cy - by;\n    bX = ax - cx;  bY = ay - cy;\n    cX = bx - ax;  cY = by - ay;\n\n    for ( p = 0; p < n; p ++ ) {\n\n      px = contour[ verts[ p ] ].x\n      py = contour[ verts[ p ] ].y\n\n      if ( ( ( px === ax ) && ( py === ay ) ) ||\n         ( ( px === bx ) && ( py === by ) ) ||\n         ( ( px === cx ) && ( py === cy ) ) ) continue;\n\n      apx = px - ax;  apy = py - ay;\n      bpx = px - bx;  bpy = py - by;\n      cpx = px - cx;  cpy = py - cy;\n\n      // see if p is inside triangle abc\n\n      aCROSSbp = aX * bpy - aY * bpx;\n      cCROSSap = cX * apy - cY * apx;\n      bCROSScp = bX * cpy - bY * cpx;\n\n      if ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\n\n    }\n\n    return true;\n\n  };\n\n\n  namespace.Triangulate = process;\n  namespace.Triangulate.area = area;\n\n  return namespace;\n\n} )( THREE.FontUtils );\n\n// To use the typeface.js face files, hook up the API\nself._typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\nTHREE.typeface_js = self._typeface_js;\n\n// File:src/extras/core/Curve.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of Curve methods\n * .getPoint(t), getTangent(t)\n * .getPointAt(u), getTagentAt(u)\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following classes subclasses THREE.Curve:\n *\n * -- 2d classes --\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.CubicBezierCurve\n * THREE.SplineCurve\n * THREE.ArcCurve\n * THREE.EllipseCurve\n *\n * -- 3d classes --\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n * THREE.CubicBezierCurve3\n * THREE.SplineCurve3\n * THREE.ClosedSplineCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath\n *\n **/\n\n/**************************************************************\n *  Abstract Curve base class\n **************************************************************/\n\nTHREE.Curve = function () {\n\n};\n\n// Virtual base class method to overwrite and implement in subclasses\n//  - t [0 .. 1]\n\nTHREE.Curve.prototype.getPoint = function ( t ) {\n\n  console.log( \"Warning, getPoint() not implemented!\" );\n  return null;\n\n};\n\n// Get point at relative position in curve according to arc length\n// - u [0 .. 1]\n\nTHREE.Curve.prototype.getPointAt = function ( u ) {\n\n  var t = this.getUtoTmapping( u );\n  return this.getPoint( t );\n\n};\n\n// Get sequence of points using getPoint( t )\n\nTHREE.Curve.prototype.getPoints = function ( divisions ) {\n\n  if ( ! divisions ) divisions = 5;\n\n  var d, pts = [];\n\n  for ( d = 0; d <= divisions; d ++ ) {\n\n    pts.push( this.getPoint( d / divisions ) );\n\n  }\n\n  return pts;\n\n};\n\n// Get sequence of points using getPointAt( u )\n\nTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\n\n  if ( ! divisions ) divisions = 5;\n\n  var d, pts = [];\n\n  for ( d = 0; d <= divisions; d ++ ) {\n\n    pts.push( this.getPointAt( d / divisions ) );\n\n  }\n\n  return pts;\n\n};\n\n// Get total curve arc length\n\nTHREE.Curve.prototype.getLength = function () {\n\n  var lengths = this.getLengths();\n  return lengths[ lengths.length - 1 ];\n\n};\n\n// Get list of cumulative segment lengths\n\nTHREE.Curve.prototype.getLengths = function ( divisions ) {\n\n  if ( ! divisions ) divisions = (this.__arcLengthDivisions) ? (this.__arcLengthDivisions): 200;\n\n  if ( this.cacheArcLengths\n    && ( this.cacheArcLengths.length == divisions + 1 )\n    && ! this.needsUpdate) {\n\n    //console.log( \"cached\", this.cacheArcLengths );\n    return this.cacheArcLengths;\n\n  }\n\n  this.needsUpdate = false;\n\n  var cache = [];\n  var current, last = this.getPoint( 0 );\n  var p, sum = 0;\n\n  cache.push( 0 );\n\n  for ( p = 1; p <= divisions; p ++ ) {\n\n    current = this.getPoint ( p / divisions );\n    sum += current.distanceTo( last );\n    cache.push( sum );\n    last = current;\n\n  }\n\n  this.cacheArcLengths = cache;\n\n  return cache; // { sums: cache, sum:sum }; Sum is in the last element.\n\n};\n\n\nTHREE.Curve.prototype.updateArcLengths = function() {\n  this.needsUpdate = true;\n  this.getLengths();\n};\n\n// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equi distance\n\nTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\n\n  var arcLengths = this.getLengths();\n\n  var i = 0, il = arcLengths.length;\n\n  var targetArcLength; // The targeted u distance value to get\n\n  if ( distance ) {\n\n    targetArcLength = distance;\n\n  } else {\n\n    targetArcLength = u * arcLengths[ il - 1 ];\n\n  }\n\n  //var time = Date.now();\n\n  // binary search for the index with largest value smaller than target u distance\n\n  var low = 0, high = il - 1, comparison;\n\n  while ( low <= high ) {\n\n    i = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n    comparison = arcLengths[ i ] - targetArcLength;\n\n    if ( comparison < 0 ) {\n\n      low = i + 1;\n      continue;\n\n    } else if ( comparison > 0 ) {\n\n      high = i - 1;\n      continue;\n\n    } else {\n\n      high = i;\n      break;\n\n      // DONE\n\n    }\n\n  }\n\n  i = high;\n\n  //console.log('b' , i, low, high, Date.now()- time);\n\n  if ( arcLengths[ i ] == targetArcLength ) {\n\n    var t = i / ( il - 1 );\n    return t;\n\n  }\n\n  // we could get finer grain at lengths, or use simple interpolatation between two points\n\n  var lengthBefore = arcLengths[ i ];\n    var lengthAfter = arcLengths[ i + 1 ];\n\n    var segmentLength = lengthAfter - lengthBefore;\n\n    // determine where we are between the 'before' and 'after' points\n\n    var segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n    // add that fractional amount to t\n\n    var t = ( i + segmentFraction ) / ( il -1 );\n\n  return t;\n\n};\n\n// Returns a unit vector tangent at t\n// In case any sub curve does not implement its tangent derivation,\n// 2 points a small delta apart will be used to find its gradient\n// which seems to give a reasonable approximation\n\nTHREE.Curve.prototype.getTangent = function( t ) {\n\n  var delta = 0.0001;\n  var t1 = t - delta;\n  var t2 = t + delta;\n\n  // Capping in case of danger\n\n  if ( t1 < 0 ) t1 = 0;\n  if ( t2 > 1 ) t2 = 1;\n\n  var pt1 = this.getPoint( t1 );\n  var pt2 = this.getPoint( t2 );\n\n  var vec = pt2.clone().sub(pt1);\n  return vec.normalize();\n\n};\n\n\nTHREE.Curve.prototype.getTangentAt = function ( u ) {\n\n  var t = this.getUtoTmapping( u );\n  return this.getTangent( t );\n\n};\n\n\n\n\n\n/**************************************************************\n *  Utils\n **************************************************************/\n\nTHREE.Curve.Utils = {\n\n  tangentQuadraticBezier: function ( t, p0, p1, p2 ) {\n\n    return 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\n\n  },\n\n  // Puay Bing, thanks for helping with this derivative!\n\n  tangentCubicBezier: function (t, p0, p1, p2, p3 ) {\n\n    return - 3 * p0 * (1 - t) * (1 - t)  +\n      3 * p1 * (1 - t) * (1-t) - 6 *t *p1 * (1-t) +\n      6 * t *  p2 * (1-t) - 3 * t * t * p2 +\n      3 * t * t * p3;\n  },\n\n\n  tangentSpline: function ( t, p0, p1, p2, p3 ) {\n\n    // To check if my formulas are correct\n\n    var h00 = 6 * t * t - 6 * t;  // derived from 2t^3 − 3t^2 + 1\n    var h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\n    var h01 = - 6 * t * t + 6 * t;  // − 2t3 + 3t2\n    var h11 = 3 * t * t - 2 * t;  // t3 − t2\n\n    return h00 + h10 + h01 + h11;\n\n  },\n\n  // Catmull-Rom\n\n  interpolate: function( p0, p1, p2, p3, t ) {\n\n    var v0 = ( p2 - p0 ) * 0.5;\n    var v1 = ( p3 - p1 ) * 0.5;\n    var t2 = t * t;\n    var t3 = t * t2;\n    return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n  }\n\n};\n\n\n// TODO: Transformation for Curves?\n\n/**************************************************************\n *  3D Curves\n **************************************************************/\n\n// A Factory method for creating new curve subclasses\n\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\n\n  constructor.prototype = Object.create( THREE.Curve.prototype );\n  constructor.prototype.getPoint = getPointFunc;\n\n  return constructor;\n\n};\n\n// File:src/extras/core/CurvePath.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *  Curved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nTHREE.CurvePath = function () {\n\n  this.curves = [];\n  this.bends = [];\n\n  this.autoClose = false; // Automatically closes the path\n};\n\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\n\nTHREE.CurvePath.prototype.add = function ( curve ) {\n\n  this.curves.push( curve );\n\n};\n\nTHREE.CurvePath.prototype.checkConnection = function() {\n  // TODO\n  // If the ending of curve is not connected to the starting\n  // or the next curve, then, this is not a real path\n};\n\nTHREE.CurvePath.prototype.closePath = function() {\n  // TODO Test\n  // and verify for vector3 (needs to implement equals)\n  // Add a line curve if start and end of lines are not connected\n  var startPoint = this.curves[0].getPoint(0);\n  var endPoint = this.curves[this.curves.length-1].getPoint(1);\n\n  if (! startPoint.equals(endPoint)) {\n    this.curves.push( new THREE.LineCurve(endPoint, startPoint) );\n  }\n\n};\n\n// To get accurate point with reference to\n// entire path distance at time t,\n// following has to be done:\n\n// 1. Length of each sub path have to be known\n// 2. Locate and identify type of curve\n// 3. Get t for the curve\n// 4. Return curve.getPointAt(t')\n\nTHREE.CurvePath.prototype.getPoint = function( t ) {\n\n  var d = t * this.getLength();\n  var curveLengths = this.getCurveLengths();\n  var i = 0, diff, curve;\n\n  // To think about boundaries points.\n\n  while ( i < curveLengths.length ) {\n\n    if ( curveLengths[ i ] >= d ) {\n\n      diff = curveLengths[ i ] - d;\n      curve = this.curves[ i ];\n\n      var u = 1 - diff / curve.getLength();\n\n      return curve.getPointAt( u );\n\n      break;\n    }\n\n    i ++;\n\n  }\n\n  return null;\n\n  // loop where sum != 0, sum > d , sum+1 <d\n\n};\n\n/*\nTHREE.CurvePath.prototype.getTangent = function( t ) {\n};*/\n\n\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n// getPoint() depends on getLength\n\nTHREE.CurvePath.prototype.getLength = function() {\n\n  var lens = this.getCurveLengths();\n  return lens[ lens.length - 1 ];\n\n};\n\n// Compute lengths and cache them\n// We cannot overwrite getLengths() because UtoT mapping uses it.\n\nTHREE.CurvePath.prototype.getCurveLengths = function() {\n\n  // We use cache values if curves and cache array are same length\n\n  if ( this.cacheLengths && this.cacheLengths.length == this.curves.length ) {\n\n    return this.cacheLengths;\n\n  };\n\n  // Get length of subsurve\n  // Push sums into cached array\n\n  var lengths = [], sums = 0;\n  var i, il = this.curves.length;\n\n  for ( i = 0; i < il; i ++ ) {\n\n    sums += this.curves[ i ].getLength();\n    lengths.push( sums );\n\n  }\n\n  this.cacheLengths = lengths;\n\n  return lengths;\n\n};\n\n\n\n// Returns min and max coordinates\n\nTHREE.CurvePath.prototype.getBoundingBox = function () {\n\n  var points = this.getPoints();\n\n  var maxX, maxY, maxZ;\n  var minX, minY, minZ;\n\n  maxX = maxY = Number.NEGATIVE_INFINITY;\n  minX = minY = Number.POSITIVE_INFINITY;\n\n  var p, i, il, sum;\n\n  var v3 = points[0] instanceof THREE.Vector3;\n\n  sum = v3 ? new THREE.Vector3() : new THREE.Vector2();\n\n  for ( i = 0, il = points.length; i < il; i ++ ) {\n\n    p = points[ i ];\n\n    if ( p.x > maxX ) maxX = p.x;\n    else if ( p.x < minX ) minX = p.x;\n\n    if ( p.y > maxY ) maxY = p.y;\n    else if ( p.y < minY ) minY = p.y;\n\n    if ( v3 ) {\n\n      if ( p.z > maxZ ) maxZ = p.z;\n      else if ( p.z < minZ ) minZ = p.z;\n\n    }\n\n    sum.add( p );\n\n  }\n\n  var ret = {\n\n    minX: minX,\n    minY: minY,\n    maxX: maxX,\n    maxY: maxY\n\n  };\n\n  if ( v3 ) {\n\n    ret.maxZ = maxZ;\n    ret.minZ = minZ;\n\n  }\n\n  return ret;\n\n};\n\n/**************************************************************\n *  Create Geometries Helpers\n **************************************************************/\n\n/// Generate geometry from path points (for Line or Points objects)\n\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\n\n  var pts = this.getPoints( divisions, true );\n  return this.createGeometry( pts );\n\n};\n\n// Generate geometry from equidistance sampling along the path\n\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\n\n  var pts = this.getSpacedPoints( divisions, true );\n  return this.createGeometry( pts );\n\n};\n\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\n\n  var geometry = new THREE.Geometry();\n\n  for ( var i = 0; i < points.length; i ++ ) {\n\n    geometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0) );\n\n  }\n\n  return geometry;\n\n};\n\n\n/**************************************************************\n *  Bend / Wrap Helper Methods\n **************************************************************/\n\n// Wrap path / Bend modifiers?\n\nTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\n\n  this.bends.push( bendpath );\n\n};\n\nTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\n\n  var oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\n  var i, il;\n\n  if ( ! bends ) {\n\n    bends = this.bends;\n\n  }\n\n  for ( i = 0, il = bends.length; i < il; i ++ ) {\n\n    oldPts = this.getWrapPoints( oldPts, bends[ i ] );\n\n  }\n\n  return oldPts;\n\n};\n\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\n\n  var oldPts = this.getSpacedPoints( segments );\n\n  var i, il;\n\n  if ( ! bends ) {\n\n    bends = this.bends;\n\n  }\n\n  for ( i = 0, il = bends.length; i < il; i ++ ) {\n\n    oldPts = this.getWrapPoints( oldPts, bends[ i ] );\n\n  }\n\n  return oldPts;\n\n};\n\n// This returns getPoints() bend/wrapped around the contour of a path.\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\n\nTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\n\n  var bounds = this.getBoundingBox();\n\n  var i, il, p, oldX, oldY, xNorm;\n\n  for ( i = 0, il = oldPts.length; i < il; i ++ ) {\n\n    p = oldPts[ i ];\n\n    oldX = p.x;\n    oldY = p.y;\n\n    xNorm = oldX / bounds.maxX;\n\n    // If using actual distance, for length > path, requires line extrusions\n    //xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\n\n    xNorm = path.getUtoTmapping( xNorm, oldX );\n\n    // check for out of bounds?\n\n    var pathPt = path.getPoint( xNorm );\n    var normal = path.getTangent( xNorm );\n    normal.set( - normal.y, normal.x ).multiplyScalar( oldY );\n\n    p.x = pathPt.x + normal.x;\n    p.y = pathPt.y + normal.y;\n\n  }\n\n  return oldPts;\n\n};\n\n\n// File:src/extras/core/Gyroscope.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Gyroscope = function () {\n\n  THREE.Object3D.call( this );\n\n};\n\nTHREE.Gyroscope.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Gyroscope.prototype.updateMatrixWorld = function ( force ) {\n\n  this.matrixAutoUpdate && this.updateMatrix();\n\n  // update matrixWorld\n\n  if ( this.matrixWorldNeedsUpdate || force ) {\n\n    if ( this.parent ) {\n\n      this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n      this.matrixWorld.decompose( this.translationWorld, this.quaternionWorld, this.scaleWorld );\n      this.matrix.decompose( this.translationObject, this.quaternionObject, this.scaleObject );\n\n      this.matrixWorld.compose( this.translationWorld, this.quaternionObject, this.scaleWorld );\n\n\n    } else {\n\n      this.matrixWorld.copy( this.matrix );\n\n    }\n\n\n    this.matrixWorldNeedsUpdate = false;\n\n    force = true;\n\n  }\n\n  // update children\n\n  for ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n    this.children[ i ].updateMatrixWorld( force );\n\n  }\n\n};\n\nTHREE.Gyroscope.prototype.translationWorld = new THREE.Vector3();\nTHREE.Gyroscope.prototype.translationObject = new THREE.Vector3();\nTHREE.Gyroscope.prototype.quaternionWorld = new THREE.Quaternion();\nTHREE.Gyroscope.prototype.quaternionObject = new THREE.Quaternion();\nTHREE.Gyroscope.prototype.scaleWorld = new THREE.Vector3();\nTHREE.Gyroscope.prototype.scaleObject = new THREE.Vector3();\n\n\n// File:src/extras/core/Path.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n *\n **/\n\nTHREE.Path = function ( points ) {\n\n  THREE.CurvePath.call(this);\n\n  this.actions = [];\n\n  if ( points ) {\n\n    this.fromPoints( points );\n\n  }\n\n};\n\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\n\nTHREE.PathActions = {\n\n  MOVE_TO: 'moveTo',\n  LINE_TO: 'lineTo',\n  QUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\n  BEZIER_CURVE_TO: 'bezierCurveTo',     // Bezier cubic curve\n  CSPLINE_THRU: 'splineThru',       // Catmull-rom spline\n  ARC: 'arc',               // Circle\n  ELLIPSE: 'ellipse'\n};\n\n// TODO Clean up PATH API\n\n// Create path using straight lines to connect all points\n// - vectors: array of Vector2\n\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\n\n  this.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\n  for ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\n\n    this.lineTo( vectors[ v ].x, vectors[ v ].y );\n\n  };\n\n};\n\n// startPath() endPath()?\n\nTHREE.Path.prototype.moveTo = function ( x, y ) {\n\n  var args = Array.prototype.slice.call( arguments );\n  this.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\n\n};\n\nTHREE.Path.prototype.lineTo = function ( x, y ) {\n\n  var args = Array.prototype.slice.call( arguments );\n\n  var lastargs = this.actions[ this.actions.length - 1 ].args;\n\n  var x0 = lastargs[ lastargs.length - 2 ];\n  var y0 = lastargs[ lastargs.length - 1 ];\n\n  var curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\n  this.curves.push( curve );\n\n  this.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\n\n};\n\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\n\n  var args = Array.prototype.slice.call( arguments );\n\n  var lastargs = this.actions[ this.actions.length - 1 ].args;\n\n  var x0 = lastargs[ lastargs.length - 2 ];\n  var y0 = lastargs[ lastargs.length - 1 ];\n\n  var curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\n                        new THREE.Vector2( aCPx, aCPy ),\n                        new THREE.Vector2( aX, aY ) );\n  this.curves.push( curve );\n\n  this.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\n\n};\n\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\n                         aCP2x, aCP2y,\n                         aX, aY ) {\n\n  var args = Array.prototype.slice.call( arguments );\n\n  var lastargs = this.actions[ this.actions.length - 1 ].args;\n\n  var x0 = lastargs[ lastargs.length - 2 ];\n  var y0 = lastargs[ lastargs.length - 1 ];\n\n  var curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\n                      new THREE.Vector2( aCP1x, aCP1y ),\n                      new THREE.Vector2( aCP2x, aCP2y ),\n                      new THREE.Vector2( aX, aY ) );\n  this.curves.push( curve );\n\n  this.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\n\n};\n\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\n\n  var args = Array.prototype.slice.call( arguments );\n  var lastargs = this.actions[ this.actions.length - 1 ].args;\n\n  var x0 = lastargs[ lastargs.length - 2 ];\n  var y0 = lastargs[ lastargs.length - 1 ];\n//---\n  var npts = [ new THREE.Vector2( x0, y0 ) ];\n  Array.prototype.push.apply( npts, pts );\n\n  var curve = new THREE.SplineCurve( npts );\n  this.curves.push( curve );\n\n  this.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\n\n};\n\n// FUTURE: Change the API or follow canvas API?\n\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\n                    aStartAngle, aEndAngle, aClockwise ) {\n\n  var lastargs = this.actions[ this.actions.length - 1].args;\n  var x0 = lastargs[ lastargs.length - 2 ];\n  var y0 = lastargs[ lastargs.length - 1 ];\n\n  this.absarc(aX + x0, aY + y0, aRadius,\n    aStartAngle, aEndAngle, aClockwise );\n\n };\n\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\n                    aStartAngle, aEndAngle, aClockwise ) {\n  this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n };\n\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\n                    aStartAngle, aEndAngle, aClockwise ) {\n\n  var lastargs = this.actions[ this.actions.length - 1].args;\n  var x0 = lastargs[ lastargs.length - 2 ];\n  var y0 = lastargs[ lastargs.length - 1 ];\n\n  this.absellipse(aX + x0, aY + y0, xRadius, yRadius,\n    aStartAngle, aEndAngle, aClockwise );\n\n };\n\n\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\n                    aStartAngle, aEndAngle, aClockwise ) {\n\n  var args = Array.prototype.slice.call( arguments );\n  var curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\n                  aStartAngle, aEndAngle, aClockwise );\n  this.curves.push( curve );\n\n  var lastPoint = curve.getPoint(1);\n  args.push(lastPoint.x);\n  args.push(lastPoint.y);\n\n  this.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\n\n };\n\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\n\n  if ( ! divisions ) divisions = 40;\n\n  var points = [];\n\n  for ( var i = 0; i < divisions; i ++ ) {\n\n    points.push( this.getPoint( i / divisions ) );\n\n    //if( !this.getPoint( i / divisions ) ) throw \"DIE\";\n\n  }\n\n  // if ( closedPath ) {\n  //\n  //  points.push( points[ 0 ] );\n  //\n  // }\n\n  return points;\n\n};\n\n/* Return an array of vectors based on contour of the path */\n\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\n\n  if (this.useSpacedPoints) {\n    console.log('tata');\n    return this.getSpacedPoints( divisions, closedPath );\n  }\n\n  divisions = divisions || 12;\n\n  var points = [];\n\n  var i, il, item, action, args;\n  var cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\n    laste, j,\n    t, tx, ty;\n\n  for ( i = 0, il = this.actions.length; i < il; i ++ ) {\n\n    item = this.actions[ i ];\n\n    action = item.action;\n    args = item.args;\n\n    switch( action ) {\n\n    case THREE.PathActions.MOVE_TO:\n\n      points.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\n\n      break;\n\n    case THREE.PathActions.LINE_TO:\n\n      points.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\n\n      break;\n\n    case THREE.PathActions.QUADRATIC_CURVE_TO:\n\n      cpx  = args[ 2 ];\n      cpy  = args[ 3 ];\n\n      cpx1 = args[ 0 ];\n      cpy1 = args[ 1 ];\n\n      if ( points.length > 0 ) {\n\n        laste = points[ points.length - 1 ];\n\n        cpx0 = laste.x;\n        cpy0 = laste.y;\n\n      } else {\n\n        laste = this.actions[ i - 1 ].args;\n\n        cpx0 = laste[ laste.length - 2 ];\n        cpy0 = laste[ laste.length - 1 ];\n\n      }\n\n      for ( j = 1; j <= divisions; j ++ ) {\n\n        t = j / divisions;\n\n        tx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\n        ty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\n\n        points.push( new THREE.Vector2( tx, ty ) );\n\n      }\n\n      break;\n\n    case THREE.PathActions.BEZIER_CURVE_TO:\n\n      cpx  = args[ 4 ];\n      cpy  = args[ 5 ];\n\n      cpx1 = args[ 0 ];\n      cpy1 = args[ 1 ];\n\n      cpx2 = args[ 2 ];\n      cpy2 = args[ 3 ];\n\n      if ( points.length > 0 ) {\n\n        laste = points[ points.length - 1 ];\n\n        cpx0 = laste.x;\n        cpy0 = laste.y;\n\n      } else {\n\n        laste = this.actions[ i - 1 ].args;\n\n        cpx0 = laste[ laste.length - 2 ];\n        cpy0 = laste[ laste.length - 1 ];\n\n      }\n\n\n      for ( j = 1; j <= divisions; j ++ ) {\n\n        t = j / divisions;\n\n        tx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\n        ty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\n\n        points.push( new THREE.Vector2( tx, ty ) );\n\n      }\n\n      break;\n\n    case THREE.PathActions.CSPLINE_THRU:\n\n      laste = this.actions[ i - 1 ].args;\n\n      var last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\n      var spts = [ last ];\n\n      var n = divisions * args[ 0 ].length;\n\n      spts = spts.concat( args[ 0 ] );\n\n      var spline = new THREE.SplineCurve( spts );\n\n      for ( j = 1; j <= n; j ++ ) {\n\n        points.push( spline.getPointAt( j / n ) ) ;\n\n      }\n\n      break;\n\n    case THREE.PathActions.ARC:\n\n      var aX = args[ 0 ], aY = args[ 1 ],\n        aRadius = args[ 2 ],\n        aStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\n        aClockwise = !! args[ 5 ];\n\n      var deltaAngle = aEndAngle - aStartAngle;\n      var angle;\n      var tdivisions = divisions * 2;\n\n      for ( j = 1; j <= tdivisions; j ++ ) {\n\n        t = j / tdivisions;\n\n        if ( ! aClockwise ) {\n\n          t = 1 - t;\n\n        }\n\n        angle = aStartAngle + t * deltaAngle;\n\n        tx = aX + aRadius * Math.cos( angle );\n        ty = aY + aRadius * Math.sin( angle );\n\n        //console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\n\n        points.push( new THREE.Vector2( tx, ty ) );\n\n      }\n\n      //console.log(points);\n\n      break;\n\n    case THREE.PathActions.ELLIPSE:\n\n      var aX = args[ 0 ], aY = args[ 1 ],\n        xRadius = args[ 2 ],\n        yRadius = args[ 3 ],\n        aStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\n        aClockwise = !! args[ 6 ];\n\n\n      var deltaAngle = aEndAngle - aStartAngle;\n      var angle;\n      var tdivisions = divisions * 2;\n\n      for ( j = 1; j <= tdivisions; j ++ ) {\n\n        t = j / tdivisions;\n\n        if ( ! aClockwise ) {\n\n          t = 1 - t;\n\n        }\n\n        angle = aStartAngle + t * deltaAngle;\n\n        tx = aX + xRadius * Math.cos( angle );\n        ty = aY + yRadius * Math.sin( angle );\n\n        //console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\n\n        points.push( new THREE.Vector2( tx, ty ) );\n\n      }\n\n      //console.log(points);\n\n      break;\n\n    } // end switch\n\n  }\n\n\n\n  // Normalize to remove the closing point by default.\n  var lastPoint = points[ points.length - 1];\n  var EPSILON = 0.0000000001;\n  if ( Math.abs(lastPoint.x - points[ 0 ].x) < EPSILON &&\n       Math.abs(lastPoint.y - points[ 0 ].y) < EPSILON)\n    points.splice( points.length - 1, 1);\n  if ( closedPath ) {\n\n    points.push( points[ 0 ] );\n\n  }\n\n  return points;\n\n};\n\n//\n// Breaks path into shapes\n//\n//  Assumptions (if parameter isCCW==true the opposite holds):\n//  - solid shapes are defined clockwise (CW)\n//  - holes are defined counterclockwise (CCW)\n//\n//  If parameter noHoles==true:\n//  - all subPaths are regarded as solid shapes\n//  - definition order CW/CCW has no relevance\n//\n\nTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\n\n  function extractSubpaths( inActions ) {\n\n    var i, il, item, action, args;\n\n    var subPaths = [], lastPath = new THREE.Path();\n\n    for ( i = 0, il = inActions.length; i < il; i ++ ) {\n\n      item = inActions[ i ];\n\n      args = item.args;\n      action = item.action;\n\n      if ( action == THREE.PathActions.MOVE_TO ) {\n\n        if ( lastPath.actions.length != 0 ) {\n\n          subPaths.push( lastPath );\n          lastPath = new THREE.Path();\n\n        }\n\n      }\n\n      lastPath[ action ].apply( lastPath, args );\n\n    }\n\n    if ( lastPath.actions.length != 0 ) {\n\n      subPaths.push( lastPath );\n\n    }\n\n    // console.log(subPaths);\n\n    return  subPaths;\n  }\n\n  function toShapesNoHoles( inSubpaths ) {\n\n    var shapes = [];\n\n    for ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\n\n      var tmpPath = inSubpaths[ i ];\n\n      var tmpShape = new THREE.Shape();\n      tmpShape.actions = tmpPath.actions;\n      tmpShape.curves = tmpPath.curves;\n\n      shapes.push( tmpShape );\n    }\n\n    //console.log(\"shape\", shapes);\n\n    return shapes;\n  };\n\n  function isPointInsidePolygon( inPt, inPolygon ) {\n    var EPSILON = 0.0000000001;\n\n    var polyLen = inPolygon.length;\n\n    // inPt on polygon contour => immediate success    or\n    // toggling of inside/outside at every single! intersection point of an edge\n    //  with the horizontal line through inPt, left of inPt\n    //  not counting lowerY endpoints of edges and whole edges on that line\n    var inside = false;\n    for( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n      var edgeLowPt  = inPolygon[ p ];\n      var edgeHighPt = inPolygon[ q ];\n\n      var edgeDx = edgeHighPt.x - edgeLowPt.x;\n      var edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n      if ( Math.abs(edgeDy) > EPSILON ) {     // not parallel\n        if ( edgeDy < 0 ) {\n          edgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n          edgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n        }\n        if ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) )    continue;\n\n        if ( inPt.y == edgeLowPt.y ) {\n          if ( inPt.x == edgeLowPt.x )    return  true;   // inPt is on contour ?\n          // continue;        // no intersection or edgeLowPt => doesn't count !!!\n        } else {\n          var perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n          if ( perpEdge == 0 )        return  true;   // inPt is on contour ?\n          if ( perpEdge < 0 )         continue;\n          inside = ! inside;    // true intersection left of inPt\n        }\n      } else {    // parallel or colinear\n        if ( inPt.y != edgeLowPt.y )    continue;     // parallel\n        // egde lies on the same horizontal line as inPt\n        if ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n           ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )    return  true; // inPt: Point on contour !\n        // continue;\n      }\n    }\n\n    return  inside;\n  }\n\n\n  var subPaths = extractSubpaths( this.actions );\n  if ( subPaths.length == 0 ) return [];\n\n  if ( noHoles === true ) return  toShapesNoHoles( subPaths );\n\n\n  var solid, tmpPath, tmpShape, shapes = [];\n\n  if ( subPaths.length == 1) {\n\n    tmpPath = subPaths[0];\n    tmpShape = new THREE.Shape();\n    tmpShape.actions = tmpPath.actions;\n    tmpShape.curves = tmpPath.curves;\n    shapes.push( tmpShape );\n    return shapes;\n\n  }\n\n  var holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\n  holesFirst = isCCW ? ! holesFirst : holesFirst;\n\n  // console.log(\"Holes first\", holesFirst);\n\n  var betterShapeHoles = [];\n  var newShapes = [];\n  var newShapeHoles = [];\n  var mainIdx = 0;\n  var tmpPoints;\n\n  newShapes[mainIdx] = undefined;\n  newShapeHoles[mainIdx] = [];\n\n  var i, il;\n\n  for ( i = 0, il = subPaths.length; i < il; i ++ ) {\n\n    tmpPath = subPaths[ i ];\n    tmpPoints = tmpPath.getPoints();\n    solid = THREE.Shape.Utils.isClockWise( tmpPoints );\n    solid = isCCW ? ! solid : solid;\n\n    if ( solid ) {\n\n      if ( (! holesFirst ) && ( newShapes[mainIdx] ) )  mainIdx ++;\n\n      newShapes[mainIdx] = { s: new THREE.Shape(), p: tmpPoints };\n      newShapes[mainIdx].s.actions = tmpPath.actions;\n      newShapes[mainIdx].s.curves = tmpPath.curves;\n\n      if ( holesFirst ) mainIdx ++;\n      newShapeHoles[mainIdx] = [];\n\n      //console.log('cw', i);\n\n    } else {\n\n      newShapeHoles[mainIdx].push( { h: tmpPath, p: tmpPoints[0] } );\n\n      //console.log('ccw', i);\n\n    }\n\n  }\n\n  // only Holes? -> probably all Shapes with wrong orientation\n  if ( ! newShapes[0] ) return  toShapesNoHoles( subPaths );\n\n\n  if ( newShapes.length > 1 ) {\n    var ambigious = false;\n    var toChange = [];\n\n    for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n      betterShapeHoles[sIdx] = [];\n    }\n    for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n      var sh = newShapes[sIdx];\n      var sho = newShapeHoles[sIdx];\n      for (var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n        var ho = sho[hIdx];\n        var hole_unassigned = true;\n        for (var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n          if ( isPointInsidePolygon( ho.p, newShapes[s2Idx].p ) ) {\n            if ( sIdx != s2Idx )    toChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n            if ( hole_unassigned ) {\n              hole_unassigned = false;\n              betterShapeHoles[s2Idx].push( ho );\n            } else {\n              ambigious = true;\n            }\n          }\n        }\n        if ( hole_unassigned ) { betterShapeHoles[sIdx].push( ho ); }\n      }\n    }\n    // console.log(\"ambigious: \", ambigious);\n    if ( toChange.length > 0 ) {\n      // console.log(\"to change: \", toChange);\n      if (! ambigious)  newShapeHoles = betterShapeHoles;\n    }\n  }\n\n  var tmpHoles, j, jl;\n  for ( i = 0, il = newShapes.length; i < il; i ++ ) {\n    tmpShape = newShapes[i].s;\n    shapes.push( tmpShape );\n    tmpHoles = newShapeHoles[i];\n    for ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n      tmpShape.holes.push( tmpHoles[j].h );\n    }\n  }\n\n  //console.log(\"shape\", shapes);\n\n  return shapes;\n\n};\n\n// File:src/extras/core/Shape.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nTHREE.Shape = function () {\n\n  THREE.Path.apply( this, arguments );\n  this.holes = [];\n\n};\n\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\n\n// Convenience method to return ExtrudeGeometry\n\nTHREE.Shape.prototype.extrude = function ( options ) {\n\n  var extruded = new THREE.ExtrudeGeometry( this, options );\n  return extruded;\n\n};\n\n// Convenience method to return ShapeGeometry\n\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\n\n  var geometry = new THREE.ShapeGeometry( this, options );\n  return geometry;\n\n};\n\n// Get points of holes\n\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\n\n  var i, il = this.holes.length, holesPts = [];\n\n  for ( i = 0; i < il; i ++ ) {\n\n    holesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\n\n  }\n\n  return holesPts;\n\n};\n\n// Get points of holes (spaced by regular distance)\n\nTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\n\n  var i, il = this.holes.length, holesPts = [];\n\n  for ( i = 0; i < il; i ++ ) {\n\n    holesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\n\n  }\n\n  return holesPts;\n\n};\n\n\n// Get points of shape and holes (keypoints based on segments parameter)\n\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\n\n  return {\n\n    shape: this.getTransformedPoints( divisions ),\n    holes: this.getPointsHoles( divisions )\n\n  };\n\n};\n\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\n\n  if (this.useSpacedPoints) {\n    return this.extractAllSpacedPoints(divisions);\n  }\n\n  return this.extractAllPoints(divisions);\n\n};\n\n//\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\n//\n//  return {\n//\n//    shape: this.transform( bend, divisions ),\n//    holes: this.getPointsHoles( divisions, bend )\n//\n//  };\n//\n// };\n\n// Get points of shape and holes (spaced by regular distance)\n\nTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\n\n  return {\n\n    shape: this.getTransformedSpacedPoints( divisions ),\n    holes: this.getSpacedPointsHoles( divisions )\n\n  };\n\n};\n\n/**************************************************************\n *  Utils\n **************************************************************/\n\nTHREE.Shape.Utils = {\n\n  triangulateShape: function ( contour, holes ) {\n\n    function point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n      // inOtherPt needs to be colinear to the inSegment\n      if ( inSegPt1.x != inSegPt2.x ) {\n        if ( inSegPt1.x < inSegPt2.x ) {\n          return  ( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n        } else {\n          return  ( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n        }\n      } else {\n        if ( inSegPt1.y < inSegPt2.y ) {\n          return  ( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n        } else {\n          return  ( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n        }\n      }\n    }\n\n    function intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n      var EPSILON = 0.0000000001;\n\n      var seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n      var seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n      var seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n      var seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n      var limit   = seg1dy * seg2dx - seg1dx * seg2dy;\n      var perpSeg1  = seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n      if ( Math.abs(limit) > EPSILON ) {      // not parallel\n\n        var perpSeg2;\n        if ( limit > 0 ) {\n          if ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) )     return [];\n          perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n          if ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) )     return [];\n        } else {\n          if ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) )     return [];\n          perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n          if ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) )     return [];\n        }\n\n        // i.e. to reduce rounding errors\n        // intersection at endpoint of segment#1?\n        if ( perpSeg2 == 0 ) {\n          if ( ( inExcludeAdjacentSegs ) &&\n             ( ( perpSeg1 == 0 ) || ( perpSeg1 == limit ) ) )   return [];\n          return  [ inSeg1Pt1 ];\n        }\n        if ( perpSeg2 == limit ) {\n          if ( ( inExcludeAdjacentSegs ) &&\n             ( ( perpSeg1 == 0 ) || ( perpSeg1 == limit ) ) )   return [];\n          return  [ inSeg1Pt2 ];\n        }\n        // intersection at endpoint of segment#2?\n        if ( perpSeg1 == 0 )    return  [ inSeg2Pt1 ];\n        if ( perpSeg1 == limit )  return  [ inSeg2Pt2 ];\n\n        // return real intersection point\n        var factorSeg1 = perpSeg2 / limit;\n        return  [ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n              y: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n      } else {    // parallel or colinear\n        if ( ( perpSeg1 != 0 ) ||\n           ( seg2dy * seg1seg2dx != seg2dx * seg1seg2dy ) )       return [];\n\n        // they are collinear or degenerate\n        var seg1Pt = ( (seg1dx == 0) && (seg1dy == 0) );  // segment1 ist just a point?\n        var seg2Pt = ( (seg2dx == 0) && (seg2dy == 0) );  // segment2 ist just a point?\n        // both segments are points\n        if ( seg1Pt && seg2Pt ) {\n          if ( (inSeg1Pt1.x != inSeg2Pt1.x) ||\n             (inSeg1Pt1.y != inSeg2Pt1.y) )   return [];    // they are distinct  points\n          return  [ inSeg1Pt1 ];                          // they are the same point\n        }\n        // segment#1  is a single point\n        if ( seg1Pt ) {\n          if (! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )    return [];    // but not in segment#2\n          return  [ inSeg1Pt1 ];\n        }\n        // segment#2  is a single point\n        if ( seg2Pt ) {\n          if (! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )    return [];    // but not in segment#1\n          return  [ inSeg2Pt1 ];\n        }\n\n        // they are collinear segments, which might overlap\n        var seg1min, seg1max, seg1minVal, seg1maxVal;\n        var seg2min, seg2max, seg2minVal, seg2maxVal;\n        if (seg1dx != 0) {    // the segments are NOT on a vertical line\n          if ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n            seg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n            seg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n          } else {\n            seg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n            seg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n          }\n          if ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n            seg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n            seg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n          } else {\n            seg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n            seg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n          }\n        } else {        // the segments are on a vertical line\n          if ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n            seg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n            seg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n          } else {\n            seg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n            seg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n          }\n          if ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n            seg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n            seg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n          } else {\n            seg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n            seg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n          }\n        }\n        if ( seg1minVal <= seg2minVal ) {\n          if ( seg1maxVal <  seg2minVal ) return [];\n          if ( seg1maxVal == seg2minVal ) {\n            if ( inExcludeAdjacentSegs )    return [];\n            return [ seg2min ];\n          }\n          if ( seg1maxVal <= seg2maxVal ) return [ seg2min, seg1max ];\n          return  [ seg2min, seg2max ];\n        } else {\n          if ( seg1minVal >  seg2maxVal ) return [];\n          if ( seg1minVal == seg2maxVal ) {\n            if ( inExcludeAdjacentSegs )    return [];\n            return [ seg1min ];\n          }\n          if ( seg1maxVal <= seg2maxVal ) return [ seg1min, seg1max ];\n          return  [ seg1min, seg2max ];\n        }\n      }\n    }\n\n    function isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n      // The order of legs is important\n\n      var EPSILON = 0.0000000001;\n\n      // translation of all points, so that Vertex is at (0,0)\n      var legFromPtX  = inLegFromPt.x - inVertex.x,  legFromPtY = inLegFromPt.y - inVertex.y;\n      var legToPtX  = inLegToPt.x - inVertex.x,  legToPtY   = inLegToPt.y - inVertex.y;\n      var otherPtX  = inOtherPt.x - inVertex.x,  otherPtY   = inOtherPt.y - inVertex.y;\n\n      // main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n      var from2toAngle  = legFromPtX * legToPtY - legFromPtY * legToPtX;\n      var from2otherAngle = legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n      if ( Math.abs(from2toAngle) > EPSILON ) {     // angle != 180 deg.\n\n        var other2toAngle   = otherPtX * legToPtY - otherPtY * legToPtX;\n        // console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n        if ( from2toAngle > 0 ) {       // main angle < 180 deg.\n          return  ( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n        } else {                // main angle > 180 deg.\n          return  ( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n        }\n      } else {                    // angle == 180 deg.\n        // console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n        return  ( from2otherAngle > 0 );\n      }\n    }\n\n\n    function removeHoles( contour, holes ) {\n\n      var shape = contour.concat(); // work on this shape\n      var hole;\n\n      function isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n        // Check if hole point lies within angle around shape point\n        var lastShapeIdx = shape.length - 1;\n\n        var prevShapeIdx = inShapeIdx - 1;\n        if ( prevShapeIdx < 0 )     prevShapeIdx = lastShapeIdx;\n\n        var nextShapeIdx = inShapeIdx + 1;\n        if ( nextShapeIdx > lastShapeIdx )  nextShapeIdx = 0;\n\n        var insideAngle = isPointInsideAngle( shape[inShapeIdx], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[inHoleIdx] );\n        if (! insideAngle ) {\n          // console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n          return  false;\n        }\n\n        // Check if shape point lies within angle around hole point\n        var lastHoleIdx = hole.length - 1;\n\n        var prevHoleIdx = inHoleIdx - 1;\n        if ( prevHoleIdx < 0 )      prevHoleIdx = lastHoleIdx;\n\n        var nextHoleIdx = inHoleIdx + 1;\n        if ( nextHoleIdx > lastHoleIdx )  nextHoleIdx = 0;\n\n        insideAngle = isPointInsideAngle( hole[inHoleIdx], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[inShapeIdx] );\n        if (! insideAngle ) {\n          // console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n          return  false;\n        }\n\n        return  true;\n      }\n\n      function intersectsShapeEdge( inShapePt, inHolePt ) {\n        // checks for intersections with shape edges\n        var sIdx, nextIdx, intersection;\n        for ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n          nextIdx = sIdx+1; nextIdx %= shape.length;\n          intersection = intersect_segments_2D( inShapePt, inHolePt, shape[sIdx], shape[nextIdx], true );\n          if ( intersection.length > 0 )    return  true;\n        }\n\n        return  false;\n      }\n\n      var indepHoles = [];\n\n      function intersectsHoleEdge( inShapePt, inHolePt ) {\n        // checks for intersections with hole edges\n        var ihIdx, chkHole,\n          hIdx, nextIdx, intersection;\n        for ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n          chkHole = holes[indepHoles[ihIdx]];\n          for ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n            nextIdx = hIdx+1; nextIdx %= chkHole.length;\n            intersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[hIdx], chkHole[nextIdx], true );\n            if ( intersection.length > 0 )    return  true;\n          }\n        }\n        return  false;\n      }\n\n      var holeIndex, shapeIndex,\n        shapePt, holePt,\n        holeIdx, cutKey, failedCuts = [],\n        tmpShape1, tmpShape2,\n        tmpHole1, tmpHole2;\n\n      for ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n        indepHoles.push( h );\n\n      }\n\n      var minShapeIndex = 0;\n      var counter = indepHoles.length * 2;\n      while ( indepHoles.length > 0 ) {\n        counter --;\n        if ( counter < 0 ) {\n          console.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\n          break;\n        }\n\n        // search for shape-vertex and hole-vertex,\n        // which can be connected without intersections\n        for ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n          shapePt = shape[ shapeIndex ];\n          holeIndex = - 1;\n\n          // search for hole which can be reached without intersections\n          for ( var h = 0; h < indepHoles.length; h ++ ) {\n            holeIdx = indepHoles[h];\n\n            // prevent multiple checks\n            cutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n            if ( failedCuts[cutKey] !== undefined )     continue;\n\n            hole = holes[holeIdx];\n            for ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n              holePt = hole[ h2 ];\n              if (! isCutLineInsideAngles( shapeIndex, h2 ) )   continue;\n              if ( intersectsShapeEdge( shapePt, holePt ) )   continue;\n              if ( intersectsHoleEdge( shapePt, holePt ) )    continue;\n\n              holeIndex = h2;\n              indepHoles.splice(h,1);\n\n              tmpShape1 = shape.slice( 0, shapeIndex+1 );\n              tmpShape2 = shape.slice( shapeIndex );\n              tmpHole1 = hole.slice( holeIndex );\n              tmpHole2 = hole.slice( 0, holeIndex+1 );\n\n              shape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n              minShapeIndex = shapeIndex;\n\n              // Debug only, to show the selected cuts\n              // glob_CutLines.push( [ shapePt, holePt ] );\n\n              break;\n            }\n            if ( holeIndex >= 0 ) break;    // hole-vertex found\n\n            failedCuts[cutKey] = true;      // remember failure\n          }\n          if ( holeIndex >= 0 ) break;    // hole-vertex found\n        }\n      }\n\n      return shape;       /* shape with no holes */\n    }\n\n\n    var i, il, f, face,\n      key, index,\n      allPointsMap = {};\n\n    // To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n    var allpoints = contour.concat();\n\n    for ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n      Array.prototype.push.apply( allpoints, holes[h] );\n\n    }\n\n    //console.log( \"allpoints\",allpoints, allpoints.length );\n\n    // prepare all points map\n\n    for ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n      key = allpoints[ i ].x + \":\" + allpoints[ i ].y;\n\n      if ( allPointsMap[ key ] !== undefined ) {\n\n        console.log( \"Duplicate point\", key );\n\n      }\n\n      allPointsMap[ key ] = i;\n\n    }\n\n    // remove holes by cutting paths to holes and adding them to the shape\n    var shapeWithoutHoles = removeHoles( contour, holes );\n\n    var triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n    //console.log( \"triangles\",triangles, triangles.length );\n\n    // check all face vertices against all points map\n\n    for ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n      face = triangles[ i ];\n\n      for ( f = 0; f < 3; f ++ ) {\n\n        key = face[ f ].x + \":\" + face[ f ].y;\n\n        index = allPointsMap[ key ];\n\n        if ( index !== undefined ) {\n\n          face[ f ] = index;\n\n        }\n\n      }\n\n    }\n\n    return triangles.concat();\n\n  },\n\n  isClockWise: function ( pts ) {\n\n    return THREE.FontUtils.Triangulate.area( pts ) < 0;\n\n  },\n\n  // Bezier Curves formulas obtained from\n  // http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n\n  // Quad Bezier Functions\n\n  b2p0: function ( t, p ) {\n\n    var k = 1 - t;\n    return k * k * p;\n\n  },\n\n  b2p1: function ( t, p ) {\n\n    return 2 * ( 1 - t ) * t * p;\n\n  },\n\n  b2p2: function ( t, p ) {\n\n    return t * t * p;\n\n  },\n\n  b2: function ( t, p0, p1, p2 ) {\n\n    return this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\n\n  },\n\n  // Cubic Bezier Functions\n\n  b3p0: function ( t, p ) {\n\n    var k = 1 - t;\n    return k * k * k * p;\n\n  },\n\n  b3p1: function ( t, p ) {\n\n    var k = 1 - t;\n    return 3 * k * k * t * p;\n\n  },\n\n  b3p2: function ( t, p ) {\n\n    var k = 1 - t;\n    return 3 * k * t * t * p;\n\n  },\n\n  b3p3: function ( t, p ) {\n\n    return t * t * t * p;\n\n  },\n\n  b3: function ( t, p0, p1, p2, p3 ) {\n\n    return this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\n\n  }\n\n};\n\n\n// File:src/extras/curves/LineCurve.js\n\n/**************************************************************\n *  Line\n **************************************************************/\n\nTHREE.LineCurve = function ( v1, v2 ) {\n\n  this.v1 = v1;\n  this.v2 = v2;\n\n};\n\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\n\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\n\n  var point = this.v2.clone().sub(this.v1);\n  point.multiplyScalar( t ).add( this.v1 );\n\n  return point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\n\n  return this.getPoint( u );\n\n};\n\nTHREE.LineCurve.prototype.getTangent = function( t ) {\n\n  var tangent = this.v2.clone().sub(this.v1);\n\n  return tangent.normalize();\n\n};\n\n// File:src/extras/curves/QuadraticBezierCurve.js\n\n/**************************************************************\n *  Quadratic Bezier curve\n **************************************************************/\n\n\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\n\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n\n};\n\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\n\n\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\n  var tx, ty;\n\n  tx = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\n  ty = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\n\n  return new THREE.Vector2( tx, ty );\n\n};\n\n\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\n\n  var tx, ty;\n\n  tx = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\n  ty = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\n\n  // returns unit vector\n\n  var tangent = new THREE.Vector2( tx, ty );\n  tangent.normalize();\n\n  return tangent;\n\n};\n\n// File:src/extras/curves/CubicBezierCurve.js\n\n/**************************************************************\n *  Cubic Bezier curve\n **************************************************************/\n\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\n\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n  this.v3 = v3;\n\n};\n\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\n\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\n\n  var tx, ty;\n\n  tx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\n  ty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\n\n  return new THREE.Vector2( tx, ty );\n\n};\n\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\n\n  var tx, ty;\n\n  tx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\n  ty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\n\n  var tangent = new THREE.Vector2( tx, ty );\n  tangent.normalize();\n\n  return tangent;\n\n};\n\n// File:src/extras/curves/SplineCurve.js\n\n/**************************************************************\n *  Spline curve\n **************************************************************/\n\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\n\n  this.points = (points == undefined) ? [] : points;\n\n};\n\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\n\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\n\n  var v = new THREE.Vector2();\n  var c = [];\n  var points = this.points, point, intPoint, weight;\n  point = ( points.length - 1 ) * t;\n\n  intPoint = Math.floor( point );\n  weight = point - intPoint;\n\n  c[ 0 ] = intPoint == 0 ? intPoint : intPoint - 1;\n  c[ 1 ] = intPoint;\n  c[ 2 ] = intPoint  > points.length - 2 ? points.length -1 : intPoint + 1;\n  c[ 3 ] = intPoint  > points.length - 3 ? points.length -1 : intPoint + 2;\n\n  v.x = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].x, points[ c[ 1 ] ].x, points[ c[ 2 ] ].x, points[ c[ 3 ] ].x, weight );\n  v.y = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].y, points[ c[ 1 ] ].y, points[ c[ 2 ] ].y, points[ c[ 3 ] ].y, weight );\n\n  return v;\n\n};\n\n// File:src/extras/curves/EllipseCurve.js\n\n/**************************************************************\n *  Ellipse curve\n **************************************************************/\n\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n  this.aX = aX;\n  this.aY = aY;\n\n  this.xRadius = xRadius;\n  this.yRadius = yRadius;\n\n  this.aStartAngle = aStartAngle;\n  this.aEndAngle = aEndAngle;\n\n  this.aClockwise = aClockwise;\n\n};\n\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\n\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\n\n  var angle;\n  var deltaAngle = this.aEndAngle - this.aStartAngle;\n\n  if ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\n  if ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\n\n  if ( this.aClockwise === true ) {\n\n    angle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\n\n  } else {\n\n    angle = this.aStartAngle + t * deltaAngle;\n\n  }\n\n  var tx = this.aX + this.xRadius * Math.cos( angle );\n  var ty = this.aY + this.yRadius * Math.sin( angle );\n\n  return new THREE.Vector2( tx, ty );\n\n};\n\n// File:src/extras/curves/ArcCurve.js\n\n/**************************************************************\n *  Arc curve\n **************************************************************/\n\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n  THREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n};\n\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\n\n// File:src/extras/curves/LineCurve3.js\n\n/**************************************************************\n *  Line3D\n **************************************************************/\n\nTHREE.LineCurve3 = THREE.Curve.create(\n\n  function ( v1, v2 ) {\n\n    this.v1 = v1;\n    this.v2 = v2;\n\n  },\n\n  function ( t ) {\n\n    var r = new THREE.Vector3();\n\n\n    r.subVectors( this.v2, this.v1 ); // diff\n    r.multiplyScalar( t );\n    r.add( this.v1 );\n\n    return r;\n\n  }\n\n);\n\n// File:src/extras/curves/QuadraticBezierCurve3.js\n\n/**************************************************************\n *  Quadratic Bezier 3D curve\n **************************************************************/\n\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\n\n  function ( v0, v1, v2 ) {\n\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n\n  },\n\n  function ( t ) {\n\n    var tx, ty, tz;\n\n    tx = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\n    ty = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\n    tz = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\n\n    return new THREE.Vector3( tx, ty, tz );\n\n  }\n\n);\n\n// File:src/extras/curves/CubicBezierCurve3.js\n\n/**************************************************************\n *  Cubic Bezier 3D curve\n **************************************************************/\n\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\n\n  function ( v0, v1, v2, v3 ) {\n\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n    this.v3 = v3;\n\n  },\n\n  function ( t ) {\n\n    var tx, ty, tz;\n\n    tx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\n    ty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\n    tz = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\n\n    return new THREE.Vector3( tx, ty, tz );\n\n  }\n\n);\n\n// File:src/extras/curves/SplineCurve3.js\n\n/**************************************************************\n *  Spline 3D curve\n **************************************************************/\n\n\nTHREE.SplineCurve3 = THREE.Curve.create(\n\n  function ( points /* array of Vector3 */) {\n\n    this.points = (points == undefined) ? [] : points;\n\n  },\n\n  function ( t ) {\n\n    var v = new THREE.Vector3();\n    var c = [];\n    var points = this.points, point, intPoint, weight;\n    point = ( points.length - 1 ) * t;\n\n    intPoint = Math.floor( point );\n    weight = point - intPoint;\n\n    c[ 0 ] = intPoint == 0 ? intPoint : intPoint - 1;\n    c[ 1 ] = intPoint;\n    c[ 2 ] = intPoint  > points.length - 2 ? points.length - 1 : intPoint + 1;\n    c[ 3 ] = intPoint  > points.length - 3 ? points.length - 1 : intPoint + 2;\n\n    var pt0 = points[ c[0] ],\n      pt1 = points[ c[1] ],\n      pt2 = points[ c[2] ],\n      pt3 = points[ c[3] ];\n\n    v.x = THREE.Curve.Utils.interpolate(pt0.x, pt1.x, pt2.x, pt3.x, weight);\n    v.y = THREE.Curve.Utils.interpolate(pt0.y, pt1.y, pt2.y, pt3.y, weight);\n    v.z = THREE.Curve.Utils.interpolate(pt0.z, pt1.z, pt2.z, pt3.z, weight);\n\n    return v;\n\n  }\n\n);\n\n\n// THREE.SplineCurve3.prototype.getTangent = function(t) {\n//    var v = new THREE.Vector3();\n//    var c = [];\n//    var points = this.points, point, intPoint, weight;\n//    point = ( points.length - 1 ) * t;\n\n//    intPoint = Math.floor( point );\n//    weight = point - intPoint;\n\n//    c[ 0 ] = intPoint == 0 ? intPoint : intPoint - 1;\n//    c[ 1 ] = intPoint;\n//    c[ 2 ] = intPoint  > points.length - 2 ? points.length - 1 : intPoint + 1;\n//    c[ 3 ] = intPoint  > points.length - 3 ? points.length - 1 : intPoint + 2;\n\n//    var pt0 = points[ c[0] ],\n//      pt1 = points[ c[1] ],\n//      pt2 = points[ c[2] ],\n//      pt3 = points[ c[3] ];\n\n//  // t = weight;\n//  v.x = THREE.Curve.Utils.tangentSpline( t, pt0.x, pt1.x, pt2.x, pt3.x );\n//  v.y = THREE.Curve.Utils.tangentSpline( t, pt0.y, pt1.y, pt2.y, pt3.y );\n//  v.z = THREE.Curve.Utils.tangentSpline( t, pt0.z, pt1.z, pt2.z, pt3.z );\n\n//  return v;\n\n// }\n\n// File:src/extras/curves/ClosedSplineCurve3.js\n\n/**************************************************************\n *  Closed Spline 3D curve\n **************************************************************/\n\n\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\n\n  function ( points /* array of Vector3 */) {\n\n    this.points = (points == undefined) ? [] : points;\n\n  },\n\n    function ( t ) {\n\n        var v = new THREE.Vector3();\n        var c = [];\n        var points = this.points, point, intPoint, weight;\n        point = ( points.length - 0 ) * t;\n            // This needs to be from 0-length +1\n\n        intPoint = Math.floor( point );\n        weight = point - intPoint;\n\n        intPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n        c[ 0 ] = ( intPoint - 1 ) % points.length;\n        c[ 1 ] = ( intPoint ) % points.length;\n        c[ 2 ] = ( intPoint + 1 ) % points.length;\n        c[ 3 ] = ( intPoint + 2 ) % points.length;\n\n        v.x = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].x, points[ c[ 1 ] ].x, points[ c[ 2 ] ].x, points[ c[ 3 ] ].x, weight );\n        v.y = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].y, points[ c[ 1 ] ].y, points[ c[ 2 ] ].y, points[ c[ 3 ] ].y, weight );\n        v.z = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].z, points[ c[ 1 ] ].z, points[ c[ 2 ] ].z, points[ c[ 3 ] ].z, weight );\n\n        return v;\n\n    }\n\n);\n\n// File:src/extras/animation/AnimationHandler.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n */\n\nTHREE.AnimationHandler = {\n\n  LINEAR: 0,\n  CATMULLROM: 1,\n  CATMULLROM_FORWARD: 2,\n\n  //\n\n  add: function () { console.warn( 'THREE.AnimationHandler.add() has been deprecated.' ); },\n  get: function () { console.warn( 'THREE.AnimationHandler.get() has been deprecated.' ); },\n  remove: function () { console.warn( 'THREE.AnimationHandler.remove() has been deprecated.' ); },\n\n  //\n\n  animations: [],\n\n  init: function ( data ) {\n\n    if ( data.initialized === true ) return;\n\n    // loop through all keys\n\n    for ( var h = 0; h < data.hierarchy.length; h ++ ) {\n\n      for ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n        // remove minus times\n\n        if ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\n\n           data.hierarchy[ h ].keys[ k ].time = 0;\n\n        }\n\n        // create quaternions\n\n        if ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\n          ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\n\n          var quat = data.hierarchy[ h ].keys[ k ].rot;\n          data.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\n\n        }\n\n      }\n\n      // prepare morph target keys\n\n      if ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\n\n        // get all used\n\n        var usedMorphTargets = {};\n\n        for ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n          for ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\n\n            var morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\n            usedMorphTargets[ morphTargetName ] = - 1;\n\n          }\n\n        }\n\n        data.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\n\n\n        // set all used on all frames\n\n        for ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n          var influences = {};\n\n          for ( var morphTargetName in usedMorphTargets ) {\n\n            for ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\n\n              if ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\n\n                influences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\n                break;\n\n              }\n\n            }\n\n            if ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\n\n              influences[ morphTargetName ] = 0;\n\n            }\n\n          }\n\n          data.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\n\n        }\n\n      }\n\n\n      // remove all keys that are on the same time\n\n      for ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n        if ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\n\n          data.hierarchy[ h ].keys.splice( k, 1 );\n          k --;\n\n        }\n\n      }\n\n\n      // set index\n\n      for ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n        data.hierarchy[ h ].keys[ k ].index = k;\n\n      }\n\n    }\n\n    data.initialized = true;\n\n    return data;\n\n  },\n\n  parse: function ( root ) {\n\n    var parseRecurseHierarchy = function ( root, hierarchy ) {\n\n      hierarchy.push( root );\n\n      for ( var c = 0; c < root.children.length; c ++ )\n        parseRecurseHierarchy( root.children[ c ], hierarchy );\n\n    };\n\n    // setup hierarchy\n\n    var hierarchy = [];\n\n    if ( root instanceof THREE.SkinnedMesh ) {\n\n      for ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\n\n        hierarchy.push( root.skeleton.bones[ b ] );\n\n      }\n\n    } else {\n\n      parseRecurseHierarchy( root, hierarchy );\n\n    }\n\n    return hierarchy;\n\n  },\n\n  play: function ( animation ) {\n\n    if ( this.animations.indexOf( animation ) === - 1 ) {\n\n      this.animations.push( animation );\n\n    }\n\n  },\n\n  stop: function ( animation ) {\n\n    var index = this.animations.indexOf( animation );\n\n    if ( index !== - 1 ) {\n\n      this.animations.splice( index, 1 );\n\n    }\n\n  },\n\n  update: function ( deltaTimeMS ) {\n\n    for ( var i = 0; i < this.animations.length; i ++ ) {\n\n      this.animations[ i ].update( deltaTimeMS );\n\n    }\n\n  }\n\n};\n\n// File:src/extras/animation/Animation.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Animation = function ( root, data ) {\n\n  this.root = root;\n  this.data = THREE.AnimationHandler.init( data );\n  this.hierarchy = THREE.AnimationHandler.parse( root );\n\n  this.currentTime = 0;\n  this.timeScale = 1;\n\n  this.isPlaying = false;\n  this.loop = true;\n  this.weight = 0;\n\n  this.interpolationType = THREE.AnimationHandler.LINEAR;\n\n};\n\n\nTHREE.Animation.prototype.keyTypes = [ \"pos\", \"rot\", \"scl\" ];\n\n\nTHREE.Animation.prototype.play = function ( startTime, weight ) {\n\n  this.currentTime = startTime !== undefined ? startTime : 0;\n  this.weight = weight !== undefined ? weight: 1;\n\n  this.isPlaying = true;\n\n  this.reset();\n\n  THREE.AnimationHandler.play( this );\n\n};\n\n\nTHREE.Animation.prototype.stop = function() {\n\n  this.isPlaying = false;\n\n  THREE.AnimationHandler.stop( this );\n\n};\n\nTHREE.Animation.prototype.reset = function () {\n\n  for ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n    var object = this.hierarchy[ h ];\n\n    object.matrixAutoUpdate = true;\n\n    if ( object.animationCache === undefined ) {\n\n      object.animationCache = {};\n\n    }\n\n    if ( object.animationCache[this.data.name] === undefined ) {\n\n      object.animationCache[this.data.name] = {};\n      object.animationCache[this.data.name].prevKey = { pos: 0, rot: 0, scl: 0 };\n      object.animationCache[this.data.name].nextKey = { pos: 0, rot: 0, scl: 0 };\n      object.animationCache[this.data.name].originalMatrix = object.matrix;\n\n    }\n\n    var animationCache = object.animationCache[this.data.name];\n\n    // Get keys to match our current time\n\n    for ( var t = 0; t < 3; t ++ ) {\n\n      var type = this.keyTypes[ t ];\n\n      var prevKey = this.data.hierarchy[ h ].keys[ 0 ];\n      var nextKey = this.getNextKeyWith( type, h, 1 );\n\n      while ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\n\n        prevKey = nextKey;\n        nextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\n\n      }\n\n      animationCache.prevKey[ type ] = prevKey;\n      animationCache.nextKey[ type ] = nextKey;\n\n    }\n\n  }\n\n};\n\n\nTHREE.Animation.prototype.update = (function(){\n\n  var points = [];\n  var target = new THREE.Vector3();\n  var newVector = new THREE.Vector3();\n  var newQuat = new THREE.Quaternion();\n\n  // Catmull-Rom spline\n\n  var interpolateCatmullRom = function ( points, scale ) {\n\n    var c = [], v3 = [],\n    point, intPoint, weight, w2, w3,\n    pa, pb, pc, pd;\n\n    point = ( points.length - 1 ) * scale;\n    intPoint = Math.floor( point );\n    weight = point - intPoint;\n\n    c[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\n    c[ 1 ] = intPoint;\n    c[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\n    c[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\n\n    pa = points[ c[ 0 ] ];\n    pb = points[ c[ 1 ] ];\n    pc = points[ c[ 2 ] ];\n    pd = points[ c[ 3 ] ];\n\n    w2 = weight * weight;\n    w3 = weight * w2;\n\n    v3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\n    v3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\n    v3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\n\n    return v3;\n\n  };\n\n  var interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\n\n    var v0 = ( p2 - p0 ) * 0.5,\n      v1 = ( p3 - p1 ) * 0.5;\n\n    return ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n  };\n\n  return function ( delta ) {\n\n    if ( this.isPlaying === false ) return;\n\n    this.currentTime += delta * this.timeScale;\n\n    if ( this.weight === 0 )\n      return;\n\n    //\n\n    var duration = this.data.length;\n\n    if ( this.loop === true && this.currentTime > duration ) {\n\n      this.currentTime %= duration;\n      this.reset();\n\n    } else if ( this.loop === false && this.currentTime > duration ) {\n\n      this.stop();\n      return;\n\n    }\n\n    for ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n      var object = this.hierarchy[ h ];\n      var animationCache = object.animationCache[this.data.name];\n\n      // loop through pos/rot/scl\n\n      for ( var t = 0; t < 3; t ++ ) {\n\n        // get keys\n\n        var type    = this.keyTypes[ t ];\n        var prevKey = animationCache.prevKey[ type ];\n        var nextKey = animationCache.nextKey[ type ];\n\n        if ( nextKey.time <= this.currentTime ) {\n\n          prevKey = this.data.hierarchy[ h ].keys[ 0 ];\n          nextKey = this.getNextKeyWith( type, h, 1 );\n\n          while ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\n\n            prevKey = nextKey;\n            nextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\n\n          }\n\n          animationCache.prevKey[ type ] = prevKey;\n          animationCache.nextKey[ type ] = nextKey;\n\n        }\n\n        object.matrixAutoUpdate = true;\n        object.matrixWorldNeedsUpdate = true;\n\n        var scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\n\n        var prevXYZ = prevKey[ type ];\n        var nextXYZ = nextKey[ type ];\n\n        if ( scale < 0 ) scale = 0;\n        if ( scale > 1 ) scale = 1;\n\n        // interpolate\n\n        if ( type === \"pos\" ) {\n\n          if ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\n\n            newVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\n            newVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\n            newVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\n\n            // blend\n            if ( object instanceof THREE.Bone ) {\n\n              var proportionalWeight = this.weight / ( this.weight + object.accumulatedPosWeight );\n              object.position.lerp( newVector, proportionalWeight );\n              object.accumulatedPosWeight += this.weight;\n\n            } else {\n\n              object.position.copy( newVector );\n\n            }\n\n          } else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\n                this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n            points[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\n            points[ 1 ] = prevXYZ;\n            points[ 2 ] = nextXYZ;\n            points[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\n\n            scale = scale * 0.33 + 0.33;\n\n            var currentPoint = interpolateCatmullRom( points, scale );\n            var proportionalWeight = 1;\n\n            if ( object instanceof THREE.Bone ) {\n\n              proportionalWeight = this.weight / ( this.weight + object.accumulatedPosWeight );\n              object.accumulatedPosWeight += this.weight;\n\n            }\n\n            // blend\n\n            var vector = object.position;\n\n            vector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\n            vector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\n            vector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\n\n            if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n              var forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\n\n              target.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\n              target.sub( vector );\n              target.y = 0;\n              target.normalize();\n\n              var angle = Math.atan2( target.x, target.z );\n              object.rotation.set( 0, angle, 0 );\n\n            }\n\n          }\n\n        } else if ( type === \"rot\" ) {\n\n          THREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\n\n          // Avoid paying the cost of an additional slerp if we don't have to\n          if ( ! ( object instanceof THREE.Bone ) ) {\n\n            object.quaternion.copy(newQuat);\n\n          } else if ( object.accumulatedRotWeight === 0 ) {\n\n            object.quaternion.copy(newQuat);\n            object.accumulatedRotWeight = this.weight;\n\n          } else {\n\n            var proportionalWeight = this.weight / ( this.weight + object.accumulatedRotWeight );\n            THREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\n            object.accumulatedRotWeight += this.weight;\n\n          }\n\n        } else if ( type === \"scl\" ) {\n\n          newVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\n          newVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\n          newVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\n\n          if ( object instanceof THREE.Bone ) {\n\n            var proportionalWeight = this.weight / ( this.weight + object.accumulatedSclWeight);\n            object.scale.lerp( newVector, proportionalWeight );\n            object.accumulatedSclWeight += this.weight;\n\n          } else {\n\n            object.scale.copy( newVector );\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return true;\n\n  };\n\n})();\n\n\n\n\n\n// Get next key with\n\nTHREE.Animation.prototype.getNextKeyWith = function ( type, h, key ) {\n\n  var keys = this.data.hierarchy[ h ].keys;\n\n  if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\n     this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n    key = key < keys.length - 1 ? key : keys.length - 1;\n\n  } else {\n\n    key = key % keys.length;\n\n  }\n\n  for ( ; key < keys.length; key ++ ) {\n\n    if ( keys[ key ][ type ] !== undefined ) {\n\n      return keys[ key ];\n\n    }\n\n  }\n\n  return this.data.hierarchy[ h ].keys[ 0 ];\n\n};\n\n// Get previous key with\n\nTHREE.Animation.prototype.getPrevKeyWith = function ( type, h, key ) {\n\n  var keys = this.data.hierarchy[ h ].keys;\n\n  if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\n    this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n    key = key > 0 ? key : 0;\n\n  } else {\n\n    key = key >= 0 ? key : key + keys.length;\n\n  }\n\n\n  for ( ; key >= 0; key -- ) {\n\n    if ( keys[ key ][ type ] !== undefined ) {\n\n      return keys[ key ];\n\n    }\n\n  }\n\n  return this.data.hierarchy[ h ].keys[ keys.length - 1 ];\n\n};\n\n// File:src/extras/animation/KeyFrameAnimation.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author khang duong\n * @author erik kitson\n */\n\nTHREE.KeyFrameAnimation = function ( data ) {\n\n  this.root = data.node;\n  this.data = THREE.AnimationHandler.init( data );\n  this.hierarchy = THREE.AnimationHandler.parse( this.root );\n  this.currentTime = 0;\n  this.timeScale = 0.001;\n  this.isPlaying = false;\n  this.isPaused = true;\n  this.loop = true;\n\n  // initialize to first keyframes\n\n  for ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n    var keys = this.data.hierarchy[h].keys,\n      sids = this.data.hierarchy[h].sids,\n      obj = this.hierarchy[h];\n\n    if ( keys.length && sids ) {\n\n      for ( var s = 0; s < sids.length; s ++ ) {\n\n        var sid = sids[ s ],\n          next = this.getNextKeyWith( sid, h, 0 );\n\n        if ( next ) {\n\n          next.apply( sid );\n\n        }\n\n      }\n\n      obj.matrixAutoUpdate = false;\n      this.data.hierarchy[h].node.updateMatrix();\n      obj.matrixWorldNeedsUpdate = true;\n\n    }\n\n  }\n\n};\n\n\nTHREE.KeyFrameAnimation.prototype.play = function ( startTime ) {\n\n  this.currentTime = startTime !== undefined ? startTime : 0;\n\n  if ( this.isPlaying === false ) {\n\n    this.isPlaying = true;\n\n    // reset key cache\n\n    var h, hl = this.hierarchy.length,\n      object,\n      node;\n\n    for ( h = 0; h < hl; h ++ ) {\n\n      object = this.hierarchy[ h ];\n      node = this.data.hierarchy[ h ];\n\n      if ( node.animationCache === undefined ) {\n\n        node.animationCache = {};\n        node.animationCache.prevKey = null;\n        node.animationCache.nextKey = null;\n        node.animationCache.originalMatrix = object.matrix;\n\n      }\n\n      var keys = this.data.hierarchy[h].keys;\n\n      if (keys.length) {\n\n        node.animationCache.prevKey = keys[ 0 ];\n        node.animationCache.nextKey = keys[ 1 ];\n\n        this.startTime = Math.min( keys[0].time, this.startTime );\n        this.endTime = Math.max( keys[keys.length - 1].time, this.endTime );\n\n      }\n\n    }\n\n    this.update( 0 );\n\n  }\n\n  this.isPaused = false;\n\n  THREE.AnimationHandler.play( this );\n\n};\n\n\nTHREE.KeyFrameAnimation.prototype.stop = function() {\n\n  this.isPlaying = false;\n  this.isPaused  = false;\n\n  THREE.AnimationHandler.stop( this );\n\n  // reset JIT matrix and remove cache\n\n  for ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\n\n    var obj = this.hierarchy[ h ];\n    var node = this.data.hierarchy[ h ];\n\n    if ( node.animationCache !== undefined ) {\n\n      var original = node.animationCache.originalMatrix;\n\n      original.copy( obj.matrix );\n      obj.matrix = original;\n\n      delete node.animationCache;\n\n    }\n\n  }\n\n};\n\n\n// Update\n\nTHREE.KeyFrameAnimation.prototype.update = function ( delta ) {\n\n  if ( this.isPlaying === false ) return;\n\n  this.currentTime += delta * this.timeScale;\n\n  //\n\n  var duration = this.data.length;\n\n  if ( this.loop === true && this.currentTime > duration ) {\n\n    this.currentTime %= duration;\n\n  }\n\n  this.currentTime = Math.min( this.currentTime, duration );\n\n  for ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n    var object = this.hierarchy[ h ];\n    var node = this.data.hierarchy[ h ];\n\n    var keys = node.keys,\n      animationCache = node.animationCache;\n\n\n    if ( keys.length ) {\n\n      var prevKey = animationCache.prevKey;\n      var nextKey = animationCache.nextKey;\n\n      if ( nextKey.time <= this.currentTime ) {\n\n        while ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\n\n          prevKey = nextKey;\n          nextKey = keys[ prevKey.index + 1 ];\n\n        }\n\n        animationCache.prevKey = prevKey;\n        animationCache.nextKey = nextKey;\n\n      }\n\n      if ( nextKey.time >= this.currentTime ) {\n\n        prevKey.interpolate( nextKey, this.currentTime );\n\n      } else {\n\n        prevKey.interpolate( nextKey, nextKey.time );\n\n      }\n\n      this.data.hierarchy[ h ].node.updateMatrix();\n      object.matrixWorldNeedsUpdate = true;\n\n    }\n\n  }\n\n};\n\n// Get next key with\n\nTHREE.KeyFrameAnimation.prototype.getNextKeyWith = function( sid, h, key ) {\n\n  var keys = this.data.hierarchy[ h ].keys;\n  key = key % keys.length;\n\n  for ( ; key < keys.length; key ++ ) {\n\n    if ( keys[ key ].hasTarget( sid ) ) {\n\n      return keys[ key ];\n\n    }\n\n  }\n\n  return keys[ 0 ];\n\n};\n\n// Get previous key with\n\nTHREE.KeyFrameAnimation.prototype.getPrevKeyWith = function( sid, h, key ) {\n\n  var keys = this.data.hierarchy[ h ].keys;\n  key = key >= 0 ? key : key + keys.length;\n\n  for ( ; key >= 0; key -- ) {\n\n    if ( keys[ key ].hasTarget( sid ) ) {\n\n      return keys[ key ];\n\n    }\n\n  }\n\n  return keys[ keys.length - 1 ];\n\n};\n\n// File:src/extras/animation/MorphAnimation.js\n\n/**\n * @author mrdoob / http://mrdoob.com\n */\n\nTHREE.MorphAnimation = function ( mesh ) {\n\n  this.mesh = mesh;\n  this.frames = mesh.morphTargetInfluences.length;\n  this.currentTime = 0;\n  this.duration = 1000;\n  this.loop = true;\n\n  this.isPlaying = false;\n\n};\n\nTHREE.MorphAnimation.prototype = {\n\n  play: function () {\n\n    this.isPlaying = true;\n\n  },\n\n  pause: function () {\n\n    this.isPlaying = false;\n\n  },\n\n  update: ( function () {\n\n    var lastFrame = 0;\n    var currentFrame = 0;\n\n    return function ( delta ) {\n\n      if ( this.isPlaying === false ) return;\n\n      this.currentTime += delta;\n\n      if ( this.loop === true && this.currentTime > this.duration ) {\n\n        this.currentTime %= this.duration;\n\n      }\n\n      this.currentTime = Math.min( this.currentTime, this.duration );\n\n      var interpolation = this.duration / this.frames;\n      var frame = Math.floor( this.currentTime / interpolation );\n\n      if ( frame != currentFrame ) {\n\n        this.mesh.morphTargetInfluences[ lastFrame ] = 0;\n        this.mesh.morphTargetInfluences[ currentFrame ] = 1;\n        this.mesh.morphTargetInfluences[ frame ] = 0;\n\n        lastFrame = currentFrame;\n        currentFrame = frame;\n\n      }\n\n      this.mesh.morphTargetInfluences[ frame ] = ( this.currentTime % interpolation ) / interpolation;\n      this.mesh.morphTargetInfluences[ lastFrame ] = 1 - this.mesh.morphTargetInfluences[ frame ];\n\n    }\n\n  } )()\n\n};\n\n// File:src/extras/geometries/BoxGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\n */\n\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n  THREE.Geometry.call( this );\n\n  this.parameters = {\n    width: width,\n    height: height,\n    depth: depth,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    depthSegments: depthSegments\n  };\n\n  this.widthSegments = widthSegments || 1;\n  this.heightSegments = heightSegments || 1;\n  this.depthSegments = depthSegments || 1;\n\n  var scope = this;\n\n  var width_half = width / 2;\n  var height_half = height / 2;\n  var depth_half = depth / 2;\n\n  buildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\n  buildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\n  buildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\n  buildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\n  buildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\n  buildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\n\n  function buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\n\n    var w, ix, iy,\n    gridX = scope.widthSegments,\n    gridY = scope.heightSegments,\n    width_half = width / 2,\n    height_half = height / 2,\n    offset = scope.vertices.length;\n\n    if ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\n\n      w = 'z';\n\n    } else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\n\n      w = 'y';\n      gridY = scope.depthSegments;\n\n    } else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\n\n      w = 'x';\n      gridX = scope.depthSegments;\n\n    }\n\n    var gridX1 = gridX + 1,\n    gridY1 = gridY + 1,\n    segment_width = width / gridX,\n    segment_height = height / gridY,\n    normal = new THREE.Vector3();\n\n    normal[ w ] = depth > 0 ? 1 : - 1;\n\n    for ( iy = 0; iy < gridY1; iy ++ ) {\n\n      for ( ix = 0; ix < gridX1; ix ++ ) {\n\n        var vector = new THREE.Vector3();\n        vector[ u ] = ( ix * segment_width - width_half ) * udir;\n        vector[ v ] = ( iy * segment_height - height_half ) * vdir;\n        vector[ w ] = depth;\n\n        scope.vertices.push( vector );\n\n      }\n\n    }\n\n    for ( iy = 0; iy < gridY; iy ++ ) {\n\n      for ( ix = 0; ix < gridX; ix ++ ) {\n\n        var a = ix + gridX1 * iy;\n        var b = ix + gridX1 * ( iy + 1 );\n        var c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n        var d = ( ix + 1 ) + gridX1 * iy;\n\n        var uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\n        var uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\n        var uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\n        var uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\n\n        var face = new THREE.Face3( a + offset, b + offset, d + offset );\n        face.normal.copy( normal );\n        face.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\n        face.materialIndex = materialIndex;\n\n        scope.faces.push( face );\n        scope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\n\n        face = new THREE.Face3( b + offset, c + offset, d + offset );\n        face.normal.copy( normal );\n        face.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\n        face.materialIndex = materialIndex;\n\n        scope.faces.push( face );\n        scope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n      }\n\n    }\n\n  }\n\n  this.mergeVertices();\n\n};\n\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/CircleGeometry.js\n\n/**\n * @author hughes\n */\n\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\n\n  THREE.Geometry.call( this );\n\n  this.parameters = {\n    radius: radius,\n    segments: segments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n\n  radius = radius || 50;\n  segments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n  var i, uvs = [],\n  center = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\n\n  this.vertices.push(center);\n  uvs.push( centerUV );\n\n  for ( i = 0; i <= segments; i ++ ) {\n\n    var vertex = new THREE.Vector3();\n    var segment = thetaStart + i / segments * thetaLength;\n\n    vertex.x = radius * Math.cos( segment );\n    vertex.y = radius * Math.sin( segment );\n\n    this.vertices.push( vertex );\n    uvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\n\n  }\n\n  var n = new THREE.Vector3( 0, 0, 1 );\n\n  for ( i = 1; i <= segments; i ++ ) {\n\n    this.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\n    this.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\n\n  }\n\n  this.computeFaceNormals();\n\n  this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/CubeGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.CubeGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n  console.warn( 'THEE.CubeGeometry has been renamed to THREE.BoxGeometry.' );\n  return new THREE.BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments );\n\n };\n\n// File:src/extras/geometries/CylinderGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded ) {\n\n  THREE.Geometry.call( this );\n\n  this.parameters = {\n    radiusTop: radiusTop,\n    radiusBottom: radiusBottom,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded\n  };\n\n  radiusTop = radiusTop !== undefined ? radiusTop : 20;\n  radiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n  height = height !== undefined ? height : 100;\n\n  radialSegments = radialSegments || 8;\n  heightSegments = heightSegments || 1;\n\n  openEnded = openEnded !== undefined ? openEnded : false;\n\n  var heightHalf = height / 2;\n\n  var x, y, vertices = [], uvs = [];\n\n  for ( y = 0; y <= heightSegments; y ++ ) {\n\n    var verticesRow = [];\n    var uvsRow = [];\n\n    var v = y / heightSegments;\n    var radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n    for ( x = 0; x <= radialSegments; x ++ ) {\n\n      var u = x / radialSegments;\n\n      var vertex = new THREE.Vector3();\n      vertex.x = radius * Math.sin( u * Math.PI * 2 );\n      vertex.y = - v * height + heightHalf;\n      vertex.z = radius * Math.cos( u * Math.PI * 2 );\n\n      this.vertices.push( vertex );\n\n      verticesRow.push( this.vertices.length - 1 );\n      uvsRow.push( new THREE.Vector2( u, 1 - v ) );\n\n    }\n\n    vertices.push( verticesRow );\n    uvs.push( uvsRow );\n\n  }\n\n  var tanTheta = ( radiusBottom - radiusTop ) / height;\n  var na, nb;\n\n  for ( x = 0; x < radialSegments; x ++ ) {\n\n    if ( radiusTop !== 0 ) {\n\n      na = this.vertices[ vertices[ 0 ][ x ] ].clone();\n      nb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\n\n    } else {\n\n      na = this.vertices[ vertices[ 1 ][ x ] ].clone();\n      nb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\n\n    }\n\n    na.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\n    nb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\n\n    for ( y = 0; y < heightSegments; y ++ ) {\n\n      var v1 = vertices[ y ][ x ];\n      var v2 = vertices[ y + 1 ][ x ];\n      var v3 = vertices[ y + 1 ][ x + 1 ];\n      var v4 = vertices[ y ][ x + 1 ];\n\n      var n1 = na.clone();\n      var n2 = na.clone();\n      var n3 = nb.clone();\n      var n4 = nb.clone();\n\n      var uv1 = uvs[ y ][ x ].clone();\n      var uv2 = uvs[ y + 1 ][ x ].clone();\n      var uv3 = uvs[ y + 1 ][ x + 1 ].clone();\n      var uv4 = uvs[ y ][ x + 1 ].clone();\n\n      this.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\n      this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\n\n      this.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\n      this.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\n\n    }\n\n  }\n\n  // top cap\n\n  if ( openEnded === false && radiusTop > 0 ) {\n\n    this.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\n\n    for ( x = 0; x < radialSegments; x ++ ) {\n\n      var v1 = vertices[ 0 ][ x ];\n      var v2 = vertices[ 0 ][ x + 1 ];\n      var v3 = this.vertices.length - 1;\n\n      var n1 = new THREE.Vector3( 0, 1, 0 );\n      var n2 = new THREE.Vector3( 0, 1, 0 );\n      var n3 = new THREE.Vector3( 0, 1, 0 );\n\n      var uv1 = uvs[ 0 ][ x ].clone();\n      var uv2 = uvs[ 0 ][ x + 1 ].clone();\n      var uv3 = new THREE.Vector2( uv2.x, 0 );\n\n      this.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\n      this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\n\n    }\n\n  }\n\n  // bottom cap\n\n  if ( openEnded === false && radiusBottom > 0 ) {\n\n    this.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\n\n    for ( x = 0; x < radialSegments; x ++ ) {\n\n      var v1 = vertices[ y ][ x + 1 ];\n      var v2 = vertices[ y ][ x ];\n      var v3 = this.vertices.length - 1;\n\n      var n1 = new THREE.Vector3( 0, - 1, 0 );\n      var n2 = new THREE.Vector3( 0, - 1, 0 );\n      var n3 = new THREE.Vector3( 0, - 1, 0 );\n\n      var uv1 = uvs[ y ][ x + 1 ].clone();\n      var uv2 = uvs[ y ][ x ].clone();\n      var uv3 = new THREE.Vector2( uv2.x, 1 );\n\n      this.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\n      this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\n\n    }\n\n  }\n\n  this.computeFaceNormals();\n\n}\n\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/ExtrudeGeometry.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segements of extrude spline too\n *  amount: <int>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\n *\n *  material: <int> // material index for front and back faces\n *  extrudeMaterial: <int> // material index for extrusion and beveled faces\n *  uvGenerator: <Object> // object that provides UV generator functions\n *\n * }\n **/\n\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\n\n  if ( typeof( shapes ) === \"undefined\" ) {\n    shapes = [];\n    return;\n  }\n\n  THREE.Geometry.call( this );\n\n  shapes = shapes instanceof Array ? shapes : [ shapes ];\n\n  this.addShapeList( shapes, options );\n\n  this.computeFaceNormals();\n\n  // can't really use automatic vertex normals\n  // as then front and back sides get smoothed too\n  // should do separate smoothing just for sides\n\n  //this.computeVertexNormals();\n\n  //console.log( \"took\", ( Date.now() - startTime ) );\n\n};\n\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\n  var sl = shapes.length;\n\n  for ( var s = 0; s < sl; s ++ ) {\n    var shape = shapes[ s ];\n    this.addShape( shape, options );\n  }\n};\n\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\n\n  var amount = options.amount !== undefined ? options.amount : 100;\n\n  var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n  var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n  var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n  var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n  var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n  var steps = options.steps !== undefined ? options.steps : 1;\n\n  var extrudePath = options.extrudePath;\n  var extrudePts, extrudeByPath = false;\n\n  var material = options.material;\n  var extrudeMaterial = options.extrudeMaterial;\n\n  // Use default WorldUVGenerator if no UV generators are specified.\n  var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\n\n  var splineTube, binormal, normal, position2;\n  if ( extrudePath ) {\n\n    extrudePts = extrudePath.getSpacedPoints( steps );\n\n    extrudeByPath = true;\n    bevelEnabled = false; // bevels not supported for path extrusion\n\n    // SETUP TNB variables\n\n    // Reuse TNB from TubeGeomtry for now.\n    // TODO1 - have a .isClosed in spline?\n\n    splineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames(extrudePath, steps, false);\n\n    // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n    binormal = new THREE.Vector3();\n    normal = new THREE.Vector3();\n    position2 = new THREE.Vector3();\n\n  }\n\n  // Safeguards if bevels are not enabled\n\n  if ( ! bevelEnabled ) {\n\n    bevelSegments = 0;\n    bevelThickness = 0;\n    bevelSize = 0;\n\n  }\n\n  // Variables initalization\n\n  var ahole, h, hl; // looping of holes\n  var scope = this;\n  var bevelPoints = [];\n\n  var shapesOffset = this.vertices.length;\n\n  var shapePoints = shape.extractPoints( curveSegments );\n\n  var vertices = shapePoints.shape;\n  var holes = shapePoints.holes;\n\n  var reverse = ! THREE.Shape.Utils.isClockWise( vertices ) ;\n\n  if ( reverse ) {\n\n    vertices = vertices.reverse();\n\n    // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n    for ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n      ahole = holes[ h ];\n\n      if ( THREE.Shape.Utils.isClockWise( ahole ) ) {\n\n        holes[ h ] = ahole.reverse();\n\n      }\n\n    }\n\n    reverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\n\n  }\n\n\n  var faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\n\n  /* Vertices */\n\n  var contour = vertices; // vertices has all points but contour has only points of circumference\n\n  for ( h = 0, hl = holes.length;  h < hl; h ++ ) {\n\n    ahole = holes[ h ];\n\n    vertices = vertices.concat( ahole );\n\n  }\n\n\n  function scalePt2 ( pt, vec, size ) {\n\n    if ( ! vec ) console.log( \"die\" );\n\n    return vec.clone().multiplyScalar( size ).add( pt );\n\n  }\n\n  var b, bs, t, z,\n    vert, vlen = vertices.length,\n    face, flen = faces.length,\n    cont, clen = contour.length;\n\n\n  // Find directions for point movement\n\n  var RAD_TO_DEGREES = 180 / Math.PI;\n\n\n  function getBevelVec( inPt, inPrev, inNext ) {\n\n    var EPSILON = 0.0000000001;\n    var sign = THREE.Math.sign;\n\n    // computes for inPt the corresponding point inPt' on a new contour\n    //   shiftet by 1 unit (length of normalized vector) to the left\n    // if we walk along contour clockwise, this new contour is outside the old one\n    //\n    // inPt' is the intersection of the two lines parallel to the two\n    //  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n    var v_trans_x, v_trans_y, shrink_by = 1;    // resulting translation vector for inPt\n\n    // good reading for geometry algorithms (here: line-line intersection)\n    // http://geomalgorithms.com/a05-_intersect-1.html\n\n    var v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\n    var v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\n\n    var v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n    // check for colinear edges\n    var colinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n    if ( Math.abs( colinear0 ) > EPSILON ) {    // not colinear\n\n      // length of vectors for normalizing\n\n      var v_prev_len = Math.sqrt( v_prev_lensq );\n      var v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n      // shift adjacent points by unit vectors to the left\n\n      var ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n      var ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n      var ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n      var ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n      // scaling factor for v_prev to intersection point\n\n      var sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n            ( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\n            ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n      // vector from inPt to intersection point\n\n      v_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n      v_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n      // Don't normalize!, otherwise sharp corners become ugly\n      //  but prevent crazy spikes\n      var v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y )\n      if ( v_trans_lensq <= 2 ) {\n        return  new THREE.Vector2( v_trans_x, v_trans_y );\n      } else {\n        shrink_by = Math.sqrt( v_trans_lensq / 2 );\n      }\n\n    } else {    // handle special case of colinear edges\n\n      var direction_eq = false;   // assumes: opposite\n      if ( v_prev_x > EPSILON ) {\n        if ( v_next_x > EPSILON ) { direction_eq = true; }\n      } else {\n        if ( v_prev_x < - EPSILON ) {\n          if ( v_next_x < - EPSILON ) { direction_eq = true; }\n        } else {\n          if ( sign(v_prev_y) == sign(v_next_y) ) { direction_eq = true; }\n        }\n      }\n\n      if ( direction_eq ) {\n        // console.log(\"Warning: lines are a straight sequence\");\n        v_trans_x = - v_prev_y;\n        v_trans_y =  v_prev_x;\n        shrink_by = Math.sqrt( v_prev_lensq );\n      } else {\n        // console.log(\"Warning: lines are a straight spike\");\n        v_trans_x = v_prev_x;\n        v_trans_y = v_prev_y;\n        shrink_by = Math.sqrt( v_prev_lensq / 2 );\n      }\n\n    }\n\n    return  new THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n  }\n\n\n  var contourMovements = [];\n\n  for ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n    if ( j === il ) j = 0;\n    if ( k === il ) k = 0;\n\n    //  (j)---(i)---(k)\n    // console.log('i,j,k', i, j , k)\n\n    var pt_i = contour[ i ];\n    var pt_j = contour[ j ];\n    var pt_k = contour[ k ];\n\n    contourMovements[ i ]= getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n  }\n\n  var holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\n\n  for ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n    ahole = holes[ h ];\n\n    oneHoleMovements = [];\n\n    for ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n      if ( j === il ) j = 0;\n      if ( k === il ) k = 0;\n\n      //  (j)---(i)---(k)\n      oneHoleMovements[ i ]= getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n    }\n\n    holesMovements.push( oneHoleMovements );\n    verticesMovements = verticesMovements.concat( oneHoleMovements );\n\n  }\n\n\n  // Loop bevelSegments, 1 for the front, 1 for the back\n\n  for ( b = 0; b < bevelSegments; b ++ ) {\n  //for ( b = bevelSegments; b > 0; b -- ) {\n\n    t = b / bevelSegments;\n    z = bevelThickness * ( 1 - t );\n\n    //z = bevelThickness * t;\n    bs = bevelSize * ( Math.sin ( t * Math.PI/2 ) ) ; // curved\n    //bs = bevelSize * t ; // linear\n\n    // contract shape\n\n    for ( i = 0, il = contour.length; i < il; i ++ ) {\n\n      vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n      v( vert.x, vert.y,  - z );\n\n    }\n\n    // expand holes\n\n    for ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n      ahole = holes[ h ];\n      oneHoleMovements = holesMovements[ h ];\n\n      for ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n        vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n        v( vert.x, vert.y,  - z );\n\n      }\n\n    }\n\n  }\n\n  bs = bevelSize;\n\n  // Back facing vertices\n\n  for ( i = 0; i < vlen; i ++ ) {\n\n    vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n    if ( ! extrudeByPath ) {\n\n      v( vert.x, vert.y, 0 );\n\n    } else {\n\n      // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n      normal.copy( splineTube.normals[0] ).multiplyScalar(vert.x);\n      binormal.copy( splineTube.binormals[0] ).multiplyScalar(vert.y);\n\n      position2.copy( extrudePts[0] ).add(normal).add(binormal);\n\n      v( position2.x, position2.y, position2.z );\n\n    }\n\n  }\n\n  // Add stepped vertices...\n  // Including front facing vertices\n\n  var s;\n\n  for ( s = 1; s <= steps; s ++ ) {\n\n    for ( i = 0; i < vlen; i ++ ) {\n\n      vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n      if ( ! extrudeByPath ) {\n\n        v( vert.x, vert.y, amount / steps * s );\n\n      } else {\n\n        // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n        normal.copy( splineTube.normals[s] ).multiplyScalar( vert.x );\n        binormal.copy( splineTube.binormals[s] ).multiplyScalar( vert.y );\n\n        position2.copy( extrudePts[s] ).add( normal ).add( binormal );\n\n        v( position2.x, position2.y, position2.z );\n\n      }\n\n    }\n\n  }\n\n\n  // Add bevel segments planes\n\n  //for ( b = 1; b <= bevelSegments; b ++ ) {\n  for ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n    t = b / bevelSegments;\n    z = bevelThickness * ( 1 - t );\n    //bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\n    bs = bevelSize * Math.sin ( t * Math.PI/2 ) ;\n\n    // contract shape\n\n    for ( i = 0, il = contour.length; i < il; i ++ ) {\n\n      vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n      v( vert.x, vert.y,  amount + z );\n\n    }\n\n    // expand holes\n\n    for ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n      ahole = holes[ h ];\n      oneHoleMovements = holesMovements[ h ];\n\n      for ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n        vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n        if ( ! extrudeByPath ) {\n\n          v( vert.x, vert.y,  amount + z );\n\n        } else {\n\n          v( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n        }\n\n      }\n\n    }\n\n  }\n\n  /* Faces */\n\n  // Top and bottom faces\n\n  buildLidFaces();\n\n  // Sides faces\n\n  buildSideFaces();\n\n\n  /////  Internal functions\n\n  function buildLidFaces() {\n\n    if ( bevelEnabled ) {\n\n      var layer = 0 ; // steps + 1\n      var offset = vlen * layer;\n\n      // Bottom faces\n\n      for ( i = 0; i < flen; i ++ ) {\n\n        face = faces[ i ];\n        f3( face[ 2 ]+ offset, face[ 1 ]+ offset, face[ 0 ] + offset, true );\n\n      }\n\n      layer = steps + bevelSegments * 2;\n      offset = vlen * layer;\n\n      // Top faces\n\n      for ( i = 0; i < flen; i ++ ) {\n\n        face = faces[ i ];\n        f3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset, false );\n\n      }\n\n    } else {\n\n      // Bottom faces\n\n      for ( i = 0; i < flen; i ++ ) {\n\n        face = faces[ i ];\n        f3( face[ 2 ], face[ 1 ], face[ 0 ], true );\n\n      }\n\n      // Top faces\n\n      for ( i = 0; i < flen; i ++ ) {\n\n        face = faces[ i ];\n        f3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps, false );\n\n      }\n    }\n\n  }\n\n  // Create faces for the z-sides of the shape\n\n  function buildSideFaces() {\n\n    var layeroffset = 0;\n    sidewalls( contour, layeroffset );\n    layeroffset += contour.length;\n\n    for ( h = 0, hl = holes.length;  h < hl; h ++ ) {\n\n      ahole = holes[ h ];\n      sidewalls( ahole, layeroffset );\n\n      //, true\n      layeroffset += ahole.length;\n\n    }\n\n  }\n\n  function sidewalls( contour, layeroffset ) {\n\n    var j, k;\n    i = contour.length;\n\n    while ( --i >= 0 ) {\n\n      j = i;\n      k = i - 1;\n      if ( k < 0 ) k = contour.length - 1;\n\n      //console.log('b', i,j, i-1, k,vertices.length);\n\n      var s = 0, sl = steps  + bevelSegments * 2;\n\n      for ( s = 0; s < sl; s ++ ) {\n\n        var slen1 = vlen * s;\n        var slen2 = vlen * ( s + 1 );\n\n        var a = layeroffset + j + slen1,\n          b = layeroffset + k + slen1,\n          c = layeroffset + k + slen2,\n          d = layeroffset + j + slen2;\n\n        f4( a, b, c, d, contour, s, sl, j, k );\n\n      }\n    }\n\n  }\n\n\n  function v( x, y, z ) {\n\n    scope.vertices.push( new THREE.Vector3( x, y, z ) );\n\n  }\n\n  function f3( a, b, c, isBottom ) {\n\n    a += shapesOffset;\n    b += shapesOffset;\n    c += shapesOffset;\n\n    // normal, color, material\n    scope.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\n\n    var uvs = isBottom ? uvgen.generateBottomUV( scope, shape, options, a, b, c ) : uvgen.generateTopUV( scope, shape, options, a, b, c );\n\n    scope.faceVertexUvs[ 0 ].push( uvs );\n\n  }\n\n  function f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\n    a += shapesOffset;\n    b += shapesOffset;\n    c += shapesOffset;\n    d += shapesOffset;\n\n    scope.faces.push( new THREE.Face3( a, b, d, null, null, extrudeMaterial ) );\n    scope.faces.push( new THREE.Face3( b, c, d, null, null, extrudeMaterial ) );\n\n    var uvs = uvgen.generateSideWallUV( scope, shape, wallContour, options, a, b, c, d,\n                                        stepIndex, stepsLength, contourIndex1, contourIndex2 );\n\n    scope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\n    scope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\n\n  }\n\n};\n\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\n\n  generateTopUV: function( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC ) {\n    var ax = geometry.vertices[ indexA ].x,\n      ay = geometry.vertices[ indexA ].y,\n\n      bx = geometry.vertices[ indexB ].x,\n      by = geometry.vertices[ indexB ].y,\n\n      cx = geometry.vertices[ indexC ].x,\n      cy = geometry.vertices[ indexC ].y;\n\n    return [\n      new THREE.Vector2( ax, ay ),\n      new THREE.Vector2( bx, by ),\n      new THREE.Vector2( cx, cy )\n    ];\n\n  },\n\n  generateBottomUV: function( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC ) {\n\n    return this.generateTopUV( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC );\n\n  },\n\n  generateSideWallUV: function( geometry, extrudedShape, wallContour, extrudeOptions,\n                                indexA, indexB, indexC, indexD, stepIndex, stepsLength,\n                                contourIndex1, contourIndex2 ) {\n\n    var ax = geometry.vertices[ indexA ].x,\n      ay = geometry.vertices[ indexA ].y,\n      az = geometry.vertices[ indexA ].z,\n\n      bx = geometry.vertices[ indexB ].x,\n      by = geometry.vertices[ indexB ].y,\n      bz = geometry.vertices[ indexB ].z,\n\n      cx = geometry.vertices[ indexC ].x,\n      cy = geometry.vertices[ indexC ].y,\n      cz = geometry.vertices[ indexC ].z,\n\n      dx = geometry.vertices[ indexD ].x,\n      dy = geometry.vertices[ indexD ].y,\n      dz = geometry.vertices[ indexD ].z;\n\n    if ( Math.abs( ay - by ) < 0.01 ) {\n      return [\n        new THREE.Vector2( ax, 1 - az ),\n        new THREE.Vector2( bx, 1 - bz ),\n        new THREE.Vector2( cx, 1 - cz ),\n        new THREE.Vector2( dx, 1 - dz )\n      ];\n    } else {\n      return [\n        new THREE.Vector2( ay, 1 - az ),\n        new THREE.Vector2( by, 1 - bz ),\n        new THREE.Vector2( cy, 1 - cz ),\n        new THREE.Vector2( dy, 1 - dz )\n      ];\n    }\n  }\n};\n\nTHREE.ExtrudeGeometry.__v1 = new THREE.Vector2();\nTHREE.ExtrudeGeometry.__v2 = new THREE.Vector2();\nTHREE.ExtrudeGeometry.__v3 = new THREE.Vector2();\nTHREE.ExtrudeGeometry.__v4 = new THREE.Vector2();\nTHREE.ExtrudeGeometry.__v5 = new THREE.Vector2();\nTHREE.ExtrudeGeometry.__v6 = new THREE.Vector2();\n\n// File:src/extras/geometries/ShapeGeometry.js\n\n/**\n * @author jonobr1 / http://jonobr1.com\n *\n * Creates a one-sided polygonal geometry from a path shape. Similar to\n * ExtrudeGeometry.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\n *\n *  material: <int> // material index for front and back faces\n *  uvGenerator: <Object> // object that provides UV generator functions\n *\n * }\n **/\n\nTHREE.ShapeGeometry = function ( shapes, options ) {\n\n  THREE.Geometry.call( this );\n\n  if ( shapes instanceof Array === false ) shapes = [ shapes ];\n\n  this.addShapeList( shapes, options );\n\n  this.computeFaceNormals();\n\n};\n\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n/**\n * Add an array of shapes to THREE.ShapeGeometry.\n */\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n  for ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n    this.addShape( shapes[ i ], options );\n\n  }\n\n  return this;\n\n};\n\n/**\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\n */\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\n\n  if ( options === undefined ) options = {};\n  var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n  var material = options.material;\n  var uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\n\n  //\n\n  var i, l, hole, s;\n\n  var shapesOffset = this.vertices.length;\n  var shapePoints = shape.extractPoints( curveSegments );\n\n  var vertices = shapePoints.shape;\n  var holes = shapePoints.holes;\n\n  var reverse = ! THREE.Shape.Utils.isClockWise( vertices );\n\n  if ( reverse ) {\n\n    vertices = vertices.reverse();\n\n    // Maybe we should also check if holes are in the opposite direction, just to be safe...\n\n    for ( i = 0, l = holes.length; i < l; i ++ ) {\n\n      hole = holes[ i ];\n\n      if ( THREE.Shape.Utils.isClockWise( hole ) ) {\n\n        holes[ i ] = hole.reverse();\n\n      }\n\n    }\n\n    reverse = false;\n\n  }\n\n  var faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\n\n  // Vertices\n\n  var contour = vertices;\n\n  for ( i = 0, l = holes.length; i < l; i ++ ) {\n\n    hole = holes[ i ];\n    vertices = vertices.concat( hole );\n\n  }\n\n  //\n\n  var vert, vlen = vertices.length;\n  var face, flen = faces.length;\n  var cont, clen = contour.length;\n\n  for ( i = 0; i < vlen; i ++ ) {\n\n    vert = vertices[ i ];\n\n    this.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\n\n  }\n\n  for ( i = 0; i < flen; i ++ ) {\n\n    face = faces[ i ];\n\n    var a = face[ 0 ] + shapesOffset;\n    var b = face[ 1 ] + shapesOffset;\n    var c = face[ 2 ] + shapesOffset;\n\n    this.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\n    this.faceVertexUvs[ 0 ].push( uvgen.generateBottomUV( this, shape, options, a, b, c ) );\n\n  }\n\n};\n\n// File:src/extras/geometries/LatheGeometry.js\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://exocortex.com\n */\n\n// points - to create a closed torus, one must use a set of points\n//    like so: [ a, b, c, d, a ], see first is the same as last.\n// segments - the number of circumference segments to create\n// phiStart - the starting radian\n// phiLength - the radian (0 to 2*PI) range of the lathed section\n//    2*pi is a closed lathe, less than 2PI is a portion.\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\n\n  THREE.Geometry.call( this );\n\n  segments = segments || 12;\n  phiStart = phiStart || 0;\n  phiLength = phiLength || 2 * Math.PI;\n\n  var inversePointLength = 1.0 / ( points.length - 1 );\n  var inverseSegments = 1.0 / segments;\n\n  for ( var i = 0, il = segments; i <= il; i ++ ) {\n\n    var phi = phiStart + i * inverseSegments * phiLength;\n\n    var c = Math.cos( phi ),\n      s = Math.sin( phi );\n\n    for ( var j = 0, jl = points.length; j < jl; j ++ ) {\n\n      var pt = points[ j ];\n\n      var vertex = new THREE.Vector3();\n\n      vertex.x = c * pt.x - s * pt.y;\n      vertex.y = s * pt.x + c * pt.y;\n      vertex.z = pt.z;\n\n      this.vertices.push( vertex );\n\n    }\n\n  }\n\n  var np = points.length;\n\n  for ( var i = 0, il = segments; i < il; i ++ ) {\n\n    for ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\n\n      var base = j + np * i;\n      var a = base;\n      var b = base + np;\n      var c = base + 1 + np;\n      var d = base + 1;\n\n      var u0 = i * inverseSegments;\n      var v0 = j * inversePointLength;\n      var u1 = u0 + inverseSegments;\n      var v1 = v0 + inversePointLength;\n\n      this.faces.push( new THREE.Face3( a, b, d ) );\n\n      this.faceVertexUvs[ 0 ].push( [\n\n        new THREE.Vector2( u0, v0 ),\n        new THREE.Vector2( u1, v0 ),\n        new THREE.Vector2( u0, v1 )\n\n      ] );\n\n      this.faces.push( new THREE.Face3( b, c, d ) );\n\n      this.faceVertexUvs[ 0 ].push( [\n\n        new THREE.Vector2( u1, v0 ),\n        new THREE.Vector2( u1, v1 ),\n        new THREE.Vector2( u0, v1 )\n\n      ] );\n\n\n    }\n\n  }\n\n  this.mergeVertices();\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n\n};\n\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/PlaneGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n */\n\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\n\n  THREE.Geometry.call( this );\n\n  this.parameters = {\n    width: width,\n    height: height,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments\n  };\n\n  var ix, iz;\n  var width_half = width / 2;\n  var height_half = height / 2;\n\n  var gridX = widthSegments || 1;\n  var gridZ = heightSegments || 1;\n\n  var gridX1 = gridX + 1;\n  var gridZ1 = gridZ + 1;\n\n  var segment_width = width / gridX;\n  var segment_height = height / gridZ;\n\n  var normal = new THREE.Vector3( 0, 0, 1 );\n\n  for ( iz = 0; iz < gridZ1; iz ++ ) {\n\n    var y = iz * segment_height - height_half;\n\n    for ( ix = 0; ix < gridX1; ix ++ ) {\n\n      var x = ix * segment_width - width_half;\n\n      this.vertices.push( new THREE.Vector3( x, - y, 0 ) );\n\n    }\n\n  }\n\n  for ( iz = 0; iz < gridZ; iz ++ ) {\n\n    for ( ix = 0; ix < gridX; ix ++ ) {\n\n      var a = ix + gridX1 * iz;\n      var b = ix + gridX1 * ( iz + 1 );\n      var c = ( ix + 1 ) + gridX1 * ( iz + 1 );\n      var d = ( ix + 1 ) + gridX1 * iz;\n\n      var uva = new THREE.Vector2( ix / gridX, 1 - iz / gridZ );\n      var uvb = new THREE.Vector2( ix / gridX, 1 - ( iz + 1 ) / gridZ );\n      var uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iz + 1 ) / gridZ );\n      var uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iz / gridZ );\n\n      var face = new THREE.Face3( a, b, d );\n      face.normal.copy( normal );\n      face.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\n\n      this.faces.push( face );\n      this.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\n\n      face = new THREE.Face3( b, c, d );\n      face.normal.copy( normal );\n      face.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\n\n      this.faces.push( face );\n      this.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n    }\n\n  }\n\n};\n\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/RingGeometry.js\n\n/**\n * @author Kaleb Murphy\n */\n\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n  THREE.Geometry.call( this );\n\n  innerRadius = innerRadius || 0;\n  outerRadius = outerRadius || 50;\n\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n  thetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n  phiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\n\n  var i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\n  for ( i = 0; i < phiSegments + 1; i ++ ) { // concentric circles inside ring\n\n    for ( o = 0; o < thetaSegments + 1; o ++ ) { // number of segments per circle\n\n      var vertex = new THREE.Vector3();\n      var segment = thetaStart + o / thetaSegments * thetaLength;\n      vertex.x = radius * Math.cos( segment );\n      vertex.y = radius * Math.sin( segment );\n\n      this.vertices.push( vertex );\n      uvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\n    }\n\n    radius += radiusStep;\n\n  }\n\n  var n = new THREE.Vector3( 0, 0, 1 );\n\n  for ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring\n\n    var thetaSegment = i * (thetaSegments + 1);\n\n    for ( o = 0; o < thetaSegments ; o ++ ) { // number of segments per circle\n\n      var segment = o + thetaSegment;\n\n      var v1 = segment;\n      var v2 = segment + thetaSegments + 1;\n      var v3 = segment + thetaSegments + 2;\n\n      this.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n      this.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\n      v1 = segment;\n      v2 = segment + thetaSegments + 2;\n      v3 = segment + 1;\n\n      this.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n      this.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\n    }\n  }\n\n  this.computeFaceNormals();\n\n  this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n\n// File:src/extras/geometries/SphereGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n  THREE.Geometry.call( this );\n\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n\n  radius = radius || 50;\n\n  widthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n  heightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n  phiStart = phiStart !== undefined ? phiStart : 0;\n  phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n  var x, y, vertices = [], uvs = [];\n\n  for ( y = 0; y <= heightSegments; y ++ ) {\n\n    var verticesRow = [];\n    var uvsRow = [];\n\n    for ( x = 0; x <= widthSegments; x ++ ) {\n\n      var u = x / widthSegments;\n      var v = y / heightSegments;\n\n      var vertex = new THREE.Vector3();\n      vertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n      vertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n      vertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n      this.vertices.push( vertex );\n\n      verticesRow.push( this.vertices.length - 1 );\n      uvsRow.push( new THREE.Vector2( u, 1 - v ) );\n\n    }\n\n    vertices.push( verticesRow );\n    uvs.push( uvsRow );\n\n  }\n\n  for ( y = 0; y < heightSegments; y ++ ) {\n\n    for ( x = 0; x < widthSegments; x ++ ) {\n\n      var v1 = vertices[ y ][ x + 1 ];\n      var v2 = vertices[ y ][ x ];\n      var v3 = vertices[ y + 1 ][ x ];\n      var v4 = vertices[ y + 1 ][ x + 1 ];\n\n      var n1 = this.vertices[ v1 ].clone().normalize();\n      var n2 = this.vertices[ v2 ].clone().normalize();\n      var n3 = this.vertices[ v3 ].clone().normalize();\n      var n4 = this.vertices[ v4 ].clone().normalize();\n\n      var uv1 = uvs[ y ][ x + 1 ].clone();\n      var uv2 = uvs[ y ][ x ].clone();\n      var uv3 = uvs[ y + 1 ][ x ].clone();\n      var uv4 = uvs[ y + 1 ][ x + 1 ].clone();\n\n      if ( Math.abs( this.vertices[ v1 ].y ) === radius ) {\n\n        uv1.x = ( uv1.x + uv2.x ) / 2;\n        this.faces.push( new THREE.Face3( v1, v3, v4, [ n1, n3, n4 ] ) );\n        this.faceVertexUvs[ 0 ].push( [ uv1, uv3, uv4 ] );\n\n      } else if ( Math.abs( this.vertices[ v3 ].y ) === radius ) {\n\n        uv3.x = ( uv3.x + uv4.x ) / 2;\n        this.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\n        this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\n\n      } else {\n\n        this.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\n        this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\n\n        this.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\n        this.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\n\n      }\n\n    }\n\n  }\n\n  this.computeFaceNormals();\n\n  this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/TextGeometry.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * For creating 3D text geometry in three.js\n *\n * Text = 3D Text\n *\n * parameters = {\n *  size:       <float>,  // size of the text\n *  height:     <float>,  // thickness to extrude text\n *  curveSegments:  <int>,    // number of points on the curves\n *\n *  font:       <string>,   // font name\n *  weight:     <string>,   // font weight (normal, bold)\n *  style:      <string>,   // font style  (normal, italics)\n *\n *  bevelEnabled: <bool>,     // turn on bevel\n *  bevelThickness: <float>,    // how deep into text bevel goes\n *  bevelSize:    <float>,    // how far from text outline is bevel\n *  }\n *\n */\n\n/*  Usage Examples\n\n  // TextGeometry wrapper\n\n  var text3d = new TextGeometry( text, options );\n\n  // Complete manner\n\n  var textShapes = THREE.FontUtils.generateShapes( text, options );\n  var text3d = new ExtrudeGeometry( textShapes, options );\n\n*/\n\n\nTHREE.TextGeometry = function ( text, parameters ) {\n\n  parameters = parameters || {};\n\n  var textShapes = THREE.FontUtils.generateShapes( text, parameters );\n\n  // translate parameters to ExtrudeGeometry API\n\n  parameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n  // defaults\n\n  if ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n  if ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n  if ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n  THREE.ExtrudeGeometry.call( this, textShapes, parameters );\n\n};\n\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\n\n// File:src/extras/geometries/TorusGeometry.js\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\n */\n\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\n\n  THREE.Geometry.call( this );\n\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    radialSegments: radialSegments,\n    tubularSegments: tubularSegments,\n    arc: arc\n  };\n\n  radius = radius || 100;\n  tube = tube || 40;\n  radialSegments = radialSegments || 8;\n  tubularSegments = tubularSegments || 6;\n  arc = arc || Math.PI * 2;\n\n  var center = new THREE.Vector3(), uvs = [], normals = [];\n\n  for ( var j = 0; j <= radialSegments; j ++ ) {\n\n    for ( var i = 0; i <= tubularSegments; i ++ ) {\n\n      var u = i / tubularSegments * arc;\n      var v = j / radialSegments * Math.PI * 2;\n\n      center.x = radius * Math.cos( u );\n      center.y = radius * Math.sin( u );\n\n      var vertex = new THREE.Vector3();\n      vertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n      vertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n      vertex.z = tube * Math.sin( v );\n\n      this.vertices.push( vertex );\n\n      uvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\n      normals.push( vertex.clone().sub( center ).normalize() );\n\n    }\n\n  }\n\n  for ( var j = 1; j <= radialSegments; j ++ ) {\n\n    for ( var i = 1; i <= tubularSegments; i ++ ) {\n\n      var a = ( tubularSegments + 1 ) * j + i - 1;\n      var b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n      var c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n      var d = ( tubularSegments + 1 ) * j + i;\n\n      var face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\n      this.faces.push( face );\n      this.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\n\n      face = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\n      this.faces.push( face );\n      this.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\n\n    }\n\n  }\n\n  this.computeFaceNormals();\n\n};\n\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/TorusKnotGeometry.js\n\n/**\n * @author oosmoxiecode\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\n */\n\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\n\n  THREE.Geometry.call( this );\n\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    radialSegments: radialSegments,\n    tubularSegments: tubularSegments,\n    p: p,\n    q: q,\n    heightScale: heightScale\n  };\n\n  radius = radius || 100;\n  tube = tube || 40;\n  radialSegments = radialSegments || 64;\n  tubularSegments = tubularSegments || 8;\n  p = p || 2;\n  q = q || 3;\n  heightScale = heightScale || 1;\n\n  var grid = new Array( radialSegments );\n  var tang = new THREE.Vector3();\n  var n = new THREE.Vector3();\n  var bitan = new THREE.Vector3();\n\n  for ( var i = 0; i < radialSegments; ++ i ) {\n\n    grid[ i ] = new Array( tubularSegments );\n    var u = i / radialSegments * 2 * p * Math.PI;\n    var p1 = getPos( u, q, p, radius, heightScale );\n    var p2 = getPos( u + 0.01, q, p, radius, heightScale );\n    tang.subVectors( p2, p1 );\n    n.addVectors( p2, p1 );\n\n    bitan.crossVectors( tang, n );\n    n.crossVectors( bitan, tang );\n    bitan.normalize();\n    n.normalize();\n\n    for ( var j = 0; j < tubularSegments; ++ j ) {\n\n      var v = j / tubularSegments * 2 * Math.PI;\n      var cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\n      var cy = tube * Math.sin( v );\n\n      var pos = new THREE.Vector3();\n      pos.x = p1.x + cx * n.x + cy * bitan.x;\n      pos.y = p1.y + cx * n.y + cy * bitan.y;\n      pos.z = p1.z + cx * n.z + cy * bitan.z;\n\n      grid[ i ][ j ] = this.vertices.push( pos ) - 1;\n\n    }\n\n  }\n\n  for ( var i = 0; i < radialSegments; ++ i ) {\n\n    for ( var j = 0; j < tubularSegments; ++ j ) {\n\n      var ip = ( i + 1 ) % radialSegments;\n      var jp = ( j + 1 ) % tubularSegments;\n\n      var a = grid[ i ][ j ];\n      var b = grid[ ip ][ j ];\n      var c = grid[ ip ][ jp ];\n      var d = grid[ i ][ jp ];\n\n      var uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\n      var uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\n      var uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\n      var uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\n\n      this.faces.push( new THREE.Face3( a, b, d ) );\n      this.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\n\n      this.faces.push( new THREE.Face3( b, c, d ) );\n      this.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n    }\n  }\n\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n\n  function getPos( u, in_q, in_p, radius, heightScale ) {\n\n    var cu = Math.cos( u );\n    var su = Math.sin( u );\n    var quOverP = in_q / in_p * u;\n    var cs = Math.cos( quOverP );\n\n    var tx = radius * ( 2 + cs ) * 0.5 * cu;\n    var ty = radius * ( 2 + cs ) * su * 0.5;\n    var tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\n\n    return new THREE.Vector3( tx, ty, tz );\n\n  }\n\n};\n\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/TubeGeometry.js\n\n/**\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n *\n * Modified from the TorusKnotGeometry by @oosmoxiecode\n *\n * Creates a tube which extrudes along a 3d spline\n *\n * Uses parallel transport frames as described in\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n */\n\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed ) {\n\n  THREE.Geometry.call( this );\n\n  this.parameters = {\n    path: path,\n    segments: segments,\n    radius: radius,\n    radialSegments: radialSegments,\n    closed: closed\n  };\n\n  segments = segments || 64;\n  radius = radius || 1;\n  radialSegments = radialSegments || 8;\n  closed = closed || false;\n\n  var grid = [];\n\n  var scope = this,\n\n    tangent,\n    normal,\n    binormal,\n\n    numpoints = segments + 1,\n\n    x, y, z,\n    tx, ty, tz,\n    u, v,\n\n    cx, cy,\n    pos, pos2 = new THREE.Vector3(),\n    i, j,\n    ip, jp,\n    a, b, c, d,\n    uva, uvb, uvc, uvd;\n\n  var frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\n    tangents = frames.tangents,\n    normals = frames.normals,\n    binormals = frames.binormals;\n\n  // proxy internals\n  this.tangents = tangents;\n  this.normals = normals;\n  this.binormals = binormals;\n\n  function vert( x, y, z ) {\n\n    return scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\n\n  }\n\n  // consruct the grid\n\n  for ( i = 0; i < numpoints; i ++ ) {\n\n    grid[ i ] = [];\n\n    u = i / ( numpoints - 1 );\n\n    pos = path.getPointAt( u );\n\n    tangent = tangents[ i ];\n    normal = normals[ i ];\n    binormal = binormals[ i ];\n\n    for ( j = 0; j < radialSegments; j ++ ) {\n\n      v = j / radialSegments * 2 * Math.PI;\n\n      cx = - radius * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\n      cy = radius * Math.sin( v );\n\n      pos2.copy( pos );\n      pos2.x += cx * normal.x + cy * binormal.x;\n      pos2.y += cx * normal.y + cy * binormal.y;\n      pos2.z += cx * normal.z + cy * binormal.z;\n\n      grid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\n\n    }\n  }\n\n\n  // construct the mesh\n\n  for ( i = 0; i < segments; i ++ ) {\n\n    for ( j = 0; j < radialSegments; j ++ ) {\n\n      ip = ( closed ) ? (i + 1) % segments : i + 1;\n      jp = (j + 1) % radialSegments;\n\n      a = grid[ i ][ j ];   // *** NOT NECESSARILY PLANAR ! ***\n      b = grid[ ip ][ j ];\n      c = grid[ ip ][ jp ];\n      d = grid[ i ][ jp ];\n\n      uva = new THREE.Vector2( i / segments, j / radialSegments );\n      uvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\n      uvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\n      uvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\n\n      this.faces.push( new THREE.Face3( a, b, d ) );\n      this.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\n\n      this.faces.push( new THREE.Face3( b, c, d ) );\n      this.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n    }\n  }\n\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n\n};\n\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\n\n  var tangent = new THREE.Vector3(),\n    normal = new THREE.Vector3(),\n    binormal = new THREE.Vector3(),\n\n    tangents = [],\n    normals = [],\n    binormals = [],\n\n    vec = new THREE.Vector3(),\n    mat = new THREE.Matrix4(),\n\n    numpoints = segments + 1,\n    theta,\n    epsilon = 0.0001,\n    smallest,\n\n    tx, ty, tz,\n    i, u, v;\n\n\n  // expose internals\n  this.tangents = tangents;\n  this.normals = normals;\n  this.binormals = binormals;\n\n  // compute the tangent vectors for each segment on the path\n\n  for ( i = 0; i < numpoints; i ++ ) {\n\n    u = i / ( numpoints - 1 );\n\n    tangents[ i ] = path.getTangentAt( u );\n    tangents[ i ].normalize();\n\n  }\n\n  initialNormal3();\n\n  /*\n  function initialNormal1(lastBinormal) {\n    // fixed start binormal. Has dangers of 0 vectors\n    normals[ 0 ] = new THREE.Vector3();\n    binormals[ 0 ] = new THREE.Vector3();\n    if (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\n    normals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\n    binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n  }\n\n  function initialNormal2() {\n\n    // This uses the Frenet-Serret formula for deriving binormal\n    var t2 = path.getTangentAt( epsilon );\n\n    normals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\n    binormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n    normals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\n    binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n\n  }\n  */\n\n  function initialNormal3() {\n    // select an initial normal vector perpenicular to the first tangent vector,\n    // and in the direction of the smallest tangent xyz component\n\n    normals[ 0 ] = new THREE.Vector3();\n    binormals[ 0 ] = new THREE.Vector3();\n    smallest = Number.MAX_VALUE;\n    tx = Math.abs( tangents[ 0 ].x );\n    ty = Math.abs( tangents[ 0 ].y );\n    tz = Math.abs( tangents[ 0 ].z );\n\n    if ( tx <= smallest ) {\n      smallest = tx;\n      normal.set( 1, 0, 0 );\n    }\n\n    if ( ty <= smallest ) {\n      smallest = ty;\n      normal.set( 0, 1, 0 );\n    }\n\n    if ( tz <= smallest ) {\n      normal.set( 0, 0, 1 );\n    }\n\n    vec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n    normals[ 0 ].crossVectors( tangents[ 0 ], vec );\n    binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n  }\n\n\n  // compute the slowly-varying normal and binormal vectors for each segment on the path\n\n  for ( i = 1; i < numpoints; i ++ ) {\n\n    normals[ i ] = normals[ i-1 ].clone();\n\n    binormals[ i ] = binormals[ i-1 ].clone();\n\n    vec.crossVectors( tangents[ i-1 ], tangents[ i ] );\n\n    if ( vec.length() > epsilon ) {\n\n      vec.normalize();\n\n      theta = Math.acos( THREE.Math.clamp( tangents[ i-1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n      normals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n    }\n\n    binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n  }\n\n\n  // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n  if ( closed ) {\n\n    theta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints-1 ] ), - 1, 1 ) );\n    theta /= ( numpoints - 1 );\n\n    if ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints-1 ] ) ) > 0 ) {\n\n      theta = - theta;\n\n    }\n\n    for ( i = 1; i < numpoints; i ++ ) {\n\n      // twist a little...\n      normals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n      binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n    }\n\n  }\n};\n\n// File:src/extras/geometries/PolyhedronGeometry.js\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\n\n  THREE.Geometry.call( this );\n\n  radius = radius || 1;\n  detail = detail || 0;\n\n  var that = this;\n\n  for ( var i = 0, l = vertices.length; i < l; i += 3 ) {\n\n    prepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\n\n  }\n\n  var midpoints = [], p = this.vertices;\n\n  var faces = [];\n\n  for ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\n\n    var v1 = p[ indices[ i     ] ];\n    var v2 = p[ indices[ i + 1 ] ];\n    var v3 = p[ indices[ i + 2 ] ];\n\n    faces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n\n  }\n\n  var centroid = new THREE.Vector3();\n\n  for ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n    subdivide( faces[ i ], detail );\n\n  }\n\n\n  // Handle case when face straddles the seam\n\n  for ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\n\n    var uvs = this.faceVertexUvs[ 0 ][ i ];\n\n    var x0 = uvs[ 0 ].x;\n    var x1 = uvs[ 1 ].x;\n    var x2 = uvs[ 2 ].x;\n\n    var max = Math.max( x0, Math.max( x1, x2 ) );\n    var min = Math.min( x0, Math.min( x1, x2 ) );\n\n    if ( max > 0.9 && min < 0.1 ) { // 0.9 is somewhat arbitrary\n\n      if ( x0 < 0.2 ) uvs[ 0 ].x += 1;\n      if ( x1 < 0.2 ) uvs[ 1 ].x += 1;\n      if ( x2 < 0.2 ) uvs[ 2 ].x += 1;\n\n    }\n\n  }\n\n\n  // Apply radius\n\n  for ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n    this.vertices[ i ].multiplyScalar( radius );\n\n  }\n\n\n  // Merge vertices\n\n  this.mergeVertices();\n\n  this.computeFaceNormals();\n\n  this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n\n  // Project vector onto sphere's surface\n\n  function prepare( vector ) {\n\n    var vertex = vector.normalize().clone();\n    vertex.index = that.vertices.push( vertex ) - 1;\n\n    // Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\n\n    var u = azimuth( vector ) / 2 / Math.PI + 0.5;\n    var v = inclination( vector ) / Math.PI + 0.5;\n    vertex.uv = new THREE.Vector2( u, 1 - v );\n\n    return vertex;\n\n  }\n\n\n  // Approximate a curved face with recursively sub-divided triangles.\n\n  function make( v1, v2, v3 ) {\n\n    var face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n    that.faces.push( face );\n\n    centroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\n\n    var azi = azimuth( centroid );\n\n    that.faceVertexUvs[ 0 ].push( [\n      correctUV( v1.uv, v1, azi ),\n      correctUV( v2.uv, v2, azi ),\n      correctUV( v3.uv, v3, azi )\n    ] );\n\n  }\n\n\n  // Analytically subdivide a face to the required detail level.\n\n  function subdivide( face, detail ) {\n\n    var cols = Math.pow(2, detail);\n    var cells = Math.pow(4, detail);\n    var a = prepare( that.vertices[ face.a ] );\n    var b = prepare( that.vertices[ face.b ] );\n    var c = prepare( that.vertices[ face.c ] );\n    var v = [];\n\n    // Construct all of the vertices for this subdivision.\n\n    for ( var i = 0 ; i <= cols; i ++ ) {\n\n      v[ i ] = [];\n\n      var aj = prepare( a.clone().lerp( c, i / cols ) );\n      var bj = prepare( b.clone().lerp( c, i / cols ) );\n      var rows = cols - i;\n\n      for ( var j = 0; j <= rows; j ++) {\n\n        if ( j == 0 && i == cols ) {\n\n          v[ i ][ j ] = aj;\n\n        } else {\n\n          v[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\n\n        }\n\n      }\n\n    }\n\n    // Construct all of the faces.\n\n    for ( var i = 0; i < cols ; i ++ ) {\n\n      for ( var j = 0; j < 2 * (cols - i) - 1; j ++ ) {\n\n        var k = Math.floor( j / 2 );\n\n        if ( j % 2 == 0 ) {\n\n          make(\n            v[ i ][ k + 1],\n            v[ i + 1 ][ k ],\n            v[ i ][ k ]\n          );\n\n        } else {\n\n          make(\n            v[ i ][ k + 1 ],\n            v[ i + 1][ k + 1],\n            v[ i + 1 ][ k ]\n          );\n\n        }\n\n      }\n\n    }\n\n  }\n\n\n  // Angle around the Y axis, counter-clockwise when looking from above.\n\n  function azimuth( vector ) {\n\n    return Math.atan2( vector.z, - vector.x );\n\n  }\n\n\n  // Angle above the XZ plane.\n\n  function inclination( vector ) {\n\n    return Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n  }\n\n\n  // Texture fixing helper. Spheres have some odd behaviours.\n\n  function correctUV( uv, vector, azimuth ) {\n\n    if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\n    if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\n    return uv.clone();\n\n  }\n\n\n};\n\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/IcosahedronGeometry.js\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n */\n\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\n\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n\n  var t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n  var vertices = [\n    - 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n     0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n     t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n  ];\n\n  var indices = [\n     0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n     1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n     3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n     4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n  ];\n\n  THREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n};\n\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/OctahedronGeometry.js\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n */\n\nTHREE.OctahedronGeometry = function ( radius, detail ) {\n\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n\n  var vertices = [\n    1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0,- 1, 0,    0, 0, 1,    0, 0,- 1\n  ];\n\n  var indices = [\n    0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n  ];\n\n  THREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n};\n\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/TetrahedronGeometry.js\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n */\n\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\n\n  var vertices = [\n     1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n  ];\n\n  var indices = [\n     2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n  ];\n\n  THREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n};\n\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/ParametricGeometry.js\n\n/**\n * @author zz85 / https://github.com/zz85\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n *\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\n *\n */\n\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\n\n  THREE.Geometry.call( this );\n\n  var verts = this.vertices;\n  var faces = this.faces;\n  var uvs = this.faceVertexUvs[ 0 ];\n\n  var i, il, j, p;\n  var u, v;\n\n  var stackCount = stacks + 1;\n  var sliceCount = slices + 1;\n\n  for ( i = 0; i <= stacks; i ++ ) {\n\n    v = i / stacks;\n\n    for ( j = 0; j <= slices; j ++ ) {\n\n      u = j / slices;\n\n      p = func( u, v );\n      verts.push( p );\n\n    }\n  }\n\n  var a, b, c, d;\n  var uva, uvb, uvc, uvd;\n\n  for ( i = 0; i < stacks; i ++ ) {\n\n    for ( j = 0; j < slices; j ++ ) {\n\n      a = i * sliceCount + j;\n      b = i * sliceCount + j + 1;\n      c = (i + 1) * sliceCount + j + 1;\n      d = (i + 1) * sliceCount + j;\n\n      uva = new THREE.Vector2( j / slices, i / stacks );\n      uvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\n      uvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\n      uvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\n\n      faces.push( new THREE.Face3( a, b, d ) );\n      uvs.push( [ uva, uvb, uvd ] );\n\n      faces.push( new THREE.Face3( b, c, d ) );\n      uvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n    }\n\n  }\n\n  // console.log(this);\n\n  // magic bullet\n  // var diff = this.mergeVertices();\n  // console.log('removed ', diff, ' vertices by merging');\n\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n\n};\n\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/helpers/AxisHelper.js\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.AxisHelper = function ( size ) {\n\n  size = size || 1;\n\n  var vertices = new Float32Array( [\n    0, 0, 0,  size, 0, 0,\n    0, 0, 0,  0, size, 0,\n    0, 0, 0,  0, 0, size\n  ] );\n\n  var colors = new Float32Array( [\n    1, 0, 0,  1, 0.6, 0,\n    0, 1, 0,  0.6, 1, 0,\n    0, 0, 1,  0, 0.6, 1\n  ] );\n\n  var geometry = new THREE.BufferGeometry();\n  geometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n  geometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\n\n  var material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\n\n  THREE.Line.call( this, geometry, material, THREE.LinePieces );\n\n};\n\nTHREE.AxisHelper.prototype = Object.create( THREE.Line.prototype );\n\n// File:src/extras/helpers/ArrowHelper.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://exocortex.com\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nTHREE.ArrowHelper = ( function () {\n\n  var lineGeometry = new THREE.Geometry();\n  lineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\n\n  var coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\n  coneGeometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, - 0.5, 0 ) );\n\n  return function ( dir, origin, length, color, headLength, headWidth ) {\n\n    // dir is assumed to be normalized\n\n    THREE.Object3D.call( this );\n\n    if ( color === undefined ) color = 0xffff00;\n    if ( length === undefined ) length = 1;\n    if ( headLength === undefined ) headLength = 0.2 * length;\n    if ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n    this.position.copy( origin );\n\n    this.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\n    this.line.matrixAutoUpdate = false;\n    this.add( this.line );\n\n    this.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\n    this.cone.matrixAutoUpdate = false;\n    this.add( this.cone );\n\n    this.setDirection( dir );\n    this.setLength( length, headLength, headWidth );\n\n  }\n\n}() );\n\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\n\n  var axis = new THREE.Vector3();\n  var radians;\n\n  return function ( dir ) {\n\n    // dir is assumed to be normalized\n\n    if ( dir.y > 0.99999 ) {\n\n      this.quaternion.set( 0, 0, 0, 1 );\n\n    } else if ( dir.y < - 0.99999 ) {\n\n      this.quaternion.set( 1, 0, 0, 0 );\n\n    } else {\n\n      axis.set( dir.z, 0, - dir.x ).normalize();\n\n      radians = Math.acos( dir.y );\n\n      this.quaternion.setFromAxisAngle( axis, radians );\n\n    }\n\n  };\n\n}() );\n\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n  if ( headLength === undefined ) headLength = 0.2 * length;\n  if ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n  this.line.scale.set( 1, length, 1 );\n  this.line.updateMatrix();\n\n  this.cone.scale.set( headWidth, headLength, headWidth );\n  this.cone.position.y = length;\n  this.cone.updateMatrix();\n\n};\n\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\n\n  this.line.material.color.set( color );\n  this.cone.material.color.set( color );\n\n};\n\n// File:src/extras/helpers/BoxHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.BoxHelper = function ( object ) {\n\n  var geometry = new THREE.BufferGeometry();\n  geometry.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( 72 ), 3 ) );\n\n  THREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ), THREE.LinePieces );\n\n  if ( object !== undefined ) {\n\n    this.update( object );\n\n  }\n\n};\n\nTHREE.BoxHelper.prototype = Object.create( THREE.Line.prototype );\n\nTHREE.BoxHelper.prototype.update = function ( object ) {\n\n  var geometry = object.geometry;\n\n  if ( geometry.boundingBox === null ) {\n\n    geometry.computeBoundingBox();\n\n  }\n\n  var min = geometry.boundingBox.min;\n  var max = geometry.boundingBox.max;\n\n  /*\n    5____4\n  1/___0/|\n  | 6__|_7\n  2/___3/\n\n  0: max.x, max.y, max.z\n  1: min.x, max.y, max.z\n  2: min.x, min.y, max.z\n  3: max.x, min.y, max.z\n  4: max.x, max.y, min.z\n  5: min.x, max.y, min.z\n  6: min.x, min.y, min.z\n  7: max.x, min.y, min.z\n  */\n\n  var vertices = this.geometry.attributes.position.array;\n\n  vertices[  0 ] = max.x; vertices[  1 ] = max.y; vertices[  2 ] = max.z;\n  vertices[  3 ] = min.x; vertices[  4 ] = max.y; vertices[  5 ] = max.z;\n\n  vertices[  6 ] = min.x; vertices[  7 ] = max.y; vertices[  8 ] = max.z;\n  vertices[  9 ] = min.x; vertices[ 10 ] = min.y; vertices[ 11 ] = max.z;\n\n  vertices[ 12 ] = min.x; vertices[ 13 ] = min.y; vertices[ 14 ] = max.z;\n  vertices[ 15 ] = max.x; vertices[ 16 ] = min.y; vertices[ 17 ] = max.z;\n\n  vertices[ 18 ] = max.x; vertices[ 19 ] = min.y; vertices[ 20 ] = max.z;\n  vertices[ 21 ] = max.x; vertices[ 22 ] = max.y; vertices[ 23 ] = max.z;\n\n  //\n\n  vertices[ 24 ] = max.x; vertices[ 25 ] = max.y; vertices[ 26 ] = min.z;\n  vertices[ 27 ] = min.x; vertices[ 28 ] = max.y; vertices[ 29 ] = min.z;\n\n  vertices[ 30 ] = min.x; vertices[ 31 ] = max.y; vertices[ 32 ] = min.z;\n  vertices[ 33 ] = min.x; vertices[ 34 ] = min.y; vertices[ 35 ] = min.z;\n\n  vertices[ 36 ] = min.x; vertices[ 37 ] = min.y; vertices[ 38 ] = min.z;\n  vertices[ 39 ] = max.x; vertices[ 40 ] = min.y; vertices[ 41 ] = min.z;\n\n  vertices[ 42 ] = max.x; vertices[ 43 ] = min.y; vertices[ 44 ] = min.z;\n  vertices[ 45 ] = max.x; vertices[ 46 ] = max.y; vertices[ 47 ] = min.z;\n\n  //\n\n  vertices[ 48 ] = max.x; vertices[ 49 ] = max.y; vertices[ 50 ] = max.z;\n  vertices[ 51 ] = max.x; vertices[ 52 ] = max.y; vertices[ 53 ] = min.z;\n\n  vertices[ 54 ] = min.x; vertices[ 55 ] = max.y; vertices[ 56 ] = max.z;\n  vertices[ 57 ] = min.x; vertices[ 58 ] = max.y; vertices[ 59 ] = min.z;\n\n  vertices[ 60 ] = min.x; vertices[ 61 ] = min.y; vertices[ 62 ] = max.z;\n  vertices[ 63 ] = min.x; vertices[ 64 ] = min.y; vertices[ 65 ] = min.z;\n\n  vertices[ 66 ] = max.x; vertices[ 67 ] = min.y; vertices[ 68 ] = max.z;\n  vertices[ 69 ] = max.x; vertices[ 70 ] = min.y; vertices[ 71 ] = min.z;\n\n  this.geometry.attributes.position.needsUpdate = true;\n\n  this.geometry.computeBoundingSphere();\n\n  this.matrixAutoUpdate = false;\n  this.matrixWorld = object.matrixWorld;\n\n};\n\n// File:src/extras/helpers/BoundingBoxHelper.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\n// a helper to show the world-axis-aligned bounding box for an object\n\nTHREE.BoundingBoxHelper = function ( object, hex ) {\n\n  var color = ( hex !== undefined ) ? hex : 0x888888;\n\n  this.object = object;\n\n  this.box = new THREE.Box3();\n\n  THREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\n\n};\n\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\n\nTHREE.BoundingBoxHelper.prototype.update = function () {\n\n  this.box.setFromObject( this.object );\n\n  this.box.size( this.scale );\n\n  this.box.center( this.position );\n\n};\n\n// File:src/extras/helpers/CameraHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n *  - shows frustum, line of sight and up of the camera\n *  - suitable for fast updates\n *  - based on frustum visualization in lightgl.js shadowmap example\n *    http://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nTHREE.CameraHelper = function ( camera ) {\n\n  var geometry = new THREE.Geometry();\n  var material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\n\n  var pointMap = {};\n\n  // colors\n\n  var hexFrustum = 0xffaa00;\n  var hexCone = 0xff0000;\n  var hexUp = 0x00aaff;\n  var hexTarget = 0xffffff;\n  var hexCross = 0x333333;\n\n  // near\n\n  addLine( \"n1\", \"n2\", hexFrustum );\n  addLine( \"n2\", \"n4\", hexFrustum );\n  addLine( \"n4\", \"n3\", hexFrustum );\n  addLine( \"n3\", \"n1\", hexFrustum );\n\n  // far\n\n  addLine( \"f1\", \"f2\", hexFrustum );\n  addLine( \"f2\", \"f4\", hexFrustum );\n  addLine( \"f4\", \"f3\", hexFrustum );\n  addLine( \"f3\", \"f1\", hexFrustum );\n\n  // sides\n\n  addLine( \"n1\", \"f1\", hexFrustum );\n  addLine( \"n2\", \"f2\", hexFrustum );\n  addLine( \"n3\", \"f3\", hexFrustum );\n  addLine( \"n4\", \"f4\", hexFrustum );\n\n  // cone\n\n  addLine( \"p\", \"n1\", hexCone );\n  addLine( \"p\", \"n2\", hexCone );\n  addLine( \"p\", \"n3\", hexCone );\n  addLine( \"p\", \"n4\", hexCone );\n\n  // up\n\n  addLine( \"u1\", \"u2\", hexUp );\n  addLine( \"u2\", \"u3\", hexUp );\n  addLine( \"u3\", \"u1\", hexUp );\n\n  // target\n\n  addLine( \"c\", \"t\", hexTarget );\n  addLine( \"p\", \"c\", hexCross );\n\n  // cross\n\n  addLine( \"cn1\", \"cn2\", hexCross );\n  addLine( \"cn3\", \"cn4\", hexCross );\n\n  addLine( \"cf1\", \"cf2\", hexCross );\n  addLine( \"cf3\", \"cf4\", hexCross );\n\n  function addLine( a, b, hex ) {\n\n    addPoint( a, hex );\n    addPoint( b, hex );\n\n  }\n\n  function addPoint( id, hex ) {\n\n    geometry.vertices.push( new THREE.Vector3() );\n    geometry.colors.push( new THREE.Color( hex ) );\n\n    if ( pointMap[ id ] === undefined ) {\n\n      pointMap[ id ] = [];\n\n    }\n\n    pointMap[ id ].push( geometry.vertices.length - 1 );\n\n  }\n\n  THREE.Line.call( this, geometry, material, THREE.LinePieces );\n\n  this.camera = camera;\n  this.matrixWorld = camera.matrixWorld;\n  this.matrixAutoUpdate = false;\n\n  this.pointMap = pointMap;\n\n  this.update();\n\n};\n\nTHREE.CameraHelper.prototype = Object.create( THREE.Line.prototype );\n\nTHREE.CameraHelper.prototype.update = function () {\n\n  var vector = new THREE.Vector3();\n  var camera = new THREE.Camera();\n  var projector = new THREE.Projector();\n\n  return function () {\n\n    var scope = this;\n\n    var w = 1, h = 1;\n\n    // we need just camera projection matrix\n    // world matrix must be identity\n\n    camera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n    // center / target\n\n    setPoint( \"c\", 0, 0, - 1 );\n    setPoint( \"t\", 0, 0,  1 );\n\n    // near\n\n    setPoint( \"n1\", - w, - h, - 1 );\n    setPoint( \"n2\",  w, - h, - 1 );\n    setPoint( \"n3\", - w,  h, - 1 );\n    setPoint( \"n4\",  w,  h, - 1 );\n\n    // far\n\n    setPoint( \"f1\", - w, - h, 1 );\n    setPoint( \"f2\",  w, - h, 1 );\n    setPoint( \"f3\", - w,  h, 1 );\n    setPoint( \"f4\",  w,  h, 1 );\n\n    // up\n\n    setPoint( \"u1\",  w * 0.7, h * 1.1, - 1 );\n    setPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n    setPoint( \"u3\",        0, h * 2,   - 1 );\n\n    // cross\n\n    setPoint( \"cf1\", - w,  0, 1 );\n    setPoint( \"cf2\",  w,  0, 1 );\n    setPoint( \"cf3\",  0, - h, 1 );\n    setPoint( \"cf4\",  0,  h, 1 );\n\n    setPoint( \"cn1\", - w,  0, - 1 );\n    setPoint( \"cn2\",  w,  0, - 1 );\n    setPoint( \"cn3\",  0, - h, - 1 );\n    setPoint( \"cn4\",  0,  h, - 1 );\n\n    function setPoint( point, x, y, z ) {\n\n      vector.set( x, y, z );\n      projector.unprojectVector( vector, camera );\n\n      var points = scope.pointMap[ point ];\n\n      if ( points !== undefined ) {\n\n        for ( var i = 0, il = points.length; i < il; i ++ ) {\n\n          scope.geometry.vertices[ points[ i ] ].copy( vector );\n\n        }\n\n      }\n\n    }\n\n    this.geometry.verticesNeedUpdate = true;\n\n  };\n\n}();\n\n// File:src/extras/helpers/DirectionalLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.DirectionalLightHelper = function ( light, size ) {\n\n  THREE.Object3D.call( this );\n\n  this.light = light;\n  this.light.updateMatrixWorld();\n\n  this.matrixWorld = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n\n  size = size || 1;\n\n  var geometry = new THREE.Geometry();\n  geometry.vertices.push(\n    new THREE.Vector3( - size,   size, 0 ),\n    new THREE.Vector3(   size,   size, 0 ),\n    new THREE.Vector3(   size, - size, 0 ),\n    new THREE.Vector3( - size, - size, 0 ),\n    new THREE.Vector3( - size,   size, 0 )\n  );\n\n  var material = new THREE.LineBasicMaterial( { fog: false } );\n  material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n  this.lightPlane = new THREE.Line( geometry, material );\n  this.add( this.lightPlane );\n\n  geometry = new THREE.Geometry();\n  geometry.vertices.push(\n    new THREE.Vector3(),\n    new THREE.Vector3()\n  );\n\n  material = new THREE.LineBasicMaterial( { fog: false } );\n  material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n  this.targetLine = new THREE.Line( geometry, material );\n  this.add( this.targetLine );\n\n  this.update();\n\n};\n\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\n\n  this.lightPlane.geometry.dispose();\n  this.lightPlane.material.dispose();\n  this.targetLine.geometry.dispose();\n  this.targetLine.material.dispose();\n};\n\nTHREE.DirectionalLightHelper.prototype.update = function () {\n\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  var v3 = new THREE.Vector3();\n\n  return function () {\n\n    v1.setFromMatrixPosition( this.light.matrixWorld );\n    v2.setFromMatrixPosition( this.light.target.matrixWorld );\n    v3.subVectors( v2, v1 );\n\n    this.lightPlane.lookAt( v3 );\n    this.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n    this.targetLine.geometry.vertices[ 1 ].copy( v3 );\n    this.targetLine.geometry.verticesNeedUpdate = true;\n    this.targetLine.material.color.copy( this.lightPlane.material.color );\n\n  }\n\n}();\n\n\n// File:src/extras/helpers/EdgesHelper.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.EdgesHelper = function ( object, hex ) {\n\n  var color = ( hex !== undefined ) ? hex : 0xffffff;\n\n  var edge = [ 0, 0 ], hash = {};\n  var sortFunction = function ( a, b ) { return a - b };\n\n  var keys = [ 'a', 'b', 'c' ];\n  var geometry = new THREE.BufferGeometry();\n\n  var geometry2 = object.geometry.clone();\n\n  geometry2.mergeVertices();\n  geometry2.computeFaceNormals();\n\n  var vertices = geometry2.vertices;\n  var faces = geometry2.faces;\n  var numEdges = 0;\n\n  for ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n    var face = faces[ i ];\n\n    for ( var j = 0; j < 3; j ++ ) {\n\n      edge[ 0 ] = face[ keys[ j ] ];\n      edge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n      edge.sort( sortFunction );\n\n      var key = edge.toString();\n\n      if ( hash[ key ] === undefined ) {\n\n        hash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\n        numEdges ++;\n\n      } else {\n\n        hash[ key ].face2 = i;\n\n      }\n\n    }\n\n  }\n\n  geometry.addAttribute( 'position', new THREE.Float32Attribute( numEdges * 2 * 3, 3 ) );\n\n  var coords = geometry.attributes.position.array;\n\n  var index = 0;\n\n  for ( var key in hash ) {\n\n    var h = hash[ key ];\n\n    if ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) < 0.9999 ) { // hardwired const OK\n\n      var vertex = vertices[ h.vert1 ];\n      coords[ index ++ ] = vertex.x;\n      coords[ index ++ ] = vertex.y;\n      coords[ index ++ ] = vertex.z;\n\n      vertex = vertices[ h.vert2 ];\n      coords[ index ++ ] = vertex.x;\n      coords[ index ++ ] = vertex.y;\n      coords[ index ++ ] = vertex.z;\n\n    }\n\n  }\n\n  THREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ), THREE.LinePieces );\n\n  this.matrixAutoUpdate = false;\n  this.matrixWorld = object.matrixWorld;\n\n};\n\nTHREE.EdgesHelper.prototype = Object.create( THREE.Line.prototype );\n\n// File:src/extras/helpers/FaceNormalsHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\n\n  this.object = object;\n\n  this.size = ( size !== undefined ) ? size : 1;\n\n  var color = ( hex !== undefined ) ? hex : 0xffff00;\n\n  var width = ( linewidth !== undefined ) ? linewidth : 1;\n\n  var geometry = new THREE.Geometry();\n\n  var faces = this.object.geometry.faces;\n\n  for ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n    geometry.vertices.push( new THREE.Vector3(), new THREE.Vector3() );\n\n  }\n\n  THREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\n\n  this.matrixAutoUpdate = false;\n\n  this.normalMatrix = new THREE.Matrix3();\n\n  this.update();\n\n};\n\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.Line.prototype );\n\nTHREE.FaceNormalsHelper.prototype.update = function () {\n\n  var vertices = this.geometry.vertices;\n\n  var object = this.object;\n  var objectVertices = object.geometry.vertices;\n  var objectFaces = object.geometry.faces;\n  var objectWorldMatrix = object.matrixWorld;\n\n  object.updateMatrixWorld( true );\n\n  this.normalMatrix.getNormalMatrix( objectWorldMatrix );\n\n  for ( var i = 0, i2 = 0, l = objectFaces.length; i < l; i ++, i2 += 2 ) {\n\n    var face = objectFaces[ i ];\n\n    vertices[ i2 ].copy( objectVertices[ face.a ] )\n      .add( objectVertices[ face.b ] )\n      .add( objectVertices[ face.c ] )\n      .divideScalar( 3 )\n      .applyMatrix4( objectWorldMatrix );\n\n    vertices[ i2 + 1 ].copy( face.normal )\n      .applyMatrix3( this.normalMatrix )\n      .normalize()\n      .multiplyScalar( this.size )\n      .add( vertices[ i2 ] );\n\n  }\n\n  this.geometry.verticesNeedUpdate = true;\n\n  return this;\n\n};\n\n\n// File:src/extras/helpers/GridHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.GridHelper = function ( size, step ) {\n\n  var geometry = new THREE.Geometry();\n  var material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\n\n  this.color1 = new THREE.Color( 0x444444 );\n  this.color2 = new THREE.Color( 0x888888 );\n\n  for ( var i = - size; i <= size; i += step ) {\n\n    geometry.vertices.push(\n      new THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\n      new THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\n    );\n\n    var color = i === 0 ? this.color1 : this.color2;\n\n    geometry.colors.push( color, color, color, color );\n\n  }\n\n  THREE.Line.call( this, geometry, material, THREE.LinePieces );\n\n};\n\nTHREE.GridHelper.prototype = Object.create( THREE.Line.prototype );\n\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\n\n  this.color1.set( colorCenterLine );\n  this.color2.set( colorGrid );\n\n  this.geometry.colorsNeedUpdate = true;\n\n}\n\n// File:src/extras/helpers/HemisphereLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.HemisphereLightHelper = function ( light, sphereSize, arrowLength, domeSize ) {\n\n  THREE.Object3D.call( this );\n\n  this.light = light;\n  this.light.updateMatrixWorld();\n\n  this.matrixWorld = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n\n  this.colors = [ new THREE.Color(), new THREE.Color() ];\n\n  var geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\n  geometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );\n\n  for ( var i = 0, il = 8; i < il; i ++ ) {\n\n    geometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\n\n  }\n\n  var material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\n\n  this.lightSphere = new THREE.Mesh( geometry, material );\n  this.add( this.lightSphere );\n\n  this.update();\n\n};\n\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\n  this.lightSphere.geometry.dispose();\n  this.lightSphere.material.dispose();\n};\n\nTHREE.HemisphereLightHelper.prototype.update = function () {\n\n  var vector = new THREE.Vector3();\n\n  return function () {\n\n    this.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\n    this.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\n\n    this.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n    this.lightSphere.geometry.colorsNeedUpdate = true;\n\n  }\n\n}();\n\n\n// File:src/extras/helpers/PointLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.PointLightHelper = function ( light, sphereSize ) {\n\n  this.light = light;\n  this.light.updateMatrixWorld();\n\n  var geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\n  var material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\n  material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n  THREE.Mesh.call( this, geometry, material );\n\n  this.matrixWorld = this.light.matrixWorld;\n  this.matrixAutoUpdate = false;\n\n  /*\n  var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n  var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n  this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n  this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n  var d = light.distance;\n\n  if ( d === 0.0 ) {\n\n    this.lightDistance.visible = false;\n\n  } else {\n\n    this.lightDistance.scale.set( d, d, d );\n\n  }\n\n  this.add( this.lightDistance );\n  */\n\n};\n\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\n\nTHREE.PointLightHelper.prototype.dispose = function () {\n\n  this.geometry.dispose();\n  this.material.dispose();\n};\n\nTHREE.PointLightHelper.prototype.update = function () {\n\n  this.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n  /*\n  var d = this.light.distance;\n\n  if ( d === 0.0 ) {\n\n    this.lightDistance.visible = false;\n\n  } else {\n\n    this.lightDistance.visible = true;\n    this.lightDistance.scale.set( d, d, d );\n\n  }\n  */\n\n};\n\n\n// File:src/extras/helpers/SkeletonHelper.js\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n */\n\nTHREE.SkeletonHelper = function ( object ) {\n\n  this.bones = this.getBoneList( object );\n\n  var geometry = new THREE.Geometry();\n\n  for ( var i = 0; i < this.bones.length; i ++ ) {\n\n    var bone = this.bones[ i ];\n\n    if ( bone.parent instanceof THREE.Bone ) {\n\n      geometry.vertices.push( new THREE.Vector3() );\n      geometry.vertices.push( new THREE.Vector3() );\n      geometry.colors.push( new THREE.Color( 0, 0, 1 ) );\n      geometry.colors.push( new THREE.Color( 0, 1, 0 ) );\n\n    }\n\n  }\n\n  var material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n  THREE.Line.call( this, geometry, material, THREE.LinePieces );\n\n  this.root = object;\n\n  this.matrixWorld = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n\n  this.update();\n\n};\n\n\nTHREE.SkeletonHelper.prototype = Object.create( THREE.Line.prototype );\n\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\n\n  var boneList = [];\n\n  if ( object instanceof THREE.Bone ) {\n\n    boneList.push( object );\n\n  }\n\n  for ( var i = 0; i < object.children.length; i ++ ) {\n\n    boneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\n\n  }\n\n  return boneList;\n\n};\n\nTHREE.SkeletonHelper.prototype.update = function () {\n\n  var geometry = this.geometry;\n\n  var matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\n\n  var boneMatrix = new THREE.Matrix4();\n\n  var j = 0;\n\n  for ( var i = 0; i < this.bones.length; i ++ ) {\n\n    var bone = this.bones[ i ];\n\n    if ( bone.parent instanceof THREE.Bone ) {\n\n      boneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n      geometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\n\n      boneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n      geometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\n\n      j += 2;\n\n    }\n\n  }\n\n  geometry.verticesNeedUpdate = true;\n\n  geometry.computeBoundingSphere();\n\n};\n\n// File:src/extras/helpers/SpotLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.SpotLightHelper = function ( light ) {\n\n  THREE.Object3D.call( this );\n\n  this.light = light;\n  this.light.updateMatrixWorld();\n\n  this.matrixWorld = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n\n  var geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\n\n  geometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, - 0.5, 0 ) );\n  geometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );\n\n  var material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\n\n  this.cone = new THREE.Mesh( geometry, material );\n  this.add( this.cone );\n\n  this.update();\n\n};\n\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.SpotLightHelper.prototype.dispose = function () {\n  this.cone.geometry.dispose();\n  this.cone.material.dispose();\n};\n\nTHREE.SpotLightHelper.prototype.update = function () {\n\n  var vector = new THREE.Vector3();\n  var vector2 = new THREE.Vector3();\n\n  return function () {\n\n    var coneLength = this.light.distance ? this.light.distance : 10000;\n    var coneWidth = coneLength * Math.tan( this.light.angle );\n\n    this.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n    vector.setFromMatrixPosition( this.light.matrixWorld );\n    vector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n    this.cone.lookAt( vector2.sub( vector ) );\n\n    this.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n  };\n\n}();\n\n// File:src/extras/helpers/VertexNormalsHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\n\n  this.object = object;\n\n  this.size = ( size !== undefined ) ? size : 1;\n\n  var color = ( hex !== undefined ) ? hex : 0xff0000;\n\n  var width = ( linewidth !== undefined ) ? linewidth : 1;\n\n  var geometry = new THREE.Geometry();\n\n  var vertices = object.geometry.vertices;\n\n  var faces = object.geometry.faces;\n\n  for ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n    var face = faces[ i ];\n\n    for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n      geometry.vertices.push( new THREE.Vector3(), new THREE.Vector3() );\n\n    }\n\n  }\n\n  THREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\n\n  this.matrixAutoUpdate = false;\n\n  this.normalMatrix = new THREE.Matrix3();\n\n  this.update();\n\n};\n\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.Line.prototype );\n\nTHREE.VertexNormalsHelper.prototype.update = ( function ( object ) {\n\n  var v1 = new THREE.Vector3();\n\n  return function( object ) {\n\n    var keys = [ 'a', 'b', 'c', 'd' ];\n\n    this.object.updateMatrixWorld( true );\n\n    this.normalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n    var vertices = this.geometry.vertices;\n\n    var verts = this.object.geometry.vertices;\n\n    var faces = this.object.geometry.faces;\n\n    var worldMatrix = this.object.matrixWorld;\n\n    var idx = 0;\n\n    for ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n      var face = faces[ i ];\n\n      for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n        var vertexId = face[ keys[ j ] ];\n        var vertex = verts[ vertexId ];\n\n        var normal = face.vertexNormals[ j ];\n\n        vertices[ idx ].copy( vertex ).applyMatrix4( worldMatrix );\n\n        v1.copy( normal ).applyMatrix3( this.normalMatrix ).normalize().multiplyScalar( this.size );\n\n        v1.add( vertices[ idx ] );\n        idx = idx + 1;\n\n        vertices[ idx ].copy( v1 );\n        idx = idx + 1;\n\n      }\n\n    }\n\n    this.geometry.verticesNeedUpdate = true;\n\n    return this;\n\n  }\n\n}());\n\n// File:src/extras/helpers/VertexTangentsHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.VertexTangentsHelper = function ( object, size, hex, linewidth ) {\n\n  this.object = object;\n\n  this.size = ( size !== undefined ) ? size : 1;\n\n  var color = ( hex !== undefined ) ? hex : 0x0000ff;\n\n  var width = ( linewidth !== undefined ) ? linewidth : 1;\n\n  var geometry = new THREE.Geometry();\n\n  var vertices = object.geometry.vertices;\n\n  var faces = object.geometry.faces;\n\n  for ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n    var face = faces[ i ];\n\n    for ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {\n\n      geometry.vertices.push( new THREE.Vector3() );\n      geometry.vertices.push( new THREE.Vector3() );\n\n    }\n\n  }\n\n  THREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\n\n  this.matrixAutoUpdate = false;\n\n  this.update();\n\n};\n\nTHREE.VertexTangentsHelper.prototype = Object.create( THREE.Line.prototype );\n\nTHREE.VertexTangentsHelper.prototype.update = ( function ( object ) {\n\n  var v1 = new THREE.Vector3();\n\n  return function( object ) {\n\n    var keys = [ 'a', 'b', 'c', 'd' ];\n\n    this.object.updateMatrixWorld( true );\n\n    var vertices = this.geometry.vertices;\n\n    var verts = this.object.geometry.vertices;\n\n    var faces = this.object.geometry.faces;\n\n    var worldMatrix = this.object.matrixWorld;\n\n    var idx = 0;\n\n    for ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n      var face = faces[ i ];\n\n      for ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {\n\n        var vertexId = face[ keys[ j ] ];\n        var vertex = verts[ vertexId ];\n\n        var tangent = face.vertexTangents[ j ];\n\n        vertices[ idx ].copy( vertex ).applyMatrix4( worldMatrix );\n\n        v1.copy( tangent ).transformDirection( worldMatrix ).multiplyScalar( this.size );\n\n        v1.add( vertices[ idx ] );\n        idx = idx + 1;\n\n        vertices[ idx ].copy( v1 );\n        idx = idx + 1;\n\n      }\n\n    }\n\n    this.geometry.verticesNeedUpdate = true;\n\n    return this;\n\n  }\n\n}());\n\n// File:src/extras/helpers/WireframeHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.WireframeHelper = function ( object, hex ) {\n\n  var color = ( hex !== undefined ) ? hex : 0xffffff;\n\n  var edge = [ 0, 0 ], hash = {};\n  var sortFunction = function ( a, b ) { return a - b };\n\n  var keys = [ 'a', 'b', 'c' ];\n  var geometry = new THREE.BufferGeometry();\n\n  if ( object.geometry instanceof THREE.Geometry ) {\n\n    var vertices = object.geometry.vertices;\n    var faces = object.geometry.faces;\n    var numEdges = 0;\n\n    // allocate maximal size\n    var edges = new Uint32Array( 6 * faces.length );\n\n    for ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n      var face = faces[ i ];\n\n      for ( var j = 0; j < 3; j ++ ) {\n\n        edge[ 0 ] = face[ keys[ j ] ];\n        edge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n        edge.sort( sortFunction );\n\n        var key = edge.toString();\n\n        if ( hash[ key ] === undefined ) {\n\n          edges[ 2 * numEdges ] = edge[ 0 ];\n          edges[ 2 * numEdges + 1 ] = edge[ 1 ];\n          hash[ key ] = true;\n          numEdges ++;\n\n        }\n\n      }\n\n    }\n\n    var coords = new Float32Array( numEdges * 2 * 3 );\n\n    for ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n      for ( var j = 0; j < 2; j ++ ) {\n\n        var vertex = vertices[ edges [ 2 * i + j] ];\n\n        var index = 6 * i + 3 * j;\n        coords[ index + 0 ] = vertex.x;\n        coords[ index + 1 ] = vertex.y;\n        coords[ index + 2 ] = vertex.z;\n\n      }\n\n    }\n\n    geometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n  } else if ( object.geometry instanceof THREE.BufferGeometry ) {\n\n    if ( object.geometry.attributes.index !== undefined ) { // Indexed BufferGeometry\n\n      var vertices = object.geometry.attributes.position.array;\n      var indices = object.geometry.attributes.index.array;\n      var offsets = object.geometry.offsets;\n      var numEdges = 0;\n\n      // allocate maximal size\n      var edges = new Uint32Array( 2 * indices.length );\n\n      for ( var o = 0, ol = offsets.length; o < ol; ++ o ) {\n\n        var start = offsets[ o ].start;\n        var count = offsets[ o ].count;\n        var index = offsets[ o ].index;\n\n        for ( var i = start, il = start + count; i < il; i += 3 ) {\n\n          for ( var j = 0; j < 3; j ++ ) {\n\n            edge[ 0 ] = index + indices[ i + j ];\n            edge[ 1 ] = index + indices[ i + ( j + 1 ) % 3 ];\n            edge.sort( sortFunction );\n\n            var key = edge.toString();\n\n            if ( hash[ key ] === undefined ) {\n\n              edges[ 2 * numEdges ] = edge[ 0 ];\n              edges[ 2 * numEdges + 1 ] = edge[ 1 ];\n              hash[ key ] = true;\n              numEdges ++;\n\n            }\n\n          }\n\n        }\n\n      }\n\n      var coords = new Float32Array( numEdges * 2 * 3 );\n\n      for ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n        for ( var j = 0; j < 2; j ++ ) {\n\n          var index = 6 * i + 3 * j;\n          var index2 = 3 * edges[ 2 * i + j];\n          coords[ index + 0 ] = vertices[ index2 ];\n          coords[ index + 1 ] = vertices[ index2 + 1 ];\n          coords[ index + 2 ] = vertices[ index2 + 2 ];\n\n        }\n\n      }\n\n      geometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n    } else { // non-indexed BufferGeometry\n\n      var vertices = object.geometry.attributes.position.array;\n      var numEdges = vertices.length / 3;\n      var numTris = numEdges / 3;\n\n      var coords = new Float32Array( numEdges * 2 * 3 );\n\n      for ( var i = 0, l = numTris; i < l; i ++ ) {\n\n        for ( var j = 0; j < 3; j ++ ) {\n\n          var index = 18 * i + 6 * j;\n\n          var index1 = 9 * i + 3 * j;\n          coords[ index + 0 ] = vertices[ index1 ];\n          coords[ index + 1 ] = vertices[ index1 + 1 ];\n          coords[ index + 2 ] = vertices[ index1 + 2 ];\n\n          var index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\n          coords[ index + 3 ] = vertices[ index2 ];\n          coords[ index + 4 ] = vertices[ index2 + 1 ];\n          coords[ index + 5 ] = vertices[ index2 + 2 ];\n\n        }\n\n      }\n\n      geometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n    }\n\n  }\n\n  THREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ), THREE.LinePieces );\n\n  this.matrixAutoUpdate = false;\n  this.matrixWorld = object.matrixWorld;\n\n};\n\nTHREE.WireframeHelper.prototype = Object.create( THREE.Line.prototype );\n\n// File:src/extras/objects/ImmediateRenderObject.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ImmediateRenderObject = function () {\n\n  THREE.Object3D.call( this );\n\n  this.render = function ( renderCallback ) {};\n\n};\n\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\n\n// File:src/extras/objects/LensFlare.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\n\n  THREE.Object3D.call( this );\n\n  this.lensFlares = [];\n\n  this.positionScreen = new THREE.Vector3();\n  this.customUpdateCallback = undefined;\n\n  if( texture !== undefined ) {\n\n    this.add( texture, size, distance, blending, color );\n\n  }\n\n};\n\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\n\n\n/*\n * Add: adds another flare\n */\n\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\n\n  if( size === undefined ) size = - 1;\n  if( distance === undefined ) distance = 0;\n  if( opacity === undefined ) opacity = 1;\n  if( color === undefined ) color = new THREE.Color( 0xffffff );\n  if( blending === undefined ) blending = THREE.NormalBlending;\n\n  distance = Math.min( distance, Math.max( 0, distance ) );\n\n  this.lensFlares.push( { texture: texture,       // THREE.Texture\n                        size: size,         // size in pixels (-1 = use texture.width)\n                        distance: distance,     // distance (0-1) from light source (0=at light source)\n                        x: 0, y: 0, z: 0,     // screen position (-1 => 1) z = 0 is ontop z = 1 is back\n                        scale: 1,           // scale\n                        rotation: 1,        // rotation\n                        opacity: opacity,     // opacity\n              color: color,       // color\n                        blending: blending } );   // blending\n\n};\n\n\n/*\n * Update lens flares update positions on all flares based on the screen position\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n */\n\nTHREE.LensFlare.prototype.updateLensFlares = function () {\n\n  var f, fl = this.lensFlares.length;\n  var flare;\n  var vecX = - this.positionScreen.x * 2;\n  var vecY = - this.positionScreen.y * 2;\n\n  for( f = 0; f < fl; f ++ ) {\n\n    flare = this.lensFlares[ f ];\n\n    flare.x = this.positionScreen.x + vecX * flare.distance;\n    flare.y = this.positionScreen.y + vecY * flare.distance;\n\n    flare.wantedRotation = flare.x * Math.PI * 0.25;\n    flare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n  }\n\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n// File:src/extras/objects/MorphBlendMesh.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MorphBlendMesh = function( geometry, material ) {\n\n  THREE.Mesh.call( this, geometry, material );\n\n  this.animationsMap = {};\n  this.animationsList = [];\n\n  // prepare default animation\n  // (all frames played together in 1 second)\n\n  var numFrames = this.geometry.morphTargets.length;\n\n  var name = \"__default\";\n\n  var startFrame = 0;\n  var endFrame = numFrames - 1;\n\n  var fps = numFrames / 1;\n\n  this.createAnimation( name, startFrame, endFrame, fps );\n  this.setAnimationWeight( name, 1 );\n\n};\n\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\n\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\n\n  var animation = {\n\n    startFrame: start,\n    endFrame: end,\n\n    length: end - start + 1,\n\n    fps: fps,\n    duration: ( end - start ) / fps,\n\n    lastFrame: 0,\n    currentFrame: 0,\n\n    active: false,\n\n    time: 0,\n    direction: 1,\n    weight: 1,\n\n    directionBackwards: false,\n    mirroredLoop: false\n\n  };\n\n  this.animationsMap[ name ] = animation;\n  this.animationsList.push( animation );\n\n};\n\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\n\n  var pattern = /([a-z]+)_?(\\d+)/;\n\n  var firstAnimation, frameRanges = {};\n\n  var geometry = this.geometry;\n\n  for ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\n\n    var morph = geometry.morphTargets[ i ];\n    var chunks = morph.name.match( pattern );\n\n    if ( chunks && chunks.length > 1 ) {\n\n      var name = chunks[ 1 ];\n      var num = chunks[ 2 ];\n\n      if ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\n\n      var range = frameRanges[ name ];\n\n      if ( i < range.start ) range.start = i;\n      if ( i > range.end ) range.end = i;\n\n      if ( ! firstAnimation ) firstAnimation = name;\n\n    }\n\n  }\n\n  for ( var name in frameRanges ) {\n\n    var range = frameRanges[ name ];\n    this.createAnimation( name, range.start, range.end, fps );\n\n  }\n\n  this.firstAnimation = firstAnimation;\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\n\n  var animation = this.animationsMap[ name ];\n\n  if ( animation ) {\n\n    animation.direction = 1;\n    animation.directionBackwards = false;\n\n  }\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\n\n  var animation = this.animationsMap[ name ];\n\n  if ( animation ) {\n\n    animation.direction = - 1;\n    animation.directionBackwards = true;\n\n  }\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\n\n  var animation = this.animationsMap[ name ];\n\n  if ( animation ) {\n\n    animation.fps = fps;\n    animation.duration = ( animation.end - animation.start ) / animation.fps;\n\n  }\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\n\n  var animation = this.animationsMap[ name ];\n\n  if ( animation ) {\n\n    animation.duration = duration;\n    animation.fps = ( animation.end - animation.start ) / animation.duration;\n\n  }\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\n\n  var animation = this.animationsMap[ name ];\n\n  if ( animation ) {\n\n    animation.weight = weight;\n\n  }\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\n\n  var animation = this.animationsMap[ name ];\n\n  if ( animation ) {\n\n    animation.time = time;\n\n  }\n\n};\n\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\n\n  var time = 0;\n\n  var animation = this.animationsMap[ name ];\n\n  if ( animation ) {\n\n    time = animation.time;\n\n  }\n\n  return time;\n\n};\n\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\n\n  var duration = - 1;\n\n  var animation = this.animationsMap[ name ];\n\n  if ( animation ) {\n\n    duration = animation.duration;\n\n  }\n\n  return duration;\n\n};\n\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\n\n  var animation = this.animationsMap[ name ];\n\n  if ( animation ) {\n\n    animation.time = 0;\n    animation.active = true;\n\n  } else {\n\n    console.warn( \"animation[\" + name + \"] undefined\" );\n\n  }\n\n};\n\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\n\n  var animation = this.animationsMap[ name ];\n\n  if ( animation ) {\n\n    animation.active = false;\n\n  }\n\n};\n\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\n\n  for ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\n\n    var animation = this.animationsList[ i ];\n\n    if ( ! animation.active ) continue;\n\n    var frameTime = animation.duration / animation.length;\n\n    animation.time += animation.direction * delta;\n\n    if ( animation.mirroredLoop ) {\n\n      if ( animation.time > animation.duration || animation.time < 0 ) {\n\n        animation.direction *= - 1;\n\n        if ( animation.time > animation.duration ) {\n\n          animation.time = animation.duration;\n          animation.directionBackwards = true;\n\n        }\n\n        if ( animation.time < 0 ) {\n\n          animation.time = 0;\n          animation.directionBackwards = false;\n\n        }\n\n      }\n\n    } else {\n\n      animation.time = animation.time % animation.duration;\n\n      if ( animation.time < 0 ) animation.time += animation.duration;\n\n    }\n\n    var keyframe = animation.startFrame + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\n    var weight = animation.weight;\n\n    if ( keyframe !== animation.currentFrame ) {\n\n      this.morphTargetInfluences[ animation.lastFrame ] = 0;\n      this.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\n\n      this.morphTargetInfluences[ keyframe ] = 0;\n\n      animation.lastFrame = animation.currentFrame;\n      animation.currentFrame = keyframe;\n\n    }\n\n    var mix = ( animation.time % frameTime ) / frameTime;\n\n    if ( animation.directionBackwards ) mix = 1 - mix;\n\n    this.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\n    this.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\n\n  }\n\n};\n\n// File:src/extras/renderers/plugins/LensFlarePlugin.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.LensFlarePlugin = function () {\n\n  var flares = [];\n\n  var _gl, _renderer, _precision, _lensFlare = {};\n\n  this.init = function ( renderer ) {\n\n    _gl = renderer.context;\n    _renderer = renderer;\n\n    _precision = renderer.getPrecision();\n\n    _lensFlare.vertices = new Float32Array( 8 + 8 );\n    _lensFlare.faces = new Uint16Array( 6 );\n\n    var i = 0;\n    _lensFlare.vertices[ i ++ ] = - 1; _lensFlare.vertices[ i ++ ] = - 1; // vertex\n    _lensFlare.vertices[ i ++ ] = 0;  _lensFlare.vertices[ i ++ ] = 0;  // uv... etc.\n\n    _lensFlare.vertices[ i ++ ] = 1;  _lensFlare.vertices[ i ++ ] = - 1;\n    _lensFlare.vertices[ i ++ ] = 1;  _lensFlare.vertices[ i ++ ] = 0;\n\n    _lensFlare.vertices[ i ++ ] = 1;  _lensFlare.vertices[ i ++ ] = 1;\n    _lensFlare.vertices[ i ++ ] = 1;  _lensFlare.vertices[ i ++ ] = 1;\n\n    _lensFlare.vertices[ i ++ ] = - 1; _lensFlare.vertices[ i ++ ] = 1;\n    _lensFlare.vertices[ i ++ ] = 0;  _lensFlare.vertices[ i ++ ] = 1;\n\n    i = 0;\n    _lensFlare.faces[ i ++ ] = 0; _lensFlare.faces[ i ++ ] = 1; _lensFlare.faces[ i ++ ] = 2;\n    _lensFlare.faces[ i ++ ] = 0; _lensFlare.faces[ i ++ ] = 2; _lensFlare.faces[ i ++ ] = 3;\n\n    // buffers\n\n    _lensFlare.vertexBuffer     = _gl.createBuffer();\n    _lensFlare.elementBuffer    = _gl.createBuffer();\n\n    _gl.bindBuffer( _gl.ARRAY_BUFFER, _lensFlare.vertexBuffer );\n    _gl.bufferData( _gl.ARRAY_BUFFER, _lensFlare.vertices, _gl.STATIC_DRAW );\n\n    _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, _lensFlare.elementBuffer );\n    _gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, _lensFlare.faces, _gl.STATIC_DRAW );\n\n    // textures\n\n    _lensFlare.tempTexture      = _gl.createTexture();\n    _lensFlare.occlusionTexture = _gl.createTexture();\n\n    _gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.tempTexture );\n    _gl.texImage2D( _gl.TEXTURE_2D, 0, _gl.RGB, 16, 16, 0, _gl.RGB, _gl.UNSIGNED_BYTE, null );\n    _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n    _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n    _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MAG_FILTER, _gl.NEAREST );\n    _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MIN_FILTER, _gl.NEAREST );\n\n    _gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.occlusionTexture );\n    _gl.texImage2D( _gl.TEXTURE_2D, 0, _gl.RGBA, 16, 16, 0, _gl.RGBA, _gl.UNSIGNED_BYTE, null );\n    _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n    _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n    _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MAG_FILTER, _gl.NEAREST );\n    _gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MIN_FILTER, _gl.NEAREST );\n\n    if ( _gl.getParameter( _gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) <= 0 ) {\n\n      _lensFlare.hasVertexTexture = false;\n      _lensFlare.program = createProgram( THREE.ShaderFlares[ \"lensFlare\" ], _precision );\n\n    } else {\n\n      _lensFlare.hasVertexTexture = true;\n      _lensFlare.program = createProgram( THREE.ShaderFlares[ \"lensFlareVertexTexture\" ], _precision );\n\n    }\n\n    _lensFlare.attributes = {};\n    _lensFlare.uniforms = {};\n\n    _lensFlare.attributes.vertex       = _gl.getAttribLocation ( _lensFlare.program, \"position\" );\n    _lensFlare.attributes.uv           = _gl.getAttribLocation ( _lensFlare.program, \"uv\" );\n\n    _lensFlare.uniforms.renderType     = _gl.getUniformLocation( _lensFlare.program, \"renderType\" );\n    _lensFlare.uniforms.map            = _gl.getUniformLocation( _lensFlare.program, \"map\" );\n    _lensFlare.uniforms.occlusionMap   = _gl.getUniformLocation( _lensFlare.program, \"occlusionMap\" );\n    _lensFlare.uniforms.opacity        = _gl.getUniformLocation( _lensFlare.program, \"opacity\" );\n    _lensFlare.uniforms.color          = _gl.getUniformLocation( _lensFlare.program, \"color\" );\n    _lensFlare.uniforms.scale          = _gl.getUniformLocation( _lensFlare.program, \"scale\" );\n    _lensFlare.uniforms.rotation       = _gl.getUniformLocation( _lensFlare.program, \"rotation\" );\n    _lensFlare.uniforms.screenPosition = _gl.getUniformLocation( _lensFlare.program, \"screenPosition\" );\n\n  };\n\n\n  /*\n   * Render lens flares\n   * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n   *         reads these back and calculates occlusion.\n   *         Then _lensFlare.update_lensFlares() is called to re-position and\n   *         update transparency of flares. Then they are rendered.\n   *\n   */\n\n  this.render = function ( scene, camera, viewportWidth, viewportHeight ) {\n\n    flares.length = 0;\n\n    scene.traverseVisible( function ( child ) {\n\n      if ( child instanceof THREE.LensFlare ) {\n\n        flares.push( child );\n\n      }\n\n    } );\n\n    if ( flares.length === 0 ) return;\n\n    var tempPosition = new THREE.Vector3();\n\n    var invAspect = viewportHeight / viewportWidth,\n      halfViewportWidth = viewportWidth * 0.5,\n      halfViewportHeight = viewportHeight * 0.5;\n\n    var size = 16 / viewportHeight,\n      scale = new THREE.Vector2( size * invAspect, size );\n\n    var screenPosition = new THREE.Vector3( 1, 1, 0 ),\n      screenPositionPixels = new THREE.Vector2( 1, 1 );\n\n    var uniforms = _lensFlare.uniforms,\n      attributes = _lensFlare.attributes;\n\n    // set _lensFlare program and reset blending\n\n    _gl.useProgram( _lensFlare.program );\n\n    _gl.enableVertexAttribArray( _lensFlare.attributes.vertex );\n    _gl.enableVertexAttribArray( _lensFlare.attributes.uv );\n\n    // loop through all lens flares to update their occlusion and positions\n    // setup gl and common used attribs/unforms\n\n    _gl.uniform1i( uniforms.occlusionMap, 0 );\n    _gl.uniform1i( uniforms.map, 1 );\n\n    _gl.bindBuffer( _gl.ARRAY_BUFFER, _lensFlare.vertexBuffer );\n    _gl.vertexAttribPointer( attributes.vertex, 2, _gl.FLOAT, false, 2 * 8, 0 );\n    _gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 2 * 8, 8 );\n\n    _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, _lensFlare.elementBuffer );\n\n    _gl.disable( _gl.CULL_FACE );\n    _gl.depthMask( false );\n\n    for ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n      size = 16 / viewportHeight;\n      scale.set( size * invAspect, size );\n\n      // calc object screen position\n\n      var flare = flares[ i ];\n\n      tempPosition.set( flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14] );\n\n      tempPosition.applyMatrix4( camera.matrixWorldInverse );\n      tempPosition.applyProjection( camera.projectionMatrix );\n\n      // setup arrays for gl programs\n\n      screenPosition.copy( tempPosition )\n\n      screenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\n      screenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\n\n      // screen cull\n\n      if ( _lensFlare.hasVertexTexture || (\n        screenPositionPixels.x > 0 &&\n        screenPositionPixels.x < viewportWidth &&\n        screenPositionPixels.y > 0 &&\n        screenPositionPixels.y < viewportHeight ) ) {\n\n        // save current RGB to temp texture\n\n        _gl.activeTexture( _gl.TEXTURE1 );\n        _gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.tempTexture );\n        _gl.copyTexImage2D( _gl.TEXTURE_2D, 0, _gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\n\n\n        // render pink quad\n\n        _gl.uniform1i( uniforms.renderType, 0 );\n        _gl.uniform2f( uniforms.scale, scale.x, scale.y );\n        _gl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n        _gl.disable( _gl.BLEND );\n        _gl.enable( _gl.DEPTH_TEST );\n\n        _gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );\n\n\n        // copy result to occlusionMap\n\n        _gl.activeTexture( _gl.TEXTURE0 );\n        _gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.occlusionTexture );\n        _gl.copyTexImage2D( _gl.TEXTURE_2D, 0, _gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\n\n\n        // restore graphics\n\n        _gl.uniform1i( uniforms.renderType, 1 );\n        _gl.disable( _gl.DEPTH_TEST );\n\n        _gl.activeTexture( _gl.TEXTURE1 );\n        _gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.tempTexture );\n        _gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );\n\n\n        // update object positions\n\n        flare.positionScreen.copy( screenPosition )\n\n        if ( flare.customUpdateCallback ) {\n\n          flare.customUpdateCallback( flare );\n\n        } else {\n\n          flare.updateLensFlares();\n\n        }\n\n        // render flares\n\n        _gl.uniform1i( uniforms.renderType, 2 );\n        _gl.enable( _gl.BLEND );\n\n        for ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n          var sprite = flare.lensFlares[ j ];\n\n          if ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n            screenPosition.x = sprite.x;\n            screenPosition.y = sprite.y;\n            screenPosition.z = sprite.z;\n\n            size = sprite.size * sprite.scale / viewportHeight;\n\n            scale.x = size * invAspect;\n            scale.y = size;\n\n            _gl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n            _gl.uniform2f( uniforms.scale, scale.x, scale.y );\n            _gl.uniform1f( uniforms.rotation, sprite.rotation );\n\n            _gl.uniform1f( uniforms.opacity, sprite.opacity );\n            _gl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n            _renderer.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n            _renderer.setTexture( sprite.texture, 1 );\n\n            _gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );\n\n          }\n\n        }\n\n      }\n\n    }\n\n    // restore gl\n\n    _gl.enable( _gl.CULL_FACE );\n    _gl.enable( _gl.DEPTH_TEST );\n    _gl.depthMask( true );\n\n  };\n\n  function createProgram ( shader, precision ) {\n\n    var program = _gl.createProgram();\n\n    var fragmentShader = _gl.createShader( _gl.FRAGMENT_SHADER );\n    var vertexShader = _gl.createShader( _gl.VERTEX_SHADER );\n\n    var prefix = \"precision \" + precision + \" float;\\n\";\n\n    _gl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n    _gl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n    _gl.compileShader( fragmentShader );\n    _gl.compileShader( vertexShader );\n\n    _gl.attachShader( program, fragmentShader );\n    _gl.attachShader( program, vertexShader );\n\n    _gl.linkProgram( program );\n\n    return program;\n\n  };\n\n};\n\n// File:src/extras/renderers/plugins/ShadowMapPlugin.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShadowMapPlugin = function () {\n\n  var _gl,\n  _renderer,\n  _depthMaterial, _depthMaterialMorph, _depthMaterialSkin, _depthMaterialMorphSkin,\n\n  _frustum = new THREE.Frustum(),\n  _projScreenMatrix = new THREE.Matrix4(),\n\n  _min = new THREE.Vector3(),\n  _max = new THREE.Vector3(),\n\n  _matrixPosition = new THREE.Vector3(),\n\n  _renderList = [];\n\n  this.init = function ( renderer ) {\n\n    _gl = renderer.context;\n    _renderer = renderer;\n\n    var depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\n    var depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\n\n    _depthMaterial = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms } );\n    _depthMaterialMorph = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true } );\n    _depthMaterialSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, skinning: true } );\n    _depthMaterialMorphSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true, skinning: true } );\n\n    _depthMaterial._shadowPass = true;\n    _depthMaterialMorph._shadowPass = true;\n    _depthMaterialSkin._shadowPass = true;\n    _depthMaterialMorphSkin._shadowPass = true;\n\n  };\n\n  this.render = function ( scene, camera ) {\n\n    if ( ! ( _renderer.shadowMapEnabled && _renderer.shadowMapAutoUpdate ) ) return;\n\n    this.update( scene, camera );\n\n  };\n\n  this.update = function ( scene, camera ) {\n\n    var i, il, j, jl, n,\n\n    shadowMap, shadowMatrix, shadowCamera,\n    program, buffer, material,\n    webglObject, object, light,\n\n    lights = [],\n    k = 0,\n\n    fog = null;\n\n    // set GL state for depth map\n\n    _gl.clearColor( 1, 1, 1, 1 );\n    _gl.disable( _gl.BLEND );\n\n    _gl.enable( _gl.CULL_FACE );\n    _gl.frontFace( _gl.CCW );\n\n    if ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {\n\n      _gl.cullFace( _gl.FRONT );\n\n    } else {\n\n      _gl.cullFace( _gl.BACK );\n\n    }\n\n    _renderer.setDepthTest( true );\n\n    // preprocess lights\n    //  - skip lights that are not casting shadows\n    //  - create virtual lights for cascaded shadow maps\n\n    for ( i = 0, il = scene.__lights.length; i < il; i ++ ) {\n\n      light = scene.__lights[ i ];\n\n      if ( ! light.castShadow ) continue;\n\n      if ( ( light instanceof THREE.DirectionalLight ) && light.shadowCascade ) {\n\n        for ( n = 0; n < light.shadowCascadeCount; n ++ ) {\n\n          var virtualLight;\n\n          if ( ! light.shadowCascadeArray[ n ] ) {\n\n            virtualLight = createVirtualLight( light, n );\n            virtualLight.originalCamera = camera;\n\n            var gyro = new THREE.Gyroscope();\n            gyro.position.copy( light.shadowCascadeOffset );\n\n            gyro.add( virtualLight );\n            gyro.add( virtualLight.target );\n\n            camera.add( gyro );\n\n            light.shadowCascadeArray[ n ] = virtualLight;\n\n            console.log( \"Created virtualLight\", virtualLight );\n\n          } else {\n\n            virtualLight = light.shadowCascadeArray[ n ];\n\n          }\n\n          updateVirtualLight( light, n );\n\n          lights[ k ] = virtualLight;\n          k ++;\n\n        }\n\n      } else {\n\n        lights[ k ] = light;\n        k ++;\n\n      }\n\n    }\n\n    // render depth map\n\n    for ( i = 0, il = lights.length; i < il; i ++ ) {\n\n      light = lights[ i ];\n\n      if ( ! light.shadowMap ) {\n\n        var shadowFilter = THREE.LinearFilter;\n\n        if ( _renderer.shadowMapType === THREE.PCFSoftShadowMap ) {\n\n          shadowFilter = THREE.NearestFilter;\n\n        }\n\n        var pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\n\n        light.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\n        light.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\n\n        light.shadowMatrix = new THREE.Matrix4();\n\n      }\n\n      if ( ! light.shadowCamera ) {\n\n        if ( light instanceof THREE.SpotLight ) {\n\n          light.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\n\n        } else if ( light instanceof THREE.DirectionalLight ) {\n\n          light.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\n\n        } else {\n\n          console.error( \"Unsupported light type for shadow\" );\n          continue;\n\n        }\n\n        scene.add( light.shadowCamera );\n\n        if ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n      }\n\n      if ( light.shadowCameraVisible && ! light.cameraHelper ) {\n\n        light.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\n        light.shadowCamera.add( light.cameraHelper );\n\n      }\n\n      if ( light.isVirtual && virtualLight.originalCamera == camera ) {\n\n        updateShadowCamera( camera, light );\n\n      }\n\n      shadowMap = light.shadowMap;\n      shadowMatrix = light.shadowMatrix;\n      shadowCamera = light.shadowCamera;\n\n      shadowCamera.position.setFromMatrixPosition( light.matrixWorld );\n      _matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\n      shadowCamera.lookAt( _matrixPosition );\n      shadowCamera.updateMatrixWorld();\n\n      shadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\n\n      if ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\n      if ( light.shadowCameraVisible ) light.cameraHelper.update();\n\n      // compute shadow matrix\n\n      shadowMatrix.set( 0.5, 0.0, 0.0, 0.5,\n                0.0, 0.5, 0.0, 0.5,\n                0.0, 0.0, 0.5, 0.5,\n                0.0, 0.0, 0.0, 1.0 );\n\n      shadowMatrix.multiply( shadowCamera.projectionMatrix );\n      shadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n      // update camera matrices and frustum\n\n      _projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n      _frustum.setFromMatrix( _projScreenMatrix );\n\n      // render shadow map\n\n      _renderer.setRenderTarget( shadowMap );\n      _renderer.clear();\n\n      // set object matrices & frustum culling\n\n      _renderList.length = 0;\n      projectObject(scene,scene,shadowCamera);\n\n\n      // render regular objects\n\n      var objectMaterial, useMorphing, useSkinning;\n\n      for ( j = 0, jl = _renderList.length; j < jl; j ++ ) {\n\n        webglObject = _renderList[ j ];\n\n        object = webglObject.object;\n        buffer = webglObject.buffer;\n\n        // culling is overriden globally for all objects\n        // while rendering depth map\n\n        // need to deal with MeshFaceMaterial somehow\n        // in that case just use the first of material.materials for now\n        // (proper solution would require to break objects by materials\n        //  similarly to regular rendering and then set corresponding\n        //  depth materials per each chunk instead of just once per object)\n\n        objectMaterial = getObjectMaterial( object );\n\n        useMorphing = object.geometry.morphTargets !== undefined && object.geometry.morphTargets.length > 0 && objectMaterial.morphTargets;\n        useSkinning = object instanceof THREE.SkinnedMesh && objectMaterial.skinning;\n\n        if ( object.customDepthMaterial ) {\n\n          material = object.customDepthMaterial;\n\n        } else if ( useSkinning ) {\n\n          material = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\n\n        } else if ( useMorphing ) {\n\n          material = _depthMaterialMorph;\n\n        } else {\n\n          material = _depthMaterial;\n\n        }\n\n        _renderer.setMaterialFaces( objectMaterial );\n\n        if ( buffer instanceof THREE.BufferGeometry ) {\n\n          _renderer.renderBufferDirect( shadowCamera, scene.__lights, fog, material, buffer, object );\n\n        } else {\n\n          _renderer.renderBuffer( shadowCamera, scene.__lights, fog, material, buffer, object );\n\n        }\n\n      }\n\n      // set matrices and render immediate objects\n\n      var renderList = scene.__webglObjectsImmediate;\n\n      for ( j = 0, jl = renderList.length; j < jl; j ++ ) {\n\n        webglObject = renderList[ j ];\n        object = webglObject.object;\n\n        if ( object.visible && object.castShadow ) {\n\n          object._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n          _renderer.renderImmediateObject( shadowCamera, scene.__lights, fog, _depthMaterial, object );\n\n        }\n\n      }\n\n    }\n\n    // restore GL state\n\n    var clearColor = _renderer.getClearColor(),\n    clearAlpha = _renderer.getClearAlpha();\n\n    _gl.clearColor( clearColor.r, clearColor.g, clearColor.b, clearAlpha );\n    _gl.enable( _gl.BLEND );\n\n    if ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {\n\n      _gl.cullFace( _gl.BACK );\n\n    }\n\n  };\n\n  function projectObject(scene, object,shadowCamera){\n\n    if ( object.visible ) {\n\n      var webglObjects = scene.__webglObjects[object.id];\n\n      if (webglObjects && object.castShadow && (object.frustumCulled === false || _frustum.intersectsObject( object ) === true) ) {\n\n\n        for (var i = 0, l = webglObjects.length; i < l; i++){\n\n          var webglObject = webglObjects[i];\n\n          object._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n          _renderList.push(webglObject);\n\n        }\n      }\n\n      for(var i = 0, l = object.children.length; i < l; i++) {\n\n        projectObject(scene, object.children[i],shadowCamera);\n      }\n\n    }\n  }\n\n  function createVirtualLight( light, cascade ) {\n\n    var virtualLight = new THREE.DirectionalLight();\n\n    virtualLight.isVirtual = true;\n\n    virtualLight.onlyShadow = true;\n    virtualLight.castShadow = true;\n\n    virtualLight.shadowCameraNear = light.shadowCameraNear;\n    virtualLight.shadowCameraFar = light.shadowCameraFar;\n\n    virtualLight.shadowCameraLeft = light.shadowCameraLeft;\n    virtualLight.shadowCameraRight = light.shadowCameraRight;\n    virtualLight.shadowCameraBottom = light.shadowCameraBottom;\n    virtualLight.shadowCameraTop = light.shadowCameraTop;\n\n    virtualLight.shadowCameraVisible = light.shadowCameraVisible;\n\n    virtualLight.shadowDarkness = light.shadowDarkness;\n\n    virtualLight.shadowBias = light.shadowCascadeBias[ cascade ];\n    virtualLight.shadowMapWidth = light.shadowCascadeWidth[ cascade ];\n    virtualLight.shadowMapHeight = light.shadowCascadeHeight[ cascade ];\n\n    virtualLight.pointsWorld = [];\n    virtualLight.pointsFrustum = [];\n\n    var pointsWorld = virtualLight.pointsWorld,\n      pointsFrustum = virtualLight.pointsFrustum;\n\n    for ( var i = 0; i < 8; i ++ ) {\n\n      pointsWorld[ i ] = new THREE.Vector3();\n      pointsFrustum[ i ] = new THREE.Vector3();\n\n    }\n\n    var nearZ = light.shadowCascadeNearZ[ cascade ];\n    var farZ = light.shadowCascadeFarZ[ cascade ];\n\n    pointsFrustum[ 0 ].set( - 1, - 1, nearZ );\n    pointsFrustum[ 1 ].set(  1, - 1, nearZ );\n    pointsFrustum[ 2 ].set( - 1,  1, nearZ );\n    pointsFrustum[ 3 ].set(  1,  1, nearZ );\n\n    pointsFrustum[ 4 ].set( - 1, - 1, farZ );\n    pointsFrustum[ 5 ].set(  1, - 1, farZ );\n    pointsFrustum[ 6 ].set( - 1,  1, farZ );\n    pointsFrustum[ 7 ].set(  1,  1, farZ );\n\n    return virtualLight;\n\n  }\n\n  // Synchronize virtual light with the original light\n\n  function updateVirtualLight( light, cascade ) {\n\n    var virtualLight = light.shadowCascadeArray[ cascade ];\n\n    virtualLight.position.copy( light.position );\n    virtualLight.target.position.copy( light.target.position );\n    virtualLight.lookAt( virtualLight.target );\n\n    virtualLight.shadowCameraVisible = light.shadowCameraVisible;\n    virtualLight.shadowDarkness = light.shadowDarkness;\n\n    virtualLight.shadowBias = light.shadowCascadeBias[ cascade ];\n\n    var nearZ = light.shadowCascadeNearZ[ cascade ];\n    var farZ = light.shadowCascadeFarZ[ cascade ];\n\n    var pointsFrustum = virtualLight.pointsFrustum;\n\n    pointsFrustum[ 0 ].z = nearZ;\n    pointsFrustum[ 1 ].z = nearZ;\n    pointsFrustum[ 2 ].z = nearZ;\n    pointsFrustum[ 3 ].z = nearZ;\n\n    pointsFrustum[ 4 ].z = farZ;\n    pointsFrustum[ 5 ].z = farZ;\n    pointsFrustum[ 6 ].z = farZ;\n    pointsFrustum[ 7 ].z = farZ;\n\n  }\n\n  // Fit shadow camera's ortho frustum to camera frustum\n\n  function updateShadowCamera( camera, light ) {\n\n    var shadowCamera = light.shadowCamera,\n      pointsFrustum = light.pointsFrustum,\n      pointsWorld = light.pointsWorld;\n\n    _min.set( Infinity, Infinity, Infinity );\n    _max.set( - Infinity, - Infinity, - Infinity );\n\n    for ( var i = 0; i < 8; i ++ ) {\n\n      var p = pointsWorld[ i ];\n\n      p.copy( pointsFrustum[ i ] );\n      THREE.ShadowMapPlugin.__projector.unprojectVector( p, camera );\n\n      p.applyMatrix4( shadowCamera.matrixWorldInverse );\n\n      if ( p.x < _min.x ) _min.x = p.x;\n      if ( p.x > _max.x ) _max.x = p.x;\n\n      if ( p.y < _min.y ) _min.y = p.y;\n      if ( p.y > _max.y ) _max.y = p.y;\n\n      if ( p.z < _min.z ) _min.z = p.z;\n      if ( p.z > _max.z ) _max.z = p.z;\n\n    }\n\n    shadowCamera.left = _min.x;\n    shadowCamera.right = _max.x;\n    shadowCamera.top = _max.y;\n    shadowCamera.bottom = _min.y;\n\n    // can't really fit near/far\n    //shadowCamera.near = _min.z;\n    //shadowCamera.far = _max.z;\n\n    shadowCamera.updateProjectionMatrix();\n\n  }\n\n  // For the moment just ignore objects that have multiple materials with different animation methods\n  // Only the first material will be taken into account for deciding which depth material to use for shadow maps\n\n  function getObjectMaterial( object ) {\n\n    return object.material instanceof THREE.MeshFaceMaterial\n      ? object.material.materials[ 0 ]\n      : object.material;\n\n  };\n\n};\n\nTHREE.ShadowMapPlugin.__projector = new THREE.Projector();\n\n// File:src/extras/renderers/plugins/SpritePlugin.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.SpritePlugin = function () {\n\n  var _gl, _renderer, _texture;\n\n  var sprites = [];\n\n  var vertices, faces, vertexBuffer, elementBuffer;\n  var program, attributes, uniforms;\n\n  this.init = function ( renderer ) {\n\n    _gl = renderer.context;\n    _renderer = renderer;\n\n    vertices = new Float32Array( [\n      - 0.5, - 0.5, 0, 0,\n        0.5, - 0.5, 1, 0,\n        0.5,   0.5, 1, 1,\n      - 0.5,   0.5, 0, 1\n    ] );\n\n    faces = new Uint16Array( [\n      0, 1, 2,\n      0, 2, 3\n    ] );\n\n    vertexBuffer  = _gl.createBuffer();\n    elementBuffer = _gl.createBuffer();\n\n    _gl.bindBuffer( _gl.ARRAY_BUFFER, vertexBuffer );\n    _gl.bufferData( _gl.ARRAY_BUFFER, vertices, _gl.STATIC_DRAW );\n\n    _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n    _gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, faces, _gl.STATIC_DRAW );\n\n    program = createProgram();\n\n    attributes = {\n      position:     _gl.getAttribLocation ( program, 'position' ),\n      uv:         _gl.getAttribLocation ( program, 'uv' )\n    };\n\n    uniforms = {\n      uvOffset:     _gl.getUniformLocation( program, 'uvOffset' ),\n      uvScale:      _gl.getUniformLocation( program, 'uvScale' ),\n\n      rotation:     _gl.getUniformLocation( program, 'rotation' ),\n      scale:        _gl.getUniformLocation( program, 'scale' ),\n\n      color:        _gl.getUniformLocation( program, 'color' ),\n      map:        _gl.getUniformLocation( program, 'map' ),\n      opacity:      _gl.getUniformLocation( program, 'opacity' ),\n\n      modelViewMatrix:  _gl.getUniformLocation( program, 'modelViewMatrix' ),\n      projectionMatrix: _gl.getUniformLocation( program, 'projectionMatrix' ),\n\n      fogType:      _gl.getUniformLocation( program, 'fogType' ),\n      fogDensity:     _gl.getUniformLocation( program, 'fogDensity' ),\n      fogNear:      _gl.getUniformLocation( program, 'fogNear' ),\n      fogFar:       _gl.getUniformLocation( program, 'fogFar' ),\n      fogColor:     _gl.getUniformLocation( program, 'fogColor' ),\n\n      alphaTest:      _gl.getUniformLocation( program, 'alphaTest' )\n    };\n\n    var canvas = document.createElement( 'canvas' );\n    canvas.width = 8;\n    canvas.height = 8;\n\n    var context = canvas.getContext( '2d' );\n    context.fillStyle = 'white';\n    context.fillRect( 0, 0, 8, 8 );\n\n    _texture = new THREE.Texture( canvas );\n    _texture.needsUpdate = true;\n\n  };\n\n  this.render = function ( scene, camera, viewportWidth, viewportHeight ) {\n\n    sprites.length = 0;\n\n    scene.traverseVisible( function ( child ) {\n\n      if ( child instanceof THREE.Sprite ) {\n\n        sprites.push( child );\n\n      }\n\n    } );\n\n    if ( sprites.length === 0 ) return;\n\n    // setup gl\n\n    _gl.useProgram( program );\n\n    _gl.enableVertexAttribArray( attributes.position );\n    _gl.enableVertexAttribArray( attributes.uv );\n\n    _gl.disable( _gl.CULL_FACE );\n    _gl.enable( _gl.BLEND );\n\n    _gl.bindBuffer( _gl.ARRAY_BUFFER, vertexBuffer );\n    _gl.vertexAttribPointer( attributes.position, 2, _gl.FLOAT, false, 2 * 8, 0 );\n    _gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 2 * 8, 8 );\n\n    _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n    _gl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n    _gl.activeTexture( _gl.TEXTURE0 );\n    _gl.uniform1i( uniforms.map, 0 );\n\n    var oldFogType = 0;\n    var sceneFogType = 0;\n    var fog = scene.fog;\n\n    if ( fog ) {\n\n      _gl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n      if ( fog instanceof THREE.Fog ) {\n\n        _gl.uniform1f( uniforms.fogNear, fog.near );\n        _gl.uniform1f( uniforms.fogFar, fog.far );\n\n        _gl.uniform1i( uniforms.fogType, 1 );\n        oldFogType = 1;\n        sceneFogType = 1;\n\n      } else if ( fog instanceof THREE.FogExp2 ) {\n\n        _gl.uniform1f( uniforms.fogDensity, fog.density );\n\n        _gl.uniform1i( uniforms.fogType, 2 );\n        oldFogType = 2;\n        sceneFogType = 2;\n\n      }\n\n    } else {\n\n      _gl.uniform1i( uniforms.fogType, 0 );\n      oldFogType = 0;\n      sceneFogType = 0;\n\n    }\n\n\n    // update positions and sort\n\n    for ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n      var sprite = sprites[ i ];\n      var material = sprite.material;\n\n      sprite._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n      sprite.z = - sprite._modelViewMatrix.elements[ 14 ];\n\n    }\n\n    sprites.sort( painterSortStable );\n\n    // render all sprites\n\n    var scale = [];\n\n    for ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n      var sprite = sprites[ i ];\n      var material = sprite.material;\n\n      _gl.uniform1f( uniforms.alphaTest, material.alphaTest );\n      _gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite._modelViewMatrix.elements );\n\n      scale[ 0 ] = sprite.scale.x;\n      scale[ 1 ] = sprite.scale.y;\n\n      var fogType = 0;\n\n      if ( scene.fog && material.fog ) {\n\n        fogType = sceneFogType;\n\n      }\n\n      if ( oldFogType !== fogType ) {\n\n        _gl.uniform1i( uniforms.fogType, fogType );\n        oldFogType = fogType;\n\n      }\n\n      if ( material.map !== null ) {\n\n        _gl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n        _gl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n      } else {\n\n        _gl.uniform2f( uniforms.uvOffset, 0, 0 );\n        _gl.uniform2f( uniforms.uvScale, 1, 1 );\n\n      }\n\n      _gl.uniform1f( uniforms.opacity, material.opacity );\n      _gl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n      _gl.uniform1f( uniforms.rotation, material.rotation );\n      _gl.uniform2fv( uniforms.scale, scale );\n\n      _renderer.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n      _renderer.setDepthTest( material.depthTest );\n      _renderer.setDepthWrite( material.depthWrite );\n\n      if ( material.map && material.map.image && material.map.image.width ) {\n\n        _renderer.setTexture( material.map, 0 );\n\n      } else {\n\n        _renderer.setTexture( _texture, 0 );\n\n      }\n\n      _gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );\n\n    }\n\n    // restore gl\n\n    _gl.enable( _gl.CULL_FACE );\n\n  };\n\n  function createProgram () {\n\n    var program = _gl.createProgram();\n\n    var vertexShader = _gl.createShader( _gl.VERTEX_SHADER );\n    var fragmentShader = _gl.createShader( _gl.FRAGMENT_SHADER );\n\n    _gl.shaderSource( vertexShader, [\n\n      'precision ' + _renderer.getPrecision() + ' float;',\n\n      'uniform mat4 modelViewMatrix;',\n      'uniform mat4 projectionMatrix;',\n      'uniform float rotation;',\n      'uniform vec2 scale;',\n      'uniform vec2 uvOffset;',\n      'uniform vec2 uvScale;',\n\n      'attribute vec2 position;',\n      'attribute vec2 uv;',\n\n      'varying vec2 vUV;',\n\n      'void main() {',\n\n        'vUV = uvOffset + uv * uvScale;',\n\n        'vec2 alignedPosition = position * scale;',\n\n        'vec2 rotatedPosition;',\n        'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n        'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n        'vec4 finalPosition;',\n\n        'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n        'finalPosition.xy += rotatedPosition;',\n        'finalPosition = projectionMatrix * finalPosition;',\n\n        'gl_Position = finalPosition;',\n\n      '}'\n\n    ].join( '\\n' ) );\n\n    _gl.shaderSource( fragmentShader, [\n\n      'precision ' + _renderer.getPrecision() + ' float;',\n\n      'uniform vec3 color;',\n      'uniform sampler2D map;',\n      'uniform float opacity;',\n\n      'uniform int fogType;',\n      'uniform vec3 fogColor;',\n      'uniform float fogDensity;',\n      'uniform float fogNear;',\n      'uniform float fogFar;',\n      'uniform float alphaTest;',\n\n      'varying vec2 vUV;',\n\n      'void main() {',\n\n        'vec4 texture = texture2D( map, vUV );',\n\n        'if ( texture.a < alphaTest ) discard;',\n\n        'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n        'if ( fogType > 0 ) {',\n\n          'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n          'float fogFactor = 0.0;',\n\n          'if ( fogType == 1 ) {',\n\n            'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\n          '} else {',\n\n            'const float LOG2 = 1.442695;',\n            'float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n            'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n          '}',\n\n          'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\n        '}',\n\n      '}'\n\n    ].join( '\\n' ) );\n\n    _gl.compileShader( vertexShader );\n    _gl.compileShader( fragmentShader );\n\n    _gl.attachShader( program, vertexShader );\n    _gl.attachShader( program, fragmentShader );\n\n    _gl.linkProgram( program );\n\n    return program;\n\n  };\n\n  function painterSortStable ( a, b ) {\n\n    if ( a.z !== b.z ) {\n\n      return b.z - a.z;\n\n    } else {\n\n      return b.id - a.id;\n\n    }\n\n  };\n\n};\n\n// File:src/extras/renderers/plugins/DepthPassPlugin.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.DepthPassPlugin = function () {\n\n  this.enabled = false;\n  this.renderTarget = null;\n\n  var _gl,\n  _renderer,\n  _depthMaterial, _depthMaterialMorph, _depthMaterialSkin, _depthMaterialMorphSkin,\n\n  _frustum = new THREE.Frustum(),\n  _projScreenMatrix = new THREE.Matrix4(),\n  _renderList = [];\n\n  this.init = function ( renderer ) {\n\n    _gl = renderer.context;\n    _renderer = renderer;\n\n    var depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\n    var depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\n\n    _depthMaterial = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms } );\n    _depthMaterialMorph = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true } );\n    _depthMaterialSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, skinning: true } );\n    _depthMaterialMorphSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true, skinning: true } );\n\n    _depthMaterial._shadowPass = true;\n    _depthMaterialMorph._shadowPass = true;\n    _depthMaterialSkin._shadowPass = true;\n    _depthMaterialMorphSkin._shadowPass = true;\n\n  };\n\n  this.render = function ( scene, camera ) {\n\n    if ( ! this.enabled ) return;\n\n    this.update( scene, camera );\n\n  };\n\n  this.update = function ( scene, camera ) {\n\n    var i, il, j, jl, n,\n\n    program, buffer, material,\n    webglObject, object, light,\n    renderList,\n\n    fog = null;\n\n    // set GL state for depth map\n\n    _gl.clearColor( 1, 1, 1, 1 );\n    _gl.disable( _gl.BLEND );\n\n    _renderer.setDepthTest( true );\n\n    // update scene\n\n    if ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n    // update camera matrices and frustum\n\n    camera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n    _projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n    _frustum.setFromMatrix( _projScreenMatrix );\n\n    // render depth map\n\n    _renderer.setRenderTarget( this.renderTarget );\n    _renderer.clear();\n\n    // set object matrices & frustum culling\n\n    _renderList.length = 0;\n    projectObject(scene,scene,camera);\n\n    // render regular objects\n\n    var objectMaterial, useMorphing, useSkinning;\n\n    for ( j = 0, jl = _renderList.length; j < jl; j ++ ) {\n\n      webglObject = _renderList[ j ];\n\n      object = webglObject.object;\n      buffer = webglObject.buffer;\n\n      // todo: create proper depth material for particles\n\n      if ( object instanceof THREE.PointCloud && ! object.customDepthMaterial ) continue;\n\n      objectMaterial = getObjectMaterial( object );\n\n      if ( objectMaterial ) _renderer.setMaterialFaces( object.material );\n\n      useMorphing = object.geometry.morphTargets !== undefined && object.geometry.morphTargets.length > 0 && objectMaterial.morphTargets;\n      useSkinning = object instanceof THREE.SkinnedMesh && objectMaterial.skinning;\n\n      if ( object.customDepthMaterial ) {\n\n        material = object.customDepthMaterial;\n\n      } else if ( useSkinning ) {\n\n        material = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\n\n      } else if ( useMorphing ) {\n\n        material = _depthMaterialMorph;\n\n      } else {\n\n        material = _depthMaterial;\n\n      }\n\n      if ( buffer instanceof THREE.BufferGeometry ) {\n\n        _renderer.renderBufferDirect( camera, scene.__lights, fog, material, buffer, object );\n\n      } else {\n\n        _renderer.renderBuffer( camera, scene.__lights, fog, material, buffer, object );\n\n      }\n\n\n    }\n\n    // set matrices and render immediate objects\n\n    renderList = scene.__webglObjectsImmediate;\n\n    for ( j = 0, jl = renderList.length; j < jl; j ++ ) {\n\n      webglObject = renderList[ j ];\n      object = webglObject.object;\n\n      if ( object.visible ) {\n\n        object._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\n        _renderer.renderImmediateObject( camera, scene.__lights, fog, _depthMaterial, object );\n\n      }\n\n    }\n\n    // restore GL state\n\n    var clearColor = _renderer.getClearColor(),\n    clearAlpha = _renderer.getClearAlpha();\n\n    _gl.clearColor( clearColor.r, clearColor.g, clearColor.b, clearAlpha );\n    _gl.enable( _gl.BLEND );\n\n  };\n\n  function projectObject(scene, object,camera){\n\n    if ( object.visible ) {\n\n      var webglObjects = scene.__webglObjects[object.id];\n\n      if (webglObjects && (object.frustumCulled === false || _frustum.intersectsObject( object ) === true) ) {\n\n\n        for (var i = 0, l = webglObjects.length; i < l; i++){\n\n          var webglObject = webglObjects[i];\n\n          object._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n          _renderList.push(webglObject);\n\n        }\n      }\n\n      for(var i = 0, l = object.children.length; i < l; i++) {\n\n        projectObject(scene, object.children[i], camera);\n      }\n\n    }\n  }\n\n  // For the moment just ignore objects that have multiple materials with different animation methods\n  // Only the first material will be taken into account for deciding which depth material to use\n\n  function getObjectMaterial( object ) {\n\n    return object.material instanceof THREE.MeshFaceMaterial\n      ? object.material.materials[ 0 ]\n      : object.material;\n\n  };\n\n};\n\n\n// File:src/extras/shaders/ShaderFlares.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n */\n\nTHREE.ShaderFlares = {\n\n  'lensFlareVertexTexture': {\n\n    vertexShader: [\n\n      \"uniform lowp int renderType;\",\n\n      \"uniform vec3 screenPosition;\",\n      \"uniform vec2 scale;\",\n      \"uniform float rotation;\",\n\n      \"uniform sampler2D occlusionMap;\",\n\n      \"attribute vec2 position;\",\n      \"attribute vec2 uv;\",\n\n      \"varying vec2 vUV;\",\n      \"varying float vVisibility;\",\n\n      \"void main() {\",\n\n        \"vUV = uv;\",\n\n        \"vec2 pos = position;\",\n\n        \"if( renderType == 2 ) {\",\n\n          \"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n          \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n          \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n          \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n          \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n          \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n          \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n          \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n          \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\n          \"vVisibility =        visibility.r / 9.0;\",\n          \"vVisibility *= 1.0 - visibility.g / 9.0;\",\n          \"vVisibility *=       visibility.b / 9.0;\",\n          \"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\n          \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n          \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n        \"}\",\n\n        \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n      \"}\"\n\n    ].join( \"\\n\" ),\n\n    fragmentShader: [\n\n      \"uniform lowp int renderType;\",\n\n      \"uniform sampler2D map;\",\n      \"uniform float opacity;\",\n      \"uniform vec3 color;\",\n\n      \"varying vec2 vUV;\",\n      \"varying float vVisibility;\",\n\n      \"void main() {\",\n\n        // pink square\n\n        \"if( renderType == 0 ) {\",\n\n          \"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\n        // restore\n\n        \"} else if( renderType == 1 ) {\",\n\n          \"gl_FragColor = texture2D( map, vUV );\",\n\n        // flare\n\n        \"} else {\",\n\n          \"vec4 texture = texture2D( map, vUV );\",\n          \"texture.a *= opacity * vVisibility;\",\n          \"gl_FragColor = texture;\",\n          \"gl_FragColor.rgb *= color;\",\n\n        \"}\",\n\n      \"}\"\n    ].join( \"\\n\" )\n\n  },\n\n\n  'lensFlare': {\n\n    vertexShader: [\n\n      \"uniform lowp int renderType;\",\n\n      \"uniform vec3 screenPosition;\",\n      \"uniform vec2 scale;\",\n      \"uniform float rotation;\",\n\n      \"attribute vec2 position;\",\n      \"attribute vec2 uv;\",\n\n      \"varying vec2 vUV;\",\n\n      \"void main() {\",\n\n        \"vUV = uv;\",\n\n        \"vec2 pos = position;\",\n\n        \"if( renderType == 2 ) {\",\n\n          \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n          \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n        \"}\",\n\n        \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n      \"}\"\n\n    ].join( \"\\n\" ),\n\n    fragmentShader: [\n\n      \"precision mediump float;\",\n\n      \"uniform lowp int renderType;\",\n\n      \"uniform sampler2D map;\",\n      \"uniform sampler2D occlusionMap;\",\n      \"uniform float opacity;\",\n      \"uniform vec3 color;\",\n\n      \"varying vec2 vUV;\",\n\n      \"void main() {\",\n\n        // pink square\n\n        \"if( renderType == 0 ) {\",\n\n          \"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\n\n        // restore\n\n        \"} else if( renderType == 1 ) {\",\n\n          \"gl_FragColor = texture2D( map, vUV );\",\n\n        // flare\n\n        \"} else {\",\n\n          \"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\n          \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\n          \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\n          \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\n          \"visibility = ( 1.0 - visibility / 4.0 );\",\n\n          \"vec4 texture = texture2D( map, vUV );\",\n          \"texture.a *= opacity * visibility;\",\n          \"gl_FragColor = texture;\",\n          \"gl_FragColor.rgb *= color;\",\n\n        \"}\",\n\n      \"}\"\n\n    ].join( \"\\n\" )\n\n  }\n\n};\n\n\n\ndefine(\"threejs\", (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global.THREE;\n    };\n}(this)));\n\n",
    "\n(function() {\n  define('cs!app/components/Background',['require','threejs'],function(require) {\n    var Background, THREE;\n    THREE = require('threejs');\n    return Background = (function() {\n      function Background(scene) {\n        var bg, bgMat, texture;\n        this.scene = scene;\n        texture = THREE.ImageUtils.loadTexture('src/images/background.jpg');\n        texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n        texture.repeat.set(2, 2);\n        bgMat = new THREE.MeshBasicMaterial({\n          map: texture\n        });\n        bg = new THREE.Mesh(new THREE.PlaneGeometry(1600, 1600, 4, 4), bgMat);\n        bg.material.depthTest = false;\n        bg.material.depthWrite = false;\n        bg.position.set(0, 0, -10);\n        this.scene.add(bg);\n      }\n\n      return Background;\n\n    })();\n  });\n\n}).call(this);\n\n",
    "/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar width = window.innerWidth || 1;\n\t\tvar height = window.innerHeight || 1;\n\t\tvar parameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\n\n\t\trenderTarget = new THREE.WebGLRenderTarget( width, height, parameters );\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.passes = [];\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.EffectComposer relies on THREE.CopyShader\" );\n\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\n};\n\nTHREE.EffectComposer.prototype = {\n\n\tswapBuffers: function() {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\trender: function ( delta ) {\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( !pass.enabled ) continue;\n\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\n\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\tmaskActive = true;\n\n\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\tmaskActive = false;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\n\t\t\trenderTarget.width = window.innerWidth;\n\t\t\trenderTarget.height = window.innerHeight;\n\n\t\t}\n\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar renderTarget = this.renderTarget1.clone();\n\n\t\trenderTarget.width = width;\n\t\trenderTarget.height = height;\n\n\t\tthis.reset( renderTarget );\n\n\t}\n\n};\n\ndefine(\"vendors/three.js-extras/postprocessing/EffectComposer\", function(){});\n\n",
    "/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MaskPass = function ( scene, camera ) {\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.enabled = true;\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nTHREE.MaskPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tvar context = renderer.context;\n\n\t\t// don't update color or depth\n\n\t\tcontext.colorMask( false, false, false, false );\n\t\tcontext.depthMask( false );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tcontext.enable( context.STENCIL_TEST );\n\t\tcontext.stencilOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tcontext.stencilFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tcontext.clearStencil( clearValue );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t// re-enable update of color and depth\n\n\t\tcontext.colorMask( true, true, true, true );\n\t\tcontext.depthMask( true );\n\n\t\t// only render where stencil is set to 1\n\n\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );  // draw if == 1\n\t\tcontext.stencilOp( context.KEEP, context.KEEP, context.KEEP );\n\n\t}\n\n};\n\n\nTHREE.ClearMaskPass = function () {\n\n\tthis.enabled = true;\n\n};\n\nTHREE.ClearMaskPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tvar context = renderer.context;\n\n\t\tcontext.disable( context.STENCIL_TEST );\n\n\t}\n\n};\n\ndefine(\"vendors/three.js-extras/postprocessing/MaskPass\", function(){});\n\n",
    "/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.BloomPass = function ( strength, kernelSize, sigma, resolution ) {\n\n\tstrength = ( strength !== undefined ) ? strength : 1;\n\tkernelSize = ( kernelSize !== undefined ) ? kernelSize : 25;\n\tsigma = ( sigma !== undefined ) ? sigma : 4.0;\n\tresolution = ( resolution !== undefined ) ? resolution : 256;\n\n\t// render targets\n\n\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\n\tthis.renderTargetX = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\tthis.renderTargetY = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\n\t// copy material\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.CopyShader\" );\n\n\tvar copyShader = THREE.CopyShader;\n\n\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\n\tthis.copyUniforms[ \"opacity\" ].value = strength;\n\n\tthis.materialCopy = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: THREE.AdditiveBlending,\n\t\ttransparent: true\n\n\t} );\n\n\t// convolution material\n\n\tif ( THREE.ConvolutionShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.ConvolutionShader\" );\n\n\tvar convolutionShader = THREE.ConvolutionShader;\n\n\tthis.convolutionUniforms = THREE.UniformsUtils.clone( convolutionShader.uniforms );\n\n\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurx;\n\tthis.convolutionUniforms[ \"cKernel\" ].value = THREE.ConvolutionShader.buildKernel( sigma );\n\n\tthis.materialConvolution = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.convolutionUniforms,\n\t\tvertexShader:  convolutionShader.vertexShader,\n\t\tfragmentShader: convolutionShader.fragmentShader,\n\t\tdefines: {\n\t\t\t\"KERNEL_SIZE_FLOAT\": kernelSize.toFixed( 1 ),\n\t\t\t\"KERNEL_SIZE_INT\": kernelSize.toFixed( 0 )\n\t\t}\n\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\tthis.clear = false;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.BloomPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\n\n\t\t// Render quad with blured scene into texture (convolution pass 1)\n\n\t\tthis.quad.material = this.materialConvolution;\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\n\t\trenderer.render( this.scene, this.camera, this.renderTargetX, true );\n\n\n\t\t// Render quad with blured scene into texture (convolution pass 2)\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = this.renderTargetX;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurY;\n\n\t\trenderer.render( this.scene, this.camera, this.renderTargetY, true );\n\n\t\t// Render original scene with superimposed blur to texture\n\n\t\tthis.quad.material = this.materialCopy;\n\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetY;\n\n\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t}\n\n};\n\nTHREE.BloomPass.blurX = new THREE.Vector2( 0.001953125, 0.0 );\nTHREE.BloomPass.blurY = new THREE.Vector2( 0.0, 0.001953125 );\n\ndefine(\"vendors/three.js-extras/postprocessing/BloomPass\", function(){});\n\n",
    "/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShaderPass = function ( shader, textureID ) {\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\tthis.material = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\n\t} );\n\n\tthis.renderToScreen = false;\n\n\tthis.enabled = true;\n\tthis.needsSwap = true;\n\tthis.clear = false;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.ShaderPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer;\n\n\t\t}\n\n\t\tthis.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t} else {\n\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t}\n\n\t}\n\n};\n\ndefine(\"vendors/three.js-extras/postprocessing/ShaderPass\", function(){});\n\n",
    "/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 1;\n\n\tthis.oldClearColor = new THREE.Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.enabled = true;\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n};\n\nTHREE.RenderPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\n\t}\n\n};\n\ndefine(\"vendors/three.js-extras/postprocessing/RenderPass\", function(){});\n\n",
    "/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.FilmPass = function ( noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale ) {\n\n\tif ( THREE.FilmShader === undefined )\n\t\tconsole.error( \"THREE.FilmPass relies on THREE.FilmShader\" );\n\n\tvar shader = THREE.FilmShader;\n\n\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\tthis.material = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\n\t} );\n\n\tif ( grayscale !== undefined )\tthis.uniforms.grayscale.value = grayscale;\n\tif ( noiseIntensity !== undefined ) this.uniforms.nIntensity.value = noiseIntensity;\n\tif ( scanlinesIntensity !== undefined ) this.uniforms.sIntensity.value = scanlinesIntensity;\n\tif ( scanlinesCount !== undefined ) this.uniforms.sCount.value = scanlinesCount;\n\n\tthis.enabled = true;\n\tthis.renderToScreen = false;\n\tthis.needsSwap = true;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.FilmPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\tthis.uniforms[ \"time\" ].value += delta;\n\n\t\tthis.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t} else {\n\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, false );\n\n\t\t}\n\n\t}\n\n};\n\ndefine(\"vendors/three.js-extras/postprocessing/FilmPass\", function(){});\n\n",
    "/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nTHREE.CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\ndefine(\"vendors/three.js-extras/shaders/CopyShader\", function(){});\n\n",
    "/**\n * @author alteredq / http://alteredqualia.com/\n * @author davidedc / http://www.sketchpatch.net/\n *\n * NVIDIA FXAA by Timothy Lottes\n * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\n * - WebGL port by @supereggbert\n * http://www.glge.org/demos/fxaa/\n */\n\nTHREE.FXAAShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\"resolution\": { type: \"v2\", value: new THREE.Vector2( 1 / 1024, 1 / 512 )  }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec2 resolution;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"#define FXAA_REDUCE_MIN   (1.0/128.0)\",\n\t\t\"#define FXAA_REDUCE_MUL   (1.0/8.0)\",\n\t\t\"#define FXAA_SPAN_MAX     8.0\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\",\n\t\t\t\"vec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );\",\n\t\t\t\"vec3 rgbM  = rgbaM.xyz;\",\n\t\t\t\"float opacity  = rgbaM.w;\",\n\n\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\n\t\t\t\"float lumaNW = dot( rgbNW, luma );\",\n\t\t\t\"float lumaNE = dot( rgbNE, luma );\",\n\t\t\t\"float lumaSW = dot( rgbSW, luma );\",\n\t\t\t\"float lumaSE = dot( rgbSE, luma );\",\n\t\t\t\"float lumaM  = dot( rgbM,  luma );\",\n\t\t\t\"float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\",\n\t\t\t\"float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\",\n\n\t\t\t\"vec2 dir;\",\n\t\t\t\"dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\",\n\t\t\t\"dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\",\n\n\t\t\t\"float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\",\n\n\t\t\t\"float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\",\n\t\t\t\"dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\",\n\t\t\t\t  \"max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\",\n\t\t\t\t\t\t\"dir * rcpDirMin)) * resolution;\",\n\n\t\t\t\"vec3 rgbA = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\"rgbA += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz;\",\n\t\t\t\"rgbA *= 0.5;\",\n\n\t\t\t\"vec3 rgbB = texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz;\",\n\t\t\t\"rgbB += texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz;\",\n\t\t\t\"rgbB *= 0.25;\",\n\t\t\t\"rgbB += rgbA * 0.5;\",\n\n\t\t\t\"float lumaB = dot( rgbB, luma );\",\n\n\t\t\t\"if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\",\n\n\t\t\t\t\"gl_FragColor = vec4( rgbA, opacity );\",\n\n\t\t\t\"} else {\",\n\n\t\t\t\t\"gl_FragColor = vec4( rgbB, opacity );\",\n\n\t\t\t\"}\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\ndefine(\"vendors/three.js-extras/shaders/FXAAShader\", function(){});\n\n",
    "/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Film grain & scanlines shader\n *\n * - ported from HLSL to WebGL / GLSL\n * http://www.truevision3d.com/forums/showcase/staticnoise_colorblackwhite_scanline_shaders-t18698.0.html\n *\n * Screen Space Static Postprocessor\n *\n * Produces an analogue noise overlay similar to a film grain / TV static\n *\n * Original implementation and noise algorithm\n * Pat 'Hawthorne' Shearon\n *\n * Optimized scanlines + noise version with intensity scaling\n * Georg 'Leviathan' Steinrohder\n *\n * This version is provided under a Creative Commons Attribution 3.0 License\n * http://creativecommons.org/licenses/by/3.0/\n */\n\nTHREE.FilmShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\"time\":       { type: \"f\", value: 0.0 },\n\t\t\"nIntensity\": { type: \"f\", value: 0.5 },\n\t\t\"sIntensity\": { type: \"f\", value: 0.05 },\n\t\t\"sCount\":     { type: \"f\", value: 4096 },\n\t\t\"grayscale\":  { type: \"i\", value: 1 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t// control parameter\n\t\t\"uniform float time;\",\n\n\t\t\"uniform bool grayscale;\",\n\n\t\t// noise effect intensity value (0 = no effect, 1 = full effect)\n\t\t\"uniform float nIntensity;\",\n\n\t\t// scanlines effect intensity value (0 = no effect, 1 = full effect)\n\t\t\"uniform float sIntensity;\",\n\n\t\t// scanlines effect count value (0 = no effect, 4096 = full effect)\n\t\t\"uniform float sCount;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t// sample the source\n\t\t\t\"vec4 cTextureScreen = texture2D( tDiffuse, vUv );\",\n\n\t\t\t// make some noise\n\t\t\t\"float x = vUv.x * vUv.y * time *  1000.0;\",\n\t\t\t\"x = mod( x, 13.0 ) * mod( x, 123.0 );\",\n\t\t\t\"float dx = mod( x, 0.01 );\",\n\n\t\t\t// add noise\n\t\t\t\"vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\",\n\n\t\t\t// get us a sine and cosine\n\t\t\t\"vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\",\n\n\t\t\t// add scanlines\n\t\t\t\"cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\",\n\n\t\t\t// interpolate between source and result by intensity\n\t\t\t\"cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\",\n\n\t\t\t// convert to grayscale if desired\n\t\t\t\"if( grayscale ) {\",\n\n\t\t\t\t\"cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\",\n\n\t\t\t\"}\",\n\n\t\t\t\"gl_FragColor =  vec4( cResult, cTextureScreen.a );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\ndefine(\"vendors/three.js-extras/shaders/FilmShader\", function(){});\n\n",
    "/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Convolution shader\n * ported from o3d sample to WebGL / GLSL\n * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\n */\n\nTHREE.ConvolutionShader = {\n\n\tdefines: {\n\n\t\t\"KERNEL_SIZE_FLOAT\": \"25.0\",\n\t\t\"KERNEL_SIZE_INT\": \"25\",\n\n\t},\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":        { type: \"t\", value: null },\n\t\t\"uImageIncrement\": { type: \"v2\", value: new THREE.Vector2( 0.001953125, 0.0 ) },\n\t\t\"cKernel\":         { type: \"fv1\", value: [] }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float cKernel[ KERNEL_SIZE_INT ];\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec2 imageCoord = vUv;\",\n\t\t\t\"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\n\n\t\t\t\"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\n\n\t\t\t\t\"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\n\t\t\t\t\"imageCoord += uImageIncrement;\",\n\n\t\t\t\"}\",\n\n\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\n\t].join(\"\\n\"),\n\n\tbuildKernel: function ( sigma ) {\n\n\t\t// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\n\n\t\tfunction gauss( x, sigma ) {\n\n\t\t\treturn Math.exp( - ( x * x ) / ( 2.0 * sigma * sigma ) );\n\n\t\t}\n\n\t\tvar i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil( sigma * 3.0 ) + 1;\n\n\t\tif ( kernelSize > kMaxKernelSize ) kernelSize = kMaxKernelSize;\n\t\thalfWidth = ( kernelSize - 1 ) * 0.5;\n\n\t\tvalues = new Array( kernelSize );\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < kernelSize; ++i ) {\n\n\t\t\tvalues[ i ] = gauss( i - halfWidth, sigma );\n\t\t\tsum += values[ i ];\n\n\t\t}\n\n\t\t// normalize the kernel\n\n\t\tfor ( i = 0; i < kernelSize; ++i ) values[ i ] /= sum;\n\n\t\treturn values;\n\n\t}\n\n};\n\ndefine(\"vendors/three.js-extras/shaders/ConvolutionShader\", function(){});\n\n",
    "\n(function() {\n  define('cs!app/components/PostFX',['require','threejs','vendors/three.js-extras/postprocessing/EffectComposer','vendors/three.js-extras/postprocessing/MaskPass','vendors/three.js-extras/postprocessing/BloomPass','vendors/three.js-extras/postprocessing/ShaderPass','vendors/three.js-extras/postprocessing/RenderPass','vendors/three.js-extras/postprocessing/FilmPass','vendors/three.js-extras/shaders/CopyShader','vendors/three.js-extras/shaders/FXAAShader','vendors/three.js-extras/shaders/FilmShader','vendors/three.js-extras/shaders/ConvolutionShader'],function(require) {\n    var PostFX, THREE;\n    THREE = require('threejs');\n    require('vendors/three.js-extras/postprocessing/EffectComposer');\n    require('vendors/three.js-extras/postprocessing/MaskPass');\n    require('vendors/three.js-extras/postprocessing/BloomPass');\n    require('vendors/three.js-extras/postprocessing/ShaderPass');\n    require('vendors/three.js-extras/postprocessing/RenderPass');\n    require('vendors/three.js-extras/postprocessing/FilmPass');\n    require('vendors/three.js-extras/shaders/CopyShader');\n    require('vendors/three.js-extras/shaders/FXAAShader');\n    require('vendors/three.js-extras/shaders/FilmShader');\n    require('vendors/three.js-extras/shaders/ConvolutionShader');\n    return PostFX = (function() {\n      function PostFX(scene, camera, renderer) {\n        var renderModel;\n        this.scene = scene;\n        this.camera = camera;\n        this.renderer = renderer;\n        this.renderer.autoClear = false;\n        renderModel = new THREE.RenderPass(this.scene, this.camera);\n        this.effectFXAA = new THREE.ShaderPass(THREE.FXAAShader);\n        this.effectFXAA.uniforms['resolution'].value.set(1 / window.innerWidth, 1 / window.innerHeight);\n        this.bloom = new THREE.BloomPass(1.5, 25, 4);\n        this.filmShader = new THREE.FilmPass(0.12, 0.0, 648, false);\n        this.filmShader.renderToScreen = true;\n        this.composer = new THREE.EffectComposer(this.renderer);\n        this.composer.addPass(renderModel);\n        this.composer.addPass(this.effectFXAA);\n        this.composer.addPass(this.bloom);\n        this.composer.addPass(this.filmShader);\n      }\n\n      PostFX.prototype.resize = function(SCREEN_WIDTH, SCREEN_HEIGHT) {\n        this.composer.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);\n        return this.effectFXAA.uniforms['resolution'].value.set(1 / SCREEN_WIDTH, 1 / SCREEN_HEIGHT);\n      };\n\n      PostFX.prototype.render = function(delta) {\n        this.renderer.clear();\n        return this.composer.render(delta);\n      };\n\n      return PostFX;\n\n    })();\n  });\n\n}).call(this);\n\n",
    "/*jslint onevar:true, undef:true, newcap:true, regexp:true, bitwise:true, maxerr:50, indent:4, white:false, nomen:false, plusplus:false */\n/*global define:false, require:false, exports:false, module:false, signals:false */\n\n/** @license\n * JS Signals <http://millermedeiros.github.com/js-signals/>\n * Released under the MIT license\n * Author: Miller Medeiros\n * Version: 1.0.0 - Build: 268 (2012/11/29 05:48 PM)\n */\n\n(function(global){\n\n    // SignalBinding -------------------------------------------------\n    //================================================================\n\n    /**\n     * Object that represents a binding between a Signal and a listener function.\n     * <br />- <strong>This is an internal constructor and shouldn't be called by regular users.</strong>\n     * <br />- inspired by Joa Ebert AS3 SignalBinding and Robert Penner's Slot classes.\n     * @author Miller Medeiros\n     * @constructor\n     * @internal\n     * @name SignalBinding\n     * @param {Signal} signal Reference to Signal object that listener is currently bound to.\n     * @param {Function} listener Handler function bound to the signal.\n     * @param {boolean} isOnce If binding should be executed just once.\n     * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n     * @param {Number} [priority] The priority level of the event listener. (default = 0).\n     */\n    function SignalBinding(signal, listener, isOnce, listenerContext, priority) {\n\n        /**\n         * Handler function bound to the signal.\n         * @type Function\n         * @private\n         */\n        this._listener = listener;\n\n        /**\n         * If binding should be executed just once.\n         * @type boolean\n         * @private\n         */\n        this._isOnce = isOnce;\n\n        /**\n         * Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @memberOf SignalBinding.prototype\n         * @name context\n         * @type Object|undefined|null\n         */\n        this.context = listenerContext;\n\n        /**\n         * Reference to Signal object that listener is currently bound to.\n         * @type Signal\n         * @private\n         */\n        this._signal = signal;\n\n        /**\n         * Listener priority\n         * @type Number\n         * @private\n         */\n        this._priority = priority || 0;\n    }\n\n    SignalBinding.prototype = {\n\n        /**\n         * If binding is active and should be executed.\n         * @type boolean\n         */\n        active : true,\n\n        /**\n         * Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute`. (curried parameters)\n         * @type Array|null\n         */\n        params : null,\n\n        /**\n         * Call listener passing arbitrary parameters.\n         * <p>If binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.</p>\n         * @param {Array} [paramsArr] Array of parameters that should be passed to the listener\n         * @return {*} Value returned by the listener.\n         */\n        execute : function (paramsArr) {\n            var handlerReturn, params;\n            if (this.active && !!this._listener) {\n                params = this.params? this.params.concat(paramsArr) : paramsArr;\n                handlerReturn = this._listener.apply(this.context, params);\n                if (this._isOnce) {\n                    this.detach();\n                }\n            }\n            return handlerReturn;\n        },\n\n        /**\n         * Detach binding from signal.\n         * - alias to: mySignal.remove(myBinding.getListener());\n         * @return {Function|null} Handler function bound to the signal or `null` if binding was previously detached.\n         */\n        detach : function () {\n            return this.isBound()? this._signal.remove(this._listener, this.context) : null;\n        },\n\n        /**\n         * @return {Boolean} `true` if binding is still bound to the signal and have a listener.\n         */\n        isBound : function () {\n            return (!!this._signal && !!this._listener);\n        },\n\n        /**\n         * @return {boolean} If SignalBinding will only be executed once.\n         */\n        isOnce : function () {\n            return this._isOnce;\n        },\n\n        /**\n         * @return {Function} Handler function bound to the signal.\n         */\n        getListener : function () {\n            return this._listener;\n        },\n\n        /**\n         * @return {Signal} Signal that listener is currently bound to.\n         */\n        getSignal : function () {\n            return this._signal;\n        },\n\n        /**\n         * Delete instance properties\n         * @private\n         */\n        _destroy : function () {\n            delete this._signal;\n            delete this._listener;\n            delete this.context;\n        },\n\n        /**\n         * @return {string} String representation of the object.\n         */\n        toString : function () {\n            return '[SignalBinding isOnce:' + this._isOnce +', isBound:'+ this.isBound() +', active:' + this.active + ']';\n        }\n\n    };\n\n\n/*global SignalBinding:false*/\n\n    // Signal --------------------------------------------------------\n    //================================================================\n\n    function validateListener(listener, fnName) {\n        if (typeof listener !== 'function') {\n            throw new Error( 'listener is a required param of {fn}() and should be a Function.'.replace('{fn}', fnName) );\n        }\n    }\n\n    /**\n     * Custom event broadcaster\n     * <br />- inspired by Robert Penner's AS3 Signals.\n     * @name Signal\n     * @author Miller Medeiros\n     * @constructor\n     */\n    function Signal() {\n        /**\n         * @type Array.<SignalBinding>\n         * @private\n         */\n        this._bindings = [];\n        this._prevParams = null;\n\n        // enforce dispatch to aways work on same context (#47)\n        var self = this;\n        this.dispatch = function(){\n            Signal.prototype.dispatch.apply(self, arguments);\n        };\n    }\n\n    Signal.prototype = {\n\n        /**\n         * Signals Version Number\n         * @type String\n         * @const\n         */\n        VERSION : '1.0.0',\n\n        /**\n         * If Signal should keep record of previously dispatched parameters and\n         * automatically execute listener during `add()`/`addOnce()` if Signal was\n         * already dispatched before.\n         * @type boolean\n         */\n        memorize : false,\n\n        /**\n         * @type boolean\n         * @private\n         */\n        _shouldPropagate : true,\n\n        /**\n         * If Signal is active and should broadcast events.\n         * <p><strong>IMPORTANT:</strong> Setting this property during a dispatch will only affect the next dispatch, if you want to stop the propagation of a signal use `halt()` instead.</p>\n         * @type boolean\n         */\n        active : true,\n\n        /**\n         * @param {Function} listener\n         * @param {boolean} isOnce\n         * @param {Object} [listenerContext]\n         * @param {Number} [priority]\n         * @return {SignalBinding}\n         * @private\n         */\n        _registerListener : function (listener, isOnce, listenerContext, priority) {\n\n            var prevIndex = this._indexOfListener(listener, listenerContext),\n                binding;\n\n            if (prevIndex !== -1) {\n                binding = this._bindings[prevIndex];\n                if (binding.isOnce() !== isOnce) {\n                    throw new Error('You cannot add'+ (isOnce? '' : 'Once') +'() then add'+ (!isOnce? '' : 'Once') +'() the same listener without removing the relationship first.');\n                }\n            } else {\n                binding = new SignalBinding(this, listener, isOnce, listenerContext, priority);\n                this._addBinding(binding);\n            }\n\n            if(this.memorize && this._prevParams){\n                binding.execute(this._prevParams);\n            }\n\n            return binding;\n        },\n\n        /**\n         * @param {SignalBinding} binding\n         * @private\n         */\n        _addBinding : function (binding) {\n            //simplified insertion sort\n            var n = this._bindings.length;\n            do { --n; } while (this._bindings[n] && binding._priority <= this._bindings[n]._priority);\n            this._bindings.splice(n + 1, 0, binding);\n        },\n\n        /**\n         * @param {Function} listener\n         * @return {number}\n         * @private\n         */\n        _indexOfListener : function (listener, context) {\n            var n = this._bindings.length,\n                cur;\n            while (n--) {\n                cur = this._bindings[n];\n                if (cur._listener === listener && cur.context === context) {\n                    return n;\n                }\n            }\n            return -1;\n        },\n\n        /**\n         * Check if listener was attached to Signal.\n         * @param {Function} listener\n         * @param {Object} [context]\n         * @return {boolean} if Signal has the specified listener.\n         */\n        has : function (listener, context) {\n            return this._indexOfListener(listener, context) !== -1;\n        },\n\n        /**\n         * Add a listener to the signal.\n         * @param {Function} listener Signal handler function.\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n         */\n        add : function (listener, listenerContext, priority) {\n            validateListener(listener, 'add');\n            return this._registerListener(listener, false, listenerContext, priority);\n        },\n\n        /**\n         * Add listener to the signal that should be removed after first execution (will be executed only once).\n         * @param {Function} listener Signal handler function.\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n         */\n        addOnce : function (listener, listenerContext, priority) {\n            validateListener(listener, 'addOnce');\n            return this._registerListener(listener, true, listenerContext, priority);\n        },\n\n        /**\n         * Remove a single listener from the dispatch queue.\n         * @param {Function} listener Handler function that should be removed.\n         * @param {Object} [context] Execution context (since you can add the same handler multiple times if executing in a different context).\n         * @return {Function} Listener handler function.\n         */\n        remove : function (listener, context) {\n            validateListener(listener, 'remove');\n\n            var i = this._indexOfListener(listener, context);\n            if (i !== -1) {\n                this._bindings[i]._destroy(); //no reason to a SignalBinding exist if it isn't attached to a signal\n                this._bindings.splice(i, 1);\n            }\n            return listener;\n        },\n\n        /**\n         * Remove all listeners from the Signal.\n         */\n        removeAll : function () {\n            var n = this._bindings.length;\n            while (n--) {\n                this._bindings[n]._destroy();\n            }\n            this._bindings.length = 0;\n        },\n\n        /**\n         * @return {number} Number of listeners attached to the Signal.\n         */\n        getNumListeners : function () {\n            return this._bindings.length;\n        },\n\n        /**\n         * Stop propagation of the event, blocking the dispatch to next listeners on the queue.\n         * <p><strong>IMPORTANT:</strong> should be called only during signal dispatch, calling it before/after dispatch won't affect signal broadcast.</p>\n         * @see Signal.prototype.disable\n         */\n        halt : function () {\n            this._shouldPropagate = false;\n        },\n\n        /**\n         * Dispatch/Broadcast Signal to all listeners added to the queue.\n         * @param {...*} [params] Parameters that should be passed to each handler.\n         */\n        dispatch : function (params) {\n            if (! this.active) {\n                return;\n            }\n\n            var paramsArr = Array.prototype.slice.call(arguments),\n                n = this._bindings.length,\n                bindings;\n\n            if (this.memorize) {\n                this._prevParams = paramsArr;\n            }\n\n            if (! n) {\n                //should come after memorize\n                return;\n            }\n\n            bindings = this._bindings.slice(); //clone array in case add/remove items during dispatch\n            this._shouldPropagate = true; //in case `halt` was called before dispatch or during the previous dispatch.\n\n            //execute all callbacks until end of the list or until a callback returns `false` or stops propagation\n            //reverse loop since listeners with higher priority will be added at the end of the list\n            do { n--; } while (bindings[n] && this._shouldPropagate && bindings[n].execute(paramsArr) !== false);\n        },\n\n        /**\n         * Forget memorized arguments.\n         * @see Signal.memorize\n         */\n        forget : function(){\n            this._prevParams = null;\n        },\n\n        /**\n         * Remove all bindings from signal and destroy any reference to external objects (destroy Signal object).\n         * <p><strong>IMPORTANT:</strong> calling any method on the signal instance after calling dispose will throw errors.</p>\n         */\n        dispose : function () {\n            this.removeAll();\n            delete this._bindings;\n            delete this._prevParams;\n        },\n\n        /**\n         * @return {string} String representation of the object.\n         */\n        toString : function () {\n            return '[Signal active:'+ this.active +' numListeners:'+ this.getNumListeners() +']';\n        }\n\n    };\n\n\n    // Namespace -----------------------------------------------------\n    //================================================================\n\n    /**\n     * Signals namespace\n     * @namespace\n     * @name signals\n     */\n    var signals = Signal;\n\n    /**\n     * Custom event broadcaster\n     * @see Signal\n     */\n    // alias for backwards compatibility (see #gh-44)\n    signals.Signal = Signal;\n\n\n\n    //exports to multiple environments\n    if(typeof define === 'function' && define.amd){ //AMD\n        define('Signal',[],function () { return signals; });\n    } else if (typeof module !== 'undefined' && module.exports){ //node\n        module.exports = signals;\n    } else { //browser\n        //use string because of Google closure compiler ADVANCED_MODE\n        /*jslint sub:true */\n        global['signals'] = signals;\n    }\n\n}(this));\n\n",
    "\n(function() {\n  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  define('cs!app/components/Timer',['require','Signal'],function(require) {\n    var Signals, Timer;\n    Signals = require('Signal');\n    return Timer = (function() {\n      function Timer() {\n        this.update = __bind(this.update, this);\n        this.totalDuration = 240 * 1000;\n        this.time = [0];\n        this.is_playing = false;\n        this.last_timeStamp = -1;\n        this.updated = new Signals.Signal();\n        window.requestAnimationFrame(this.update);\n      }\n\n      Timer.prototype.play = function() {\n        return this.is_playing = true;\n      };\n\n      Timer.prototype.stop = function() {\n        return this.is_playing = false;\n      };\n\n      Timer.prototype.toggle = function() {\n        return this.is_playing = !this.is_playing;\n      };\n\n      Timer.prototype.seek = function(time) {\n        return this.time = time;\n      };\n\n      Timer.prototype.update = function(timestamp) {\n        var elapsed;\n        if (this.last_timeStamp === -1) {\n          this.last_timeStamp = timestamp;\n        }\n        elapsed = timestamp - this.last_timeStamp;\n        if (this.is_playing) {\n          this.time[0] += elapsed;\n        }\n        this.updated.dispatch(this.time[0]);\n        this.last_timeStamp = timestamp;\n        return window.requestAnimationFrame(this.update);\n      };\n\n      return Timer;\n\n    })();\n  });\n\n}).call(this);\n\n",
    "/**\n * Seedable random number generator functions.\n * @version 1.0.0\n * @license Public Domain\n *\n * @example\n * var rng = new RNG('Example');\n * rng.random(40, 50);  // =>  42\n * rng.uniform();       // =>  0.7972798995050903\n * rng.normal();        // => -0.6698504543216376\n * rng.exponential();   // =>  1.0547367609131555\n * rng.poisson(4);      // =>  2\n * rng.gamma(4);        // =>  2.781724687386858\n */\n\n/**\n * @param {String} seed A string to seed the generator.\n * @constructor\n */\nfunction RC4(seed) {\n    this.s = new Array(256);\n    this.i = 0;\n    this.j = 0;\n    for (var i = 0; i < 256; i++) {\n        this.s[i] = i;\n    }\n    if (seed) {\n        this.mix(seed);\n    }\n}\n\n/**\n * Get the underlying bytes of a string.\n * @param {string} string\n * @returns {Array} An array of bytes\n */\nRC4.getStringBytes = function(string) {\n    var output = [];\n    for (var i = 0; i < string.length; i++) {\n        var c = string.charCodeAt(i);\n        var bytes = [];\n        do {\n            bytes.push(c & 0xFF);\n            c = c >> 8;\n        } while (c > 0);\n        output = output.concat(bytes.reverse());\n    }\n    return output;\n};\n\nRC4.prototype._swap = function(i, j) {\n    var tmp = this.s[i];\n    this.s[i] = this.s[j];\n    this.s[j] = tmp;\n};\n\n/**\n * Mix additional entropy into this generator.\n * @param {String} seed\n */\nRC4.prototype.mix = function(seed) {\n    var input = RC4.getStringBytes(seed);\n    var j = 0;\n    for (var i = 0; i < this.s.length; i++) {\n        j += this.s[i] + input[i % input.length];\n        j %= 256;\n        this._swap(i, j);\n    }\n};\n\n/**\n * @returns {number} The next byte of output from the generator.\n */\nRC4.prototype.next = function() {\n    this.i = (this.i + 1) % 256;\n    this.j = (this.j + this.s[this.i]) % 256;\n    this._swap(this.i, this.j);\n    return this.s[(this.s[this.i] + this.s[this.j]) % 256];\n};\n\n/**\n * Create a new random number generator with optional seed. If the\n * provided seed is a function (i.e. Math.random) it will be used as\n * the uniform number generator.\n * @param seed An arbitrary object used to seed the generator.\n * @constructor\n */\nfunction RNG(seed) {\n    if (seed == null) {\n        seed = (Math.random() + Date.now()).toString();\n    } else if (typeof seed === \"function\") {\n        // Use it as a uniform number generator\n        this.uniform = seed;\n        this.nextByte = function() {\n            return ~~(this.uniform() * 256);\n        };\n        seed = null;\n    } else if (Object.prototype.toString.call(seed) !== \"[object String]\") {\n        seed = JSON.stringify(seed);\n    }\n    this._normal = null;\n    if (seed) {\n        this._state = new RC4(seed);\n    } else {\n        this._state = null;\n    }\n}\n\n/**\n * @returns {number} Uniform random number between 0 and 255.\n */\nRNG.prototype.nextByte = function() {\n    return this._state.next();\n};\n\n/**\n * @returns {number} Uniform random number between 0 and 1.\n */\nRNG.prototype.uniform = function() {\n    var BYTES = 7; // 56 bits to make a 53-bit double\n    var output = 0;\n    for (var i = 0; i < BYTES; i++) {\n        output *= 256;\n        output += this.nextByte();\n    }\n    return output / (Math.pow(2, BYTES * 8) - 1);\n};\n\n/**\n * Produce a random integer within [n, m).\n * @param {number} [n=0]\n * @param {number} m\n *\n */\nRNG.prototype.random = function(n, m) {\n    if (n == null) {\n        return this.uniform();\n    } else if (m == null) {\n        m = n;\n        n = 0;\n    }\n    return n + Math.floor(this.uniform() * (m - n));\n};\n\n/**\n * Generates numbers using this.uniform() with the Box-Muller transform.\n * @returns {number} Normally-distributed random number of mean 0, variance 1.\n */\nRNG.prototype.normal = function() {\n    if (this._normal !== null) {\n        var n = this._normal;\n        this._normal = null;\n        return n;\n    } else {\n        var x = this.uniform() || Math.pow(2, -53); // can't be exactly 0\n        var y = this.uniform();\n        this._normal = Math.sqrt(-2 * Math.log(x)) * Math.sin(2 * Math.PI * y);\n        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n    }\n};\n\n/**\n * Generates numbers using this.uniform().\n * @returns {number} Number from the exponential distribution, lambda = 1.\n */\nRNG.prototype.exponential = function() {\n    return -Math.log(this.uniform() || Math.pow(2, -53));\n};\n\n/**\n * Generates numbers using this.uniform() and Knuth's method.\n * @param {number} [mean=1]\n * @returns {number} Number from the Poisson distribution.\n */\nRNG.prototype.poisson = function(mean) {\n    var L = Math.exp(-(mean || 1));\n    var k = 0, p = 1;\n    do {\n        k++;\n        p *= this.uniform();\n    } while (p > L);\n    return k - 1;\n};\n\n/**\n * Generates numbers using this.uniform(), this.normal(),\n * this.exponential(), and the Marsaglia-Tsang method.\n * @param {number} a\n * @returns {number} Number from the gamma distribution.\n */\nRNG.prototype.gamma = function(a) {\n    var d = (a < 1 ? 1 + a : a) - 1 / 3;\n    var c = 1 / Math.sqrt(9 * d);\n    do {\n        do {\n            var x = this.normal();\n            var v = Math.pow(c * x + 1, 3);\n        } while (v <= 0);\n        var u = this.uniform();\n        var x2 = Math.pow(x, 2);\n    } while (u >= 1 - 0.0331 * x2 * x2 &&\n             Math.log(u) >= 0.5 * x2 + d * (1 - v + Math.log(v)));\n    if (a < 1) {\n        return d * v * Math.exp(this.exponential() / -a);\n    } else {\n        return d * v;\n    }\n};\n\n/**\n * Accepts a dice rolling notation string and returns a generator\n * function for that distribution. The parser is quite flexible.\n * @param {string} expr A dice-rolling, expression i.e. '2d6+10'.\n * @param {RNG} rng An optional RNG object.\n * @returns {Function}\n */\nRNG.roller = function(expr, rng) {\n    var parts = expr.split(/(\\d+)?d(\\d+)([+-]\\d+)?/).slice(1);\n    var dice = parseFloat(parts[0]) || 1;\n    var sides = parseFloat(parts[1]);\n    var mod = parseFloat(parts[2]) || 0;\n    rng = rng || new RNG();\n    return function() {\n        var total = dice + mod;\n        for (var i = 0; i < dice; i++) {\n            total += rng.random(sides);\n        }\n        return total;\n    };\n};\n\n/* Provide a pre-made generator instance. */\nRNG.$ = new RNG();\n\ndefine(\"rng\", (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global.RNG;\n    };\n}(this)));\n\n",
    "\n(function() {\n  define('cs!app/components/Colors',['require','threejs'],function(require) {\n    var Colors, THREE, items, length;\n    THREE = require('threejs');\n    items = [new THREE.Color(0xc0ddde), new THREE.Color(0xf1c47e)];\n    length = items.length;\n    return Colors = (function() {\n      function Colors() {}\n\n      Colors.get = function(index) {\n        index = Math.abs(parseInt(index, 10));\n        return items[index % length];\n      };\n\n      return Colors;\n\n    })();\n  });\n\n}).call(this);\n\n",
    "/*!\n * VERSION: 1.12.1\n * DATE: 2014-06-26\n * UPDATES AND DOCS AT: http://www.greensock.com\n * \n * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin\n *\n * @license Copyright (c) 2008-2014, GreenSock. All rights reserved.\n * This work is subject to the terms at http://www.greensock.com/terms_of_use.html or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\n\n(window._gsQueue || (window._gsQueue = [])).push( function() {\n\n\t\"use strict\";\n\n\twindow._gsDefine(\"TweenMax\", [\"core.Animation\",\"core.SimpleTimeline\",\"TweenLite\"], function(Animation, SimpleTimeline, TweenLite) {\n\n\t\tvar _slice = [].slice,\n\t\t\tTweenMax = function(target, duration, vars) {\n\t\t\t\tTweenLite.call(this, target, duration, vars);\n\t\t\t\tthis._cycle = 0;\n\t\t\t\tthis._yoyo = (this.vars.yoyo === true);\n\t\t\t\tthis._repeat = this.vars.repeat || 0;\n\t\t\t\tthis._repeatDelay = this.vars.repeatDelay || 0;\n\t\t\t\tthis._dirty = true; //ensures that if there is any repeat, the totalDuration will get recalculated to accurately report it.\n\t\t\t\tthis.render = TweenMax.prototype.render; //speed optimization (avoid prototype lookup on this \"hot\" method)\n\t\t\t},\n\t\t\t_tinyNum = 0.0000000001,\n\t\t\tTweenLiteInternals = TweenLite._internals,\n\t\t\t_isSelector = TweenLiteInternals.isSelector,\n\t\t\t_isArray = TweenLiteInternals.isArray,\n\t\t\tp = TweenMax.prototype = TweenLite.to({}, 0.1, {}),\n\t\t\t_blankArray = [];\n\n\t\tTweenMax.version = \"1.12.1\";\n\t\tp.constructor = TweenMax;\n\t\tp.kill()._gc = false;\n\t\tTweenMax.killTweensOf = TweenMax.killDelayedCallsTo = TweenLite.killTweensOf;\n\t\tTweenMax.getTweensOf = TweenLite.getTweensOf;\n\t\tTweenMax.lagSmoothing = TweenLite.lagSmoothing;\n\t\tTweenMax.ticker = TweenLite.ticker;\n\t\tTweenMax.render = TweenLite.render;\n\n\t\tp.invalidate = function() {\n\t\t\tthis._yoyo = (this.vars.yoyo === true);\n\t\t\tthis._repeat = this.vars.repeat || 0;\n\t\t\tthis._repeatDelay = this.vars.repeatDelay || 0;\n\t\t\tthis._uncache(true);\n\t\t\treturn TweenLite.prototype.invalidate.call(this);\n\t\t};\n\t\t\n\t\tp.updateTo = function(vars, resetDuration) {\n\t\t\tvar curRatio = this.ratio, p;\n\t\t\tif (resetDuration && this._startTime < this._timeline._time) {\n\t\t\t\tthis._startTime = this._timeline._time;\n\t\t\t\tthis._uncache(false);\n\t\t\t\tif (this._gc) {\n\t\t\t\t\tthis._enabled(true, false);\n\t\t\t\t} else {\n\t\t\t\t\tthis._timeline.insert(this, this._startTime - this._delay); //ensures that any necessary re-sequencing of Animations in the timeline occurs to make sure the rendering order is correct.\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (p in vars) {\n\t\t\t\tthis.vars[p] = vars[p];\n\t\t\t}\n\t\t\tif (this._initted) {\n\t\t\t\tif (resetDuration) {\n\t\t\t\t\tthis._initted = false;\n\t\t\t\t} else {\n\t\t\t\t\tif (this._gc) {\n\t\t\t\t\t\tthis._enabled(true, false);\n\t\t\t\t\t}\n\t\t\t\t\tif (this._notifyPluginsOfEnabled && this._firstPT) {\n\t\t\t\t\t\tTweenLite._onPluginEvent(\"_onDisable\", this); //in case a plugin like MotionBlur must perform some cleanup tasks\n\t\t\t\t\t}\n\t\t\t\t\tif (this._time / this._duration > 0.998) { //if the tween has finished (or come extremely close to finishing), we just need to rewind it to 0 and then render it again at the end which forces it to re-initialize (parsing the new vars). We allow tweens that are close to finishing (but haven't quite finished) to work this way too because otherwise, the values are so small when determining where to project the starting values that binary math issues creep in and can make the tween appear to render incorrectly when run backwards. \n\t\t\t\t\t\tvar prevTime = this._time;\n\t\t\t\t\t\tthis.render(0, true, false);\n\t\t\t\t\t\tthis._initted = false;\n\t\t\t\t\t\tthis.render(prevTime, true, false);\n\t\t\t\t\t} else if (this._time > 0) {\n\t\t\t\t\t\tthis._initted = false;\n\t\t\t\t\t\tthis._init();\n\t\t\t\t\t\tvar inv = 1 / (1 - curRatio),\n\t\t\t\t\t\t\tpt = this._firstPT, endValue;\n\t\t\t\t\t\twhile (pt) {\n\t\t\t\t\t\t\tendValue = pt.s + pt.c; \n\t\t\t\t\t\t\tpt.c *= inv;\n\t\t\t\t\t\t\tpt.s = endValue - pt.c;\n\t\t\t\t\t\t\tpt = pt._next;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\t\t\t\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tif (!this._initted) if (this._duration === 0 && this.vars.repeat) { //zero duration tweens that render immediately have render() called from TweenLite's constructor, before TweenMax's constructor has finished setting _repeat, _repeatDelay, and _yoyo which are critical in determining totalDuration() so we need to call invalidate() which is a low-kb way to get those set properly.\n\t\t\t\tthis.invalidate();\n\t\t\t}\n\t\t\tvar totalDur = (!this._dirty) ? this._totalDuration : this.totalDuration(),\n\t\t\t\tprevTime = this._time,\n\t\t\t\tprevTotalTime = this._totalTime, \n\t\t\t\tprevCycle = this._cycle,\n\t\t\t\tduration = this._duration,\n\t\t\t\tprevRawPrevTime = this._rawPrevTime,\n\t\t\t\tisComplete, callback, pt, cycleDuration, r, type, pow, rawPrevTime, i;\n\t\t\tif (time >= totalDur) {\n\t\t\t\tthis._totalTime = totalDur;\n\t\t\t\tthis._cycle = this._repeat;\n\t\t\t\tif (this._yoyo && (this._cycle & 1) !== 0) {\n\t\t\t\t\tthis._time = 0;\n\t\t\t\t\tthis.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t\t\t\t} else {\n\t\t\t\t\tthis._time = duration;\n\t\t\t\t\tthis.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n\t\t\t\t}\n\t\t\t\tif (!this._reversed) {\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\tcallback = \"onComplete\";\n\t\t\t\t}\n\t\t\t\tif (duration === 0) if (this._initted || !this.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\tif (this._startTime === this._timeline._duration) { //if a zero-duration tween is at the VERY end of a timeline and that timeline renders at its end, it will typically add a tiny bit of cushion to the render time to prevent rounding errors from getting in the way of tweens rendering their VERY end. If we then reverse() that timeline, the zero-duration tween will trigger its onReverseComplete even though technically the playhead didn't pass over it again. It's a very specific edge case we must accommodate.\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (time === 0 || prevRawPrevTime < 0 || prevRawPrevTime === _tinyNum) if (prevRawPrevTime !== time) {\n\t\t\t\t\t\tforce = true;\n\t\t\t\t\t\tif (prevRawPrevTime > _tinyNum) {\n\t\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (time < 0.0000001) { //to work around occasional floating point math artifacts, round super small values to 0.\n\t\t\t\tthis._totalTime = this._time = this._cycle = 0;\n\t\t\t\tthis.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t\t\t\tif (prevTotalTime !== 0 || (duration === 0 && prevRawPrevTime > 0 && prevRawPrevTime !== _tinyNum)) {\n\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\tisComplete = this._reversed;\n\t\t\t\t}\n\t\t\t\tif (time < 0) {\n\t\t\t\t\tthis._active = false;\n\t\t\t\t\tif (duration === 0) if (this._initted || !this.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\t\tif (prevRawPrevTime >= 0) {\n\t\t\t\t\t\t\tforce = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t\t}\n\t\t\t\t} else if (!this._initted) { //if we render the very beginning (time == 0) of a fromTo(), we must force the render (normal tweens wouldn't need to render at a time of 0 when the prevTime was also 0). This is also mandatory to make sure overwriting kicks in immediately.\n\t\t\t\t\tforce = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._totalTime = this._time = time;\n\t\t\t\t\n\t\t\t\tif (this._repeat !== 0) {\n\t\t\t\t\tcycleDuration = duration + this._repeatDelay;\n\t\t\t\t\tthis._cycle = (this._totalTime / cycleDuration) >> 0; //originally _totalTime % cycleDuration but floating point errors caused problems, so I normalized it. (4 % 0.8 should be 0 but Flash reports it as 0.79999999!)\n\t\t\t\t\tif (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration) {\n\t\t\t\t\t\tthis._cycle--; //otherwise when rendered exactly at the end time, it will act as though it is repeating (at the beginning)\n\t\t\t\t\t}\n\t\t\t\t\tthis._time = this._totalTime - (this._cycle * cycleDuration);\n\t\t\t\t\tif (this._yoyo) if ((this._cycle & 1) !== 0) {\n\t\t\t\t\t\tthis._time = duration - this._time;\n\t\t\t\t\t}\n\t\t\t\t\tif (this._time > duration) {\n\t\t\t\t\t\tthis._time = duration;\n\t\t\t\t\t} else if (this._time < 0) {\n\t\t\t\t\t\tthis._time = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this._easeType) {\n\t\t\t\t\tr = this._time / duration;\n\t\t\t\t\ttype = this._easeType;\n\t\t\t\t\tpow = this._easePower;\n\t\t\t\t\tif (type === 1 || (type === 3 && r >= 0.5)) {\n\t\t\t\t\t\tr = 1 - r;\n\t\t\t\t\t}\n\t\t\t\t\tif (type === 3) {\n\t\t\t\t\t\tr *= 2;\n\t\t\t\t\t}\n\t\t\t\t\tif (pow === 1) {\n\t\t\t\t\t\tr *= r;\n\t\t\t\t\t} else if (pow === 2) {\n\t\t\t\t\t\tr *= r * r;\n\t\t\t\t\t} else if (pow === 3) {\n\t\t\t\t\t\tr *= r * r * r;\n\t\t\t\t\t} else if (pow === 4) {\n\t\t\t\t\t\tr *= r * r * r * r;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (type === 1) {\n\t\t\t\t\t\tthis.ratio = 1 - r;\n\t\t\t\t\t} else if (type === 2) {\n\t\t\t\t\t\tthis.ratio = r;\n\t\t\t\t\t} else if (this._time / duration < 0.5) {\n\t\t\t\t\t\tthis.ratio = r / 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.ratio = 1 - (r / 2);\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.ratio = this._ease.getRatio(this._time / duration);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\t\n\t\t\tif (prevTime === this._time && !force && prevCycle === this._cycle) {\n\t\t\t\tif (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) { //so that onUpdate fires even during the repeatDelay - as long as the totalTime changed, we should trigger onUpdate.\n\t\t\t\t\tthis._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || _blankArray);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} else if (!this._initted) {\n\t\t\t\tthis._init();\n\t\t\t\tif (!this._initted || this._gc) { //immediateRender tweens typically won't initialize until the playhead advances (_time is greater than 0) in order to ensure that overwriting occurs properly. Also, if all of the tweening properties have been overwritten (which would cause _gc to be true, as set in _init()), we shouldn't continue otherwise an onStart callback could be called for example.\n\t\t\t\t\treturn;\n\t\t\t\t} else if (!force && this._firstPT && ((this.vars.lazy !== false && this._duration) || (this.vars.lazy && !this._duration))) { //we stick it in the queue for rendering at the very end of the tick - this is a performance optimization because browsers invalidate styles and force a recalculation if you read, write, and then read style data (so it's better to read/read/read/write/write/write than read/write/read/write/read/write). The down side, of course, is that usually you WANT things to render immediately because you may have code running right after that which depends on the change. Like imagine running TweenLite.set(...) and then immediately after that, creating a nother tween that animates the same property to another value; the starting values of that 2nd tween wouldn't be accurate if lazy is true.\n\t\t\t\t\tthis._time = prevTime;\n\t\t\t\t\tthis._totalTime = prevTotalTime;\n\t\t\t\t\tthis._rawPrevTime = prevRawPrevTime;\n\t\t\t\t\tthis._cycle = prevCycle;\n\t\t\t\t\tTweenLiteInternals.lazyTweens.push(this);\n\t\t\t\t\tthis._lazy = time;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//_ease is initially set to defaultEase, so now that init() has run, _ease is set properly and we need to recalculate the ratio. Overall this is faster than using conditional logic earlier in the method to avoid having to set ratio twice because we only init() once but renderTime() gets called VERY frequently.\n\t\t\t\tif (this._time && !isComplete) {\n\t\t\t\t\tthis.ratio = this._ease.getRatio(this._time / duration);\n\t\t\t\t} else if (isComplete && this._ease._calcEnd) {\n\t\t\t\t\tthis.ratio = this._ease.getRatio((this._time === 0) ? 0 : 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._lazy !== false) {\n\t\t\t\tthis._lazy = false;\n\t\t\t}\n\n\t\t\tif (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n\t\t\t\tthis._active = true; //so that if the user renders a tween (as opposed to the timeline rendering it), the timeline is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the tween already finished but the user manually re-renders it as halfway done.\n\t\t\t}\n\t\t\tif (prevTotalTime === 0) {\n\t\t\t\tif (this._initted === 2 && time > 0) {\n\t\t\t\t\t//this.invalidate();\n\t\t\t\t\tthis._init(); //will just apply overwriting since _initted of (2) means it was a from() tween that had immediateRender:true\n\t\t\t\t}\n\t\t\t\tif (this._startAt) {\n\t\t\t\t\tif (time >= 0) {\n\t\t\t\t\t\tthis._startAt.render(time, suppressEvents, force);\n\t\t\t\t\t} else if (!callback) {\n\t\t\t\t\t\tcallback = \"_dummyGS\"; //if no callback is defined, use a dummy value just so that the condition at the end evaluates as true because _startAt should render AFTER the normal render loop when the time is negative. We could handle this in a more intuitive way, of course, but the render loop is the MOST important thing to optimize, so this technique allows us to avoid adding extra conditional logic in a high-frequency area.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.vars.onStart) if (this._totalTime !== 0 || duration === 0) if (!suppressEvents) {\n\t\t\t\t\tthis.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || _blankArray);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tpt = this._firstPT;\n\t\t\twhile (pt) {\n\t\t\t\tif (pt.f) {\n\t\t\t\t\tpt.t[pt.p](pt.c * this.ratio + pt.s);\n\t\t\t\t} else {\n\t\t\t\t\tpt.t[pt.p] = pt.c * this.ratio + pt.s;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t\t\n\t\t\tif (this._onUpdate) {\n\t\t\t\tif (time < 0) if (this._startAt && this._startTime) { //if the tween is positioned at the VERY beginning (_startTime 0) of its parent timeline, it's illegal for the playhead to go back further, so we should not render the recorded startAt values.\n\t\t\t\t\tthis._startAt.render(time, suppressEvents, force); //note: for performance reasons, we tuck this conditional logic inside less traveled areas (most tweens don't have an onUpdate). We'd just have it at the end before the onComplete, but the values should be updated before any onUpdate is called, so we ALSO put it here and then if it's not called, we do so later near the onComplete.\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents) if (this._totalTime !== prevTotalTime || isComplete) {\n\t\t\t\t\tthis._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || _blankArray);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._cycle !== prevCycle) if (!suppressEvents) if (!this._gc) if (this.vars.onRepeat) {\n\t\t\t\tthis.vars.onRepeat.apply(this.vars.onRepeatScope || this, this.vars.onRepeatParams || _blankArray);\n\t\t\t}\n\t\t\tif (callback) if (!this._gc) { //check gc because there's a chance that kill() could be called in an onUpdate\n\t\t\t\tif (time < 0 && this._startAt && !this._onUpdate && this._startTime) { //if the tween is positioned at the VERY beginning (_startTime 0) of its parent timeline, it's illegal for the playhead to go back further, so we should not render the recorded startAt values.\n\t\t\t\t\tthis._startAt.render(time, suppressEvents, force);\n\t\t\t\t}\n\t\t\t\tif (isComplete) {\n\t\t\t\t\tif (this._timeline.autoRemoveChildren) {\n\t\t\t\t\t\tthis._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis._active = false;\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents && this.vars[callback]) {\n\t\t\t\t\tthis.vars[callback].apply(this.vars[callback + \"Scope\"] || this, this.vars[callback + \"Params\"] || _blankArray);\n\t\t\t\t}\n\t\t\t\tif (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) { //the onComplete or onReverseComplete could trigger movement of the playhead and for zero-duration tweens (which must discern direction) that land directly back on their start time, we don't want to fire again on the next render. Think of several addPause()'s in a timeline that forces the playhead to a certain spot, but what if it's already paused and another tween is tweening the \"time\" of the timeline? Each time it moves [forward] past that spot, it would move back, and since suppressEvents is true, it'd reset _rawPrevTime to _tinyNum so that when it begins again, the callback would fire (so ultimately it could bounce back and forth during that tween). Again, this is a very uncommon scenario, but possible nonetheless.\n\t\t\t\t\tthis._rawPrevTime = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n//---- STATIC FUNCTIONS -----------------------------------------------------------------------------------------------------------\n\t\t\n\t\tTweenMax.to = function(target, duration, vars) {\n\t\t\treturn new TweenMax(target, duration, vars);\n\t\t};\n\t\t\n\t\tTweenMax.from = function(target, duration, vars) {\n\t\t\tvars.runBackwards = true;\n\t\t\tvars.immediateRender = (vars.immediateRender != false);\n\t\t\treturn new TweenMax(target, duration, vars);\n\t\t};\n\t\t\n\t\tTweenMax.fromTo = function(target, duration, fromVars, toVars) {\n\t\t\ttoVars.startAt = fromVars;\n\t\t\ttoVars.immediateRender = (toVars.immediateRender != false && fromVars.immediateRender != false);\n\t\t\treturn new TweenMax(target, duration, toVars);\n\t\t};\n\t\t\n\t\tTweenMax.staggerTo = TweenMax.allTo = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\tstagger = stagger || 0;\n\t\t\tvar delay = vars.delay || 0,\n\t\t\t\ta = [],\n\t\t\t\tfinalComplete = function() {\n\t\t\t\t\tif (vars.onComplete) {\n\t\t\t\t\t\tvars.onComplete.apply(vars.onCompleteScope || this, arguments);\n\t\t\t\t\t}\n\t\t\t\t\tonCompleteAll.apply(onCompleteAllScope || this, onCompleteAllParams || _blankArray);\n\t\t\t\t},\n\t\t\t\tl, copy, i, p;\n\t\t\tif (!_isArray(targets)) {\n\t\t\t\tif (typeof(targets) === \"string\") {\n\t\t\t\t\ttargets = TweenLite.selector(targets) || targets;\n\t\t\t\t}\n\t\t\t\tif (_isSelector(targets)) {\n\t\t\t\t\ttargets = _slice.call(targets, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\tl = targets.length;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tcopy = {};\n\t\t\t\tfor (p in vars) {\n\t\t\t\t\tcopy[p] = vars[p];\n\t\t\t\t}\n\t\t\t\tcopy.delay = delay;\n\t\t\t\tif (i === l - 1 && onCompleteAll) {\n\t\t\t\t\tcopy.onComplete = finalComplete;\n\t\t\t\t}\n\t\t\t\ta[i] = new TweenMax(targets[i], duration, copy);\n\t\t\t\tdelay += stagger;\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\t\t\n\t\tTweenMax.staggerFrom = TweenMax.allFrom = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\tvars.runBackwards = true;\n\t\t\tvars.immediateRender = (vars.immediateRender != false);\n\t\t\treturn TweenMax.staggerTo(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t\t};\n\t\t\n\t\tTweenMax.staggerFromTo = TweenMax.allFromTo = function(targets, duration, fromVars, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\ttoVars.startAt = fromVars;\n\t\t\ttoVars.immediateRender = (toVars.immediateRender != false && fromVars.immediateRender != false);\n\t\t\treturn TweenMax.staggerTo(targets, duration, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t\t};\n\t\t\t\t\n\t\tTweenMax.delayedCall = function(delay, callback, params, scope, useFrames) {\n\t\t\treturn new TweenMax(callback, 0, {delay:delay, onComplete:callback, onCompleteParams:params, onCompleteScope:scope, onReverseComplete:callback, onReverseCompleteParams:params, onReverseCompleteScope:scope, immediateRender:false, useFrames:useFrames, overwrite:0});\n\t\t};\n\t\t\n\t\tTweenMax.set = function(target, vars) {\n\t\t\treturn new TweenMax(target, 0, vars);\n\t\t};\n\t\t\n\t\tTweenMax.isTweening = function(target) {\n\t\t\treturn (TweenLite.getTweensOf(target, true).length > 0);\n\t\t};\n\t\t\n\t\tvar _getChildrenOf = function(timeline, includeTimelines) {\n\t\t\t\tvar a = [],\n\t\t\t\t\tcnt = 0,\n\t\t\t\t\ttween = timeline._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tif (tween instanceof TweenLite) {\n\t\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (includeTimelines) {\n\t\t\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ta = a.concat(_getChildrenOf(tween, includeTimelines));\n\t\t\t\t\t\tcnt = a.length;\n\t\t\t\t\t}\n\t\t\t\t\ttween = tween._next;\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t}, \n\t\t\tgetAllTweens = TweenMax.getAllTweens = function(includeTimelines) {\n\t\t\t\treturn _getChildrenOf(Animation._rootTimeline, includeTimelines).concat( _getChildrenOf(Animation._rootFramesTimeline, includeTimelines) );\n\t\t\t};\n\t\t\n\t\tTweenMax.killAll = function(complete, tweens, delayedCalls, timelines) {\n\t\t\tif (tweens == null) {\n\t\t\t\ttweens = true;\n\t\t\t}\n\t\t\tif (delayedCalls == null) {\n\t\t\t\tdelayedCalls = true;\n\t\t\t}\n\t\t\tvar a = getAllTweens((timelines != false)),\n\t\t\t\tl = a.length,\n\t\t\t\tallTrue = (tweens && delayedCalls && timelines),\n\t\t\t\tisDC, tween, i;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\ttween = a[i];\n\t\t\t\tif (allTrue || (tween instanceof SimpleTimeline) || ((isDC = (tween.target === tween.vars.onComplete)) && delayedCalls) || (tweens && !isDC)) {\n\t\t\t\t\tif (complete) {\n\t\t\t\t\t\ttween.totalTime(tween._reversed ? 0 : tween.totalDuration());\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttween._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tTweenMax.killChildTweensOf = function(parent, complete) {\n\t\t\tif (parent == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar tl = TweenLiteInternals.tweenLookup,\n\t\t\t\ta, curParent, p, i, l;\n\t\t\tif (typeof(parent) === \"string\") {\n\t\t\t\tparent = TweenLite.selector(parent) || parent;\n\t\t\t}\n\t\t\tif (_isSelector(parent)) {\n\t\t\t\tparent = _slice.call(parent, 0);\n\t\t\t}\n\t\t\tif (_isArray(parent)) {\n\t\t\t\ti = parent.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tTweenMax.killChildTweensOf(parent[i], complete);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ta = [];\n\t\t\tfor (p in tl) {\n\t\t\t\tcurParent = tl[p].target.parentNode;\n\t\t\t\twhile (curParent) {\n\t\t\t\t\tif (curParent === parent) {\n\t\t\t\t\t\ta = a.concat(tl[p].tweens);\n\t\t\t\t\t}\n\t\t\t\t\tcurParent = curParent.parentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tl = a.length;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tif (complete) {\n\t\t\t\t\ta[i].totalTime(a[i].totalDuration());\n\t\t\t\t}\n\t\t\t\ta[i]._enabled(false, false);\n\t\t\t}\n\t\t};\n\n\t\tvar _changePause = function(pause, tweens, delayedCalls, timelines) {\n\t\t\ttweens = (tweens !== false);\n\t\t\tdelayedCalls = (delayedCalls !== false);\n\t\t\ttimelines = (timelines !== false);\n\t\t\tvar a = getAllTweens(timelines),\n\t\t\t\tallTrue = (tweens && delayedCalls && timelines),\n\t\t\t\ti = a.length,\n\t\t\t\tisDC, tween;\n\t\t\twhile (--i > -1) {\n\t\t\t\ttween = a[i];\n\t\t\t\tif (allTrue || (tween instanceof SimpleTimeline) || ((isDC = (tween.target === tween.vars.onComplete)) && delayedCalls) || (tweens && !isDC)) {\n\t\t\t\t\ttween.paused(pause);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tTweenMax.pauseAll = function(tweens, delayedCalls, timelines) {\n\t\t\t_changePause(true, tweens, delayedCalls, timelines);\n\t\t};\n\t\t\n\t\tTweenMax.resumeAll = function(tweens, delayedCalls, timelines) {\n\t\t\t_changePause(false, tweens, delayedCalls, timelines);\n\t\t};\n\n\t\tTweenMax.globalTimeScale = function(value) {\n\t\t\tvar tl = Animation._rootTimeline,\n\t\t\t\tt = TweenLite.ticker.time;\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn tl._timeScale;\n\t\t\t}\n\t\t\tvalue = value || _tinyNum; //can't allow zero because it'll throw the math off\n\t\t\ttl._startTime = t - ((t - tl._startTime) * tl._timeScale / value);\n\t\t\ttl = Animation._rootFramesTimeline;\n\t\t\tt = TweenLite.ticker.frame;\n\t\t\ttl._startTime = t - ((t - tl._startTime) * tl._timeScale / value);\n\t\t\ttl._timeScale = Animation._rootTimeline._timeScale = value;\n\t\t\treturn value;\n\t\t};\n\t\t\n\t\n//---- GETTERS / SETTERS ----------------------------------------------------------------------------------------------------------\n\t\t\n\t\tp.progress = function(value) {\n\t\t\treturn (!arguments.length) ? this._time / this.duration() : this.totalTime( this.duration() * ((this._yoyo && (this._cycle & 1) !== 0) ? 1 - value : value) + (this._cycle * (this._duration + this._repeatDelay)), false);\n\t\t};\n\t\t\n\t\tp.totalProgress = function(value) {\n\t\t\treturn (!arguments.length) ? this._totalTime / this.totalDuration() : this.totalTime( this.totalDuration() * value, false);\n\t\t};\n\t\t\n\t\tp.time = function(value, suppressEvents) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._time;\n\t\t\t}\n\t\t\tif (this._dirty) {\n\t\t\t\tthis.totalDuration();\n\t\t\t}\n\t\t\tif (value > this._duration) {\n\t\t\t\tvalue = this._duration;\n\t\t\t}\n\t\t\tif (this._yoyo && (this._cycle & 1) !== 0) {\n\t\t\t\tvalue = (this._duration - value) + (this._cycle * (this._duration + this._repeatDelay));\n\t\t\t} else if (this._repeat !== 0) {\n\t\t\t\tvalue += this._cycle * (this._duration + this._repeatDelay);\n\t\t\t}\n\t\t\treturn this.totalTime(value, suppressEvents);\n\t\t};\n\n\t\tp.duration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._duration; //don't set _dirty = false because there could be repeats that haven't been factored into the _totalDuration yet. Otherwise, if you create a repeated TweenMax and then immediately check its duration(), it would cache the value and the totalDuration would not be correct, thus repeats wouldn't take effect.\n\t\t\t}\n\t\t\treturn Animation.prototype.duration.call(this, value);\n\t\t};\n\n\t\tp.totalDuration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tif (this._dirty) {\n\t\t\t\t\t//instead of Infinity, we use 999999999999 so that we can accommodate reverses\n\t\t\t\t\tthis._totalDuration = (this._repeat === -1) ? 999999999999 : this._duration * (this._repeat + 1) + (this._repeatDelay * this._repeat);\n\t\t\t\t\tthis._dirty = false;\n\t\t\t\t}\n\t\t\t\treturn this._totalDuration;\n\t\t\t}\n\t\t\treturn (this._repeat === -1) ? this : this.duration( (value - (this._repeat * this._repeatDelay)) / (this._repeat + 1) );\n\t\t};\n\t\t\n\t\tp.repeat = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._repeat;\n\t\t\t}\n\t\t\tthis._repeat = value;\n\t\t\treturn this._uncache(true);\n\t\t};\n\t\t\n\t\tp.repeatDelay = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._repeatDelay;\n\t\t\t}\n\t\t\tthis._repeatDelay = value;\n\t\t\treturn this._uncache(true);\n\t\t};\n\t\t\n\t\tp.yoyo = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._yoyo;\n\t\t\t}\n\t\t\tthis._yoyo = value;\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\t\n\t\treturn TweenMax;\n\t\t\n\t}, true);\n\n\n\n\n\n\n\n\n/*\n * ----------------------------------------------------------------\n * TimelineLite\n * ----------------------------------------------------------------\n */\n\twindow._gsDefine(\"TimelineLite\", [\"core.Animation\",\"core.SimpleTimeline\",\"TweenLite\"], function(Animation, SimpleTimeline, TweenLite) {\n\n\t\tvar TimelineLite = function(vars) {\n\t\t\t\tSimpleTimeline.call(this, vars);\n\t\t\t\tthis._labels = {};\n\t\t\t\tthis.autoRemoveChildren = (this.vars.autoRemoveChildren === true);\n\t\t\t\tthis.smoothChildTiming = (this.vars.smoothChildTiming === true);\n\t\t\t\tthis._sortChildren = true;\n\t\t\t\tthis._onUpdate = this.vars.onUpdate;\n\t\t\t\tvar v = this.vars,\n\t\t\t\t\tval, p;\n\t\t\t\tfor (p in v) {\n\t\t\t\t\tval = v[p];\n\t\t\t\t\tif (_isArray(val)) if (val.join(\"\").indexOf(\"{self}\") !== -1) {\n\t\t\t\t\t\tv[p] = this._swapSelfInParams(val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (_isArray(v.tweens)) {\n\t\t\t\t\tthis.add(v.tweens, 0, v.align, v.stagger);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_tinyNum = 0.0000000001,\n\t\t\t_isSelector = TweenLite._internals.isSelector,\n\t\t\t_isArray = TweenLite._internals.isArray,\n\t\t\t_blankArray = [],\n\t\t\t_globals = window._gsDefine.globals,\n\t\t\t_copy = function(vars) {\n\t\t\t\tvar copy = {}, p;\n\t\t\t\tfor (p in vars) {\n\t\t\t\t\tcopy[p] = vars[p];\n\t\t\t\t}\n\t\t\t\treturn copy;\n\t\t\t},\n\t\t\t_pauseCallback = function(tween, callback, params, scope) {\n\t\t\t\ttween._timeline.pause(tween._startTime);\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback.apply(scope || tween._timeline, params || _blankArray);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_slice = _blankArray.slice,\n\t\t\tp = TimelineLite.prototype = new SimpleTimeline();\n\n\t\tTimelineLite.version = \"1.12.1\";\n\t\tp.constructor = TimelineLite;\n\t\tp.kill()._gc = false;\n\n\t\tp.to = function(target, duration, vars, position) {\n\t\t\tvar Engine = (vars.repeat && _globals.TweenMax) || TweenLite;\n\t\t\treturn duration ? this.add( new Engine(target, duration, vars), position) : this.set(target, vars, position);\n\t\t};\n\n\t\tp.from = function(target, duration, vars, position) {\n\t\t\treturn this.add( ((vars.repeat && _globals.TweenMax) || TweenLite).from(target, duration, vars), position);\n\t\t};\n\n\t\tp.fromTo = function(target, duration, fromVars, toVars, position) {\n\t\t\tvar Engine = (toVars.repeat && _globals.TweenMax) || TweenLite;\n\t\t\treturn duration ? this.add( Engine.fromTo(target, duration, fromVars, toVars), position) : this.set(target, toVars, position);\n\t\t};\n\n\t\tp.staggerTo = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\tvar tl = new TimelineLite({onComplete:onCompleteAll, onCompleteParams:onCompleteAllParams, onCompleteScope:onCompleteAllScope, smoothChildTiming:this.smoothChildTiming}),\n\t\t\t\ti;\n\t\t\tif (typeof(targets) === \"string\") {\n\t\t\t\ttargets = TweenLite.selector(targets) || targets;\n\t\t\t}\n\t\t\tif (_isSelector(targets)) { //senses if the targets object is a selector. If it is, we should translate it into an array.\n\t\t\t\ttargets = _slice.call(targets, 0);\n\t\t\t}\n\t\t\tstagger = stagger || 0;\n\t\t\tfor (i = 0; i < targets.length; i++) {\n\t\t\t\tif (vars.startAt) {\n\t\t\t\t\tvars.startAt = _copy(vars.startAt);\n\t\t\t\t}\n\t\t\t\ttl.to(targets[i], duration, _copy(vars), i * stagger);\n\t\t\t}\n\t\t\treturn this.add(tl, position);\n\t\t};\n\n\t\tp.staggerFrom = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\tvars.immediateRender = (vars.immediateRender != false);\n\t\t\tvars.runBackwards = true;\n\t\t\treturn this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t\t};\n\n\t\tp.staggerFromTo = function(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\ttoVars.startAt = fromVars;\n\t\t\ttoVars.immediateRender = (toVars.immediateRender != false && fromVars.immediateRender != false);\n\t\t\treturn this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t\t};\n\n\t\tp.call = function(callback, params, scope, position) {\n\t\t\treturn this.add( TweenLite.delayedCall(0, callback, params, scope), position);\n\t\t};\n\n\t\tp.set = function(target, vars, position) {\n\t\t\tposition = this._parseTimeOrLabel(position, 0, true);\n\t\t\tif (vars.immediateRender == null) {\n\t\t\t\tvars.immediateRender = (position === this._time && !this._paused);\n\t\t\t}\n\t\t\treturn this.add( new TweenLite(target, 0, vars), position);\n\t\t};\n\n\t\tTimelineLite.exportRoot = function(vars, ignoreDelayedCalls) {\n\t\t\tvars = vars || {};\n\t\t\tif (vars.smoothChildTiming == null) {\n\t\t\t\tvars.smoothChildTiming = true;\n\t\t\t}\n\t\t\tvar tl = new TimelineLite(vars),\n\t\t\t\troot = tl._timeline,\n\t\t\t\ttween, next;\n\t\t\tif (ignoreDelayedCalls == null) {\n\t\t\t\tignoreDelayedCalls = true;\n\t\t\t}\n\t\t\troot._remove(tl, true);\n\t\t\ttl._startTime = 0;\n\t\t\ttl._rawPrevTime = tl._time = tl._totalTime = root._time;\n\t\t\ttween = root._first;\n\t\t\twhile (tween) {\n\t\t\t\tnext = tween._next;\n\t\t\t\tif (!ignoreDelayedCalls || !(tween instanceof TweenLite && tween.target === tween.vars.onComplete)) {\n\t\t\t\t\ttl.add(tween, tween._startTime - tween._delay);\n\t\t\t\t}\n\t\t\t\ttween = next;\n\t\t\t}\n\t\t\troot.add(tl, 0);\n\t\t\treturn tl;\n\t\t};\n\n\t\tp.add = function(value, position, align, stagger) {\n\t\t\tvar curTime, l, i, child, tl, beforeRawTime;\n\t\t\tif (typeof(position) !== \"number\") {\n\t\t\t\tposition = this._parseTimeOrLabel(position, 0, true, value);\n\t\t\t}\n\t\t\tif (!(value instanceof Animation)) {\n\t\t\t\tif ((value instanceof Array) || (value && value.push && _isArray(value))) {\n\t\t\t\t\talign = align || \"normal\";\n\t\t\t\t\tstagger = stagger || 0;\n\t\t\t\t\tcurTime = position;\n\t\t\t\t\tl = value.length;\n\t\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\t\tif (_isArray(child = value[i])) {\n\t\t\t\t\t\t\tchild = new TimelineLite({tweens:child});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.add(child, curTime);\n\t\t\t\t\t\tif (typeof(child) !== \"string\" && typeof(child) !== \"function\") {\n\t\t\t\t\t\t\tif (align === \"sequence\") {\n\t\t\t\t\t\t\t\tcurTime = child._startTime + (child.totalDuration() / child._timeScale);\n\t\t\t\t\t\t\t} else if (align === \"start\") {\n\t\t\t\t\t\t\t\tchild._startTime -= child.delay();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurTime += stagger;\n\t\t\t\t\t}\n\t\t\t\t\treturn this._uncache(true);\n\t\t\t\t} else if (typeof(value) === \"string\") {\n\t\t\t\t\treturn this.addLabel(value, position);\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\tvalue = TweenLite.delayedCall(0, value);\n\t\t\t\t} else {\n\t\t\t\t\tthrow(\"Cannot add \" + value + \" into the timeline; it is not a tween, timeline, function, or string.\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSimpleTimeline.prototype.add.call(this, value, position);\n\n\t\t\t//if the timeline has already ended but the inserted tween/timeline extends the duration, we should enable this timeline again so that it renders properly. We should also align the playhead with the parent timeline's when appropriate.\n\t\t\tif (this._gc || this._time === this._duration) if (!this._paused) if (this._duration < this.duration()) {\n\t\t\t\t//in case any of the ancestors had completed but should now be enabled...\n\t\t\t\ttl = this;\n\t\t\t\tbeforeRawTime = (tl.rawTime() > value._startTime); //if the tween is placed on the timeline so that it starts BEFORE the current rawTime, we should align the playhead (move the timeline). This is because sometimes users will create a timeline, let it finish, and much later append a tween and expect it to run instead of jumping to its end state. While technically one could argue that it should jump to its end state, that's not what users intuitively expect.\n\t\t\t\twhile (tl._timeline) {\n\t\t\t\t\tif (beforeRawTime && tl._timeline.smoothChildTiming) {\n\t\t\t\t\t\ttl.totalTime(tl._totalTime, true); //moves the timeline (shifts its startTime) if necessary, and also enables it.\n\t\t\t\t\t} else if (tl._gc) {\n\t\t\t\t\t\ttl._enabled(true, false);\n\t\t\t\t\t}\n\t\t\t\t\ttl = tl._timeline;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\tp.remove = function(value) {\n\t\t\tif (value instanceof Animation) {\n\t\t\t\treturn this._remove(value, false);\n\t\t\t} else if (value instanceof Array || (value && value.push && _isArray(value))) {\n\t\t\t\tvar i = value.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tthis.remove(value[i]);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t} else if (typeof(value) === \"string\") {\n\t\t\t\treturn this.removeLabel(value);\n\t\t\t}\n\t\t\treturn this.kill(null, value);\n\t\t};\n\n\t\tp._remove = function(tween, skipDisable) {\n\t\t\tSimpleTimeline.prototype._remove.call(this, tween, skipDisable);\n\t\t\tvar last = this._last;\n\t\t\tif (!last) {\n\t\t\t\tthis._time = this._totalTime = this._duration = this._totalDuration = 0;\n\t\t\t} else if (this._time > last._startTime + last._totalDuration / last._timeScale) {\n\t\t\t\tthis._time = this.duration();\n\t\t\t\tthis._totalTime = this._totalDuration;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.append = function(value, offsetOrLabel) {\n\t\t\treturn this.add(value, this._parseTimeOrLabel(null, offsetOrLabel, true, value));\n\t\t};\n\n\t\tp.insert = p.insertMultiple = function(value, position, align, stagger) {\n\t\t\treturn this.add(value, position || 0, align, stagger);\n\t\t};\n\n\t\tp.appendMultiple = function(tweens, offsetOrLabel, align, stagger) {\n\t\t\treturn this.add(tweens, this._parseTimeOrLabel(null, offsetOrLabel, true, tweens), align, stagger);\n\t\t};\n\n\t\tp.addLabel = function(label, position) {\n\t\t\tthis._labels[label] = this._parseTimeOrLabel(position);\n\t\t\treturn this;\n\t\t};\n\n\t\tp.addPause = function(position, callback, params, scope) {\n\t\t\treturn this.call(_pauseCallback, [\"{self}\", callback, params, scope], this, position);\n\t\t};\n\n\t\tp.removeLabel = function(label) {\n\t\t\tdelete this._labels[label];\n\t\t\treturn this;\n\t\t};\n\n\t\tp.getLabelTime = function(label) {\n\t\t\treturn (this._labels[label] != null) ? this._labels[label] : -1;\n\t\t};\n\n\t\tp._parseTimeOrLabel = function(timeOrLabel, offsetOrLabel, appendIfAbsent, ignore) {\n\t\t\tvar i;\n\t\t\t//if we're about to add a tween/timeline (or an array of them) that's already a child of this timeline, we should remove it first so that it doesn't contaminate the duration().\n\t\t\tif (ignore instanceof Animation && ignore.timeline === this) {\n\t\t\t\tthis.remove(ignore);\n\t\t\t} else if (ignore && ((ignore instanceof Array) || (ignore.push && _isArray(ignore)))) {\n\t\t\t\ti = ignore.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (ignore[i] instanceof Animation && ignore[i].timeline === this) {\n\t\t\t\t\t\tthis.remove(ignore[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof(offsetOrLabel) === \"string\") {\n\t\t\t\treturn this._parseTimeOrLabel(offsetOrLabel, (appendIfAbsent && typeof(timeOrLabel) === \"number\" && this._labels[offsetOrLabel] == null) ? timeOrLabel - this.duration() : 0, appendIfAbsent);\n\t\t\t}\n\t\t\toffsetOrLabel = offsetOrLabel || 0;\n\t\t\tif (typeof(timeOrLabel) === \"string\" && (isNaN(timeOrLabel) || this._labels[timeOrLabel] != null)) { //if the string is a number like \"1\", check to see if there's a label with that name, otherwise interpret it as a number (absolute value).\n\t\t\t\ti = timeOrLabel.indexOf(\"=\");\n\t\t\t\tif (i === -1) {\n\t\t\t\t\tif (this._labels[timeOrLabel] == null) {\n\t\t\t\t\t\treturn appendIfAbsent ? (this._labels[timeOrLabel] = this.duration() + offsetOrLabel) : offsetOrLabel;\n\t\t\t\t\t}\n\t\t\t\t\treturn this._labels[timeOrLabel] + offsetOrLabel;\n\t\t\t\t}\n\t\t\t\toffsetOrLabel = parseInt(timeOrLabel.charAt(i-1) + \"1\", 10) * Number(timeOrLabel.substr(i+1));\n\t\t\t\ttimeOrLabel = (i > 1) ? this._parseTimeOrLabel(timeOrLabel.substr(0, i-1), 0, appendIfAbsent) : this.duration();\n\t\t\t} else if (timeOrLabel == null) {\n\t\t\t\ttimeOrLabel = this.duration();\n\t\t\t}\n\t\t\treturn Number(timeOrLabel) + offsetOrLabel;\n\t\t};\n\n\t\tp.seek = function(position, suppressEvents) {\n\t\t\treturn this.totalTime((typeof(position) === \"number\") ? position : this._parseTimeOrLabel(position), (suppressEvents !== false));\n\t\t};\n\n\t\tp.stop = function() {\n\t\t\treturn this.paused(true);\n\t\t};\n\n\t\tp.gotoAndPlay = function(position, suppressEvents) {\n\t\t\treturn this.play(position, suppressEvents);\n\t\t};\n\n\t\tp.gotoAndStop = function(position, suppressEvents) {\n\t\t\treturn this.pause(position, suppressEvents);\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tif (this._gc) {\n\t\t\t\tthis._enabled(true, false);\n\t\t\t}\n\t\t\tvar totalDur = (!this._dirty) ? this._totalDuration : this.totalDuration(),\n\t\t\t\tprevTime = this._time,\n\t\t\t\tprevStart = this._startTime,\n\t\t\t\tprevTimeScale = this._timeScale,\n\t\t\t\tprevPaused = this._paused,\n\t\t\t\ttween, isComplete, next, callback, internalForce;\n\t\t\tif (time >= totalDur) {\n\t\t\t\tthis._totalTime = this._time = totalDur;\n\t\t\t\tif (!this._reversed) if (!this._hasPausedChild()) {\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\tcallback = \"onComplete\";\n\t\t\t\t\tif (this._duration === 0) if (time === 0 || this._rawPrevTime < 0 || this._rawPrevTime === _tinyNum) if (this._rawPrevTime !== time && this._first) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t\tif (this._rawPrevTime > _tinyNum) {\n\t\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._rawPrevTime = (this._duration || !suppressEvents || time || this._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\ttime = totalDur + 0.0001; //to avoid occasional floating point rounding errors - sometimes child tweens/timelines were not being fully completed (their progress might be 0.999999999999998 instead of 1 because when _time - tween._startTime is performed, floating point errors would return a value that was SLIGHTLY off). Try (999999999999.7 - 999999999999) * 1 = 0.699951171875 instead of 0.7.\n\n\t\t\t} else if (time < 0.0000001) { //to work around occasional floating point math artifacts, round super small values to 0.\n\t\t\t\tthis._totalTime = this._time = 0;\n\t\t\t\tif (prevTime !== 0 || (this._duration === 0 && this._rawPrevTime !== _tinyNum && (this._rawPrevTime > 0 || (time < 0 && this._rawPrevTime >= 0)))) {\n\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\tisComplete = this._reversed;\n\t\t\t\t}\n\t\t\t\tif (time < 0) {\n\t\t\t\t\tthis._active = false;\n\t\t\t\t\tif (this._duration === 0) if (this._rawPrevTime >= 0 && this._first) { //zero-duration timelines are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis._rawPrevTime = time;\n\t\t\t\t} else {\n\t\t\t\t\tthis._rawPrevTime = (this._duration || !suppressEvents || time || this._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\n\t\t\t\t\ttime = 0; //to avoid occasional floating point rounding errors (could cause problems especially with zero-duration tweens at the very beginning of the timeline)\n\t\t\t\t\tif (!this._initted) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tthis._totalTime = this._time = this._rawPrevTime = time;\n\t\t\t}\n\t\t\tif ((this._time === prevTime || !this._first) && !force && !internalForce) {\n\t\t\t\treturn;\n\t\t\t} else if (!this._initted) {\n\t\t\t\tthis._initted = true;\n\t\t\t}\n\n\t\t\tif (!this._active) if (!this._paused && this._time !== prevTime && time > 0) {\n\t\t\t\tthis._active = true;  //so that if the user renders the timeline (as opposed to the parent timeline rendering it), it is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the timeline already finished but the user manually re-renders it as halfway done, for example.\n\t\t\t}\n\n\t\t\tif (prevTime === 0) if (this.vars.onStart) if (this._time !== 0) if (!suppressEvents) {\n\t\t\t\tthis.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || _blankArray);\n\t\t\t}\n\n\t\t\tif (this._time >= prevTime) {\n\t\t\t\ttween = this._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._next; //record it here because the value could change after rendering...\n\t\t\t\t\tif (this._paused && !prevPaused) { //in case a tween pauses the timeline when rendering\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= this._time && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttween = this._last;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._prev; //record it here because the value could change after rendering...\n\t\t\t\t\tif (this._paused && !prevPaused) { //in case a tween pauses the timeline when rendering\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= prevTime && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._onUpdate) if (!suppressEvents) {\n\t\t\t\tthis._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || _blankArray);\n\t\t\t}\n\n\t\t\tif (callback) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) { //if one of the tweens that was rendered altered this timeline's startTime (like if an onComplete reversed the timeline), it probably isn't complete. If it is, don't worry, because whatever call altered the startTime would complete if it was necessary at the new time. The only exception is the timeScale property. Also check _gc because there's a chance that kill() could be called in an onUpdate\n\t\t\t\tif (isComplete) {\n\t\t\t\t\tif (this._timeline.autoRemoveChildren) {\n\t\t\t\t\t\tthis._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis._active = false;\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents && this.vars[callback]) {\n\t\t\t\t\tthis.vars[callback].apply(this.vars[callback + \"Scope\"] || this, this.vars[callback + \"Params\"] || _blankArray);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp._hasPausedChild = function() {\n\t\t\tvar tween = this._first;\n\t\t\twhile (tween) {\n\t\t\t\tif (tween._paused || ((tween instanceof TimelineLite) && tween._hasPausedChild())) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tp.getChildren = function(nested, tweens, timelines, ignoreBeforeTime) {\n\t\t\tignoreBeforeTime = ignoreBeforeTime || -9999999999;\n\t\t\tvar a = [],\n\t\t\t\ttween = this._first,\n\t\t\t\tcnt = 0;\n\t\t\twhile (tween) {\n\t\t\t\tif (tween._startTime < ignoreBeforeTime) {\n\t\t\t\t\t//do nothing\n\t\t\t\t} else if (tween instanceof TweenLite) {\n\t\t\t\t\tif (tweens !== false) {\n\t\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (timelines !== false) {\n\t\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t\t}\n\t\t\t\t\tif (nested !== false) {\n\t\t\t\t\t\ta = a.concat(tween.getChildren(true, tweens, timelines));\n\t\t\t\t\t\tcnt = a.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\t\tp.getTweensOf = function(target, nested) {\n\t\t\tvar disabled = this._gc,\n\t\t\t\ta = [],\n\t\t\t\tcnt = 0,\n\t\t\t\ttweens, i;\n\t\t\tif (disabled) {\n\t\t\t\tthis._enabled(true, true); //getTweensOf() filters out disabled tweens, and we have to mark them as _gc = true when the timeline completes in order to allow clean garbage collection, so temporarily re-enable the timeline here.\n\t\t\t}\n\t\t\ttweens = TweenLite.getTweensOf(target);\n\t\t\ti = tweens.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (tweens[i].timeline === this || (nested && this._contains(tweens[i]))) {\n\t\t\t\t\ta[cnt++] = tweens[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (disabled) {\n\t\t\t\tthis._enabled(false, true);\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\t\tp._contains = function(tween) {\n\t\t\tvar tl = tween.timeline;\n\t\t\twhile (tl) {\n\t\t\t\tif (tl === this) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\ttl = tl.timeline;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tp.shiftChildren = function(amount, adjustLabels, ignoreBeforeTime) {\n\t\t\tignoreBeforeTime = ignoreBeforeTime || 0;\n\t\t\tvar tween = this._first,\n\t\t\t\tlabels = this._labels,\n\t\t\t\tp;\n\t\t\twhile (tween) {\n\t\t\t\tif (tween._startTime >= ignoreBeforeTime) {\n\t\t\t\t\ttween._startTime += amount;\n\t\t\t\t}\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\tif (adjustLabels) {\n\t\t\t\tfor (p in labels) {\n\t\t\t\t\tif (labels[p] >= ignoreBeforeTime) {\n\t\t\t\t\t\tlabels[p] += amount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp._kill = function(vars, target) {\n\t\t\tif (!vars && !target) {\n\t\t\t\treturn this._enabled(false, false);\n\t\t\t}\n\t\t\tvar tweens = (!target) ? this.getChildren(true, true, false) : this.getTweensOf(target),\n\t\t\t\ti = tweens.length,\n\t\t\t\tchanged = false;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (tweens[i]._kill(vars, target)) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn changed;\n\t\t};\n\n\t\tp.clear = function(labels) {\n\t\t\tvar tweens = this.getChildren(false, true, true),\n\t\t\t\ti = tweens.length;\n\t\t\tthis._time = this._totalTime = 0;\n\t\t\twhile (--i > -1) {\n\t\t\t\ttweens[i]._enabled(false, false);\n\t\t\t}\n\t\t\tif (labels !== false) {\n\t\t\t\tthis._labels = {};\n\t\t\t}\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp.invalidate = function() {\n\t\t\tvar tween = this._first;\n\t\t\twhile (tween) {\n\t\t\t\ttween.invalidate();\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp._enabled = function(enabled, ignoreTimeline) {\n\t\t\tif (enabled === this._gc) {\n\t\t\t\tvar tween = this._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\ttween._enabled(enabled, true);\n\t\t\t\t\ttween = tween._next;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn SimpleTimeline.prototype._enabled.call(this, enabled, ignoreTimeline);\n\t\t};\n\n\t\tp.duration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tif (this._dirty) {\n\t\t\t\t\tthis.totalDuration(); //just triggers recalculation\n\t\t\t\t}\n\t\t\t\treturn this._duration;\n\t\t\t}\n\t\t\tif (this.duration() !== 0 && value !== 0) {\n\t\t\t\tthis.timeScale(this._duration / value);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.totalDuration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tif (this._dirty) {\n\t\t\t\t\tvar max = 0,\n\t\t\t\t\t\ttween = this._last,\n\t\t\t\t\t\tprevStart = 999999999999,\n\t\t\t\t\t\tprev, end;\n\t\t\t\t\twhile (tween) {\n\t\t\t\t\t\tprev = tween._prev; //record it here in case the tween changes position in the sequence...\n\t\t\t\t\t\tif (tween._dirty) {\n\t\t\t\t\t\t\ttween.totalDuration(); //could change the tween._startTime, so make sure the tween's cache is clean before analyzing it.\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tween._startTime > prevStart && this._sortChildren && !tween._paused) { //in case one of the tweens shifted out of order, it needs to be re-inserted into the correct position in the sequence\n\t\t\t\t\t\t\tthis.add(tween, tween._startTime - tween._delay);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprevStart = tween._startTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tween._startTime < 0 && !tween._paused) { //children aren't allowed to have negative startTimes unless smoothChildTiming is true, so adjust here if one is found.\n\t\t\t\t\t\t\tmax -= tween._startTime;\n\t\t\t\t\t\t\tif (this._timeline.smoothChildTiming) {\n\t\t\t\t\t\t\t\tthis._startTime += tween._startTime / this._timeScale;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.shiftChildren(-tween._startTime, false, -9999999999);\n\t\t\t\t\t\t\tprevStart = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tend = tween._startTime + (tween._totalDuration / tween._timeScale);\n\t\t\t\t\t\tif (end > max) {\n\t\t\t\t\t\t\tmax = end;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttween = prev;\n\t\t\t\t\t}\n\t\t\t\t\tthis._duration = this._totalDuration = max;\n\t\t\t\t\tthis._dirty = false;\n\t\t\t\t}\n\t\t\t\treturn this._totalDuration;\n\t\t\t}\n\t\t\tif (this.totalDuration() !== 0) if (value !== 0) {\n\t\t\t\tthis.timeScale(this._totalDuration / value);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.usesFrames = function() {\n\t\t\tvar tl = this._timeline;\n\t\t\twhile (tl._timeline) {\n\t\t\t\ttl = tl._timeline;\n\t\t\t}\n\t\t\treturn (tl === Animation._rootFramesTimeline);\n\t\t};\n\n\t\tp.rawTime = function() {\n\t\t\treturn this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale;\n\t\t};\n\n\t\treturn TimelineLite;\n\n\t}, true);\n\t\n\n\n\n\n\n\n\n\t\n\t\n\t\n\t\n\t\n/*\n * ----------------------------------------------------------------\n * TimelineMax\n * ----------------------------------------------------------------\n */\n\twindow._gsDefine(\"TimelineMax\", [\"TimelineLite\",\"TweenLite\",\"easing.Ease\"], function(TimelineLite, TweenLite, Ease) {\n\n\t\tvar TimelineMax = function(vars) {\n\t\t\t\tTimelineLite.call(this, vars);\n\t\t\t\tthis._repeat = this.vars.repeat || 0;\n\t\t\t\tthis._repeatDelay = this.vars.repeatDelay || 0;\n\t\t\t\tthis._cycle = 0;\n\t\t\t\tthis._yoyo = (this.vars.yoyo === true);\n\t\t\t\tthis._dirty = true;\n\t\t\t},\n\t\t\t_tinyNum = 0.0000000001,\n\t\t\t_blankArray = [],\n\t\t\t_easeNone = new Ease(null, null, 1, 0),\n\t\t\tp = TimelineMax.prototype = new TimelineLite();\n\n\t\tp.constructor = TimelineMax;\n\t\tp.kill()._gc = false;\n\t\tTimelineMax.version = \"1.12.1\";\n\n\t\tp.invalidate = function() {\n\t\t\tthis._yoyo = (this.vars.yoyo === true);\n\t\t\tthis._repeat = this.vars.repeat || 0;\n\t\t\tthis._repeatDelay = this.vars.repeatDelay || 0;\n\t\t\tthis._uncache(true);\n\t\t\treturn TimelineLite.prototype.invalidate.call(this);\n\t\t};\n\n\t\tp.addCallback = function(callback, position, params, scope) {\n\t\t\treturn this.add( TweenLite.delayedCall(0, callback, params, scope), position);\n\t\t};\n\n\t\tp.removeCallback = function(callback, position) {\n\t\t\tif (callback) {\n\t\t\t\tif (position == null) {\n\t\t\t\t\tthis._kill(null, callback);\n\t\t\t\t} else {\n\t\t\t\t\tvar a = this.getTweensOf(callback, false),\n\t\t\t\t\t\ti = a.length,\n\t\t\t\t\t\ttime = this._parseTimeOrLabel(position);\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (a[i]._startTime === time) {\n\t\t\t\t\t\t\ta[i]._enabled(false, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.tweenTo = function(position, vars) {\n\t\t\tvars = vars || {};\n\t\t\tvar copy = {ease:_easeNone, overwrite:(vars.delay ? 2 : 1), useFrames:this.usesFrames(), immediateRender:false},//note: set overwrite to 1 (true/all) by default unless there's a delay so that we avoid a racing situation that could happen if, for example, an onmousemove creates the same tweenTo() over and over again.\n\t\t\t\tduration, p, t;\n\t\t\tfor (p in vars) {\n\t\t\t\tcopy[p] = vars[p];\n\t\t\t}\n\t\t\tcopy.time = this._parseTimeOrLabel(position);\n\t\t\tduration = (Math.abs(Number(copy.time) - this._time) / this._timeScale) || 0.001;\n\t\t\tt = new TweenLite(this, duration, copy);\n\t\t\tcopy.onStart = function() {\n\t\t\t\tt.target.paused(true);\n\t\t\t\tif (t.vars.time !== t.target.time() && duration === t.duration()) { //don't make the duration zero - if it's supposed to be zero, don't worry because it's already initting the tween and will complete immediately, effectively making the duration zero anyway. If we make duration zero, the tween won't run at all.\n\t\t\t\t\tt.duration( Math.abs( t.vars.time - t.target.time()) / t.target._timeScale );\n\t\t\t\t}\n\t\t\t\tif (vars.onStart) { //in case the user had an onStart in the vars - we don't want to overwrite it.\n\t\t\t\t\tvars.onStart.apply(vars.onStartScope || t, vars.onStartParams || _blankArray);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn t;\n\t\t};\n\n\t\tp.tweenFromTo = function(fromPosition, toPosition, vars) {\n\t\t\tvars = vars || {};\n\t\t\tfromPosition = this._parseTimeOrLabel(fromPosition);\n\t\t\tvars.startAt = {onComplete:this.seek, onCompleteParams:[fromPosition], onCompleteScope:this};\n\t\t\tvars.immediateRender = (vars.immediateRender !== false);\n\t\t\tvar t = this.tweenTo(toPosition, vars);\n\t\t\treturn t.duration((Math.abs( t.vars.time - fromPosition) / this._timeScale) || 0.001);\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tif (this._gc) {\n\t\t\t\tthis._enabled(true, false);\n\t\t\t}\n\t\t\tvar totalDur = (!this._dirty) ? this._totalDuration : this.totalDuration(),\n\t\t\t\tdur = this._duration,\n\t\t\t\tprevTime = this._time,\n\t\t\t\tprevTotalTime = this._totalTime,\n\t\t\t\tprevStart = this._startTime,\n\t\t\t\tprevTimeScale = this._timeScale,\n\t\t\t\tprevRawPrevTime = this._rawPrevTime,\n\t\t\t\tprevPaused = this._paused,\n\t\t\t\tprevCycle = this._cycle,\n\t\t\t\ttween, isComplete, next, callback, internalForce, cycleDuration;\n\t\t\tif (time >= totalDur) {\n\t\t\t\tif (!this._locked) {\n\t\t\t\t\tthis._totalTime = totalDur;\n\t\t\t\t\tthis._cycle = this._repeat;\n\t\t\t\t}\n\t\t\t\tif (!this._reversed) if (!this._hasPausedChild()) {\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\tcallback = \"onComplete\";\n\t\t\t\t\tif (this._duration === 0) if (time === 0 || prevRawPrevTime < 0 || prevRawPrevTime === _tinyNum) if (prevRawPrevTime !== time && this._first) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t\tif (prevRawPrevTime > _tinyNum) {\n\t\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._rawPrevTime = (this._duration || !suppressEvents || time || this._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\tif (this._yoyo && (this._cycle & 1) !== 0) {\n\t\t\t\t\tthis._time = time = 0;\n\t\t\t\t} else {\n\t\t\t\t\tthis._time = dur;\n\t\t\t\t\ttime = dur + 0.0001; //to avoid occasional floating point rounding errors - sometimes child tweens/timelines were not being fully completed (their progress might be 0.999999999999998 instead of 1 because when _time - tween._startTime is performed, floating point errors would return a value that was SLIGHTLY off). Try (999999999999.7 - 999999999999) * 1 = 0.699951171875 instead of 0.7. We cannot do less then 0.0001 because the same issue can occur when the duration is extremely large like 999999999999 in which case adding 0.00000001, for example, causes it to act like nothing was added.\n\t\t\t\t}\n\n\t\t\t} else if (time < 0.0000001) { //to work around occasional floating point math artifacts, round super small values to 0.\n\t\t\t\tif (!this._locked) {\n\t\t\t\t\tthis._totalTime = this._cycle = 0;\n\t\t\t\t}\n\t\t\t\tthis._time = 0;\n\t\t\t\tif (prevTime !== 0 || (dur === 0 && prevRawPrevTime !== _tinyNum && (prevRawPrevTime > 0 || (time < 0 && prevRawPrevTime >= 0)) && !this._locked)) { //edge case for checking time < 0 && prevRawPrevTime >= 0: a zero-duration fromTo() tween inside a zero-duration timeline (yeah, very rare)\n\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\tisComplete = this._reversed;\n\t\t\t\t}\n\t\t\t\tif (time < 0) {\n\t\t\t\t\tthis._active = false;\n\t\t\t\t\tif (dur === 0) if (prevRawPrevTime >= 0 && this._first) { //zero-duration timelines are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis._rawPrevTime = time;\n\t\t\t\t} else {\n\t\t\t\t\tthis._rawPrevTime = (dur || !suppressEvents || time || this._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t\ttime = 0; //to avoid occasional floating point rounding errors (could cause problems especially with zero-duration tweens at the very beginning of the timeline)\n\t\t\t\t\tif (!this._initted) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tif (dur === 0 && prevRawPrevTime < 0) { //without this, zero-duration repeating timelines (like with a simple callback nested at the very beginning and a repeatDelay) wouldn't render the first time through.\n\t\t\t\t\tinternalForce = true;\n\t\t\t\t}\n\t\t\t\tthis._time = this._rawPrevTime = time;\n\t\t\t\tif (!this._locked) {\n\t\t\t\t\tthis._totalTime = time;\n\t\t\t\t\tif (this._repeat !== 0) {\n\t\t\t\t\t\tcycleDuration = dur + this._repeatDelay;\n\t\t\t\t\t\tthis._cycle = (this._totalTime / cycleDuration) >> 0; //originally _totalTime % cycleDuration but floating point errors caused problems, so I normalized it. (4 % 0.8 should be 0 but it gets reported as 0.79999999!)\n\t\t\t\t\t\tif (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration) {\n\t\t\t\t\t\t\tthis._cycle--; //otherwise when rendered exactly at the end time, it will act as though it is repeating (at the beginning)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._time = this._totalTime - (this._cycle * cycleDuration);\n\t\t\t\t\t\tif (this._yoyo) if ((this._cycle & 1) !== 0) {\n\t\t\t\t\t\t\tthis._time = dur - this._time;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this._time > dur) {\n\t\t\t\t\t\t\tthis._time = dur;\n\t\t\t\t\t\t\ttime = dur + 0.0001; //to avoid occasional floating point rounding error\n\t\t\t\t\t\t} else if (this._time < 0) {\n\t\t\t\t\t\t\tthis._time = time = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttime = this._time;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._cycle !== prevCycle) if (!this._locked) {\n\t\t\t\t/*\n\t\t\t\tmake sure children at the end/beginning of the timeline are rendered properly. If, for example,\n\t\t\t\ta 3-second long timeline rendered at 2.9 seconds previously, and now renders at 3.2 seconds (which\n\t\t\t\twould get transated to 2.8 seconds if the timeline yoyos or 0.2 seconds if it just repeats), there\n\t\t\t\tcould be a callback or a short tween that's at 2.95 or 3 seconds in which wouldn't render. So\n\t\t\t\twe need to push the timeline to the end (and/or beginning depending on its yoyo value). Also we must\n\t\t\t\tensure that zero-duration tweens at the very beginning or end of the TimelineMax work.\n\t\t\t\t*/\n\t\t\t\tvar backwards = (this._yoyo && (prevCycle & 1) !== 0),\n\t\t\t\t\twrap = (backwards === (this._yoyo && (this._cycle & 1) !== 0)),\n\t\t\t\t\trecTotalTime = this._totalTime,\n\t\t\t\t\trecCycle = this._cycle,\n\t\t\t\t\trecRawPrevTime = this._rawPrevTime,\n\t\t\t\t\trecTime = this._time;\n\n\t\t\t\tthis._totalTime = prevCycle * dur;\n\t\t\t\tif (this._cycle < prevCycle) {\n\t\t\t\t\tbackwards = !backwards;\n\t\t\t\t} else {\n\t\t\t\t\tthis._totalTime += dur;\n\t\t\t\t}\n\t\t\t\tthis._time = prevTime; //temporarily revert _time so that render() renders the children in the correct order. Without this, tweens won't rewind correctly. We could arhictect things in a \"cleaner\" way by splitting out the rendering queue into a separate method but for performance reasons, we kept it all inside this method.\n\n\t\t\t\tthis._rawPrevTime = (dur === 0) ? prevRawPrevTime - 0.0001 : prevRawPrevTime;\n\t\t\t\tthis._cycle = prevCycle;\n\t\t\t\tthis._locked = true; //prevents changes to totalTime and skips repeat/yoyo behavior when we recursively call render()\n\t\t\t\tprevTime = (backwards) ? 0 : dur;\n\t\t\t\tthis.render(prevTime, suppressEvents, (dur === 0));\n\t\t\t\tif (!suppressEvents) if (!this._gc) {\n\t\t\t\t\tif (this.vars.onRepeat) {\n\t\t\t\t\t\tthis.vars.onRepeat.apply(this.vars.onRepeatScope || this, this.vars.onRepeatParams || _blankArray);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (wrap) {\n\t\t\t\t\tprevTime = (backwards) ? dur + 0.0001 : -0.0001;\n\t\t\t\t\tthis.render(prevTime, true, false);\n\t\t\t\t}\n\t\t\t\tthis._locked = false;\n\t\t\t\tif (this._paused && !prevPaused) { //if the render() triggered callback that paused this timeline, we should abort (very rare, but possible)\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._time = recTime;\n\t\t\t\tthis._totalTime = recTotalTime;\n\t\t\t\tthis._cycle = recCycle;\n\t\t\t\tthis._rawPrevTime = recRawPrevTime;\n\t\t\t}\n\n\t\t\tif ((this._time === prevTime || !this._first) && !force && !internalForce) {\n\t\t\t\tif (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) { //so that onUpdate fires even during the repeatDelay - as long as the totalTime changed, we should trigger onUpdate.\n\t\t\t\t\tthis._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || _blankArray);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} else if (!this._initted) {\n\t\t\t\tthis._initted = true;\n\t\t\t}\n\n\t\t\tif (!this._active) if (!this._paused && this._totalTime !== prevTotalTime && time > 0) {\n\t\t\t\tthis._active = true;  //so that if the user renders the timeline (as opposed to the parent timeline rendering it), it is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the timeline already finished but the user manually re-renders it as halfway done, for example.\n\t\t\t}\n\n\t\t\tif (prevTotalTime === 0) if (this.vars.onStart) if (this._totalTime !== 0) if (!suppressEvents) {\n\t\t\t\tthis.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || _blankArray);\n\t\t\t}\n\n\t\t\tif (this._time >= prevTime) {\n\t\t\t\ttween = this._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._next; //record it here because the value could change after rendering...\n\t\t\t\t\tif (this._paused && !prevPaused) { //in case a tween pauses the timeline when rendering\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= this._time && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttween = this._last;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._prev; //record it here because the value could change after rendering...\n\t\t\t\t\tif (this._paused && !prevPaused) { //in case a tween pauses the timeline when rendering\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= prevTime && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._onUpdate) if (!suppressEvents) {\n\t\t\t\tthis._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || _blankArray);\n\t\t\t}\n\t\t\tif (callback) if (!this._locked) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) { //if one of the tweens that was rendered altered this timeline's startTime (like if an onComplete reversed the timeline), it probably isn't complete. If it is, don't worry, because whatever call altered the startTime would complete if it was necessary at the new time. The only exception is the timeScale property. Also check _gc because there's a chance that kill() could be called in an onUpdate\n\t\t\t\tif (isComplete) {\n\t\t\t\t\tif (this._timeline.autoRemoveChildren) {\n\t\t\t\t\t\tthis._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis._active = false;\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents && this.vars[callback]) {\n\t\t\t\t\tthis.vars[callback].apply(this.vars[callback + \"Scope\"] || this, this.vars[callback + \"Params\"] || _blankArray);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp.getActive = function(nested, tweens, timelines) {\n\t\t\tif (nested == null) {\n\t\t\t\tnested = true;\n\t\t\t}\n\t\t\tif (tweens == null) {\n\t\t\t\ttweens = true;\n\t\t\t}\n\t\t\tif (timelines == null) {\n\t\t\t\ttimelines = false;\n\t\t\t}\n\t\t\tvar a = [],\n\t\t\t\tall = this.getChildren(nested, tweens, timelines),\n\t\t\t\tcnt = 0,\n\t\t\t\tl = all.length,\n\t\t\t\ti, tween;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\ttween = all[i];\n\t\t\t\tif (tween.isActive()) {\n\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\n\t\tp.getLabelAfter = function(time) {\n\t\t\tif (!time) if (time !== 0) { //faster than isNan()\n\t\t\t\ttime = this._time;\n\t\t\t}\n\t\t\tvar labels = this.getLabelsArray(),\n\t\t\t\tl = labels.length,\n\t\t\t\ti;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tif (labels[i].time > time) {\n\t\t\t\t\treturn labels[i].name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tp.getLabelBefore = function(time) {\n\t\t\tif (time == null) {\n\t\t\t\ttime = this._time;\n\t\t\t}\n\t\t\tvar labels = this.getLabelsArray(),\n\t\t\t\ti = labels.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (labels[i].time < time) {\n\t\t\t\t\treturn labels[i].name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tp.getLabelsArray = function() {\n\t\t\tvar a = [],\n\t\t\t\tcnt = 0,\n\t\t\t\tp;\n\t\t\tfor (p in this._labels) {\n\t\t\t\ta[cnt++] = {time:this._labels[p], name:p};\n\t\t\t}\n\t\t\ta.sort(function(a,b) {\n\t\t\t\treturn a.time - b.time;\n\t\t\t});\n\t\t\treturn a;\n\t\t};\n\n\n//---- GETTERS / SETTERS -------------------------------------------------------------------------------------------------------\n\n\t\tp.progress = function(value) {\n\t\t\treturn (!arguments.length) ? this._time / this.duration() : this.totalTime( this.duration() * ((this._yoyo && (this._cycle & 1) !== 0) ? 1 - value : value) + (this._cycle * (this._duration + this._repeatDelay)), false);\n\t\t};\n\n\t\tp.totalProgress = function(value) {\n\t\t\treturn (!arguments.length) ? this._totalTime / this.totalDuration() : this.totalTime( this.totalDuration() * value, false);\n\t\t};\n\n\t\tp.totalDuration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tif (this._dirty) {\n\t\t\t\t\tTimelineLite.prototype.totalDuration.call(this); //just forces refresh\n\t\t\t\t\t//Instead of Infinity, we use 999999999999 so that we can accommodate reverses.\n\t\t\t\t\tthis._totalDuration = (this._repeat === -1) ? 999999999999 : this._duration * (this._repeat + 1) + (this._repeatDelay * this._repeat);\n\t\t\t\t}\n\t\t\t\treturn this._totalDuration;\n\t\t\t}\n\t\t\treturn (this._repeat === -1) ? this : this.duration( (value - (this._repeat * this._repeatDelay)) / (this._repeat + 1) );\n\t\t};\n\n\t\tp.time = function(value, suppressEvents) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._time;\n\t\t\t}\n\t\t\tif (this._dirty) {\n\t\t\t\tthis.totalDuration();\n\t\t\t}\n\t\t\tif (value > this._duration) {\n\t\t\t\tvalue = this._duration;\n\t\t\t}\n\t\t\tif (this._yoyo && (this._cycle & 1) !== 0) {\n\t\t\t\tvalue = (this._duration - value) + (this._cycle * (this._duration + this._repeatDelay));\n\t\t\t} else if (this._repeat !== 0) {\n\t\t\t\tvalue += this._cycle * (this._duration + this._repeatDelay);\n\t\t\t}\n\t\t\treturn this.totalTime(value, suppressEvents);\n\t\t};\n\n\t\tp.repeat = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._repeat;\n\t\t\t}\n\t\t\tthis._repeat = value;\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp.repeatDelay = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._repeatDelay;\n\t\t\t}\n\t\t\tthis._repeatDelay = value;\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp.yoyo = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._yoyo;\n\t\t\t}\n\t\t\tthis._yoyo = value;\n\t\t\treturn this;\n\t\t};\n\n\t\tp.currentLabel = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this.getLabelBefore(this._time + 0.00000001);\n\t\t\t}\n\t\t\treturn this.seek(value, true);\n\t\t};\n\n\t\treturn TimelineMax;\n\n\t}, true);\n\t\n\n\n\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n/*\n * ----------------------------------------------------------------\n * BezierPlugin\n * ----------------------------------------------------------------\n */\n\t(function() {\n\n\t\tvar _RAD2DEG = 180 / Math.PI,\n\t\t\t_r1 = [],\n\t\t\t_r2 = [],\n\t\t\t_r3 = [],\n\t\t\t_corProps = {},\n\t\t\tSegment = function(a, b, c, d) {\n\t\t\t\tthis.a = a;\n\t\t\t\tthis.b = b;\n\t\t\t\tthis.c = c;\n\t\t\t\tthis.d = d;\n\t\t\t\tthis.da = d - a;\n\t\t\t\tthis.ca = c - a;\n\t\t\t\tthis.ba = b - a;\n\t\t\t},\n\t\t\t_correlate = \",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\",\n\t\t\tcubicToQuadratic = function(a, b, c, d) {\n\t\t\t\tvar q1 = {a:a},\n\t\t\t\t\tq2 = {},\n\t\t\t\t\tq3 = {},\n\t\t\t\t\tq4 = {c:d},\n\t\t\t\t\tmab = (a + b) / 2,\n\t\t\t\t\tmbc = (b + c) / 2,\n\t\t\t\t\tmcd = (c + d) / 2,\n\t\t\t\t\tmabc = (mab + mbc) / 2,\n\t\t\t\t\tmbcd = (mbc + mcd) / 2,\n\t\t\t\t\tm8 = (mbcd - mabc) / 8;\n\t\t\t\tq1.b = mab + (a - mab) / 4;\n\t\t\t\tq2.b = mabc + m8;\n\t\t\t\tq1.c = q2.a = (q1.b + q2.b) / 2;\n\t\t\t\tq2.c = q3.a = (mabc + mbcd) / 2;\n\t\t\t\tq3.b = mbcd - m8;\n\t\t\t\tq4.b = mcd + (d - mcd) / 4;\n\t\t\t\tq3.c = q4.a = (q3.b + q4.b) / 2;\n\t\t\t\treturn [q1, q2, q3, q4];\n\t\t\t},\n\t\t\t_calculateControlPoints = function(a, curviness, quad, basic, correlate) {\n\t\t\t\tvar l = a.length - 1,\n\t\t\t\t\tii = 0,\n\t\t\t\t\tcp1 = a[0].a,\n\t\t\t\t\ti, p1, p2, p3, seg, m1, m2, mm, cp2, qb, r1, r2, tl;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tseg = a[ii];\n\t\t\t\t\tp1 = seg.a;\n\t\t\t\t\tp2 = seg.d;\n\t\t\t\t\tp3 = a[ii+1].d;\n\n\t\t\t\t\tif (correlate) {\n\t\t\t\t\t\tr1 = _r1[i];\n\t\t\t\t\t\tr2 = _r2[i];\n\t\t\t\t\t\ttl = ((r2 + r1) * curviness * 0.25) / (basic ? 0.5 : _r3[i] || 0.5);\n\t\t\t\t\t\tm1 = p2 - (p2 - p1) * (basic ? curviness * 0.5 : (r1 !== 0 ? tl / r1 : 0));\n\t\t\t\t\t\tm2 = p2 + (p3 - p2) * (basic ? curviness * 0.5 : (r2 !== 0 ? tl / r2 : 0));\n\t\t\t\t\t\tmm = p2 - (m1 + (((m2 - m1) * ((r1 * 3 / (r1 + r2)) + 0.5) / 4) || 0));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tm1 = p2 - (p2 - p1) * curviness * 0.5;\n\t\t\t\t\t\tm2 = p2 + (p3 - p2) * curviness * 0.5;\n\t\t\t\t\t\tmm = p2 - (m1 + m2) / 2;\n\t\t\t\t\t}\n\t\t\t\t\tm1 += mm;\n\t\t\t\t\tm2 += mm;\n\n\t\t\t\t\tseg.c = cp2 = m1;\n\t\t\t\t\tif (i !== 0) {\n\t\t\t\t\t\tseg.b = cp1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tseg.b = cp1 = seg.a + (seg.c - seg.a) * 0.6; //instead of placing b on a exactly, we move it inline with c so that if the user specifies an ease like Back.easeIn or Elastic.easeIn which goes BEYOND the beginning, it will do so smoothly.\n\t\t\t\t\t}\n\n\t\t\t\t\tseg.da = p2 - p1;\n\t\t\t\t\tseg.ca = cp2 - p1;\n\t\t\t\t\tseg.ba = cp1 - p1;\n\n\t\t\t\t\tif (quad) {\n\t\t\t\t\t\tqb = cubicToQuadratic(p1, cp1, cp2, p2);\n\t\t\t\t\t\ta.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t\t\t\t\t\tii += 4;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tii++;\n\t\t\t\t\t}\n\n\t\t\t\t\tcp1 = m2;\n\t\t\t\t}\n\t\t\t\tseg = a[ii];\n\t\t\t\tseg.b = cp1;\n\t\t\t\tseg.c = cp1 + (seg.d - cp1) * 0.4; //instead of placing c on d exactly, we move it inline with b so that if the user specifies an ease like Back.easeOut or Elastic.easeOut which goes BEYOND the end, it will do so smoothly.\n\t\t\t\tseg.da = seg.d - seg.a;\n\t\t\t\tseg.ca = seg.c - seg.a;\n\t\t\t\tseg.ba = cp1 - seg.a;\n\t\t\t\tif (quad) {\n\t\t\t\t\tqb = cubicToQuadratic(seg.a, cp1, seg.c, seg.d);\n\t\t\t\t\ta.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_parseAnchors = function(values, p, correlate, prepend) {\n\t\t\t\tvar a = [],\n\t\t\t\t\tl, i, p1, p2, p3, tmp;\n\t\t\t\tif (prepend) {\n\t\t\t\t\tvalues = [prepend].concat(values);\n\t\t\t\t\ti = values.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (typeof( (tmp = values[i][p]) ) === \"string\") if (tmp.charAt(1) === \"=\") {\n\t\t\t\t\t\t\tvalues[i][p] = prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)); //accommodate relative values. Do it inline instead of breaking it out into a function for speed reasons\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tl = values.length - 2;\n\t\t\t\tif (l < 0) {\n\t\t\t\t\ta[0] = new Segment(values[0][p], 0, 0, values[(l < -1) ? 0 : 1][p]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tp1 = values[i][p];\n\t\t\t\t\tp2 = values[i+1][p];\n\t\t\t\t\ta[i] = new Segment(p1, 0, 0, p2);\n\t\t\t\t\tif (correlate) {\n\t\t\t\t\t\tp3 = values[i+2][p];\n\t\t\t\t\t\t_r1[i] = (_r1[i] || 0) + (p2 - p1) * (p2 - p1);\n\t\t\t\t\t\t_r2[i] = (_r2[i] || 0) + (p3 - p2) * (p3 - p2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ta[i] = new Segment(values[i][p], 0, 0, values[i+1][p]);\n\t\t\t\treturn a;\n\t\t\t},\n\t\t\tbezierThrough = function(values, curviness, quadratic, basic, correlate, prepend) {\n\t\t\t\tvar obj = {},\n\t\t\t\t\tprops = [],\n\t\t\t\t\tfirst = prepend || values[0],\n\t\t\t\t\ti, p, a, j, r, l, seamless, last;\n\t\t\t\tcorrelate = (typeof(correlate) === \"string\") ? \",\"+correlate+\",\" : _correlate;\n\t\t\t\tif (curviness == null) {\n\t\t\t\t\tcurviness = 1;\n\t\t\t\t}\n\t\t\t\tfor (p in values[0]) {\n\t\t\t\t\tprops.push(p);\n\t\t\t\t}\n\t\t\t\t//check to see if the last and first values are identical (well, within 0.05). If so, make seamless by appending the second element to the very end of the values array and the 2nd-to-last element to the very beginning (we'll remove those segments later)\n\t\t\t\tif (values.length > 1) {\n\t\t\t\t\tlast = values[values.length - 1];\n\t\t\t\t\tseamless = true;\n\t\t\t\t\ti = props.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tp = props[i];\n\t\t\t\t\t\tif (Math.abs(first[p] - last[p]) > 0.05) { //build in a tolerance of +/-0.05 to accommodate rounding errors. For example, if you set an object's position to 4.945, Flash will make it 4.9\n\t\t\t\t\t\t\tseamless = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (seamless) {\n\t\t\t\t\t\tvalues = values.concat(); //duplicate the array to avoid contaminating the original which the user may be reusing for other tweens\n\t\t\t\t\t\tif (prepend) {\n\t\t\t\t\t\t\tvalues.unshift(prepend);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues.push(values[1]);\n\t\t\t\t\t\tprepend = values[values.length - 3];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t_r1.length = _r2.length = _r3.length = 0;\n\t\t\t\ti = props.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tp = props[i];\n\t\t\t\t\t_corProps[p] = (correlate.indexOf(\",\"+p+\",\") !== -1);\n\t\t\t\t\tobj[p] = _parseAnchors(values, p, _corProps[p], prepend);\n\t\t\t\t}\n\t\t\t\ti = _r1.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_r1[i] = Math.sqrt(_r1[i]);\n\t\t\t\t\t_r2[i] = Math.sqrt(_r2[i]);\n\t\t\t\t}\n\t\t\t\tif (!basic) {\n\t\t\t\t\ti = props.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (_corProps[p]) {\n\t\t\t\t\t\t\ta = obj[props[i]];\n\t\t\t\t\t\t\tl = a.length - 1;\n\t\t\t\t\t\t\tfor (j = 0; j < l; j++) {\n\t\t\t\t\t\t\t\tr = a[j+1].da / _r2[j] + a[j].da / _r1[j];\n\t\t\t\t\t\t\t\t_r3[j] = (_r3[j] || 0) + r * r;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ti = _r3.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t_r3[i] = Math.sqrt(_r3[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti = props.length;\n\t\t\t\tj = quadratic ? 4 : 1;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tp = props[i];\n\t\t\t\t\ta = obj[p];\n\t\t\t\t\t_calculateControlPoints(a, curviness, quadratic, basic, _corProps[p]); //this method requires that _parseAnchors() and _setSegmentRatios() ran first so that _r1, _r2, and _r3 values are populated for all properties\n\t\t\t\t\tif (seamless) {\n\t\t\t\t\t\ta.splice(0, j);\n\t\t\t\t\t\ta.splice(a.length - j, j);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t},\n\t\t\t_parseBezierData = function(values, type, prepend) {\n\t\t\t\ttype = type || \"soft\";\n\t\t\t\tvar obj = {},\n\t\t\t\t\tinc = (type === \"cubic\") ? 3 : 2,\n\t\t\t\t\tsoft = (type === \"soft\"),\n\t\t\t\t\tprops = [],\n\t\t\t\t\ta, b, c, d, cur, i, j, l, p, cnt, tmp;\n\t\t\t\tif (soft && prepend) {\n\t\t\t\t\tvalues = [prepend].concat(values);\n\t\t\t\t}\n\t\t\t\tif (values == null || values.length < inc + 1) { throw \"invalid Bezier data\"; }\n\t\t\t\tfor (p in values[0]) {\n\t\t\t\t\tprops.push(p);\n\t\t\t\t}\n\t\t\t\ti = props.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tp = props[i];\n\t\t\t\t\tobj[p] = cur = [];\n\t\t\t\t\tcnt = 0;\n\t\t\t\t\tl = values.length;\n\t\t\t\t\tfor (j = 0; j < l; j++) {\n\t\t\t\t\t\ta = (prepend == null) ? values[j][p] : (typeof( (tmp = values[j][p]) ) === \"string\" && tmp.charAt(1) === \"=\") ? prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)) : Number(tmp);\n\t\t\t\t\t\tif (soft) if (j > 1) if (j < l - 1) {\n\t\t\t\t\t\t\tcur[cnt++] = (a + cur[cnt-2]) / 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcur[cnt++] = a;\n\t\t\t\t\t}\n\t\t\t\t\tl = cnt - inc + 1;\n\t\t\t\t\tcnt = 0;\n\t\t\t\t\tfor (j = 0; j < l; j += inc) {\n\t\t\t\t\t\ta = cur[j];\n\t\t\t\t\t\tb = cur[j+1];\n\t\t\t\t\t\tc = cur[j+2];\n\t\t\t\t\t\td = (inc === 2) ? 0 : cur[j+3];\n\t\t\t\t\t\tcur[cnt++] = tmp = (inc === 3) ? new Segment(a, b, c, d) : new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t\t\t\t\t}\n\t\t\t\t\tcur.length = cnt;\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t},\n\t\t\t_addCubicLengths = function(a, steps, resolution) {\n\t\t\t\tvar inc = 1 / resolution,\n\t\t\t\t\tj = a.length,\n\t\t\t\t\td, d1, s, da, ca, ba, p, i, inv, bez, index;\n\t\t\t\twhile (--j > -1) {\n\t\t\t\t\tbez = a[j];\n\t\t\t\t\ts = bez.a;\n\t\t\t\t\tda = bez.d - s;\n\t\t\t\t\tca = bez.c - s;\n\t\t\t\t\tba = bez.b - s;\n\t\t\t\t\td = d1 = 0;\n\t\t\t\t\tfor (i = 1; i <= resolution; i++) {\n\t\t\t\t\t\tp = inc * i;\n\t\t\t\t\t\tinv = 1 - p;\n\t\t\t\t\t\td = d1 - (d1 = (p * p * da + 3 * inv * (p * ca + inv * ba)) * p);\n\t\t\t\t\t\tindex = j * resolution + i - 1;\n\t\t\t\t\t\tsteps[index] = (steps[index] || 0) + d * d;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t_parseLengthData = function(obj, resolution) {\n\t\t\t\tresolution = resolution >> 0 || 6;\n\t\t\t\tvar a = [],\n\t\t\t\t\tlengths = [],\n\t\t\t\t\td = 0,\n\t\t\t\t\ttotal = 0,\n\t\t\t\t\tthreshold = resolution - 1,\n\t\t\t\t\tsegments = [],\n\t\t\t\t\tcurLS = [], //current length segments array\n\t\t\t\t\tp, i, l, index;\n\t\t\t\tfor (p in obj) {\n\t\t\t\t\t_addCubicLengths(obj[p], a, resolution);\n\t\t\t\t}\n\t\t\t\tl = a.length;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\td += Math.sqrt(a[i]);\n\t\t\t\t\tindex = i % resolution;\n\t\t\t\t\tcurLS[index] = d;\n\t\t\t\t\tif (index === threshold) {\n\t\t\t\t\t\ttotal += d;\n\t\t\t\t\t\tindex = (i / resolution) >> 0;\n\t\t\t\t\t\tsegments[index] = curLS;\n\t\t\t\t\t\tlengths[index] = total;\n\t\t\t\t\t\td = 0;\n\t\t\t\t\t\tcurLS = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {length:total, lengths:lengths, segments:segments};\n\t\t\t},\n\n\n\n\t\t\tBezierPlugin = window._gsDefine.plugin({\n\t\t\t\t\tpropName: \"bezier\",\n\t\t\t\t\tpriority: -1,\n\t\t\t\t\tversion: \"1.3.2\",\n\t\t\t\t\tAPI: 2,\n\t\t\t\t\tglobal:true,\n\n\t\t\t\t\t//gets called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n\t\t\t\t\tinit: function(target, vars, tween) {\n\t\t\t\t\t\tthis._target = target;\n\t\t\t\t\t\tif (vars instanceof Array) {\n\t\t\t\t\t\t\tvars = {values:vars};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._func = {};\n\t\t\t\t\t\tthis._round = {};\n\t\t\t\t\t\tthis._props = [];\n\t\t\t\t\t\tthis._timeRes = (vars.timeResolution == null) ? 6 : parseInt(vars.timeResolution, 10);\n\t\t\t\t\t\tvar values = vars.values || [],\n\t\t\t\t\t\t\tfirst = {},\n\t\t\t\t\t\t\tsecond = values[0],\n\t\t\t\t\t\t\tautoRotate = vars.autoRotate || tween.vars.orientToBezier,\n\t\t\t\t\t\t\tp, isFunc, i, j, prepend;\n\n\t\t\t\t\t\tthis._autoRotate = autoRotate ? (autoRotate instanceof Array) ? autoRotate : [[\"x\",\"y\",\"rotation\",((autoRotate === true) ? 0 : Number(autoRotate) || 0)]] : null;\n\t\t\t\t\t\tfor (p in second) {\n\t\t\t\t\t\t\tthis._props.push(p);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti = this._props.length;\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tp = this._props[i];\n\n\t\t\t\t\t\t\tthis._overwriteProps.push(p);\n\t\t\t\t\t\t\tisFunc = this._func[p] = (typeof(target[p]) === \"function\");\n\t\t\t\t\t\t\tfirst[p] = (!isFunc) ? parseFloat(target[p]) : target[ ((p.indexOf(\"set\") || typeof(target[\"get\" + p.substr(3)]) !== \"function\") ? p : \"get\" + p.substr(3)) ]();\n\t\t\t\t\t\t\tif (!prepend) if (first[p] !== values[0][p]) {\n\t\t\t\t\t\t\t\tprepend = first;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._beziers = (vars.type !== \"cubic\" && vars.type !== \"quadratic\" && vars.type !== \"soft\") ? bezierThrough(values, isNaN(vars.curviness) ? 1 : vars.curviness, false, (vars.type === \"thruBasic\"), vars.correlate, prepend) : _parseBezierData(values, vars.type, first);\n\t\t\t\t\t\tthis._segCount = this._beziers[p].length;\n\n\t\t\t\t\t\tif (this._timeRes) {\n\t\t\t\t\t\t\tvar ld = _parseLengthData(this._beziers, this._timeRes);\n\t\t\t\t\t\t\tthis._length = ld.length;\n\t\t\t\t\t\t\tthis._lengths = ld.lengths;\n\t\t\t\t\t\t\tthis._segments = ld.segments;\n\t\t\t\t\t\t\tthis._l1 = this._li = this._s1 = this._si = 0;\n\t\t\t\t\t\t\tthis._l2 = this._lengths[0];\n\t\t\t\t\t\t\tthis._curSeg = this._segments[0];\n\t\t\t\t\t\t\tthis._s2 = this._curSeg[0];\n\t\t\t\t\t\t\tthis._prec = 1 / this._curSeg.length;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ((autoRotate = this._autoRotate)) {\n\t\t\t\t\t\t\tthis._initialRotations = [];\n\t\t\t\t\t\t\tif (!(autoRotate[0] instanceof Array)) {\n\t\t\t\t\t\t\t\tthis._autoRotate = autoRotate = [autoRotate];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ti = autoRotate.length;\n\t\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\t\t\t\t\t\tp = autoRotate[i][j];\n\t\t\t\t\t\t\t\t\tthis._func[p] = (typeof(target[p]) === \"function\") ? target[ ((p.indexOf(\"set\") || typeof(target[\"get\" + p.substr(3)]) !== \"function\") ? p : \"get\" + p.substr(3)) ] : false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = autoRotate[i][2];\n\t\t\t\t\t\t\t\tthis._initialRotations[i] = this._func[p] ? this._func[p].call(this._target) : this._target[p];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._startRatio = tween.vars.runBackwards ? 1 : 0; //we determine the starting ratio when the tween inits which is always 0 unless the tween has runBackwards:true (indicating it's a from() tween) in which case it's 1.\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\n\t\t\t\t\t//called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)\n\t\t\t\t\tset: function(v) {\n\t\t\t\t\t\tvar segments = this._segCount,\n\t\t\t\t\t\t\tfunc = this._func,\n\t\t\t\t\t\t\ttarget = this._target,\n\t\t\t\t\t\t\tnotStart = (v !== this._startRatio),\n\t\t\t\t\t\t\tcurIndex, inv, i, p, b, t, val, l, lengths, curSeg;\n\t\t\t\t\t\tif (!this._timeRes) {\n\t\t\t\t\t\t\tcurIndex = (v < 0) ? 0 : (v >= 1) ? segments - 1 : (segments * v) >> 0;\n\t\t\t\t\t\t\tt = (v - (curIndex * (1 / segments))) * segments;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlengths = this._lengths;\n\t\t\t\t\t\t\tcurSeg = this._curSeg;\n\t\t\t\t\t\t\tv *= this._length;\n\t\t\t\t\t\t\ti = this._li;\n\t\t\t\t\t\t\t//find the appropriate segment (if the currently cached one isn't correct)\n\t\t\t\t\t\t\tif (v > this._l2 && i < segments - 1) {\n\t\t\t\t\t\t\t\tl = segments - 1;\n\t\t\t\t\t\t\t\twhile (i < l && (this._l2 = lengths[++i]) <= v) {\t}\n\t\t\t\t\t\t\t\tthis._l1 = lengths[i-1];\n\t\t\t\t\t\t\t\tthis._li = i;\n\t\t\t\t\t\t\t\tthis._curSeg = curSeg = this._segments[i];\n\t\t\t\t\t\t\t\tthis._s2 = curSeg[(this._s1 = this._si = 0)];\n\t\t\t\t\t\t\t} else if (v < this._l1 && i > 0) {\n\t\t\t\t\t\t\t\twhile (i > 0 && (this._l1 = lengths[--i]) >= v) { }\n\t\t\t\t\t\t\t\tif (i === 0 && v < this._l1) {\n\t\t\t\t\t\t\t\t\tthis._l1 = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._l2 = lengths[i];\n\t\t\t\t\t\t\t\tthis._li = i;\n\t\t\t\t\t\t\t\tthis._curSeg = curSeg = this._segments[i];\n\t\t\t\t\t\t\t\tthis._s1 = curSeg[(this._si = curSeg.length - 1) - 1] || 0;\n\t\t\t\t\t\t\t\tthis._s2 = curSeg[this._si];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurIndex = i;\n\t\t\t\t\t\t\t//now find the appropriate sub-segment (we split it into the number of pieces that was defined by \"precision\" and measured each one)\n\t\t\t\t\t\t\tv -= this._l1;\n\t\t\t\t\t\t\ti = this._si;\n\t\t\t\t\t\t\tif (v > this._s2 && i < curSeg.length - 1) {\n\t\t\t\t\t\t\t\tl = curSeg.length - 1;\n\t\t\t\t\t\t\t\twhile (i < l && (this._s2 = curSeg[++i]) <= v) {\t}\n\t\t\t\t\t\t\t\tthis._s1 = curSeg[i-1];\n\t\t\t\t\t\t\t\tthis._si = i;\n\t\t\t\t\t\t\t} else if (v < this._s1 && i > 0) {\n\t\t\t\t\t\t\t\twhile (i > 0 && (this._s1 = curSeg[--i]) >= v) {\t}\n\t\t\t\t\t\t\t\tif (i === 0 && v < this._s1) {\n\t\t\t\t\t\t\t\t\tthis._s1 = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._s2 = curSeg[i];\n\t\t\t\t\t\t\t\tthis._si = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tt = (i + (v - this._s1) / (this._s2 - this._s1)) * this._prec;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinv = 1 - t;\n\n\t\t\t\t\t\ti = this._props.length;\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tp = this._props[i];\n\t\t\t\t\t\t\tb = this._beziers[p][curIndex];\n\t\t\t\t\t\t\tval = (t * t * b.da + 3 * inv * (t * b.ca + inv * b.ba)) * t + b.a;\n\t\t\t\t\t\t\tif (this._round[p]) {\n\t\t\t\t\t\t\t\tval = Math.round(val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (func[p]) {\n\t\t\t\t\t\t\t\ttarget[p](val);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget[p] = val;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._autoRotate) {\n\t\t\t\t\t\t\tvar ar = this._autoRotate,\n\t\t\t\t\t\t\t\tb2, x1, y1, x2, y2, add, conv;\n\t\t\t\t\t\t\ti = ar.length;\n\t\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\t\tp = ar[i][2];\n\t\t\t\t\t\t\t\tadd = ar[i][3] || 0;\n\t\t\t\t\t\t\t\tconv = (ar[i][4] === true) ? 1 : _RAD2DEG;\n\t\t\t\t\t\t\t\tb = this._beziers[ar[i][0]];\n\t\t\t\t\t\t\t\tb2 = this._beziers[ar[i][1]];\n\n\t\t\t\t\t\t\t\tif (b && b2) { //in case one of the properties got overwritten.\n\t\t\t\t\t\t\t\t\tb = b[curIndex];\n\t\t\t\t\t\t\t\t\tb2 = b2[curIndex];\n\n\t\t\t\t\t\t\t\t\tx1 = b.a + (b.b - b.a) * t;\n\t\t\t\t\t\t\t\t\tx2 = b.b + (b.c - b.b) * t;\n\t\t\t\t\t\t\t\t\tx1 += (x2 - x1) * t;\n\t\t\t\t\t\t\t\t\tx2 += ((b.c + (b.d - b.c) * t) - x2) * t;\n\n\t\t\t\t\t\t\t\t\ty1 = b2.a + (b2.b - b2.a) * t;\n\t\t\t\t\t\t\t\t\ty2 = b2.b + (b2.c - b2.b) * t;\n\t\t\t\t\t\t\t\t\ty1 += (y2 - y1) * t;\n\t\t\t\t\t\t\t\t\ty2 += ((b2.c + (b2.d - b2.c) * t) - y2) * t;\n\n\t\t\t\t\t\t\t\t\tval = notStart ? Math.atan2(y2 - y1, x2 - x1) * conv + add : this._initialRotations[i];\n\n\t\t\t\t\t\t\t\t\tif (func[p]) {\n\t\t\t\t\t\t\t\t\t\ttarget[p](val);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\ttarget[p] = val;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}),\n\t\t\tp = BezierPlugin.prototype;\n\n\n\t\tBezierPlugin.bezierThrough = bezierThrough;\n\t\tBezierPlugin.cubicToQuadratic = cubicToQuadratic;\n\t\tBezierPlugin._autoCSS = true; //indicates that this plugin can be inserted into the \"css\" object using the autoCSS feature of TweenLite\n\t\tBezierPlugin.quadraticToCubic = function(a, b, c) {\n\t\t\treturn new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t\t};\n\n\t\tBezierPlugin._cssRegister = function() {\n\t\t\tvar CSSPlugin = window._gsDefine.globals.CSSPlugin;\n\t\t\tif (!CSSPlugin) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar _internals = CSSPlugin._internals,\n\t\t\t\t_parseToProxy = _internals._parseToProxy,\n\t\t\t\t_setPluginRatio = _internals._setPluginRatio,\n\t\t\t\tCSSPropTween = _internals.CSSPropTween;\n\t\t\t_internals._registerComplexSpecialProp(\"bezier\", {parser:function(t, e, prop, cssp, pt, plugin) {\n\t\t\t\tif (e instanceof Array) {\n\t\t\t\t\te = {values:e};\n\t\t\t\t}\n\t\t\t\tplugin = new BezierPlugin();\n\t\t\t\tvar values = e.values,\n\t\t\t\t\tl = values.length - 1,\n\t\t\t\t\tpluginValues = [],\n\t\t\t\t\tv = {},\n\t\t\t\t\ti, p, data;\n\t\t\t\tif (l < 0) {\n\t\t\t\t\treturn pt;\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i <= l; i++) {\n\t\t\t\t\tdata = _parseToProxy(t, values[i], cssp, pt, plugin, (l !== i));\n\t\t\t\t\tpluginValues[i] = data.end;\n\t\t\t\t}\n\t\t\t\tfor (p in e) {\n\t\t\t\t\tv[p] = e[p]; //duplicate the vars object because we need to alter some things which would cause problems if the user plans to reuse the same vars object for another tween.\n\t\t\t\t}\n\t\t\t\tv.values = pluginValues;\n\t\t\t\tpt = new CSSPropTween(t, \"bezier\", 0, 0, data.pt, 2);\n\t\t\t\tpt.data = data;\n\t\t\t\tpt.plugin = plugin;\n\t\t\t\tpt.setRatio = _setPluginRatio;\n\t\t\t\tif (v.autoRotate === 0) {\n\t\t\t\t\tv.autoRotate = true;\n\t\t\t\t}\n\t\t\t\tif (v.autoRotate && !(v.autoRotate instanceof Array)) {\n\t\t\t\t\ti = (v.autoRotate === true) ? 0 : Number(v.autoRotate);\n\t\t\t\t\tv.autoRotate = (data.end.left != null) ? [[\"left\",\"top\",\"rotation\",i,false]] : (data.end.x != null) ? [[\"x\",\"y\",\"rotation\",i,false]] : false;\n\t\t\t\t}\n\t\t\t\tif (v.autoRotate) {\n\t\t\t\t\tif (!cssp._transform) {\n\t\t\t\t\t\tcssp._enableTransforms(false);\n\t\t\t\t\t}\n\t\t\t\t\tdata.autoRotate = cssp._target._gsTransform;\n\t\t\t\t}\n\t\t\t\tplugin._onInitTween(data.proxy, v, cssp._tween);\n\t\t\t\treturn pt;\n\t\t\t}});\n\t\t};\n\n\t\tp._roundProps = function(lookup, value) {\n\t\t\tvar op = this._overwriteProps,\n\t\t\t\ti = op.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (lookup[op[i]] || lookup.bezier || lookup.bezierThrough) {\n\t\t\t\t\tthis._round[op[i]] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp._kill = function(lookup) {\n\t\t\tvar a = this._props,\n\t\t\t\tp, i;\n\t\t\tfor (p in this._beziers) {\n\t\t\t\tif (p in lookup) {\n\t\t\t\t\tdelete this._beziers[p];\n\t\t\t\t\tdelete this._func[p];\n\t\t\t\t\ti = a.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (a[i] === p) {\n\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._super._kill.call(this, lookup);\n\t\t};\n\n\t}());\n\n\n\n\n\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n/*\n * ----------------------------------------------------------------\n * CSSPlugin\n * ----------------------------------------------------------------\n */\n\twindow._gsDefine(\"plugins.CSSPlugin\", [\"plugins.TweenPlugin\",\"TweenLite\"], function(TweenPlugin, TweenLite) {\n\n\t\t/** @constructor **/\n\t\tvar CSSPlugin = function() {\n\t\t\t\tTweenPlugin.call(this, \"css\");\n\t\t\t\tthis._overwriteProps.length = 0;\n\t\t\t\tthis.setRatio = CSSPlugin.prototype.setRatio; //speed optimization (avoid prototype lookup on this \"hot\" method)\n\t\t\t},\n\t\t\t_hasPriority, //turns true whenever a CSSPropTween instance is created that has a priority other than 0. This helps us discern whether or not we should spend the time organizing the linked list or not after a CSSPlugin's _onInitTween() method is called.\n\t\t\t_suffixMap, //we set this in _onInitTween() each time as a way to have a persistent variable we can use in other methods like _parse() without having to pass it around as a parameter and we keep _parse() decoupled from a particular CSSPlugin instance\n\t\t\t_cs, //computed style (we store this in a shared variable to conserve memory and make minification tighter\n\t\t\t_overwriteProps, //alias to the currently instantiating CSSPlugin's _overwriteProps array. We use this closure in order to avoid having to pass a reference around from method to method and aid in minification.\n\t\t\t_specialProps = {},\n\t\t\tp = CSSPlugin.prototype = new TweenPlugin(\"css\");\n\n\t\tp.constructor = CSSPlugin;\n\t\tCSSPlugin.version = \"1.12.1\";\n\t\tCSSPlugin.API = 2;\n\t\tCSSPlugin.defaultTransformPerspective = 0;\n\t\tCSSPlugin.defaultSkewType = \"compensated\";\n\t\tp = \"px\"; //we'll reuse the \"p\" variable to keep file size down\n\t\tCSSPlugin.suffixMap = {top:p, right:p, bottom:p, left:p, width:p, height:p, fontSize:p, padding:p, margin:p, perspective:p, lineHeight:\"\"};\n\n\n\t\tvar _numExp = /(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d)+/g,\n\t\t\t_relNumExp = /(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d|\\+=\\d|\\-=\\d|\\+=.\\d|\\-=\\.\\d)+/g,\n\t\t\t_valuesExp = /(?:\\+=|\\-=|\\-|\\b)[\\d\\-\\.]+[a-zA-Z0-9]*(?:%|\\b)/gi, //finds all the values that begin with numbers or += or -= and then a number. Includes suffixes. We use this to split complex values apart like \"1px 5px 20px rgb(255,102,51)\"\n\t\t\t_NaNExp = /[^\\d\\-\\.]/g,\n\t\t\t_suffixExp = /(?:\\d|\\-|\\+|=|#|\\.)*/g,\n\t\t\t_opacityExp = /opacity *= *([^)]*)/i,\n\t\t\t_opacityValExp = /opacity:([^;]*)/i,\n\t\t\t_alphaFilterExp = /alpha\\(opacity *=.+?\\)/i,\n\t\t\t_rgbhslExp = /^(rgb|hsl)/,\n\t\t\t_capsExp = /([A-Z])/g,\n\t\t\t_camelExp = /-([a-z])/gi,\n\t\t\t_urlExp = /(^(?:url\\(\\\"|url\\())|(?:(\\\"\\))$|\\)$)/gi, //for pulling out urls from url(...) or url(\"...\") strings (some browsers wrap urls in quotes, some don't when reporting things like backgroundImage)\n\t\t\t_camelFunc = function(s, g) { return g.toUpperCase(); },\n\t\t\t_horizExp = /(?:Left|Right|Width)/i,\n\t\t\t_ieGetMatrixExp = /(M11|M12|M21|M22)=[\\d\\-\\.e]+/gi,\n\t\t\t_ieSetMatrixExp = /progid\\:DXImageTransform\\.Microsoft\\.Matrix\\(.+?\\)/i,\n\t\t\t_commasOutsideParenExp = /,(?=[^\\)]*(?:\\(|$))/gi, //finds any commas that are not within parenthesis\n\t\t\t_DEG2RAD = Math.PI / 180,\n\t\t\t_RAD2DEG = 180 / Math.PI,\n\t\t\t_forcePT = {},\n\t\t\t_doc = document,\n\t\t\t_tempDiv = _doc.createElement(\"div\"),\n\t\t\t_tempImg = _doc.createElement(\"img\"),\n\t\t\t_internals = CSSPlugin._internals = {_specialProps:_specialProps}, //provides a hook to a few internal methods that we need to access from inside other plugins\n\t\t\t_agent = navigator.userAgent,\n\t\t\t_autoRound,\n\t\t\t_reqSafariFix, //we won't apply the Safari transform fix until we actually come across a tween that affects a transform property (to maintain best performance).\n\n\t\t\t_isSafari,\n\t\t\t_isFirefox, //Firefox has a bug that causes 3D transformed elements to randomly disappear unless a repaint is forced after each update on each element.\n\t\t\t_isSafariLT6, //Safari (and Android 4 which uses a flavor of Safari) has a bug that prevents changes to \"top\" and \"left\" properties from rendering properly if changed on the same frame as a transform UNLESS we set the element's WebkitBackfaceVisibility to hidden (weird, I know). Doing this for Android 3 and earlier seems to actually cause other problems, though (fun!)\n\t\t\t_ieVers,\n\t\t\t_supportsOpacity = (function() { //we set _isSafari, _ieVers, _isFirefox, and _supportsOpacity all in one function here to reduce file size slightly, especially in the minified version.\n\t\t\t\tvar i = _agent.indexOf(\"Android\"),\n\t\t\t\t\td = _doc.createElement(\"div\"), a;\n\n\t\t\t\t_isSafari = (_agent.indexOf(\"Safari\") !== -1 && _agent.indexOf(\"Chrome\") === -1 && (i === -1 || Number(_agent.substr(i+8, 1)) > 3));\n\t\t\t\t_isSafariLT6 = (_isSafari && (Number(_agent.substr(_agent.indexOf(\"Version/\")+8, 1)) < 6));\n\t\t\t\t_isFirefox = (_agent.indexOf(\"Firefox\") !== -1);\n\n\t\t\t\tif ((/MSIE ([0-9]{1,}[\\.0-9]{0,})/).exec(_agent)) {\n\t\t\t\t\t_ieVers = parseFloat( RegExp.$1 );\n\t\t\t\t}\n\n\t\t\t\td.innerHTML = \"<a style='top:1px;opacity:.55;'>a</a>\";\n\t\t\t\ta = d.getElementsByTagName(\"a\")[0];\n\t\t\t\treturn a ? /^0.55/.test(a.style.opacity) : false;\n\t\t\t}()),\n\t\t\t_getIEOpacity = function(v) {\n\t\t\t\treturn (_opacityExp.test( ((typeof(v) === \"string\") ? v : (v.currentStyle ? v.currentStyle.filter : v.style.filter) || \"\") ) ? ( parseFloat( RegExp.$1 ) / 100 ) : 1);\n\t\t\t},\n\t\t\t_log = function(s) {//for logging messages, but in a way that won't throw errors in old versions of IE.\n\t\t\t\tif (window.console) {\n\t\t\t\t\tconsole.log(s);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_prefixCSS = \"\", //the non-camelCase vendor prefix like \"-o-\", \"-moz-\", \"-ms-\", or \"-webkit-\"\n\t\t\t_prefix = \"\", //camelCase vendor prefix like \"O\", \"ms\", \"Webkit\", or \"Moz\".\n\n\t\t\t// @private feed in a camelCase property name like \"transform\" and it will check to see if it is valid as-is or if it needs a vendor prefix. It returns the corrected camelCase property name (i.e. \"WebkitTransform\" or \"MozTransform\" or \"transform\" or null if no such property is found, like if the browser is IE8 or before, \"transform\" won't be found at all)\n\t\t\t_checkPropPrefix = function(p, e) {\n\t\t\t\te = e || _tempDiv;\n\t\t\t\tvar s = e.style,\n\t\t\t\t\ta, i;\n\t\t\t\tif (s[p] !== undefined) {\n\t\t\t\t\treturn p;\n\t\t\t\t}\n\t\t\t\tp = p.charAt(0).toUpperCase() + p.substr(1);\n\t\t\t\ta = [\"O\",\"Moz\",\"ms\",\"Ms\",\"Webkit\"];\n\t\t\t\ti = 5;\n\t\t\t\twhile (--i > -1 && s[a[i]+p] === undefined) { }\n\t\t\t\tif (i >= 0) {\n\t\t\t\t\t_prefix = (i === 3) ? \"ms\" : a[i];\n\t\t\t\t\t_prefixCSS = \"-\" + _prefix.toLowerCase() + \"-\";\n\t\t\t\t\treturn _prefix + p;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\n\t\t\t_getComputedStyle = _doc.defaultView ? _doc.defaultView.getComputedStyle : function() {},\n\n\t\t\t/**\n\t\t\t * @private Returns the css style for a particular property of an element. For example, to get whatever the current \"left\" css value for an element with an ID of \"myElement\", you could do:\n\t\t\t * var currentLeft = CSSPlugin.getStyle( document.getElementById(\"myElement\"), \"left\");\n\t\t\t *\n\t\t\t * @param {!Object} t Target element whose style property you want to query\n\t\t\t * @param {!string} p Property name (like \"left\" or \"top\" or \"marginTop\", etc.)\n\t\t\t * @param {Object=} cs Computed style object. This just provides a way to speed processing if you're going to get several properties on the same element in quick succession - you can reuse the result of the getComputedStyle() call.\n\t\t\t * @param {boolean=} calc If true, the value will not be read directly from the element's \"style\" property (if it exists there), but instead the getComputedStyle() result will be used. This can be useful when you want to ensure that the browser itself is interpreting the value.\n\t\t\t * @param {string=} dflt Default value that should be returned in the place of null, \"none\", \"auto\" or \"auto auto\".\n\t\t\t * @return {?string} The current property value\n\t\t\t */\n\t\t\t_getStyle = CSSPlugin.getStyle = function(t, p, cs, calc, dflt) {\n\t\t\t\tvar rv;\n\t\t\t\tif (!_supportsOpacity) if (p === \"opacity\") { //several versions of IE don't use the standard \"opacity\" property - they use things like filter:alpha(opacity=50), so we parse that here.\n\t\t\t\t\treturn _getIEOpacity(t);\n\t\t\t\t}\n\t\t\t\tif (!calc && t.style[p]) {\n\t\t\t\t\trv = t.style[p];\n\t\t\t\t} else if ((cs = cs || _getComputedStyle(t))) {\n\t\t\t\t\trv = cs[p] || cs.getPropertyValue(p) || cs.getPropertyValue(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t\t\t\t} else if (t.currentStyle) {\n\t\t\t\t\trv = t.currentStyle[p];\n\t\t\t\t}\n\t\t\t\treturn (dflt != null && (!rv || rv === \"none\" || rv === \"auto\" || rv === \"auto auto\")) ? dflt : rv;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Pass the target element, the property name, the numeric value, and the suffix (like \"%\", \"em\", \"px\", etc.) and it will spit back the equivalent pixel number.\n\t\t\t * @param {!Object} t Target element\n\t\t\t * @param {!string} p Property name (like \"left\", \"top\", \"marginLeft\", etc.)\n\t\t\t * @param {!number} v Value\n\t\t\t * @param {string=} sfx Suffix (like \"px\" or \"%\" or \"em\")\n\t\t\t * @param {boolean=} recurse If true, the call is a recursive one. In some browsers (like IE7/8), occasionally the value isn't accurately reported initially, but if we run the function again it will take effect.\n\t\t\t * @return {number} value in pixels\n\t\t\t */\n\t\t\t_convertToPixels = _internals.convertToPixels = function(t, p, v, sfx, recurse) {\n\t\t\t\tif (sfx === \"px\" || !sfx) { return v; }\n\t\t\t\tif (sfx === \"auto\" || !v) { return 0; }\n\t\t\t\tvar horiz = _horizExp.test(p),\n\t\t\t\t\tnode = t,\n\t\t\t\t\tstyle = _tempDiv.style,\n\t\t\t\t\tneg = (v < 0),\n\t\t\t\t\tpix, cache, time;\n\t\t\t\tif (neg) {\n\t\t\t\t\tv = -v;\n\t\t\t\t}\n\t\t\t\tif (sfx === \"%\" && p.indexOf(\"border\") !== -1) {\n\t\t\t\t\tpix = (v / 100) * (horiz ? t.clientWidth : t.clientHeight);\n\t\t\t\t} else {\n\t\t\t\t\tstyle.cssText = \"border:0 solid red;position:\" + _getStyle(t, \"position\") + \";line-height:0;\";\n\t\t\t\t\tif (sfx === \"%\" || !node.appendChild) {\n\t\t\t\t\t\tnode = t.parentNode || _doc.body;\n\t\t\t\t\t\tcache = node._gsCache;\n\t\t\t\t\t\ttime = TweenLite.ticker.frame;\n\t\t\t\t\t\tif (cache && horiz && cache.time === time) { //performance optimization: we record the width of elements along with the ticker frame so that we can quickly get it again on the same tick (seems relatively safe to assume it wouldn't change on the same tick)\n\t\t\t\t\t\t\treturn cache.width * v / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyle[(horiz ? \"width\" : \"height\")] = v + sfx;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstyle[(horiz ? \"borderLeftWidth\" : \"borderTopWidth\")] = v + sfx;\n\t\t\t\t\t}\n\t\t\t\t\tnode.appendChild(_tempDiv);\n\t\t\t\t\tpix = parseFloat(_tempDiv[(horiz ? \"offsetWidth\" : \"offsetHeight\")]);\n\t\t\t\t\tnode.removeChild(_tempDiv);\n\t\t\t\t\tif (horiz && sfx === \"%\" && CSSPlugin.cacheWidths !== false) {\n\t\t\t\t\t\tcache = node._gsCache = node._gsCache || {};\n\t\t\t\t\t\tcache.time = time;\n\t\t\t\t\t\tcache.width = pix / v * 100;\n\t\t\t\t\t}\n\t\t\t\t\tif (pix === 0 && !recurse) {\n\t\t\t\t\t\tpix = _convertToPixels(t, p, v, sfx, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn neg ? -pix : pix;\n\t\t\t},\n\t\t\t_calculateOffset = _internals.calculateOffset = function(t, p, cs) { //for figuring out \"top\" or \"left\" in px when it's \"auto\". We need to factor in margin with the offsetLeft/offsetTop\n\t\t\t\tif (_getStyle(t, \"position\", cs) !== \"absolute\") { return 0; }\n\t\t\t\tvar dim = ((p === \"left\") ? \"Left\" : \"Top\"),\n\t\t\t\t\tv = _getStyle(t, \"margin\" + dim, cs);\n\t\t\t\treturn t[\"offset\" + dim] - (_convertToPixels(t, p, parseFloat(v), v.replace(_suffixExp, \"\")) || 0);\n\t\t\t},\n\n\t\t\t// @private returns at object containing ALL of the style properties in camelCase and their associated values.\n\t\t\t_getAllStyles = function(t, cs) {\n\t\t\t\tvar s = {},\n\t\t\t\t\ti, tr;\n\t\t\t\tif ((cs = cs || _getComputedStyle(t, null))) {\n\t\t\t\t\tif ((i = cs.length)) {\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\ts[cs[i].replace(_camelExp, _camelFunc)] = cs.getPropertyValue(cs[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { //Opera behaves differently - cs.length is always 0, so we must do a for...in loop.\n\t\t\t\t\t\tfor (i in cs) {\n\t\t\t\t\t\t\ts[i] = cs[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ((cs = t.currentStyle || t.style)) {\n\t\t\t\t\tfor (i in cs) {\n\t\t\t\t\t\tif (typeof(i) === \"string\" && s[i] === undefined) {\n\t\t\t\t\t\t\ts[i.replace(_camelExp, _camelFunc)] = cs[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!_supportsOpacity) {\n\t\t\t\t\ts.opacity = _getIEOpacity(t);\n\t\t\t\t}\n\t\t\t\ttr = _getTransform(t, cs, false);\n\t\t\t\ts.rotation = tr.rotation;\n\t\t\t\ts.skewX = tr.skewX;\n\t\t\t\ts.scaleX = tr.scaleX;\n\t\t\t\ts.scaleY = tr.scaleY;\n\t\t\t\ts.x = tr.x;\n\t\t\t\ts.y = tr.y;\n\t\t\t\tif (_supports3D) {\n\t\t\t\t\ts.z = tr.z;\n\t\t\t\t\ts.rotationX = tr.rotationX;\n\t\t\t\t\ts.rotationY = tr.rotationY;\n\t\t\t\t\ts.scaleZ = tr.scaleZ;\n\t\t\t\t}\n\t\t\t\tif (s.filters) {\n\t\t\t\t\tdelete s.filters;\n\t\t\t\t}\n\t\t\t\treturn s;\n\t\t\t},\n\n\t\t\t// @private analyzes two style objects (as returned by _getAllStyles()) and only looks for differences between them that contain tweenable values (like a number or color). It returns an object with a \"difs\" property which refers to an object containing only those isolated properties and values for tweening, and a \"firstMPT\" property which refers to the first MiniPropTween instance in a linked list that recorded all the starting values of the different properties so that we can revert to them at the end or beginning of the tween - we don't want the cascading to get messed up. The forceLookup parameter is an optional generic object with properties that should be forced into the results - this is necessary for className tweens that are overwriting others because imagine a scenario where a rollover/rollout adds/removes a class and the user swipes the mouse over the target SUPER fast, thus nothing actually changed yet and the subsequent comparison of the properties would indicate they match (especially when px rounding is taken into consideration), thus no tweening is necessary even though it SHOULD tween and remove those properties after the tween (otherwise the inline styles will contaminate things). See the className SpecialProp code for details.\n\t\t\t_cssDif = function(t, s1, s2, vars, forceLookup) {\n\t\t\t\tvar difs = {},\n\t\t\t\t\tstyle = t.style,\n\t\t\t\t\tval, p, mpt;\n\t\t\t\tfor (p in s2) {\n\t\t\t\t\tif (p !== \"cssText\") if (p !== \"length\") if (isNaN(p)) if (s1[p] !== (val = s2[p]) || (forceLookup && forceLookup[p])) if (p.indexOf(\"Origin\") === -1) if (typeof(val) === \"number\" || typeof(val) === \"string\") {\n\t\t\t\t\t\tdifs[p] = (val === \"auto\" && (p === \"left\" || p === \"top\")) ? _calculateOffset(t, p) : ((val === \"\" || val === \"auto\" || val === \"none\") && typeof(s1[p]) === \"string\" && s1[p].replace(_NaNExp, \"\") !== \"\") ? 0 : val; //if the ending value is defaulting (\"\" or \"auto\"), we check the starting value and if it can be parsed into a number (a string which could have a suffix too, like 700px), then we swap in 0 for \"\" or \"auto\" so that things actually tween.\n\t\t\t\t\t\tif (style[p] !== undefined) { //for className tweens, we must remember which properties already existed inline - the ones that didn't should be removed when the tween isn't in progress because they were only introduced to facilitate the transition between classes.\n\t\t\t\t\t\t\tmpt = new MiniPropTween(style, p, style[p], mpt);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (vars) {\n\t\t\t\t\tfor (p in vars) { //copy properties (except className)\n\t\t\t\t\t\tif (p !== \"className\") {\n\t\t\t\t\t\t\tdifs[p] = vars[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {difs:difs, firstMPT:mpt};\n\t\t\t},\n\t\t\t_dimensions = {width:[\"Left\",\"Right\"], height:[\"Top\",\"Bottom\"]},\n\t\t\t_margins = [\"marginLeft\",\"marginRight\",\"marginTop\",\"marginBottom\"],\n\n\t\t\t/**\n\t\t\t * @private Gets the width or height of an element\n\t\t\t * @param {!Object} t Target element\n\t\t\t * @param {!string} p Property name (\"width\" or \"height\")\n\t\t\t * @param {Object=} cs Computed style object (if one exists). Just a speed optimization.\n\t\t\t * @return {number} Dimension (in pixels)\n\t\t\t */\n\t\t\t_getDimension = function(t, p, cs) {\n\t\t\t\tvar v = parseFloat((p === \"width\") ? t.offsetWidth : t.offsetHeight),\n\t\t\t\t\ta = _dimensions[p],\n\t\t\t\t\ti = a.length;\n\t\t\t\tcs = cs || _getComputedStyle(t, null);\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tv -= parseFloat( _getStyle(t, \"padding\" + a[i], cs, true) ) || 0;\n\t\t\t\t\tv -= parseFloat( _getStyle(t, \"border\" + a[i] + \"Width\", cs, true) ) || 0;\n\t\t\t\t}\n\t\t\t\treturn v;\n\t\t\t},\n\n\t\t\t// @private Parses position-related complex strings like \"top left\" or \"50px 10px\" or \"70% 20%\", etc. which are used for things like transformOrigin or backgroundPosition. Optionally decorates a supplied object (recObj) with the following properties: \"ox\" (offsetX), \"oy\" (offsetY), \"oxp\" (if true, \"ox\" is a percentage not a pixel value), and \"oxy\" (if true, \"oy\" is a percentage not a pixel value)\n\t\t\t_parsePosition = function(v, recObj) {\n\t\t\t\tif (v == null || v === \"\" || v === \"auto\" || v === \"auto auto\") { //note: Firefox uses \"auto auto\" as default whereas Chrome uses \"auto\".\n\t\t\t\t\tv = \"0 0\";\n\t\t\t\t}\n\t\t\t\tvar a = v.split(\" \"),\n\t\t\t\t\tx = (v.indexOf(\"left\") !== -1) ? \"0%\" : (v.indexOf(\"right\") !== -1) ? \"100%\" : a[0],\n\t\t\t\t\ty = (v.indexOf(\"top\") !== -1) ? \"0%\" : (v.indexOf(\"bottom\") !== -1) ? \"100%\" : a[1];\n\t\t\t\tif (y == null) {\n\t\t\t\t\ty = \"0\";\n\t\t\t\t} else if (y === \"center\") {\n\t\t\t\t\ty = \"50%\";\n\t\t\t\t}\n\t\t\t\tif (x === \"center\" || (isNaN(parseFloat(x)) && (x + \"\").indexOf(\"=\") === -1)) { //remember, the user could flip-flop the values and say \"bottom center\" or \"center bottom\", etc. \"center\" is ambiguous because it could be used to describe horizontal or vertical, hence the isNaN(). If there's an \"=\" sign in the value, it's relative.\n\t\t\t\t\tx = \"50%\";\n\t\t\t\t}\n\t\t\t\tif (recObj) {\n\t\t\t\t\trecObj.oxp = (x.indexOf(\"%\") !== -1);\n\t\t\t\t\trecObj.oyp = (y.indexOf(\"%\") !== -1);\n\t\t\t\t\trecObj.oxr = (x.charAt(1) === \"=\");\n\t\t\t\t\trecObj.oyr = (y.charAt(1) === \"=\");\n\t\t\t\t\trecObj.ox = parseFloat(x.replace(_NaNExp, \"\"));\n\t\t\t\t\trecObj.oy = parseFloat(y.replace(_NaNExp, \"\"));\n\t\t\t\t}\n\t\t\t\treturn x + \" \" + y + ((a.length > 2) ? \" \" + a[2] : \"\");\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Takes an ending value (typically a string, but can be a number) and a starting value and returns the change between the two, looking for relative value indicators like += and -= and it also ignores suffixes (but make sure the ending value starts with a number or +=/-= and that the starting value is a NUMBER!)\n\t\t\t * @param {(number|string)} e End value which is typically a string, but could be a number\n\t\t\t * @param {(number|string)} b Beginning value which is typically a string but could be a number\n\t\t\t * @return {number} Amount of change between the beginning and ending values (relative values that have a \"+=\" or \"-=\" are recognized)\n\t\t\t */\n\t\t\t_parseChange = function(e, b) {\n\t\t\t\treturn (typeof(e) === \"string\" && e.charAt(1) === \"=\") ? parseInt(e.charAt(0) + \"1\", 10) * parseFloat(e.substr(2)) : parseFloat(e) - parseFloat(b);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Takes a value and a default number, checks if the value is relative, null, or numeric and spits back a normalized number accordingly. Primarily used in the _parseTransform() function.\n\t\t\t * @param {Object} v Value to be parsed\n\t\t\t * @param {!number} d Default value (which is also used for relative calculations if \"+=\" or \"-=\" is found in the first parameter)\n\t\t\t * @return {number} Parsed value\n\t\t\t */\n\t\t\t_parseVal = function(v, d) {\n\t\t\t\treturn (v == null) ? d : (typeof(v) === \"string\" && v.charAt(1) === \"=\") ? parseInt(v.charAt(0) + \"1\", 10) * Number(v.substr(2)) + d : parseFloat(v);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Translates strings like \"40deg\" or \"40\" or 40rad\" or \"+=40deg\" or \"270_short\" or \"-90_cw\" or \"+=45_ccw\" to a numeric radian angle. Of course a starting/default value must be fed in too so that relative values can be calculated properly.\n\t\t\t * @param {Object} v Value to be parsed\n\t\t\t * @param {!number} d Default value (which is also used for relative calculations if \"+=\" or \"-=\" is found in the first parameter)\n\t\t\t * @param {string=} p property name for directionalEnd (optional - only used when the parsed value is directional (\"_short\", \"_cw\", or \"_ccw\" suffix). We need a way to store the uncompensated value so that at the end of the tween, we set it to exactly what was requested with no directional compensation). Property name would be \"rotation\", \"rotationX\", or \"rotationY\"\n\t\t\t * @param {Object=} directionalEnd An object that will store the raw end values for directional angles (\"_short\", \"_cw\", or \"_ccw\" suffix). We need a way to store the uncompensated value so that at the end of the tween, we set it to exactly what was requested with no directional compensation.\n\t\t\t * @return {number} parsed angle in radians\n\t\t\t */\n\t\t\t_parseAngle = function(v, d, p, directionalEnd) {\n\t\t\t\tvar min = 0.000001,\n\t\t\t\t\tcap, split, dif, result;\n\t\t\t\tif (v == null) {\n\t\t\t\t\tresult = d;\n\t\t\t\t} else if (typeof(v) === \"number\") {\n\t\t\t\t\tresult = v;\n\t\t\t\t} else {\n\t\t\t\t\tcap = 360;\n\t\t\t\t\tsplit = v.split(\"_\");\n\t\t\t\t\tdif = Number(split[0].replace(_NaNExp, \"\")) * ((v.indexOf(\"rad\") === -1) ? 1 : _RAD2DEG) - ((v.charAt(1) === \"=\") ? 0 : d);\n\t\t\t\t\tif (split.length) {\n\t\t\t\t\t\tif (directionalEnd) {\n\t\t\t\t\t\t\tdirectionalEnd[p] = d + dif;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (v.indexOf(\"short\") !== -1) {\n\t\t\t\t\t\t\tdif = dif % cap;\n\t\t\t\t\t\t\tif (dif !== dif % (cap / 2)) {\n\t\t\t\t\t\t\t\tdif = (dif < 0) ? dif + cap : dif - cap;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n\t\t\t\t\t\t\tdif = ((dif + cap * 9999999999) % cap) - ((dif / cap) | 0) * cap;\n\t\t\t\t\t\t} else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n\t\t\t\t\t\t\tdif = ((dif - cap * 9999999999) % cap) - ((dif / cap) | 0) * cap;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresult = d + dif;\n\t\t\t\t}\n\t\t\t\tif (result < min && result > -min) {\n\t\t\t\t\tresult = 0;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\t_colorLookup = {aqua:[0,255,255],\n\t\t\t\tlime:[0,255,0],\n\t\t\t\tsilver:[192,192,192],\n\t\t\t\tblack:[0,0,0],\n\t\t\t\tmaroon:[128,0,0],\n\t\t\t\tteal:[0,128,128],\n\t\t\t\tblue:[0,0,255],\n\t\t\t\tnavy:[0,0,128],\n\t\t\t\twhite:[255,255,255],\n\t\t\t\tfuchsia:[255,0,255],\n\t\t\t\tolive:[128,128,0],\n\t\t\t\tyellow:[255,255,0],\n\t\t\t\torange:[255,165,0],\n\t\t\t\tgray:[128,128,128],\n\t\t\t\tpurple:[128,0,128],\n\t\t\t\tgreen:[0,128,0],\n\t\t\t\tred:[255,0,0],\n\t\t\t\tpink:[255,192,203],\n\t\t\t\tcyan:[0,255,255],\n\t\t\t\ttransparent:[255,255,255,0]},\n\n\t\t\t_hue = function(h, m1, m2) {\n\t\t\t\th = (h < 0) ? h + 1 : (h > 1) ? h - 1 : h;\n\t\t\t\treturn ((((h * 6 < 1) ? m1 + (m2 - m1) * h * 6 : (h < 0.5) ? m2 : (h * 3 < 2) ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * 255) + 0.5) | 0;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Parses a color (like #9F0, #FF9900, or rgb(255,51,153)) into an array with 3 elements for red, green, and blue. Also handles rgba() values (splits into array of 4 elements of course)\n\t\t\t * @param {(string|number)} v The value the should be parsed which could be a string like #9F0 or rgb(255,102,51) or rgba(255,0,0,0.5) or it could be a number like 0xFF00CC or even a named color like red, blue, purple, etc.\n\t\t\t * @return {Array.<number>} An array containing red, green, and blue (and optionally alpha) in that order.\n\t\t\t */\n\t\t\t_parseColor = function(v) {\n\t\t\t\tvar c1, c2, c3, h, s, l;\n\t\t\t\tif (!v || v === \"\") {\n\t\t\t\t\treturn _colorLookup.black;\n\t\t\t\t}\n\t\t\t\tif (typeof(v) === \"number\") {\n\t\t\t\t\treturn [v >> 16, (v >> 8) & 255, v & 255];\n\t\t\t\t}\n\t\t\t\tif (v.charAt(v.length - 1) === \",\") { //sometimes a trailing commma is included and we should chop it off (typically from a comma-delimited list of values like a textShadow:\"2px 2px 2px blue, 5px 5px 5px rgb(255,0,0)\" - in this example \"blue,\" has a trailing comma. We could strip it out inside parseComplex() but we'd need to do it to the beginning and ending values plus it wouldn't provide protection from other potential scenarios like if the user passes in a similar value.\n\t\t\t\t\tv = v.substr(0, v.length - 1);\n\t\t\t\t}\n\t\t\t\tif (_colorLookup[v]) {\n\t\t\t\t\treturn _colorLookup[v];\n\t\t\t\t}\n\t\t\t\tif (v.charAt(0) === \"#\") {\n\t\t\t\t\tif (v.length === 4) { //for shorthand like #9F0\n\t\t\t\t\t\tc1 = v.charAt(1),\n\t\t\t\t\t\tc2 = v.charAt(2),\n\t\t\t\t\t\tc3 = v.charAt(3);\n\t\t\t\t\t\tv = \"#\" + c1 + c1 + c2 + c2 + c3 + c3;\n\t\t\t\t\t}\n\t\t\t\t\tv = parseInt(v.substr(1), 16);\n\t\t\t\t\treturn [v >> 16, (v >> 8) & 255, v & 255];\n\t\t\t\t}\n\t\t\t\tif (v.substr(0, 3) === \"hsl\") {\n\t\t\t\t\tv = v.match(_numExp);\n\t\t\t\t\th = (Number(v[0]) % 360) / 360;\n\t\t\t\t\ts = Number(v[1]) / 100;\n\t\t\t\t\tl = Number(v[2]) / 100;\n\t\t\t\t\tc2 = (l <= 0.5) ? l * (s + 1) : l + s - l * s;\n\t\t\t\t\tc1 = l * 2 - c2;\n\t\t\t\t\tif (v.length > 3) {\n\t\t\t\t\t\tv[3] = Number(v[3]);\n\t\t\t\t\t}\n\t\t\t\t\tv[0] = _hue(h + 1 / 3, c1, c2);\n\t\t\t\t\tv[1] = _hue(h, c1, c2);\n\t\t\t\t\tv[2] = _hue(h - 1 / 3, c1, c2);\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t\tv = v.match(_numExp) || _colorLookup.transparent;\n\t\t\t\tv[0] = Number(v[0]);\n\t\t\t\tv[1] = Number(v[1]);\n\t\t\t\tv[2] = Number(v[2]);\n\t\t\t\tif (v.length > 3) {\n\t\t\t\t\tv[3] = Number(v[3]);\n\t\t\t\t}\n\t\t\t\treturn v;\n\t\t\t},\n\t\t\t_colorExp = \"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#.+?\\\\b\"; //we'll dynamically build this Regular Expression to conserve file size. After building it, it will be able to find rgb(), rgba(), # (hexadecimal), and named color values like red, blue, purple, etc.\n\n\t\tfor (p in _colorLookup) {\n\t\t\t_colorExp += \"|\" + p + \"\\\\b\";\n\t\t}\n\t\t_colorExp = new RegExp(_colorExp+\")\", \"gi\");\n\n\t\t/**\n\t\t * @private Returns a formatter function that handles taking a string (or number in some cases) and returning a consistently formatted one in terms of delimiters, quantity of values, etc. For example, we may get boxShadow values defined as \"0px red\" or \"0px 0px 10px rgb(255,0,0)\" or \"0px 0px 20px 20px #F00\" and we need to ensure that what we get back is described with 4 numbers and a color. This allows us to feed it into the _parseComplex() method and split the values up appropriately. The neat thing about this _getFormatter() function is that the dflt defines a pattern as well as a default, so for example, _getFormatter(\"0px 0px 0px 0px #777\", true) not only sets the default as 0px for all distances and #777 for the color, but also sets the pattern such that 4 numbers and a color will always get returned.\n\t\t * @param {!string} dflt The default value and pattern to follow. So \"0px 0px 0px 0px #777\" will ensure that 4 numbers and a color will always get returned.\n\t\t * @param {boolean=} clr If true, the values should be searched for color-related data. For example, boxShadow values typically contain a color whereas borderRadius don't.\n\t\t * @param {boolean=} collapsible If true, the value is a top/left/right/bottom style one that acts like margin or padding, where if only one value is received, it's used for all 4; if 2 are received, the first is duplicated for 3rd (bottom) and the 2nd is duplicated for the 4th spot (left), etc.\n\t\t * @return {Function} formatter function\n\t\t */\n\t\tvar _getFormatter = function(dflt, clr, collapsible, multi) {\n\t\t\t\tif (dflt == null) {\n\t\t\t\t\treturn function(v) {return v;};\n\t\t\t\t}\n\t\t\t\tvar dColor = clr ? (dflt.match(_colorExp) || [\"\"])[0] : \"\",\n\t\t\t\t\tdVals = dflt.split(dColor).join(\"\").match(_valuesExp) || [],\n\t\t\t\t\tpfx = dflt.substr(0, dflt.indexOf(dVals[0])),\n\t\t\t\t\tsfx = (dflt.charAt(dflt.length - 1) === \")\") ? \")\" : \"\",\n\t\t\t\t\tdelim = (dflt.indexOf(\" \") !== -1) ? \" \" : \",\",\n\t\t\t\t\tnumVals = dVals.length,\n\t\t\t\t\tdSfx = (numVals > 0) ? dVals[0].replace(_numExp, \"\") : \"\",\n\t\t\t\t\tformatter;\n\t\t\t\tif (!numVals) {\n\t\t\t\t\treturn function(v) {return v;};\n\t\t\t\t}\n\t\t\t\tif (clr) {\n\t\t\t\t\tformatter = function(v) {\n\t\t\t\t\t\tvar color, vals, i, a;\n\t\t\t\t\t\tif (typeof(v) === \"number\") {\n\t\t\t\t\t\t\tv += dSfx;\n\t\t\t\t\t\t} else if (multi && _commasOutsideParenExp.test(v)) {\n\t\t\t\t\t\t\ta = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t\t\t\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\t\t\t\ta[i] = formatter(a[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn a.join(\",\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolor = (v.match(_colorExp) || [dColor])[0];\n\t\t\t\t\t\tvals = v.split(color).join(\"\").match(_valuesExp) || [];\n\t\t\t\t\t\ti = vals.length;\n\t\t\t\t\t\tif (numVals > i--) {\n\t\t\t\t\t\t\twhile (++i < numVals) {\n\t\t\t\t\t\t\t\tvals[i] = collapsible ? vals[(((i - 1) / 2) | 0)] : dVals[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn pfx + vals.join(delim) + delim + color + sfx + (v.indexOf(\"inset\") !== -1 ? \" inset\" : \"\");\n\t\t\t\t\t};\n\t\t\t\t\treturn formatter;\n\n\t\t\t\t}\n\t\t\t\tformatter = function(v) {\n\t\t\t\t\tvar vals, a, i;\n\t\t\t\t\tif (typeof(v) === \"number\") {\n\t\t\t\t\t\tv += dSfx;\n\t\t\t\t\t} else if (multi && _commasOutsideParenExp.test(v)) {\n\t\t\t\t\t\ta = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t\t\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\t\t\ta[i] = formatter(a[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn a.join(\",\");\n\t\t\t\t\t}\n\t\t\t\t\tvals = v.match(_valuesExp) || [];\n\t\t\t\t\ti = vals.length;\n\t\t\t\t\tif (numVals > i--) {\n\t\t\t\t\t\twhile (++i < numVals) {\n\t\t\t\t\t\t\tvals[i] = collapsible ? vals[(((i - 1) / 2) | 0)] : dVals[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn pfx + vals.join(delim) + sfx;\n\t\t\t\t};\n\t\t\t\treturn formatter;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private returns a formatter function that's used for edge-related values like marginTop, marginLeft, paddingBottom, paddingRight, etc. Just pass a comma-delimited list of property names related to the edges.\n\t\t\t * @param {!string} props a comma-delimited list of property names in order from top to left, like \"marginTop,marginRight,marginBottom,marginLeft\"\n\t\t\t * @return {Function} a formatter function\n\t\t\t */\n\t\t\t_getEdgeParser = function(props) {\n\t\t\t\tprops = props.split(\",\");\n\t\t\t\treturn function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\t\t\tvar a = (e + \"\").split(\" \"),\n\t\t\t\t\t\ti;\n\t\t\t\t\tvars = {};\n\t\t\t\t\tfor (i = 0; i < 4; i++) {\n\t\t\t\t\t\tvars[props[i]] = a[i] = a[i] || a[(((i - 1) / 2) >> 0)];\n\t\t\t\t\t}\n\t\t\t\t\treturn cssp.parse(t, vars, pt, plugin);\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t// @private used when other plugins must tween values first, like BezierPlugin or ThrowPropsPlugin, etc. That plugin's setRatio() gets called first so that the values are updated, and then we loop through the MiniPropTweens  which handle copying the values into their appropriate slots so that they can then be applied correctly in the main CSSPlugin setRatio() method. Remember, we typically create a proxy object that has a bunch of uniquely-named properties that we feed to the sub-plugin and it does its magic normally, and then we must interpret those values and apply them to the css because often numbers must get combined/concatenated, suffixes added, etc. to work with css, like boxShadow could have 4 values plus a color.\n\t\t\t_setPluginRatio = _internals._setPluginRatio = function(v) {\n\t\t\t\tthis.plugin.setRatio(v);\n\t\t\t\tvar d = this.data,\n\t\t\t\t\tproxy = d.proxy,\n\t\t\t\t\tmpt = d.firstMPT,\n\t\t\t\t\tmin = 0.000001,\n\t\t\t\t\tval, pt, i, str;\n\t\t\t\twhile (mpt) {\n\t\t\t\t\tval = proxy[mpt.v];\n\t\t\t\t\tif (mpt.r) {\n\t\t\t\t\t\tval = Math.round(val);\n\t\t\t\t\t} else if (val < min && val > -min) {\n\t\t\t\t\t\tval = 0;\n\t\t\t\t\t}\n\t\t\t\t\tmpt.t[mpt.p] = val;\n\t\t\t\t\tmpt = mpt._next;\n\t\t\t\t}\n\t\t\t\tif (d.autoRotate) {\n\t\t\t\t\td.autoRotate.rotation = proxy.rotation;\n\t\t\t\t}\n\t\t\t\t//at the end, we must set the CSSPropTween's \"e\" (end) value dynamically here because that's what is used in the final setRatio() method.\n\t\t\t\tif (v === 1) {\n\t\t\t\t\tmpt = d.firstMPT;\n\t\t\t\t\twhile (mpt) {\n\t\t\t\t\t\tpt = mpt.t;\n\t\t\t\t\t\tif (!pt.type) {\n\t\t\t\t\t\t\tpt.e = pt.s + pt.xs0;\n\t\t\t\t\t\t} else if (pt.type === 1) {\n\t\t\t\t\t\t\tstr = pt.xs0 + pt.s + pt.xs1;\n\t\t\t\t\t\t\tfor (i = 1; i < pt.l; i++) {\n\t\t\t\t\t\t\t\tstr += pt[\"xn\"+i] + pt[\"xs\"+(i+1)];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpt.e = str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmpt = mpt._next;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private @constructor Used by a few SpecialProps to hold important values for proxies. For example, _parseToProxy() creates a MiniPropTween instance for each property that must get tweened on the proxy, and we record the original property name as well as the unique one we create for the proxy, plus whether or not the value needs to be rounded plus the original value.\n\t\t\t * @param {!Object} t target object whose property we're tweening (often a CSSPropTween)\n\t\t\t * @param {!string} p property name\n\t\t\t * @param {(number|string|object)} v value\n\t\t\t * @param {MiniPropTween=} next next MiniPropTween in the linked list\n\t\t\t * @param {boolean=} r if true, the tweened value should be rounded to the nearest integer\n\t\t\t */\n\t\t\tMiniPropTween = function(t, p, v, next, r) {\n\t\t\t\tthis.t = t;\n\t\t\t\tthis.p = p;\n\t\t\t\tthis.v = v;\n\t\t\t\tthis.r = r;\n\t\t\t\tif (next) {\n\t\t\t\t\tnext._prev = this;\n\t\t\t\t\tthis._next = next;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Most other plugins (like BezierPlugin and ThrowPropsPlugin and others) can only tween numeric values, but CSSPlugin must accommodate special values that have a bunch of extra data (like a suffix or strings between numeric values, etc.). For example, boxShadow has values like \"10px 10px 20px 30px rgb(255,0,0)\" which would utterly confuse other plugins. This method allows us to split that data apart and grab only the numeric data and attach it to uniquely-named properties of a generic proxy object ({}) so that we can feed that to virtually any plugin to have the numbers tweened. However, we must also keep track of which properties from the proxy go with which CSSPropTween values and instances. So we create a linked list of MiniPropTweens. Each one records a target (the original CSSPropTween), property (like \"s\" or \"xn1\" or \"xn2\") that we're tweening and the unique property name that was used for the proxy (like \"boxShadow_xn1\" and \"boxShadow_xn2\") and whether or not they need to be rounded. That way, in the _setPluginRatio() method we can simply copy the values over from the proxy to the CSSPropTween instance(s). Then, when the main CSSPlugin setRatio() method runs and applies the CSSPropTween values accordingly, they're updated nicely. So the external plugin tweens the numbers, _setPluginRatio() copies them over, and setRatio() acts normally, applying css-specific values to the element.\n\t\t\t * This method returns an object that has the following properties:\n\t\t\t *  - proxy: a generic object containing the starting values for all the properties that will be tweened by the external plugin.  This is what we feed to the external _onInitTween() as the target\n\t\t\t *  - end: a generic object containing the ending values for all the properties that will be tweened by the external plugin. This is what we feed to the external plugin's _onInitTween() as the destination values\n\t\t\t *  - firstMPT: the first MiniPropTween in the linked list\n\t\t\t *  - pt: the first CSSPropTween in the linked list that was created when parsing. If shallow is true, this linked list will NOT attach to the one passed into the _parseToProxy() as the \"pt\" (4th) parameter.\n\t\t\t * @param {!Object} t target object to be tweened\n\t\t\t * @param {!(Object|string)} vars the object containing the information about the tweening values (typically the end/destination values) that should be parsed\n\t\t\t * @param {!CSSPlugin} cssp The CSSPlugin instance\n\t\t\t * @param {CSSPropTween=} pt the next CSSPropTween in the linked list\n\t\t\t * @param {TweenPlugin=} plugin the external TweenPlugin instance that will be handling tweening the numeric values\n\t\t\t * @param {boolean=} shallow if true, the resulting linked list from the parse will NOT be attached to the CSSPropTween that was passed in as the \"pt\" (4th) parameter.\n\t\t\t * @return An object containing the following properties: proxy, end, firstMPT, and pt (see above for descriptions)\n\t\t\t */\n\t\t\t_parseToProxy = _internals._parseToProxy = function(t, vars, cssp, pt, plugin, shallow) {\n\t\t\t\tvar bpt = pt,\n\t\t\t\t\tstart = {},\n\t\t\t\t\tend = {},\n\t\t\t\t\ttransform = cssp._transform,\n\t\t\t\t\toldForce = _forcePT,\n\t\t\t\t\ti, p, xp, mpt, firstPT;\n\t\t\t\tcssp._transform = null;\n\t\t\t\t_forcePT = vars;\n\t\t\t\tpt = firstPT = cssp.parse(t, vars, pt, plugin);\n\t\t\t\t_forcePT = oldForce;\n\t\t\t\t//break off from the linked list so the new ones are isolated.\n\t\t\t\tif (shallow) {\n\t\t\t\t\tcssp._transform = transform;\n\t\t\t\t\tif (bpt) {\n\t\t\t\t\t\tbpt._prev = null;\n\t\t\t\t\t\tif (bpt._prev) {\n\t\t\t\t\t\t\tbpt._prev._next = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (pt && pt !== bpt) {\n\t\t\t\t\tif (pt.type <= 1) {\n\t\t\t\t\t\tp = pt.p;\n\t\t\t\t\t\tend[p] = pt.s + pt.c;\n\t\t\t\t\t\tstart[p] = pt.s;\n\t\t\t\t\t\tif (!shallow) {\n\t\t\t\t\t\t\tmpt = new MiniPropTween(pt, \"s\", p, mpt, pt.r);\n\t\t\t\t\t\t\tpt.c = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (pt.type === 1) {\n\t\t\t\t\t\t\ti = pt.l;\n\t\t\t\t\t\t\twhile (--i > 0) {\n\t\t\t\t\t\t\t\txp = \"xn\" + i;\n\t\t\t\t\t\t\t\tp = pt.p + \"_\" + xp;\n\t\t\t\t\t\t\t\tend[p] = pt.data[xp];\n\t\t\t\t\t\t\t\tstart[p] = pt[xp];\n\t\t\t\t\t\t\t\tif (!shallow) {\n\t\t\t\t\t\t\t\t\tmpt = new MiniPropTween(pt, xp, p, mpt, pt.rxp[xp]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t\treturn {proxy:start, end:end, firstMPT:mpt, pt:firstPT};\n\t\t\t},\n\n\n\n\t\t\t/**\n\t\t\t * @constructor Each property that is tweened has at least one CSSPropTween associated with it. These instances store important information like the target, property, starting value, amount of change, etc. They can also optionally have a number of \"extra\" strings and numeric values named xs1, xn1, xs2, xn2, xs3, xn3, etc. where \"s\" indicates string and \"n\" indicates number. These can be pieced together in a complex-value tween (type:1) that has alternating types of data like a string, number, string, number, etc. For example, boxShadow could be \"5px 5px 8px rgb(102, 102, 51)\". In that value, there are 6 numbers that may need to tween and then pieced back together into a string again with spaces, suffixes, etc. xs0 is special in that it stores the suffix for standard (type:0) tweens, -OR- the first string (prefix) in a complex-value (type:1) CSSPropTween -OR- it can be the non-tweening value in a type:-1 CSSPropTween. We do this to conserve memory.\n\t\t\t * CSSPropTweens have the following optional properties as well (not defined through the constructor):\n\t\t\t *  - l: Length in terms of the number of extra properties that the CSSPropTween has (default: 0). For example, for a boxShadow we may need to tween 5 numbers in which case l would be 5; Keep in mind that the start/end values for the first number that's tweened are always stored in the s and c properties to conserve memory. All additional values thereafter are stored in xn1, xn2, etc.\n\t\t\t *  - xfirst: The first instance of any sub-CSSPropTweens that are tweening properties of this instance. For example, we may split up a boxShadow tween so that there's a main CSSPropTween of type:1 that has various xs* and xn* values associated with the h-shadow, v-shadow, blur, color, etc. Then we spawn a CSSPropTween for each of those that has a higher priority and runs BEFORE the main CSSPropTween so that the values are all set by the time it needs to re-assemble them. The xfirst gives us an easy way to identify the first one in that chain which typically ends at the main one (because they're all prepende to the linked list)\n\t\t\t *  - plugin: The TweenPlugin instance that will handle the tweening of any complex values. For example, sometimes we don't want to use normal subtweens (like xfirst refers to) to tween the values - we might want ThrowPropsPlugin or BezierPlugin some other plugin to do the actual tweening, so we create a plugin instance and store a reference here. We need this reference so that if we get a request to round values or disable a tween, we can pass along that request.\n\t\t\t *  - data: Arbitrary data that needs to be stored with the CSSPropTween. Typically if we're going to have a plugin handle the tweening of a complex-value tween, we create a generic object that stores the END values that we're tweening to and the CSSPropTween's xs1, xs2, etc. have the starting values. We store that object as data. That way, we can simply pass that object to the plugin and use the CSSPropTween as the target.\n\t\t\t *  - setRatio: Only used for type:2 tweens that require custom functionality. In this case, we call the CSSPropTween's setRatio() method and pass the ratio each time the tween updates. This isn't quite as efficient as doing things directly in the CSSPlugin's setRatio() method, but it's very convenient and flexible.\n\t\t\t * @param {!Object} t Target object whose property will be tweened. Often a DOM element, but not always. It could be anything.\n\t\t\t * @param {string} p Property to tween (name). For example, to tween element.width, p would be \"width\".\n\t\t\t * @param {number} s Starting numeric value\n\t\t\t * @param {number} c Change in numeric value over the course of the entire tween. For example, if element.width starts at 5 and should end at 100, c would be 95.\n\t\t\t * @param {CSSPropTween=} next The next CSSPropTween in the linked list. If one is defined, we will define its _prev as the new instance, and the new instance's _next will be pointed at it.\n\t\t\t * @param {number=} type The type of CSSPropTween where -1 = a non-tweening value, 0 = a standard simple tween, 1 = a complex value (like one that has multiple numbers in a comma- or space-delimited string like border:\"1px solid red\"), and 2 = one that uses a custom setRatio function that does all of the work of applying the values on each update.\n\t\t\t * @param {string=} n Name of the property that should be used for overwriting purposes which is typically the same as p but not always. For example, we may need to create a subtween for the 2nd part of a \"clip:rect(...)\" tween in which case \"p\" might be xs1 but \"n\" is still \"clip\"\n\t\t\t * @param {boolean=} r If true, the value(s) should be rounded\n\t\t\t * @param {number=} pr Priority in the linked list order. Higher priority CSSPropTweens will be updated before lower priority ones. The default priority is 0.\n\t\t\t * @param {string=} b Beginning value. We store this to ensure that it is EXACTLY what it was when the tween began without any risk of interpretation issues.\n\t\t\t * @param {string=} e Ending value. We store this to ensure that it is EXACTLY what the user defined at the end of the tween without any risk of interpretation issues.\n\t\t\t */\n\t\t\tCSSPropTween = _internals.CSSPropTween = function(t, p, s, c, next, type, n, r, pr, b, e) {\n\t\t\t\tthis.t = t; //target\n\t\t\t\tthis.p = p; //property\n\t\t\t\tthis.s = s; //starting value\n\t\t\t\tthis.c = c; //change value\n\t\t\t\tthis.n = n || p; //name that this CSSPropTween should be associated to (usually the same as p, but not always - n is what overwriting looks at)\n\t\t\t\tif (!(t instanceof CSSPropTween)) {\n\t\t\t\t\t_overwriteProps.push(this.n);\n\t\t\t\t}\n\t\t\t\tthis.r = r; //round (boolean)\n\t\t\t\tthis.type = type || 0; //0 = normal tween, -1 = non-tweening (in which case xs0 will be applied to the target's property, like tp.t[tp.p] = tp.xs0), 1 = complex-value SpecialProp, 2 = custom setRatio() that does all the work\n\t\t\t\tif (pr) {\n\t\t\t\t\tthis.pr = pr;\n\t\t\t\t\t_hasPriority = true;\n\t\t\t\t}\n\t\t\t\tthis.b = (b === undefined) ? s : b;\n\t\t\t\tthis.e = (e === undefined) ? s + c : e;\n\t\t\t\tif (next) {\n\t\t\t\t\tthis._next = next;\n\t\t\t\t\tnext._prev = this;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Takes a target, the beginning value and ending value (as strings) and parses them into a CSSPropTween (possibly with child CSSPropTweens) that accommodates multiple numbers, colors, comma-delimited values, etc. For example:\n\t\t\t * sp.parseComplex(element, \"boxShadow\", \"5px 10px 20px rgb(255,102,51)\", \"0px 0px 0px red\", true, \"0px 0px 0px rgb(0,0,0,0)\", pt);\n\t\t\t * It will walk through the beginning and ending values (which should be in the same format with the same number and type of values) and figure out which parts are numbers, what strings separate the numeric/tweenable values, and then create the CSSPropTweens accordingly. If a plugin is defined, no child CSSPropTweens will be created. Instead, the ending values will be stored in the \"data\" property of the returned CSSPropTween like: {s:-5, xn1:-10, xn2:-20, xn3:255, xn4:0, xn5:0} so that it can be fed to any other plugin and it'll be plain numeric tweens but the recomposition of the complex value will be handled inside CSSPlugin's setRatio().\n\t\t\t * If a setRatio is defined, the type of the CSSPropTween will be set to 2 and recomposition of the values will be the responsibility of that method.\n\t\t\t *\n\t\t\t * @param {!Object} t Target whose property will be tweened\n\t\t\t * @param {!string} p Property that will be tweened (its name, like \"left\" or \"backgroundColor\" or \"boxShadow\")\n\t\t\t * @param {string} b Beginning value\n\t\t\t * @param {string} e Ending value\n\t\t\t * @param {boolean} clrs If true, the value could contain a color value like \"rgb(255,0,0)\" or \"#F00\" or \"red\". The default is false, so no colors will be recognized (a performance optimization)\n\t\t\t * @param {(string|number|Object)} dflt The default beginning value that should be used if no valid beginning value is defined or if the number of values inside the complex beginning and ending values don't match\n\t\t\t * @param {?CSSPropTween} pt CSSPropTween instance that is the current head of the linked list (we'll prepend to this).\n\t\t\t * @param {number=} pr Priority in the linked list order. Higher priority properties will be updated before lower priority ones. The default priority is 0.\n\t\t\t * @param {TweenPlugin=} plugin If a plugin should handle the tweening of extra properties, pass the plugin instance here. If one is defined, then NO subtweens will be created for any extra properties (the properties will be created - just not additional CSSPropTween instances to tween them) because the plugin is expected to do so. However, the end values WILL be populated in the \"data\" property, like {s:100, xn1:50, xn2:300}\n\t\t\t * @param {function(number)=} setRatio If values should be set in a custom function instead of being pieced together in a type:1 (complex-value) CSSPropTween, define that custom function here.\n\t\t\t * @return {CSSPropTween} The first CSSPropTween in the linked list which includes the new one(s) added by the parseComplex() call.\n\t\t\t */\n\t\t\t_parseComplex = CSSPlugin.parseComplex = function(t, p, b, e, clrs, dflt, pt, pr, plugin, setRatio) {\n\t\t\t\t//DEBUG: _log(\"parseComplex: \"+p+\", b: \"+b+\", e: \"+e);\n\t\t\t\tb = b || dflt || \"\";\n\t\t\t\tpt = new CSSPropTween(t, p, 0, 0, pt, (setRatio ? 2 : 1), null, false, pr, b, e);\n\t\t\t\te += \"\"; //ensures it's a string\n\t\t\t\tvar ba = b.split(\", \").join(\",\").split(\" \"), //beginning array\n\t\t\t\t\tea = e.split(\", \").join(\",\").split(\" \"), //ending array\n\t\t\t\t\tl = ba.length,\n\t\t\t\t\tautoRound = (_autoRound !== false),\n\t\t\t\t\ti, xi, ni, bv, ev, bnums, enums, bn, rgba, temp, cv, str;\n\t\t\t\tif (e.indexOf(\",\") !== -1 || b.indexOf(\",\") !== -1) {\n\t\t\t\t\tba = ba.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n\t\t\t\t\tea = ea.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n\t\t\t\t\tl = ba.length;\n\t\t\t\t}\n\t\t\t\tif (l !== ea.length) {\n\t\t\t\t\t//DEBUG: _log(\"mismatched formatting detected on \" + p + \" (\" + b + \" vs \" + e + \")\");\n\t\t\t\t\tba = (dflt || \"\").split(\" \");\n\t\t\t\t\tl = ba.length;\n\t\t\t\t}\n\t\t\t\tpt.plugin = plugin;\n\t\t\t\tpt.setRatio = setRatio;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tbv = ba[i];\n\t\t\t\t\tev = ea[i];\n\t\t\t\t\tbn = parseFloat(bv);\n\n\t\t\t\t\t//if the value begins with a number (most common). It's fine if it has a suffix like px\n\t\t\t\t\tif (bn || bn === 0) {\n\t\t\t\t\t\tpt.appendXtra(\"\", bn, _parseChange(ev, bn), ev.replace(_relNumExp, \"\"), (autoRound && ev.indexOf(\"px\") !== -1), true);\n\n\t\t\t\t\t//if the value is a color\n\t\t\t\t\t} else if (clrs && (bv.charAt(0) === \"#\" || _colorLookup[bv] || _rgbhslExp.test(bv))) {\n\t\t\t\t\t\tstr = ev.charAt(ev.length - 1) === \",\" ? \"),\" : \")\"; //if there's a comma at the end, retain it.\n\t\t\t\t\t\tbv = _parseColor(bv);\n\t\t\t\t\t\tev = _parseColor(ev);\n\t\t\t\t\t\trgba = (bv.length + ev.length > 6);\n\t\t\t\t\t\tif (rgba && !_supportsOpacity && ev[3] === 0) { //older versions of IE don't support rgba(), so if the destination alpha is 0, just use \"transparent\" for the end color\n\t\t\t\t\t\t\tpt[\"xs\" + pt.l] += pt.l ? \" transparent\" : \"transparent\";\n\t\t\t\t\t\t\tpt.e = pt.e.split(ea[i]).join(\"transparent\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (!_supportsOpacity) { //old versions of IE don't support rgba().\n\t\t\t\t\t\t\t\trgba = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpt.appendXtra((rgba ? \"rgba(\" : \"rgb(\"), bv[0], ev[0] - bv[0], \",\", true, true)\n\t\t\t\t\t\t\t\t.appendXtra(\"\", bv[1], ev[1] - bv[1], \",\", true)\n\t\t\t\t\t\t\t\t.appendXtra(\"\", bv[2], ev[2] - bv[2], (rgba ? \",\" : str), true);\n\t\t\t\t\t\t\tif (rgba) {\n\t\t\t\t\t\t\t\tbv = (bv.length < 4) ? 1 : bv[3];\n\t\t\t\t\t\t\t\tpt.appendXtra(\"\", bv, ((ev.length < 4) ? 1 : ev[3]) - bv, str, false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbnums = bv.match(_numExp); //gets each group of numbers in the beginning value string and drops them into an array\n\n\t\t\t\t\t\t//if no number is found, treat it as a non-tweening value and just append the string to the current xs.\n\t\t\t\t\t\tif (!bnums) {\n\t\t\t\t\t\t\tpt[\"xs\" + pt.l] += pt.l ? \" \" + bv : bv;\n\n\t\t\t\t\t\t//loop through all the numbers that are found and construct the extra values on the pt.\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tenums = ev.match(_relNumExp); //get each group of numbers in the end value string and drop them into an array. We allow relative values too, like +=50 or -=.5\n\t\t\t\t\t\t\tif (!enums || enums.length !== bnums.length) {\n\t\t\t\t\t\t\t\t//DEBUG: _log(\"mismatched formatting detected on \" + p + \" (\" + b + \" vs \" + e + \")\");\n\t\t\t\t\t\t\t\treturn pt;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tni = 0;\n\t\t\t\t\t\t\tfor (xi = 0; xi < bnums.length; xi++) {\n\t\t\t\t\t\t\t\tcv = bnums[xi];\n\t\t\t\t\t\t\t\ttemp = bv.indexOf(cv, ni);\n\t\t\t\t\t\t\t\tpt.appendXtra(bv.substr(ni, temp - ni), Number(cv), _parseChange(enums[xi], cv), \"\", (autoRound && bv.substr(temp + cv.length, 2) === \"px\"), (xi === 0));\n\t\t\t\t\t\t\t\tni = temp + cv.length;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpt[\"xs\" + pt.l] += bv.substr(ni);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//if there are relative values (\"+=\" or \"-=\" prefix), we need to adjust the ending value to eliminate the prefixes and combine the values properly.\n\t\t\t\tif (e.indexOf(\"=\") !== -1) if (pt.data) {\n\t\t\t\t\tstr = pt.xs0 + pt.data.s;\n\t\t\t\t\tfor (i = 1; i < pt.l; i++) {\n\t\t\t\t\t\tstr += pt[\"xs\" + i] + pt.data[\"xn\" + i];\n\t\t\t\t\t}\n\t\t\t\t\tpt.e = str + pt[\"xs\" + i];\n\t\t\t\t}\n\t\t\t\tif (!pt.l) {\n\t\t\t\t\tpt.type = -1;\n\t\t\t\t\tpt.xs0 = pt.e;\n\t\t\t\t}\n\t\t\t\treturn pt.xfirst || pt;\n\t\t\t},\n\t\t\ti = 9;\n\n\n\t\tp = CSSPropTween.prototype;\n\t\tp.l = p.pr = 0; //length (number of extra properties like xn1, xn2, xn3, etc.\n\t\twhile (--i > 0) {\n\t\t\tp[\"xn\" + i] = 0;\n\t\t\tp[\"xs\" + i] = \"\";\n\t\t}\n\t\tp.xs0 = \"\";\n\t\tp._next = p._prev = p.xfirst = p.data = p.plugin = p.setRatio = p.rxp = null;\n\n\n\t\t/**\n\t\t * Appends and extra tweening value to a CSSPropTween and automatically manages any prefix and suffix strings. The first extra value is stored in the s and c of the main CSSPropTween instance, but thereafter any extras are stored in the xn1, xn2, xn3, etc. The prefixes and suffixes are stored in the xs0, xs1, xs2, etc. properties. For example, if I walk through a clip value like \"rect(10px, 5px, 0px, 20px)\", the values would be stored like this:\n\t\t * xs0:\"rect(\", s:10, xs1:\"px, \", xn1:5, xs2:\"px, \", xn2:0, xs3:\"px, \", xn3:20, xn4:\"px)\"\n\t\t * And they'd all get joined together when the CSSPlugin renders (in the setRatio() method).\n\t\t * @param {string=} pfx Prefix (if any)\n\t\t * @param {!number} s Starting value\n\t\t * @param {!number} c Change in numeric value over the course of the entire tween. For example, if the start is 5 and the end is 100, the change would be 95.\n\t\t * @param {string=} sfx Suffix (if any)\n\t\t * @param {boolean=} r Round (if true).\n\t\t * @param {boolean=} pad If true, this extra value should be separated by the previous one by a space. If there is no previous extra and pad is true, it will automatically drop the space.\n\t\t * @return {CSSPropTween} returns itself so that multiple methods can be chained together.\n\t\t */\n\t\tp.appendXtra = function(pfx, s, c, sfx, r, pad) {\n\t\t\tvar pt = this,\n\t\t\t\tl = pt.l;\n\t\t\tpt[\"xs\" + l] += (pad && l) ? \" \" + pfx : pfx || \"\";\n\t\t\tif (!c) if (l !== 0 && !pt.plugin) { //typically we'll combine non-changing values right into the xs to optimize performance, but we don't combine them when there's a plugin that will be tweening the values because it may depend on the values being split apart, like for a bezier, if a value doesn't change between the first and second iteration but then it does on the 3rd, we'll run into trouble because there's no xn slot for that value!\n\t\t\t\tpt[\"xs\" + l] += s + (sfx || \"\");\n\t\t\t\treturn pt;\n\t\t\t}\n\t\t\tpt.l++;\n\t\t\tpt.type = pt.setRatio ? 2 : 1;\n\t\t\tpt[\"xs\" + pt.l] = sfx || \"\";\n\t\t\tif (l > 0) {\n\t\t\t\tpt.data[\"xn\" + l] = s + c;\n\t\t\t\tpt.rxp[\"xn\" + l] = r; //round extra property (we need to tap into this in the _parseToProxy() method)\n\t\t\t\tpt[\"xn\" + l] = s;\n\t\t\t\tif (!pt.plugin) {\n\t\t\t\t\tpt.xfirst = new CSSPropTween(pt, \"xn\" + l, s, c, pt.xfirst || pt, 0, pt.n, r, pt.pr);\n\t\t\t\t\tpt.xfirst.xs0 = 0; //just to ensure that the property stays numeric which helps modern browsers speed up processing. Remember, in the setRatio() method, we do pt.t[pt.p] = val + pt.xs0 so if pt.xs0 is \"\" (the default), it'll cast the end value as a string. When a property is a number sometimes and a string sometimes, it prevents the compiler from locking in the data type, slowing things down slightly.\n\t\t\t\t}\n\t\t\t\treturn pt;\n\t\t\t}\n\t\t\tpt.data = {s:s + c};\n\t\t\tpt.rxp = {};\n\t\t\tpt.s = s;\n\t\t\tpt.c = c;\n\t\t\tpt.r = r;\n\t\t\treturn pt;\n\t\t};\n\n\t\t/**\n\t\t * @constructor A SpecialProp is basically a css property that needs to be treated in a non-standard way, like if it may contain a complex value like boxShadow:\"5px 10px 15px rgb(255, 102, 51)\" or if it is associated with another plugin like ThrowPropsPlugin or BezierPlugin. Every SpecialProp is associated with a particular property name like \"boxShadow\" or \"throwProps\" or \"bezier\" and it will intercept those values in the vars object that's passed to the CSSPlugin and handle them accordingly.\n\t\t * @param {!string} p Property name (like \"boxShadow\" or \"throwProps\")\n\t\t * @param {Object=} options An object containing any of the following configuration options:\n\t\t *                      - defaultValue: the default value\n\t\t *                      - parser: A function that should be called when the associated property name is found in the vars. This function should return a CSSPropTween instance and it should ensure that it is properly inserted into the linked list. It will receive 4 paramters: 1) The target, 2) The value defined in the vars, 3) The CSSPlugin instance (whose _firstPT should be used for the linked list), and 4) A computed style object if one was calculated (this is a speed optimization that allows retrieval of starting values quicker)\n\t\t *                      - formatter: a function that formats any value received for this special property (for example, boxShadow could take \"5px 5px red\" and format it to \"5px 5px 0px 0px red\" so that both the beginning and ending values have a common order and quantity of values.)\n\t\t *                      - prefix: if true, we'll determine whether or not this property requires a vendor prefix (like Webkit or Moz or ms or O)\n\t\t *                      - color: set this to true if the value for this SpecialProp may contain color-related values like rgb(), rgba(), etc.\n\t\t *                      - priority: priority in the linked list order. Higher priority SpecialProps will be updated before lower priority ones. The default priority is 0.\n\t\t *                      - multi: if true, the formatter should accommodate a comma-delimited list of values, like boxShadow could have multiple boxShadows listed out.\n\t\t *                      - collapsible: if true, the formatter should treat the value like it's a top/right/bottom/left value that could be collapsed, like \"5px\" would apply to all, \"5px, 10px\" would use 5px for top/bottom and 10px for right/left, etc.\n\t\t *                      - keyword: a special keyword that can [optionally] be found inside the value (like \"inset\" for boxShadow). This allows us to validate beginning/ending values to make sure they match (if the keyword is found in one, it'll be added to the other for consistency by default).\n\t\t */\n\t\tvar SpecialProp = function(p, options) {\n\t\t\t\toptions = options || {};\n\t\t\t\tthis.p = options.prefix ? _checkPropPrefix(p) || p : p;\n\t\t\t\t_specialProps[p] = _specialProps[this.p] = this;\n\t\t\t\tthis.format = options.formatter || _getFormatter(options.defaultValue, options.color, options.collapsible, options.multi);\n\t\t\t\tif (options.parser) {\n\t\t\t\t\tthis.parse = options.parser;\n\t\t\t\t}\n\t\t\t\tthis.clrs = options.color;\n\t\t\t\tthis.multi = options.multi;\n\t\t\t\tthis.keyword = options.keyword;\n\t\t\t\tthis.dflt = options.defaultValue;\n\t\t\t\tthis.pr = options.priority || 0;\n\t\t\t},\n\n\t\t\t//shortcut for creating a new SpecialProp that can accept multiple properties as a comma-delimited list (helps minification). dflt can be an array for multiple values (we don't do a comma-delimited list because the default value may contain commas, like rect(0px,0px,0px,0px)). We attach this method to the SpecialProp class/object instead of using a private _createSpecialProp() method so that we can tap into it externally if necessary, like from another plugin.\n\t\t\t_registerComplexSpecialProp = _internals._registerComplexSpecialProp = function(p, options, defaults) {\n\t\t\t\tif (typeof(options) !== \"object\") {\n\t\t\t\t\toptions = {parser:defaults}; //to make backwards compatible with older versions of BezierPlugin and ThrowPropsPlugin\n\t\t\t\t}\n\t\t\t\tvar a = p.split(\",\"),\n\t\t\t\t\td = options.defaultValue,\n\t\t\t\t\ti, temp;\n\t\t\t\tdefaults = defaults || [d];\n\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\toptions.prefix = (i === 0 && options.prefix);\n\t\t\t\t\toptions.defaultValue = defaults[i] || d;\n\t\t\t\t\ttemp = new SpecialProp(a[i], options);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t//creates a placeholder special prop for a plugin so that the property gets caught the first time a tween of it is attempted, and at that time it makes the plugin register itself, thus taking over for all future tweens of that property. This allows us to not mandate that things load in a particular order and it also allows us to log() an error that informs the user when they attempt to tween an external plugin-related property without loading its .js file.\n\t\t\t_registerPluginProp = function(p) {\n\t\t\t\tif (!_specialProps[p]) {\n\t\t\t\t\tvar pluginName = p.charAt(0).toUpperCase() + p.substr(1) + \"Plugin\";\n\t\t\t\t\t_registerComplexSpecialProp(p, {parser:function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\t\t\t\tvar pluginClass = (window.GreenSockGlobals || window).com.greensock.plugins[pluginName];\n\t\t\t\t\t\tif (!pluginClass) {\n\t\t\t\t\t\t\t_log(\"Error: \" + pluginName + \" js file not loaded.\");\n\t\t\t\t\t\t\treturn pt;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpluginClass._cssRegister();\n\t\t\t\t\t\treturn _specialProps[p].parse(t, e, p, cssp, pt, plugin, vars);\n\t\t\t\t\t}});\n\t\t\t\t}\n\t\t\t};\n\n\n\t\tp = SpecialProp.prototype;\n\n\t\t/**\n\t\t * Alias for _parseComplex() that automatically plugs in certain values for this SpecialProp, like its property name, whether or not colors should be sensed, the default value, and priority. It also looks for any keyword that the SpecialProp defines (like \"inset\" for boxShadow) and ensures that the beginning and ending values have the same number of values for SpecialProps where multi is true (like boxShadow and textShadow can have a comma-delimited list)\n\t\t * @param {!Object} t target element\n\t\t * @param {(string|number|object)} b beginning value\n\t\t * @param {(string|number|object)} e ending (destination) value\n\t\t * @param {CSSPropTween=} pt next CSSPropTween in the linked list\n\t\t * @param {TweenPlugin=} plugin If another plugin will be tweening the complex value, that TweenPlugin instance goes here.\n\t\t * @param {function=} setRatio If a custom setRatio() method should be used to handle this complex value, that goes here.\n\t\t * @return {CSSPropTween=} First CSSPropTween in the linked list\n\t\t */\n\t\tp.parseComplex = function(t, b, e, pt, plugin, setRatio) {\n\t\t\tvar kwd = this.keyword,\n\t\t\t\ti, ba, ea, l, bi, ei;\n\t\t\t//if this SpecialProp's value can contain a comma-delimited list of values (like boxShadow or textShadow), we must parse them in a special way, and look for a keyword (like \"inset\" for boxShadow) and ensure that the beginning and ending BOTH have it if the end defines it as such. We also must ensure that there are an equal number of values specified (we can't tween 1 boxShadow to 3 for example)\n\t\t\tif (this.multi) if (_commasOutsideParenExp.test(e) || _commasOutsideParenExp.test(b)) {\n\t\t\t\tba = b.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t\t\t\tea = e.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t\t\t} else if (kwd) {\n\t\t\t\tba = [b];\n\t\t\t\tea = [e];\n\t\t\t}\n\t\t\tif (ea) {\n\t\t\t\tl = (ea.length > ba.length) ? ea.length : ba.length;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tb = ba[i] = ba[i] || this.dflt;\n\t\t\t\t\te = ea[i] = ea[i] || this.dflt;\n\t\t\t\t\tif (kwd) {\n\t\t\t\t\t\tbi = b.indexOf(kwd);\n\t\t\t\t\t\tei = e.indexOf(kwd);\n\t\t\t\t\t\tif (bi !== ei) {\n\t\t\t\t\t\t\te = (ei === -1) ? ea : ba;\n\t\t\t\t\t\t\te[i] += \" \" + kwd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tb = ba.join(\", \");\n\t\t\t\te = ea.join(\", \");\n\t\t\t}\n\t\t\treturn _parseComplex(t, this.p, b, e, this.clrs, this.dflt, pt, this.pr, plugin, setRatio);\n\t\t};\n\n\t\t/**\n\t\t * Accepts a target and end value and spits back a CSSPropTween that has been inserted into the CSSPlugin's linked list and conforms with all the conventions we use internally, like type:-1, 0, 1, or 2, setting up any extra property tweens, priority, etc. For example, if we have a boxShadow SpecialProp and call:\n\t\t * this._firstPT = sp.parse(element, \"5px 10px 20px rgb(2550,102,51)\", \"boxShadow\", this);\n\t\t * It should figure out the starting value of the element's boxShadow, compare it to the provided end value and create all the necessary CSSPropTweens of the appropriate types to tween the boxShadow. The CSSPropTween that gets spit back should already be inserted into the linked list (the 4th parameter is the current head, so prepend to that).\n\t\t * @param {!Object} t Target object whose property is being tweened\n\t\t * @param {Object} e End value as provided in the vars object (typically a string, but not always - like a throwProps would be an object).\n\t\t * @param {!string} p Property name\n\t\t * @param {!CSSPlugin} cssp The CSSPlugin instance that should be associated with this tween.\n\t\t * @param {?CSSPropTween} pt The CSSPropTween that is the current head of the linked list (we'll prepend to it)\n\t\t * @param {TweenPlugin=} plugin If a plugin will be used to tween the parsed value, this is the plugin instance.\n\t\t * @param {Object=} vars Original vars object that contains the data for parsing.\n\t\t * @return {CSSPropTween} The first CSSPropTween in the linked list which includes the new one(s) added by the parse() call.\n\t\t */\n\t\tp.parse = function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\treturn this.parseComplex(t.style, this.format(_getStyle(t, this.p, _cs, false, this.dflt)), this.format(e), pt, plugin);\n\t\t};\n\n\t\t/**\n\t\t * Registers a special property that should be intercepted from any \"css\" objects defined in tweens. This allows you to handle them however you want without CSSPlugin doing it for you. The 2nd parameter should be a function that accepts 3 parameters:\n\t\t *  1) Target object whose property should be tweened (typically a DOM element)\n\t\t *  2) The end/destination value (could be a string, number, object, or whatever you want)\n\t\t *  3) The tween instance (you probably don't need to worry about this, but it can be useful for looking up information like the duration)\n\t\t *\n\t\t * Then, your function should return a function which will be called each time the tween gets rendered, passing a numeric \"ratio\" parameter to your function that indicates the change factor (usually between 0 and 1). For example:\n\t\t *\n\t\t * CSSPlugin.registerSpecialProp(\"myCustomProp\", function(target, value, tween) {\n\t\t *      var start = target.style.width;\n\t\t *      return function(ratio) {\n\t\t *              target.style.width = (start + value * ratio) + \"px\";\n\t\t *              console.log(\"set width to \" + target.style.width);\n\t\t *          }\n\t\t * }, 0);\n\t\t *\n\t\t * Then, when I do this tween, it will trigger my special property:\n\t\t *\n\t\t * TweenLite.to(element, 1, {css:{myCustomProp:100}});\n\t\t *\n\t\t * In the example, of course, we're just changing the width, but you can do anything you want.\n\t\t *\n\t\t * @param {!string} name Property name (or comma-delimited list of property names) that should be intercepted and handled by your function. For example, if I define \"myCustomProp\", then it would handle that portion of the following tween: TweenLite.to(element, 1, {css:{myCustomProp:100}})\n\t\t * @param {!function(Object, Object, Object, string):function(number)} onInitTween The function that will be called when a tween of this special property is performed. The function will receive 4 parameters: 1) Target object that should be tweened, 2) Value that was passed to the tween, 3) The tween instance itself (rarely used), and 4) The property name that's being tweened. Your function should return a function that should be called on every update of the tween. That function will receive a single parameter that is a \"change factor\" value (typically between 0 and 1) indicating the amount of change as a ratio. You can use this to determine how to set the values appropriately in your function.\n\t\t * @param {number=} priority Priority that helps the engine determine the order in which to set the properties (default: 0). Higher priority properties will be updated before lower priority ones.\n\t\t */\n\t\tCSSPlugin.registerSpecialProp = function(name, onInitTween, priority) {\n\t\t\t_registerComplexSpecialProp(name, {parser:function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\t\tvar rv = new CSSPropTween(t, p, 0, 0, pt, 2, p, false, priority);\n\t\t\t\trv.plugin = plugin;\n\t\t\t\trv.setRatio = onInitTween(t, e, cssp._tween, p);\n\t\t\t\treturn rv;\n\t\t\t}, priority:priority});\n\t\t};\n\n\n\n\n\n\n\n\n\t\t//transform-related methods and properties\n\t\tvar _transformProps = (\"scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective\").split(\",\"),\n\t\t\t_transformProp = _checkPropPrefix(\"transform\"), //the Javascript (camelCase) transform property, like msTransform, WebkitTransform, MozTransform, or OTransform.\n\t\t\t_transformPropCSS = _prefixCSS + \"transform\",\n\t\t\t_transformOriginProp = _checkPropPrefix(\"transformOrigin\"),\n\t\t\t_supports3D = (_checkPropPrefix(\"perspective\") !== null),\n\t\t\tTransform = _internals.Transform = function() {\n\t\t\t\tthis.skewY = 0;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Parses the transform values for an element, returning an object with x, y, z, scaleX, scaleY, scaleZ, rotation, rotationX, rotationY, skewX, and skewY properties. Note: by default (for performance reasons), all skewing is combined into skewX and rotation but skewY still has a place in the transform object so that we can record how much of the skew is attributed to skewX vs skewY. Remember, a skewY of 10 looks the same as a rotation of 10 and skewX of -10.\n\t\t\t * @param {!Object} t target element\n\t\t\t * @param {Object=} cs computed style object (optional)\n\t\t\t * @param {boolean=} rec if true, the transform values will be recorded to the target element's _gsTransform object, like target._gsTransform = {x:0, y:0, z:0, scaleX:1...}\n\t\t\t * @param {boolean=} parse if true, we'll ignore any _gsTransform values that already exist on the element, and force a reparsing of the css (calculated style)\n\t\t\t * @return {object} object containing all of the transform properties/values like {x:0, y:0, z:0, scaleX:1...}\n\t\t\t */\n\t\t\t_getTransform = _internals.getTransform = function(t, cs, rec, parse) {\n\t\t\t\tif (t._gsTransform && rec && !parse) {\n\t\t\t\t\treturn t._gsTransform; //if the element already has a _gsTransform, use that. Note: some browsers don't accurately return the calculated style for the transform (particularly for SVG), so it's almost always safest to just use the values we've already applied rather than re-parsing things.\n\t\t\t\t}\n\t\t\t\tvar tm = rec ? t._gsTransform || new Transform() : new Transform(),\n\t\t\t\t\tinvX = (tm.scaleX < 0), //in order to interpret things properly, we need to know if the user applied a negative scaleX previously so that we can adjust the rotation and skewX accordingly. Otherwise, if we always interpret a flipped matrix as affecting scaleY and the user only wants to tween the scaleX on multiple sequential tweens, it would keep the negative scaleY without that being the user's intent.\n\t\t\t\t\tmin = 0.00002,\n\t\t\t\t\trnd = 100000,\n\t\t\t\t\tminAngle = 179.99,\n\t\t\t\t\tminPI = minAngle * _DEG2RAD,\n\t\t\t\t\tzOrigin = _supports3D ? parseFloat(_getStyle(t, _transformOriginProp, cs, false, \"0 0 0\").split(\" \")[2]) || tm.zOrigin  || 0 : 0,\n\t\t\t\t\ts, m, i, n, dec, scaleX, scaleY, rotation, skewX, difX, difY, difR, difS;\n\t\t\t\tif (_transformProp) {\n\t\t\t\t\ts = _getStyle(t, _transformPropCSS, cs, true);\n\t\t\t\t} else if (t.currentStyle) {\n\t\t\t\t\t//for older versions of IE, we need to interpret the filter portion that is in the format: progid:DXImageTransform.Microsoft.Matrix(M11=6.123233995736766e-17, M12=-1, M21=1, M22=6.123233995736766e-17, sizingMethod='auto expand') Notice that we need to swap b and c compared to a normal matrix.\n\t\t\t\t\ts = t.currentStyle.filter.match(_ieGetMatrixExp);\n\t\t\t\t\ts = (s && s.length === 4) ? [s[0].substr(4), Number(s[2].substr(4)), Number(s[1].substr(4)), s[3].substr(4), (tm.x || 0), (tm.y || 0)].join(\",\") : \"\";\n\t\t\t\t}\n\t\t\t\t//split the matrix values out into an array (m for matrix)\n\t\t\t\tm = (s || \"\").match(/(?:\\-|\\b)[\\d\\-\\.e]+\\b/gi) || [];\n\t\t\t\ti = m.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tn = Number(m[i]);\n\t\t\t\t\tm[i] = (dec = n - (n |= 0)) ? ((dec * rnd + (dec < 0 ? -0.5 : 0.5)) | 0) / rnd + n : n; //convert strings to Numbers and round to 5 decimal places to avoid issues with tiny numbers. Roughly 20x faster than Number.toFixed(). We also must make sure to round before dividing so that values like 0.9999999999 become 1 to avoid glitches in browser rendering and interpretation of flipped/rotated 3D matrices. And don't just multiply the number by rnd, floor it, and then divide by rnd because the bitwise operations max out at a 32-bit signed integer, thus it could get clipped at a relatively low value (like 22,000.00000 for example).\n\t\t\t\t}\n\t\t\t\tif (m.length === 16) {\n\n\t\t\t\t\t//we'll only look at these position-related 6 variables first because if x/y/z all match, it's relatively safe to assume we don't need to re-parse everything which risks losing important rotational information (like rotationX:180 plus rotationY:180 would look the same as rotation:180 - there's no way to know for sure which direction was taken based solely on the matrix3d() values)\n\t\t\t\t\tvar a13 = m[8], a23 = m[9], a33 = m[10],\n\t\t\t\t\t\ta14 = m[12], a24 = m[13], a34 = m[14];\n\n\t\t\t\t\t//we manually compensate for non-zero z component of transformOrigin to work around bugs in Safari\n\t\t\t\t\tif (tm.zOrigin) {\n\t\t\t\t\t\ta34 = -tm.zOrigin;\n\t\t\t\t\t\ta14 = a13*a34-m[12];\n\t\t\t\t\t\ta24 = a23*a34-m[13];\n\t\t\t\t\t\ta34 = a33*a34+tm.zOrigin-m[14];\n\t\t\t\t\t}\n\n\t\t\t\t\t//only parse from the matrix if we MUST because not only is it usually unnecessary due to the fact that we store the values in the _gsTransform object, but also because it's impossible to accurately interpret rotationX, rotationY, rotationZ, scaleX, and scaleY if all are applied, so it's much better to rely on what we store. However, we must parse the first time that an object is tweened. We also assume that if the position has changed, the user must have done some styling changes outside of CSSPlugin, thus we force a parse in that scenario.\n\t\t\t\t\tif (!rec || parse || tm.rotationX == null) {\n\t\t\t\t\t\tvar a11 = m[0], a21 = m[1], a31 = m[2], a41 = m[3],\n\t\t\t\t\t\t\ta12 = m[4], a22 = m[5], a32 = m[6], a42 = m[7],\n\t\t\t\t\t\t\ta43 = m[11],\n\t\t\t\t\t\t\tangle = Math.atan2(a32, a33),\n\t\t\t\t\t\t\txFlip = (angle < -minPI || angle > minPI),\n\t\t\t\t\t\t\tt1, t2, t3, cos, sin, yFlip, zFlip;\n\t\t\t\t\t\ttm.rotationX = angle * _RAD2DEG;\n\t\t\t\t\t\t//rotationX\n\t\t\t\t\t\tif (angle) {\n\t\t\t\t\t\t\tcos = Math.cos(-angle);\n\t\t\t\t\t\t\tsin = Math.sin(-angle);\n\t\t\t\t\t\t\tt1 = a12*cos+a13*sin;\n\t\t\t\t\t\t\tt2 = a22*cos+a23*sin;\n\t\t\t\t\t\t\tt3 = a32*cos+a33*sin;\n\t\t\t\t\t\t\ta13 = a12*-sin+a13*cos;\n\t\t\t\t\t\t\ta23 = a22*-sin+a23*cos;\n\t\t\t\t\t\t\ta33 = a32*-sin+a33*cos;\n\t\t\t\t\t\t\ta43 = a42*-sin+a43*cos;\n\t\t\t\t\t\t\ta12 = t1;\n\t\t\t\t\t\t\ta22 = t2;\n\t\t\t\t\t\t\ta32 = t3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//rotationY\n\t\t\t\t\t\tangle = Math.atan2(a13, a11);\n\t\t\t\t\t\ttm.rotationY = angle * _RAD2DEG;\n\t\t\t\t\t\tif (angle) {\n\t\t\t\t\t\t\tyFlip = (angle < -minPI || angle > minPI);\n\t\t\t\t\t\t\tcos = Math.cos(-angle);\n\t\t\t\t\t\t\tsin = Math.sin(-angle);\n\t\t\t\t\t\t\tt1 = a11*cos-a13*sin;\n\t\t\t\t\t\t\tt2 = a21*cos-a23*sin;\n\t\t\t\t\t\t\tt3 = a31*cos-a33*sin;\n\t\t\t\t\t\t\ta23 = a21*sin+a23*cos;\n\t\t\t\t\t\t\ta33 = a31*sin+a33*cos;\n\t\t\t\t\t\t\ta43 = a41*sin+a43*cos;\n\t\t\t\t\t\t\ta11 = t1;\n\t\t\t\t\t\t\ta21 = t2;\n\t\t\t\t\t\t\ta31 = t3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//rotationZ\n\t\t\t\t\t\tangle = Math.atan2(a21, a22);\n\t\t\t\t\t\ttm.rotation = angle * _RAD2DEG;\n\t\t\t\t\t\tif (angle) {\n\t\t\t\t\t\t\tzFlip = (angle < -minPI || angle > minPI);\n\t\t\t\t\t\t\tcos = Math.cos(-angle);\n\t\t\t\t\t\t\tsin = Math.sin(-angle);\n\t\t\t\t\t\t\ta11 = a11*cos+a12*sin;\n\t\t\t\t\t\t\tt2 = a21*cos+a22*sin;\n\t\t\t\t\t\t\ta22 = a21*-sin+a22*cos;\n\t\t\t\t\t\t\ta32 = a31*-sin+a32*cos;\n\t\t\t\t\t\t\ta21 = t2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (zFlip && xFlip) {\n\t\t\t\t\t\t\ttm.rotation = tm.rotationX = 0;\n\t\t\t\t\t\t} else if (zFlip && yFlip) {\n\t\t\t\t\t\t\ttm.rotation = tm.rotationY = 0;\n\t\t\t\t\t\t} else if (yFlip && xFlip) {\n\t\t\t\t\t\t\ttm.rotationY = tm.rotationX = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttm.scaleX = ((Math.sqrt(a11 * a11 + a21 * a21) * rnd + 0.5) | 0) / rnd;\n\t\t\t\t\t\ttm.scaleY = ((Math.sqrt(a22 * a22 + a23 * a23) * rnd + 0.5) | 0) / rnd;\n\t\t\t\t\t\ttm.scaleZ = ((Math.sqrt(a32 * a32 + a33 * a33) * rnd + 0.5) | 0) / rnd;\n\t\t\t\t\t\ttm.skewX = 0;\n\t\t\t\t\t\ttm.perspective = a43 ? 1 / ((a43 < 0) ? -a43 : a43) : 0;\n\t\t\t\t\t\ttm.x = a14;\n\t\t\t\t\t\ttm.y = a24;\n\t\t\t\t\t\ttm.z = a34;\n\t\t\t\t\t}\n\n\t\t\t\t} else if ((!_supports3D || parse || !m.length || tm.x !== m[4] || tm.y !== m[5] || (!tm.rotationX && !tm.rotationY)) && !(tm.x !== undefined && _getStyle(t, \"display\", cs) === \"none\")) { //sometimes a 6-element matrix is returned even when we performed 3D transforms, like if rotationX and rotationY are 180. In cases like this, we still need to honor the 3D transforms. If we just rely on the 2D info, it could affect how the data is interpreted, like scaleY might get set to -1 or rotation could get offset by 180 degrees. For example, do a TweenLite.to(element, 1, {css:{rotationX:180, rotationY:180}}) and then later, TweenLite.to(element, 1, {css:{rotationX:0}}) and without this conditional logic in place, it'd jump to a state of being unrotated when the 2nd tween starts. Then again, we need to honor the fact that the user COULD alter the transforms outside of CSSPlugin, like by manually applying new css, so we try to sense that by looking at x and y because if those changed, we know the changes were made outside CSSPlugin and we force a reinterpretation of the matrix values. Also, in Webkit browsers, if the element's \"display\" is \"none\", its calculated style value will always return empty, so if we've already recorded the values in the _gsTransform object, we'll just rely on those.\n\t\t\t\t\tvar k = (m.length >= 6),\n\t\t\t\t\t\ta = k ? m[0] : 1,\n\t\t\t\t\t\tb = m[1] || 0,\n\t\t\t\t\t\tc = m[2] || 0,\n\t\t\t\t\t\td = k ? m[3] : 1;\n\t\t\t\t\ttm.x = m[4] || 0;\n\t\t\t\t\ttm.y = m[5] || 0;\n\t\t\t\t\tscaleX = Math.sqrt(a * a + b * b);\n\t\t\t\t\tscaleY = Math.sqrt(d * d + c * c);\n\t\t\t\t\trotation = (a || b) ? Math.atan2(b, a) * _RAD2DEG : tm.rotation || 0; //note: if scaleX is 0, we cannot accurately measure rotation. Same for skewX with a scaleY of 0. Therefore, we default to the previously recorded value (or zero if that doesn't exist).\n\t\t\t\t\tskewX = (c || d) ? Math.atan2(c, d) * _RAD2DEG + rotation : tm.skewX || 0;\n\t\t\t\t\tdifX = scaleX - Math.abs(tm.scaleX || 0);\n\t\t\t\t\tdifY = scaleY - Math.abs(tm.scaleY || 0);\n\t\t\t\t\tif (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {\n\t\t\t\t\t\tif (invX) {\n\t\t\t\t\t\t\tscaleX *= -1;\n\t\t\t\t\t\t\tskewX += (rotation <= 0) ? 180 : -180;\n\t\t\t\t\t\t\trotation += (rotation <= 0) ? 180 : -180;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscaleY *= -1;\n\t\t\t\t\t\t\tskewX += (skewX <= 0) ? 180 : -180;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdifR = (rotation - tm.rotation) % 180; //note: matching ranges would be very small (+/-0.0001) or very close to 180.\n\t\t\t\t\tdifS = (skewX - tm.skewX) % 180;\n\t\t\t\t\t//if there's already a recorded _gsTransform in place for the target, we should leave those values in place unless we know things changed for sure (beyond a super small amount). This gets around ambiguous interpretations, like if scaleX and scaleY are both -1, the matrix would be the same as if the rotation was 180 with normal scaleX/scaleY. If the user tweened to particular values, those must be prioritized to ensure animation is consistent.\n\t\t\t\t\tif (tm.skewX === undefined || difX > min || difX < -min || difY > min || difY < -min || (difR > -minAngle && difR < minAngle && (difR * rnd) | 0 !== 0) || (difS > -minAngle && difS < minAngle && (difS * rnd) | 0 !== 0)) {\n\t\t\t\t\t\ttm.scaleX = scaleX;\n\t\t\t\t\t\ttm.scaleY = scaleY;\n\t\t\t\t\t\ttm.rotation = rotation;\n\t\t\t\t\t\ttm.skewX = skewX;\n\t\t\t\t\t}\n\t\t\t\t\tif (_supports3D) {\n\t\t\t\t\t\ttm.rotationX = tm.rotationY = tm.z = 0;\n\t\t\t\t\t\ttm.perspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0;\n\t\t\t\t\t\ttm.scaleZ = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttm.zOrigin = zOrigin;\n\n\t\t\t\t//some browsers have a hard time with very small values like 2.4492935982947064e-16 (notice the \"e-\" towards the end) and would render the object slightly off. So we round to 0 in these cases. The conditional logic here is faster than calling Math.abs(). Also, browsers tend to render a SLIGHTLY rotated object in a fuzzy way, so we need to snap to exactly 0 when appropriate.\n\t\t\t\tfor (i in tm) {\n\t\t\t\t\tif (tm[i] < min) if (tm[i] > -min) {\n\t\t\t\t\t\ttm[i] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//DEBUG: _log(\"parsed rotation: \"+(tm.rotationX)+\", \"+(tm.rotationY)+\", \"+(tm.rotation)+\", scale: \"+tm.scaleX+\", \"+tm.scaleY+\", \"+tm.scaleZ+\", position: \"+tm.x+\", \"+tm.y+\", \"+tm.z+\", perspective: \"+tm.perspective);\n\t\t\t\tif (rec) {\n\t\t\t\t\tt._gsTransform = tm; //record to the object's _gsTransform which we use so that tweens can control individual properties independently (we need all the properties to accurately recompose the matrix in the setRatio() method)\n\t\t\t\t}\n\t\t\t\treturn tm;\n\t\t\t},\n\n\t\t\t//for setting 2D transforms in IE6, IE7, and IE8 (must use a \"filter\" to emulate the behavior of modern day browser transforms)\n\t\t\t_setIETransformRatio = function(v) {\n\t\t\t\tvar t = this.data, //refers to the element's _gsTransform object\n\t\t\t\t\tang = -t.rotation * _DEG2RAD,\n\t\t\t\t\tskew = ang + t.skewX * _DEG2RAD,\n\t\t\t\t\trnd = 100000,\n\t\t\t\t\ta = ((Math.cos(ang) * t.scaleX * rnd) | 0) / rnd,\n\t\t\t\t\tb = ((Math.sin(ang) * t.scaleX * rnd) | 0) / rnd,\n\t\t\t\t\tc = ((Math.sin(skew) * -t.scaleY * rnd) | 0) / rnd,\n\t\t\t\t\td = ((Math.cos(skew) * t.scaleY * rnd) | 0) / rnd,\n\t\t\t\t\tstyle = this.t.style,\n\t\t\t\t\tcs = this.t.currentStyle,\n\t\t\t\t\tfilters, val;\n\t\t\t\tif (!cs) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tval = b; //just for swapping the variables an inverting them (reused \"val\" to avoid creating another variable in memory). IE's filter matrix uses a non-standard matrix configuration (angle goes the opposite way, and b and c are reversed and inverted)\n\t\t\t\tb = -c;\n\t\t\t\tc = -val;\n\t\t\t\tfilters = cs.filter;\n\t\t\t\tstyle.filter = \"\"; //remove filters so that we can accurately measure offsetWidth/offsetHeight\n\t\t\t\tvar w = this.t.offsetWidth,\n\t\t\t\t\th = this.t.offsetHeight,\n\t\t\t\t\tclip = (cs.position !== \"absolute\"),\n\t\t\t\t\tm = \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + a + \", M12=\" + b + \", M21=\" + c + \", M22=\" + d,\n\t\t\t\t\tox = t.x,\n\t\t\t\t\toy = t.y,\n\t\t\t\t\tdx, dy;\n\n\t\t\t\t//if transformOrigin is being used, adjust the offset x and y\n\t\t\t\tif (t.ox != null) {\n\t\t\t\t\tdx = ((t.oxp) ? w * t.ox * 0.01 : t.ox) - w / 2;\n\t\t\t\t\tdy = ((t.oyp) ? h * t.oy * 0.01 : t.oy) - h / 2;\n\t\t\t\t\tox += dx - (dx * a + dy * b);\n\t\t\t\t\toy += dy - (dx * c + dy * d);\n\t\t\t\t}\n\n\t\t\t\tif (!clip) {\n\t\t\t\t\tm += \", sizingMethod='auto expand')\";\n\t\t\t\t} else {\n\t\t\t\t\tdx = (w / 2);\n\t\t\t\t\tdy = (h / 2);\n\t\t\t\t\t//translate to ensure that transformations occur around the correct origin (default is center).\n\t\t\t\t\tm += \", Dx=\" + (dx - (dx * a + dy * b) + ox) + \", Dy=\" + (dy - (dx * c + dy * d) + oy) + \")\";\n\t\t\t\t}\n\t\t\t\tif (filters.indexOf(\"DXImageTransform.Microsoft.Matrix(\") !== -1) {\n\t\t\t\t\tstyle.filter = filters.replace(_ieSetMatrixExp, m);\n\t\t\t\t} else {\n\t\t\t\t\tstyle.filter = m + \" \" + filters; //we must always put the transform/matrix FIRST (before alpha(opacity=xx)) to avoid an IE bug that slices part of the object when rotation is applied with alpha.\n\t\t\t\t}\n\n\t\t\t\t//at the end or beginning of the tween, if the matrix is normal (1, 0, 0, 1) and opacity is 100 (or doesn't exist), remove the filter to improve browser performance.\n\t\t\t\tif (v === 0 || v === 1) if (a === 1) if (b === 0) if (c === 0) if (d === 1) if (!clip || m.indexOf(\"Dx=0, Dy=0\") !== -1) if (!_opacityExp.test(filters) || parseFloat(RegExp.$1) === 100) if (filters.indexOf(\"gradient(\" && filters.indexOf(\"Alpha\")) === -1) {\n\t\t\t\t\tstyle.removeAttribute(\"filter\");\n\t\t\t\t}\n\n\t\t\t\t//we must set the margins AFTER applying the filter in order to avoid some bugs in IE8 that could (in rare scenarios) cause them to be ignored intermittently (vibration).\n\t\t\t\tif (!clip) {\n\t\t\t\t\tvar mult = (_ieVers < 8) ? 1 : -1, //in Internet Explorer 7 and before, the box model is broken, causing the browser to treat the width/height of the actual rotated filtered image as the width/height of the box itself, but Microsoft corrected that in IE8. We must use a negative offset in IE8 on the right/bottom\n\t\t\t\t\t\tmarg, prop, dif;\n\t\t\t\t\tdx = t.ieOffsetX || 0;\n\t\t\t\t\tdy = t.ieOffsetY || 0;\n\t\t\t\t\tt.ieOffsetX = Math.round((w - ((a < 0 ? -a : a) * w + (b < 0 ? -b : b) * h)) / 2 + ox);\n\t\t\t\t\tt.ieOffsetY = Math.round((h - ((d < 0 ? -d : d) * h + (c < 0 ? -c : c) * w)) / 2 + oy);\n\t\t\t\t\tfor (i = 0; i < 4; i++) {\n\t\t\t\t\t\tprop = _margins[i];\n\t\t\t\t\t\tmarg = cs[prop];\n\t\t\t\t\t\t//we need to get the current margin in case it is being tweened separately (we want to respect that tween's changes)\n\t\t\t\t\t\tval = (marg.indexOf(\"px\") !== -1) ? parseFloat(marg) : _convertToPixels(this.t, prop, parseFloat(marg), marg.replace(_suffixExp, \"\")) || 0;\n\t\t\t\t\t\tif (val !== t[prop]) {\n\t\t\t\t\t\t\tdif = (i < 2) ? -t.ieOffsetX : -t.ieOffsetY; //if another tween is controlling a margin, we cannot only apply the difference in the ieOffsets, so we essentially zero-out the dx and dy here in that case. We record the margin(s) later so that we can keep comparing them, making this code very flexible.\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdif = (i < 2) ? dx - t.ieOffsetX : dy - t.ieOffsetY;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyle[prop] = (t[prop] = Math.round( val - dif * ((i === 0 || i === 2) ? 1 : mult) )) + \"px\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t_set3DTransformRatio = _internals.set3DTransformRatio = function(v) {\n\t\t\t\tvar t = this.data, //refers to the element's _gsTransform object\n\t\t\t\t\tstyle = this.t.style,\n\t\t\t\t\tangle = t.rotation * _DEG2RAD,\n\t\t\t\t\tsx = t.scaleX,\n\t\t\t\t\tsy = t.scaleY,\n\t\t\t\t\tsz = t.scaleZ,\n\t\t\t\t\tperspective = t.perspective,\n\t\t\t\t\ta11, a12, a13, a14,\ta21, a22, a23, a24, a31, a32, a33, a34,\ta41, a42, a43,\n\t\t\t\t\tzOrigin, rnd, cos, sin, t1, t2, t3, t4;\n\t\t\t\tif (v === 1 || v === 0) if (t.force3D === \"auto\") if (!t.rotationY && !t.rotationX && sz === 1 && !perspective && !t.z) { //on the final render (which could be 0 for a from tween), if there are no 3D aspects, render in 2D to free up memory and improve performance especially on mobile devices\n\t\t\t\t\t_set2DTransformRatio.call(this, v);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (_isFirefox) {\n\t\t\t\t\tvar n = 0.0001;\n\t\t\t\t\tif (sx < n && sx > -n) { //Firefox has a bug (at least in v25) that causes it to render the transparent part of 32-bit PNG images as black when displayed inside an iframe and the 3D scale is very small and doesn't change sufficiently enough between renders (like if you use a Power4.easeInOut to scale from 0 to 1 where the beginning values only change a tiny amount to begin the tween before accelerating). In this case, we force the scale to be 0.00002 instead which is visually the same but works around the Firefox issue.\n\t\t\t\t\t\tsx = sz = 0.00002;\n\t\t\t\t\t}\n\t\t\t\t\tif (sy < n && sy > -n) {\n\t\t\t\t\t\tsy = sz = 0.00002;\n\t\t\t\t\t}\n\t\t\t\t\tif (perspective && !t.z && !t.rotationX && !t.rotationY) { //Firefox has a bug that causes elements to have an odd super-thin, broken/dotted black border on elements that have a perspective set but aren't utilizing 3D space (no rotationX, rotationY, or z).\n\t\t\t\t\t\tperspective = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (angle || t.skewX) {\n\t\t\t\t\tcos = Math.cos(angle);\n\t\t\t\t\tsin = Math.sin(angle);\n\t\t\t\t\ta11 = cos;\n\t\t\t\t\ta21 = sin;\n\t\t\t\t\tif (t.skewX) {\n\t\t\t\t\t\tangle -= t.skewX * _DEG2RAD;\n\t\t\t\t\t\tcos = Math.cos(angle);\n\t\t\t\t\t\tsin = Math.sin(angle);\n\t\t\t\t\t\tif (t.skewType === \"simple\") { //by default, we compensate skewing on the other axis to make it look more natural, but you can set the skewType to \"simple\" to use the uncompensated skewing that CSS does\n\t\t\t\t\t\t\tt1 = Math.tan(t.skewX * _DEG2RAD);\n\t\t\t\t\t\t\tt1 = Math.sqrt(1 + t1 * t1);\n\t\t\t\t\t\t\tcos *= t1;\n\t\t\t\t\t\t\tsin *= t1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ta12 = -sin;\n\t\t\t\t\ta22 = cos;\n\n\t\t\t\t} else if (!t.rotationY && !t.rotationX && sz === 1 && !perspective) { //if we're only translating and/or 2D scaling, this is faster...\n\t\t\t\t\tstyle[_transformProp] = \"translate3d(\" + t.x + \"px,\" + t.y + \"px,\" + t.z +\"px)\" + ((sx !== 1 || sy !== 1) ? \" scale(\" + sx + \",\" + sy + \")\" : \"\");\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\ta11 = a22 = 1;\n\t\t\t\t\ta12 = a21 = 0;\n\t\t\t\t}\n\t\t\t\ta33 = 1;\n\t\t\t\ta13 = a14 = a23 = a24 = a31 = a32 = a34 = a41 = a42 = 0;\n\t\t\t\ta43 = (perspective) ? -1 / perspective : 0;\n\t\t\t\tzOrigin = t.zOrigin;\n\t\t\t\trnd = 100000;\n\t\t\t\tangle = t.rotationY * _DEG2RAD;\n\t\t\t\tif (angle) {\n\t\t\t\t\tcos = Math.cos(angle);\n\t\t\t\t\tsin = Math.sin(angle);\n\t\t\t\t\ta31 = a33*-sin;\n\t\t\t\t\ta41 = a43*-sin;\n\t\t\t\t\ta13 = a11*sin;\n\t\t\t\t\ta23 = a21*sin;\n\t\t\t\t\ta33 *= cos;\n\t\t\t\t\ta43 *= cos;\n\t\t\t\t\ta11 *= cos;\n\t\t\t\t\ta21 *= cos;\n\t\t\t\t}\n\t\t\t\tangle = t.rotationX * _DEG2RAD;\n\t\t\t\tif (angle) {\n\t\t\t\t\tcos = Math.cos(angle);\n\t\t\t\t\tsin = Math.sin(angle);\n\t\t\t\t\tt1 = a12*cos+a13*sin;\n\t\t\t\t\tt2 = a22*cos+a23*sin;\n\t\t\t\t\tt3 = a32*cos+a33*sin;\n\t\t\t\t\tt4 = a42*cos+a43*sin;\n\t\t\t\t\ta13 = a12*-sin+a13*cos;\n\t\t\t\t\ta23 = a22*-sin+a23*cos;\n\t\t\t\t\ta33 = a32*-sin+a33*cos;\n\t\t\t\t\ta43 = a42*-sin+a43*cos;\n\t\t\t\t\ta12 = t1;\n\t\t\t\t\ta22 = t2;\n\t\t\t\t\ta32 = t3;\n\t\t\t\t\ta42 = t4;\n\t\t\t\t}\n\t\t\t\tif (sz !== 1) {\n\t\t\t\t\ta13*=sz;\n\t\t\t\t\ta23*=sz;\n\t\t\t\t\ta33*=sz;\n\t\t\t\t\ta43*=sz;\n\t\t\t\t}\n\t\t\t\tif (sy !== 1) {\n\t\t\t\t\ta12*=sy;\n\t\t\t\t\ta22*=sy;\n\t\t\t\t\ta32*=sy;\n\t\t\t\t\ta42*=sy;\n\t\t\t\t}\n\t\t\t\tif (sx !== 1) {\n\t\t\t\t\ta11*=sx;\n\t\t\t\t\ta21*=sx;\n\t\t\t\t\ta31*=sx;\n\t\t\t\t\ta41*=sx;\n\t\t\t\t}\n\t\t\t\tif (zOrigin) {\n\t\t\t\t\ta34 -= zOrigin;\n\t\t\t\t\ta14 = a13*a34;\n\t\t\t\t\ta24 = a23*a34;\n\t\t\t\t\ta34 = a33*a34+zOrigin;\n\t\t\t\t}\n\t\t\t\t//we round the x, y, and z slightly differently to allow even larger values.\n\t\t\t\ta14 = (t1 = (a14 += t.x) - (a14 |= 0)) ? ((t1 * rnd + (t1 < 0 ? -0.5 : 0.5)) | 0) / rnd + a14 : a14;\n\t\t\t\ta24 = (t1 = (a24 += t.y) - (a24 |= 0)) ? ((t1 * rnd + (t1 < 0 ? -0.5 : 0.5)) | 0) / rnd + a24 : a24;\n\t\t\t\ta34 = (t1 = (a34 += t.z) - (a34 |= 0)) ? ((t1 * rnd + (t1 < 0 ? -0.5 : 0.5)) | 0) / rnd + a34 : a34;\n\t\t\t\tstyle[_transformProp] = \"matrix3d(\" + [ (((a11 * rnd) | 0) / rnd), (((a21 * rnd) | 0) / rnd), (((a31 * rnd) | 0) / rnd), (((a41 * rnd) | 0) / rnd), (((a12 * rnd) | 0) / rnd), (((a22 * rnd) | 0) / rnd), (((a32 * rnd) | 0) / rnd), (((a42 * rnd) | 0) / rnd), (((a13 * rnd) | 0) / rnd), (((a23 * rnd) | 0) / rnd), (((a33 * rnd) | 0) / rnd), (((a43 * rnd) | 0) / rnd), a14, a24, a34, (perspective ? (1 + (-a34 / perspective)) : 1) ].join(\",\") + \")\";\n\t\t\t},\n\n\t\t\t_set2DTransformRatio = _internals.set2DTransformRatio = function(v) {\n\t\t\t\tvar t = this.data, //refers to the element's _gsTransform object\n\t\t\t\t\ttarg = this.t,\n\t\t\t\t\tstyle = targ.style,\n\t\t\t\t\tang, skew, rnd, sx, sy;\n\t\t\t\tif (t.rotationX || t.rotationY || t.z || t.force3D === true || (t.force3D === \"auto\" && v !== 1 && v !== 0)) { //if a 3D tween begins while a 2D one is running, we need to kick the rendering over to the 3D method. For example, imagine a yoyo-ing, infinitely repeating scale tween running, and then the object gets rotated in 3D space with a different tween.\n\t\t\t\t\tthis.setRatio = _set3DTransformRatio;\n\t\t\t\t\t_set3DTransformRatio.call(this, v);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!t.rotation && !t.skewX) {\n\t\t\t\t\tstyle[_transformProp] = \"matrix(\" + t.scaleX + \",0,0,\" + t.scaleY + \",\" + t.x + \",\" + t.y + \")\";\n\t\t\t\t} else {\n\t\t\t\t\tang = t.rotation * _DEG2RAD;\n\t\t\t\t\tskew = ang - t.skewX * _DEG2RAD;\n\t\t\t\t\trnd = 100000;\n\t\t\t\t\tsx = t.scaleX * rnd;\n\t\t\t\t\tsy = t.scaleY * rnd;\n\t\t\t\t\t//some browsers have a hard time with very small values like 2.4492935982947064e-16 (notice the \"e-\" towards the end) and would render the object slightly off. So we round to 5 decimal places.\n\t\t\t\t\tstyle[_transformProp] = \"matrix(\" + (((Math.cos(ang) * sx) | 0) / rnd) + \",\" + (((Math.sin(ang) * sx) | 0) / rnd) + \",\" + (((Math.sin(skew) * -sy) | 0) / rnd) + \",\" + (((Math.cos(skew) * sy) | 0) / rnd) + \",\" + t.x + \",\" + t.y + \")\";\n\t\t\t\t}\n\t\t\t};\n\n\t\t_registerComplexSpecialProp(\"transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType\", {parser:function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\tif (cssp._transform) { return pt; } //only need to parse the transform once, and only if the browser supports it.\n\t\t\tvar m1 = cssp._transform = _getTransform(t, _cs, true, vars.parseTransform),\n\t\t\t\tstyle = t.style,\n\t\t\t\tmin = 0.000001,\n\t\t\t\ti = _transformProps.length,\n\t\t\t\tv = vars,\n\t\t\t\tendRotations = {},\n\t\t\t\tm2, skewY, copy, orig, has3D, hasChange, dr;\n\t\t\tif (typeof(v.transform) === \"string\" && _transformProp) { //for values like transform:\"rotate(60deg) scale(0.5, 0.8)\"\n\t\t\t\tcopy = _tempDiv.style; //don't use the original target because it might be SVG in which case some browsers don't report computed style correctly.\n\t\t\t\tcopy[_transformProp] = v.transform;\n\t\t\t\tcopy.display = \"block\"; //if display is \"none\", the browser often refuses to report the transform properties correctly.\n\t\t\t\tcopy.position = \"absolute\";\n\t\t\t\t_doc.body.appendChild(_tempDiv);\n\t\t\t\tm2 = _getTransform(_tempDiv, null, false);\n\t\t\t\t_doc.body.removeChild(_tempDiv);\n\t\t\t} else if (typeof(v) === \"object\") { //for values like scaleX, scaleY, rotation, x, y, skewX, and skewY or transform:{...} (object)\n\t\t\t\tm2 = {scaleX:_parseVal((v.scaleX != null) ? v.scaleX : v.scale, m1.scaleX),\n\t\t\t\t\tscaleY:_parseVal((v.scaleY != null) ? v.scaleY : v.scale, m1.scaleY),\n\t\t\t\t\tscaleZ:_parseVal(v.scaleZ, m1.scaleZ),\n\t\t\t\t\tx:_parseVal(v.x, m1.x),\n\t\t\t\t\ty:_parseVal(v.y, m1.y),\n\t\t\t\t\tz:_parseVal(v.z, m1.z),\n\t\t\t\t\tperspective:_parseVal(v.transformPerspective, m1.perspective)};\n\t\t\t\tdr = v.directionalRotation;\n\t\t\t\tif (dr != null) {\n\t\t\t\t\tif (typeof(dr) === \"object\") {\n\t\t\t\t\t\tfor (copy in dr) {\n\t\t\t\t\t\t\tv[copy] = dr[copy];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tv.rotation = dr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tm2.rotation = _parseAngle((\"rotation\" in v) ? v.rotation : (\"shortRotation\" in v) ? v.shortRotation + \"_short\" : (\"rotationZ\" in v) ? v.rotationZ : m1.rotation, m1.rotation, \"rotation\", endRotations);\n\t\t\t\tif (_supports3D) {\n\t\t\t\t\tm2.rotationX = _parseAngle((\"rotationX\" in v) ? v.rotationX : (\"shortRotationX\" in v) ? v.shortRotationX + \"_short\" : m1.rotationX || 0, m1.rotationX, \"rotationX\", endRotations);\n\t\t\t\t\tm2.rotationY = _parseAngle((\"rotationY\" in v) ? v.rotationY : (\"shortRotationY\" in v) ? v.shortRotationY + \"_short\" : m1.rotationY || 0, m1.rotationY, \"rotationY\", endRotations);\n\t\t\t\t}\n\t\t\t\tm2.skewX = (v.skewX == null) ? m1.skewX : _parseAngle(v.skewX, m1.skewX);\n\n\t\t\t\t//note: for performance reasons, we combine all skewing into the skewX and rotation values, ignoring skewY but we must still record it so that we can discern how much of the overall skew is attributed to skewX vs. skewY. Otherwise, if the skewY would always act relative (tween skewY to 10deg, for example, multiple times and if we always combine things into skewX, we can't remember that skewY was 10 from last time). Remember, a skewY of 10 degrees looks the same as a rotation of 10 degrees plus a skewX of -10 degrees.\n\t\t\t\tm2.skewY = (v.skewY == null) ? m1.skewY : _parseAngle(v.skewY, m1.skewY);\n\t\t\t\tif ((skewY = m2.skewY - m1.skewY)) {\n\t\t\t\t\tm2.skewX += skewY;\n\t\t\t\t\tm2.rotation += skewY;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_supports3D && v.force3D != null) {\n\t\t\t\tm1.force3D = v.force3D;\n\t\t\t\thasChange = true;\n\t\t\t}\n\n\t\t\tm1.skewType = v.skewType || m1.skewType || CSSPlugin.defaultSkewType;\n\n\t\t\thas3D = (m1.force3D || m1.z || m1.rotationX || m1.rotationY || m2.z || m2.rotationX || m2.rotationY || m2.perspective);\n\t\t\tif (!has3D && v.scale != null) {\n\t\t\t\tm2.scaleZ = 1; //no need to tween scaleZ.\n\t\t\t}\n\n\t\t\twhile (--i > -1) {\n\t\t\t\tp = _transformProps[i];\n\t\t\t\torig = m2[p] - m1[p];\n\t\t\t\tif (orig > min || orig < -min || _forcePT[p] != null) {\n\t\t\t\t\thasChange = true;\n\t\t\t\t\tpt = new CSSPropTween(m1, p, m1[p], orig, pt);\n\t\t\t\t\tif (p in endRotations) {\n\t\t\t\t\t\tpt.e = endRotations[p]; //directional rotations typically have compensated values during the tween, but we need to make sure they end at exactly what the user requested\n\t\t\t\t\t}\n\t\t\t\t\tpt.xs0 = 0; //ensures the value stays numeric in setRatio()\n\t\t\t\t\tpt.plugin = plugin;\n\t\t\t\t\tcssp._overwriteProps.push(pt.n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\torig = v.transformOrigin;\n\t\t\tif (orig || (_supports3D && has3D && m1.zOrigin)) { //if anything 3D is happening and there's a transformOrigin with a z component that's non-zero, we must ensure that the transformOrigin's z-component is set to 0 so that we can manually do those calculations to get around Safari bugs. Even if the user didn't specifically define a \"transformOrigin\" in this particular tween (maybe they did it via css directly).\n\t\t\t\tif (_transformProp) {\n\t\t\t\t\thasChange = true;\n\t\t\t\t\tp = _transformOriginProp;\n\t\t\t\t\torig = (orig || _getStyle(t, p, _cs, false, \"50% 50%\")) + \"\"; //cast as string to avoid errors\n\t\t\t\t\tpt = new CSSPropTween(style, p, 0, 0, pt, -1, \"transformOrigin\");\n\t\t\t\t\tpt.b = style[p];\n\t\t\t\t\tpt.plugin = plugin;\n\t\t\t\t\tif (_supports3D) {\n\t\t\t\t\t\tcopy = m1.zOrigin;\n\t\t\t\t\t\torig = orig.split(\" \");\n\t\t\t\t\t\tm1.zOrigin = ((orig.length > 2 && !(copy !== 0 && orig[2] === \"0px\")) ? parseFloat(orig[2]) : copy) || 0; //Safari doesn't handle the z part of transformOrigin correctly, so we'll manually handle it in the _set3DTransformRatio() method.\n\t\t\t\t\t\tpt.xs0 = pt.e = orig[0] + \" \" + (orig[1] || \"50%\") + \" 0px\"; //we must define a z value of 0px specifically otherwise iOS 5 Safari will stick with the old one (if one was defined)!\n\t\t\t\t\t\tpt = new CSSPropTween(m1, \"zOrigin\", 0, 0, pt, -1, pt.n); //we must create a CSSPropTween for the _gsTransform.zOrigin so that it gets reset properly at the beginning if the tween runs backward (as opposed to just setting m1.zOrigin here)\n\t\t\t\t\t\tpt.b = copy;\n\t\t\t\t\t\tpt.xs0 = pt.e = m1.zOrigin;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.xs0 = pt.e = orig;\n\t\t\t\t\t}\n\n\t\t\t\t//for older versions of IE (6-8), we need to manually calculate things inside the setRatio() function. We record origin x and y (ox and oy) and whether or not the values are percentages (oxp and oyp).\n\t\t\t\t} else {\n\t\t\t\t\t_parsePosition(orig + \"\", m1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasChange) {\n\t\t\t\tcssp._transformType = (has3D || this._transformType === 3) ? 3 : 2; //quicker than calling cssp._enableTransforms();\n\t\t\t}\n\t\t\treturn pt;\n\t\t}, prefix:true});\n\n\t\t_registerComplexSpecialProp(\"boxShadow\", {defaultValue:\"0px 0px 0px 0px #999\", prefix:true, color:true, multi:true, keyword:\"inset\"});\n\n\t\t_registerComplexSpecialProp(\"borderRadius\", {defaultValue:\"0px\", parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\te = this.format(e);\n\t\t\tvar props = [\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderBottomRightRadius\",\"borderBottomLeftRadius\"],\n\t\t\t\tstyle = t.style,\n\t\t\t\tea1, i, es2, bs2, bs, es, bn, en, w, h, esfx, bsfx, rel, hn, vn, em;\n\t\t\tw = parseFloat(t.offsetWidth);\n\t\t\th = parseFloat(t.offsetHeight);\n\t\t\tea1 = e.split(\" \");\n\t\t\tfor (i = 0; i < props.length; i++) { //if we're dealing with percentages, we must convert things separately for the horizontal and vertical axis!\n\t\t\t\tif (this.p.indexOf(\"border\")) { //older browsers used a prefix\n\t\t\t\t\tprops[i] = _checkPropPrefix(props[i]);\n\t\t\t\t}\n\t\t\t\tbs = bs2 = _getStyle(t, props[i], _cs, false, \"0px\");\n\t\t\t\tif (bs.indexOf(\" \") !== -1) {\n\t\t\t\t\tbs2 = bs.split(\" \");\n\t\t\t\t\tbs = bs2[0];\n\t\t\t\t\tbs2 = bs2[1];\n\t\t\t\t}\n\t\t\t\tes = es2 = ea1[i];\n\t\t\t\tbn = parseFloat(bs);\n\t\t\t\tbsfx = bs.substr((bn + \"\").length);\n\t\t\t\trel = (es.charAt(1) === \"=\");\n\t\t\t\tif (rel) {\n\t\t\t\t\ten = parseInt(es.charAt(0)+\"1\", 10);\n\t\t\t\t\tes = es.substr(2);\n\t\t\t\t\ten *= parseFloat(es);\n\t\t\t\t\tesfx = es.substr((en + \"\").length - (en < 0 ? 1 : 0)) || \"\";\n\t\t\t\t} else {\n\t\t\t\t\ten = parseFloat(es);\n\t\t\t\t\tesfx = es.substr((en + \"\").length);\n\t\t\t\t}\n\t\t\t\tif (esfx === \"\") {\n\t\t\t\t\tesfx = _suffixMap[p] || bsfx;\n\t\t\t\t}\n\t\t\t\tif (esfx !== bsfx) {\n\t\t\t\t\thn = _convertToPixels(t, \"borderLeft\", bn, bsfx); //horizontal number (we use a bogus \"borderLeft\" property just because the _convertToPixels() method searches for the keywords \"Left\", \"Right\", \"Top\", and \"Bottom\" to determine of it's a horizontal or vertical property, and we need \"border\" in the name so that it knows it should measure relative to the element itself, not its parent.\n\t\t\t\t\tvn = _convertToPixels(t, \"borderTop\", bn, bsfx); //vertical number\n\t\t\t\t\tif (esfx === \"%\") {\n\t\t\t\t\t\tbs = (hn / w * 100) + \"%\";\n\t\t\t\t\t\tbs2 = (vn / h * 100) + \"%\";\n\t\t\t\t\t} else if (esfx === \"em\") {\n\t\t\t\t\t\tem = _convertToPixels(t, \"borderLeft\", 1, \"em\");\n\t\t\t\t\t\tbs = (hn / em) + \"em\";\n\t\t\t\t\t\tbs2 = (vn / em) + \"em\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbs = hn + \"px\";\n\t\t\t\t\t\tbs2 = vn + \"px\";\n\t\t\t\t\t}\n\t\t\t\t\tif (rel) {\n\t\t\t\t\t\tes = (parseFloat(bs) + en) + esfx;\n\t\t\t\t\t\tes2 = (parseFloat(bs2) + en) + esfx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpt = _parseComplex(style, props[i], bs + \" \" + bs2, es + \" \" + es2, false, \"0px\", pt);\n\t\t\t}\n\t\t\treturn pt;\n\t\t}, prefix:true, formatter:_getFormatter(\"0px 0px 0px 0px\", false, true)});\n\t\t_registerComplexSpecialProp(\"backgroundPosition\", {defaultValue:\"0 0\", parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\tvar bp = \"background-position\",\n\t\t\t\tcs = (_cs || _getComputedStyle(t, null)),\n\t\t\t\tbs = this.format( ((cs) ? _ieVers ? cs.getPropertyValue(bp + \"-x\") + \" \" + cs.getPropertyValue(bp + \"-y\") : cs.getPropertyValue(bp) : t.currentStyle.backgroundPositionX + \" \" + t.currentStyle.backgroundPositionY) || \"0 0\"), //Internet Explorer doesn't report background-position correctly - we must query background-position-x and background-position-y and combine them (even in IE10). Before IE9, we must do the same with the currentStyle object and use camelCase\n\t\t\t\tes = this.format(e),\n\t\t\t\tba, ea, i, pct, overlap, src;\n\t\t\tif ((bs.indexOf(\"%\") !== -1) !== (es.indexOf(\"%\") !== -1)) {\n\t\t\t\tsrc = _getStyle(t, \"backgroundImage\").replace(_urlExp, \"\");\n\t\t\t\tif (src && src !== \"none\") {\n\t\t\t\t\tba = bs.split(\" \");\n\t\t\t\t\tea = es.split(\" \");\n\t\t\t\t\t_tempImg.setAttribute(\"src\", src); //set the temp <img>'s src to the background-image so that we can measure its width/height\n\t\t\t\t\ti = 2;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tbs = ba[i];\n\t\t\t\t\t\tpct = (bs.indexOf(\"%\") !== -1);\n\t\t\t\t\t\tif (pct !== (ea[i].indexOf(\"%\") !== -1)) {\n\t\t\t\t\t\t\toverlap = (i === 0) ? t.offsetWidth - _tempImg.width : t.offsetHeight - _tempImg.height;\n\t\t\t\t\t\t\tba[i] = pct ? (parseFloat(bs) / 100 * overlap) + \"px\" : (parseFloat(bs) / overlap * 100) + \"%\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbs = ba.join(\" \");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.parseComplex(t.style, bs, es, pt, plugin);\n\t\t}, formatter:_parsePosition});\n\t\t_registerComplexSpecialProp(\"backgroundSize\", {defaultValue:\"0 0\", formatter:_parsePosition});\n\t\t_registerComplexSpecialProp(\"perspective\", {defaultValue:\"0px\", prefix:true});\n\t\t_registerComplexSpecialProp(\"perspectiveOrigin\", {defaultValue:\"50% 50%\", prefix:true});\n\t\t_registerComplexSpecialProp(\"transformStyle\", {prefix:true});\n\t\t_registerComplexSpecialProp(\"backfaceVisibility\", {prefix:true});\n\t\t_registerComplexSpecialProp(\"userSelect\", {prefix:true});\n\t\t_registerComplexSpecialProp(\"margin\", {parser:_getEdgeParser(\"marginTop,marginRight,marginBottom,marginLeft\")});\n\t\t_registerComplexSpecialProp(\"padding\", {parser:_getEdgeParser(\"paddingTop,paddingRight,paddingBottom,paddingLeft\")});\n\t\t_registerComplexSpecialProp(\"clip\", {defaultValue:\"rect(0px,0px,0px,0px)\", parser:function(t, e, p, cssp, pt, plugin){\n\t\t\tvar b, cs, delim;\n\t\t\tif (_ieVers < 9) { //IE8 and earlier don't report a \"clip\" value in the currentStyle - instead, the values are split apart into clipTop, clipRight, clipBottom, and clipLeft. Also, in IE7 and earlier, the values inside rect() are space-delimited, not comma-delimited.\n\t\t\t\tcs = t.currentStyle;\n\t\t\t\tdelim = _ieVers < 8 ? \" \" : \",\";\n\t\t\t\tb = \"rect(\" + cs.clipTop + delim + cs.clipRight + delim + cs.clipBottom + delim + cs.clipLeft + \")\";\n\t\t\t\te = this.format(e).split(\",\").join(delim);\n\t\t\t} else {\n\t\t\t\tb = this.format(_getStyle(t, this.p, _cs, false, this.dflt));\n\t\t\t\te = this.format(e);\n\t\t\t}\n\t\t\treturn this.parseComplex(t.style, b, e, pt, plugin);\n\t\t}});\n\t\t_registerComplexSpecialProp(\"textShadow\", {defaultValue:\"0px 0px 0px #999\", color:true, multi:true});\n\t\t_registerComplexSpecialProp(\"autoRound,strictUnits\", {parser:function(t, e, p, cssp, pt) {return pt;}}); //just so that we can ignore these properties (not tween them)\n\t\t_registerComplexSpecialProp(\"border\", {defaultValue:\"0px solid #000\", parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\t\treturn this.parseComplex(t.style, this.format(_getStyle(t, \"borderTopWidth\", _cs, false, \"0px\") + \" \" + _getStyle(t, \"borderTopStyle\", _cs, false, \"solid\") + \" \" + _getStyle(t, \"borderTopColor\", _cs, false, \"#000\")), this.format(e), pt, plugin);\n\t\t\t}, color:true, formatter:function(v) {\n\t\t\t\tvar a = v.split(\" \");\n\t\t\t\treturn a[0] + \" \" + (a[1] || \"solid\") + \" \" + (v.match(_colorExp) || [\"#000\"])[0];\n\t\t\t}});\n\t\t_registerComplexSpecialProp(\"borderWidth\", {parser:_getEdgeParser(\"borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth\")}); //Firefox doesn't pick up on borderWidth set in style sheets (only inline).\n\t\t_registerComplexSpecialProp(\"float,cssFloat,styleFloat\", {parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\tvar s = t.style,\n\t\t\t\tprop = (\"cssFloat\" in s) ? \"cssFloat\" : \"styleFloat\";\n\t\t\treturn new CSSPropTween(s, prop, 0, 0, pt, -1, p, false, 0, s[prop], e);\n\t\t}});\n\n\t\t//opacity-related\n\t\tvar _setIEOpacityRatio = function(v) {\n\t\t\t\tvar t = this.t, //refers to the element's style property\n\t\t\t\t\tfilters = t.filter || _getStyle(this.data, \"filter\"),\n\t\t\t\t\tval = (this.s + this.c * v) | 0,\n\t\t\t\t\tskip;\n\t\t\t\tif (val === 100) { //for older versions of IE that need to use a filter to apply opacity, we should remove the filter if opacity hits 1 in order to improve performance, but make sure there isn't a transform (matrix) or gradient in the filters.\n\t\t\t\t\tif (filters.indexOf(\"atrix(\") === -1 && filters.indexOf(\"radient(\") === -1 && filters.indexOf(\"oader(\") === -1) {\n\t\t\t\t\t\tt.removeAttribute(\"filter\");\n\t\t\t\t\t\tskip = (!_getStyle(this.data, \"filter\")); //if a class is applied that has an alpha filter, it will take effect (we don't want that), so re-apply our alpha filter in that case. We must first remove it and then check.\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt.filter = filters.replace(_alphaFilterExp, \"\");\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tif (this.xn1) {\n\t\t\t\t\t\tt.filter = filters = filters || (\"alpha(opacity=\" + val + \")\"); //works around bug in IE7/8 that prevents changes to \"visibility\" from being applied properly if the filter is changed to a different alpha on the same frame.\n\t\t\t\t\t}\n\t\t\t\t\tif (filters.indexOf(\"pacity\") === -1) { //only used if browser doesn't support the standard opacity style property (IE 7 and 8). We omit the \"O\" to avoid case-sensitivity issues\n\t\t\t\t\t\tif (val !== 0 || !this.xn1) { //bugs in IE7/8 won't render the filter properly if opacity is ADDED on the same frame/render as \"visibility\" changes (this.xn1 is 1 if this tween is an \"autoAlpha\" tween)\n\t\t\t\t\t\t\tt.filter = filters + \" alpha(opacity=\" + val + \")\"; //we round the value because otherwise, bugs in IE7/8 can prevent \"visibility\" changes from being applied properly.\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt.filter = filters.replace(_opacityExp, \"opacity=\" + val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t_registerComplexSpecialProp(\"opacity,alpha,autoAlpha\", {defaultValue:\"1\", parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\tvar b = parseFloat(_getStyle(t, \"opacity\", _cs, false, \"1\")),\n\t\t\t\tstyle = t.style,\n\t\t\t\tisAutoAlpha = (p === \"autoAlpha\");\n\t\t\tif (typeof(e) === \"string\" && e.charAt(1) === \"=\") {\n\t\t\t\te = ((e.charAt(0) === \"-\") ? -1 : 1) * parseFloat(e.substr(2)) + b;\n\t\t\t}\n\t\t\tif (isAutoAlpha && b === 1 && _getStyle(t, \"visibility\", _cs) === \"hidden\" && e !== 0) { //if visibility is initially set to \"hidden\", we should interpret that as intent to make opacity 0 (a convenience)\n\t\t\t\tb = 0;\n\t\t\t}\n\t\t\tif (_supportsOpacity) {\n\t\t\t\tpt = new CSSPropTween(style, \"opacity\", b, e - b, pt);\n\t\t\t} else {\n\t\t\t\tpt = new CSSPropTween(style, \"opacity\", b * 100, (e - b) * 100, pt);\n\t\t\t\tpt.xn1 = isAutoAlpha ? 1 : 0; //we need to record whether or not this is an autoAlpha so that in the setRatio(), we know to duplicate the setting of the alpha in order to work around a bug in IE7 and IE8 that prevents changes to \"visibility\" from taking effect if the filter is changed to a different alpha(opacity) at the same time. Setting it to the SAME value first, then the new value works around the IE7/8 bug.\n\t\t\t\tstyle.zoom = 1; //helps correct an IE issue.\n\t\t\t\tpt.type = 2;\n\t\t\t\tpt.b = \"alpha(opacity=\" + pt.s + \")\";\n\t\t\t\tpt.e = \"alpha(opacity=\" + (pt.s + pt.c) + \")\";\n\t\t\t\tpt.data = t;\n\t\t\t\tpt.plugin = plugin;\n\t\t\t\tpt.setRatio = _setIEOpacityRatio;\n\t\t\t}\n\t\t\tif (isAutoAlpha) { //we have to create the \"visibility\" PropTween after the opacity one in the linked list so that they run in the order that works properly in IE8 and earlier\n\t\t\t\tpt = new CSSPropTween(style, \"visibility\", 0, 0, pt, -1, null, false, 0, ((b !== 0) ? \"inherit\" : \"hidden\"), ((e === 0) ? \"hidden\" : \"inherit\"));\n\t\t\t\tpt.xs0 = \"inherit\";\n\t\t\t\tcssp._overwriteProps.push(pt.n);\n\t\t\t\tcssp._overwriteProps.push(p);\n\t\t\t}\n\t\t\treturn pt;\n\t\t}});\n\n\n\t\tvar _removeProp = function(s, p) {\n\t\t\t\tif (p) {\n\t\t\t\t\tif (s.removeProperty) {\n\t\t\t\t\t\tif (p.substr(0,2) === \"ms\") { //Microsoft browsers don't conform to the standard of capping the first prefix character, so we adjust so that when we prefix the caps with a dash, it's correct (otherwise it'd be \"ms-transform\" instead of \"-ms-transform\" for IE9, for example)\n\t\t\t\t\t\t\tp = \"M\" + p.substr(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t\t\t\t\t} else { //note: old versions of IE use \"removeAttribute()\" instead of \"removeProperty()\"\n\t\t\t\t\t\ts.removeAttribute(p);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t_setClassNameRatio = function(v) {\n\t\t\t\tthis.t._gsClassPT = this;\n\t\t\t\tif (v === 1 || v === 0) {\n\t\t\t\t\tthis.t.setAttribute(\"class\", (v === 0) ? this.b : this.e);\n\t\t\t\t\tvar mpt = this.data, //first MiniPropTween\n\t\t\t\t\t\ts = this.t.style;\n\t\t\t\t\twhile (mpt) {\n\t\t\t\t\t\tif (!mpt.v) {\n\t\t\t\t\t\t\t_removeProp(s, mpt.p);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ts[mpt.p] = mpt.v;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmpt = mpt._next;\n\t\t\t\t\t}\n\t\t\t\t\tif (v === 1 && this.t._gsClassPT === this) {\n\t\t\t\t\t\tthis.t._gsClassPT = null;\n\t\t\t\t\t}\n\t\t\t\t} else if (this.t.getAttribute(\"class\") !== this.e) {\n\t\t\t\t\tthis.t.setAttribute(\"class\", this.e);\n\t\t\t\t}\n\t\t\t};\n\t\t_registerComplexSpecialProp(\"className\", {parser:function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\tvar b = t.getAttribute(\"class\") || \"\", //don't use t.className because it doesn't work consistently on SVG elements; getAttribute(\"class\") and setAttribute(\"class\", value\") is more reliable.\n\t\t\t\tcssText = t.style.cssText,\n\t\t\t\tdifData, bs, cnpt, cnptLookup, mpt;\n\t\t\tpt = cssp._classNamePT = new CSSPropTween(t, p, 0, 0, pt, 2);\n\t\t\tpt.setRatio = _setClassNameRatio;\n\t\t\tpt.pr = -11;\n\t\t\t_hasPriority = true;\n\t\t\tpt.b = b;\n\t\t\tbs = _getAllStyles(t, _cs);\n\t\t\t//if there's a className tween already operating on the target, force it to its end so that the necessary inline styles are removed and the class name is applied before we determine the end state (we don't want inline styles interfering that were there just for class-specific values)\n\t\t\tcnpt = t._gsClassPT;\n\t\t\tif (cnpt) {\n\t\t\t\tcnptLookup = {};\n\t\t\t\tmpt = cnpt.data; //first MiniPropTween which stores the inline styles - we need to force these so that the inline styles don't contaminate things. Otherwise, there's a small chance that a tween could start and the inline values match the destination values and they never get cleaned.\n\t\t\t\twhile (mpt) {\n\t\t\t\t\tcnptLookup[mpt.p] = 1;\n\t\t\t\t\tmpt = mpt._next;\n\t\t\t\t}\n\t\t\t\tcnpt.setRatio(1);\n\t\t\t}\n\t\t\tt._gsClassPT = pt;\n\t\t\tpt.e = (e.charAt(1) !== \"=\") ? e : b.replace(new RegExp(\"\\\\s*\\\\b\" + e.substr(2) + \"\\\\b\"), \"\") + ((e.charAt(0) === \"+\") ? \" \" + e.substr(2) : \"\");\n\t\t\tif (cssp._tween._duration) { //if it's a zero-duration tween, there's no need to tween anything or parse the data. In fact, if we switch classes temporarily (which we must do for proper parsing) and the class has a transition applied, it could cause a quick flash to the end state and back again initially in some browsers.\n\t\t\t\tt.setAttribute(\"class\", pt.e);\n\t\t\t\tdifData = _cssDif(t, bs, _getAllStyles(t), vars, cnptLookup);\n\t\t\t\tt.setAttribute(\"class\", b);\n\t\t\t\tpt.data = difData.firstMPT;\n\t\t\t\tt.style.cssText = cssText; //we recorded cssText before we swapped classes and ran _getAllStyles() because in cases when a className tween is overwritten, we remove all the related tweening properties from that class change (otherwise class-specific stuff can't override properties we've directly set on the target's style object due to specificity).\n\t\t\t\tpt = pt.xfirst = cssp.parse(t, difData.difs, pt, plugin); //we record the CSSPropTween as the xfirst so that we can handle overwriting propertly (if \"className\" gets overwritten, we must kill all the properties associated with the className part of the tween, so we can loop through from xfirst to the pt itself)\n\t\t\t}\n\t\t\treturn pt;\n\t\t}});\n\n\n\t\tvar _setClearPropsRatio = function(v) {\n\t\t\tif (v === 1 || v === 0) if (this.data._totalTime === this.data._totalDuration && this.data.data !== \"isFromStart\") { //this.data refers to the tween. Only clear at the END of the tween (remember, from() tweens make the ratio go from 1 to 0, so we can't just check that and if the tween is the zero-duration one that's created internally to render the starting values in a from() tween, ignore that because otherwise, for example, from(...{height:100, clearProps:\"height\", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in).\n\t\t\t\tvar s = this.t.style,\n\t\t\t\t\ttransformParse = _specialProps.transform.parse,\n\t\t\t\t\ta, p, i, clearTransform;\n\t\t\t\tif (this.e === \"all\") {\n\t\t\t\t\ts.cssText = \"\";\n\t\t\t\t\tclearTransform = true;\n\t\t\t\t} else {\n\t\t\t\t\ta = this.e.split(\",\");\n\t\t\t\t\ti = a.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tp = a[i];\n\t\t\t\t\t\tif (_specialProps[p]) {\n\t\t\t\t\t\t\tif (_specialProps[p].parse === transformParse) {\n\t\t\t\t\t\t\t\tclearTransform = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tp = (p === \"transformOrigin\") ? _transformOriginProp : _specialProps[p].p; //ensures that special properties use the proper browser-specific property name, like \"scaleX\" might be \"-webkit-transform\" or \"boxShadow\" might be \"-moz-box-shadow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_removeProp(s, p);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (clearTransform) {\n\t\t\t\t\t_removeProp(s, _transformProp);\n\t\t\t\t\tif (this.t._gsTransform) {\n\t\t\t\t\t\tdelete this.t._gsTransform;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\t\t_registerComplexSpecialProp(\"clearProps\", {parser:function(t, e, p, cssp, pt) {\n\t\t\tpt = new CSSPropTween(t, p, 0, 0, pt, 2);\n\t\t\tpt.setRatio = _setClearPropsRatio;\n\t\t\tpt.e = e;\n\t\t\tpt.pr = -10;\n\t\t\tpt.data = cssp._tween;\n\t\t\t_hasPriority = true;\n\t\t\treturn pt;\n\t\t}});\n\n\t\tp = \"bezier,throwProps,physicsProps,physics2D\".split(\",\");\n\t\ti = p.length;\n\t\twhile (i--) {\n\t\t\t_registerPluginProp(p[i]);\n\t\t}\n\n\n\n\n\n\n\n\n\t\tp = CSSPlugin.prototype;\n\t\tp._firstPT = null;\n\n\t\t//gets called when the tween renders for the first time. This kicks everything off, recording start/end values, etc.\n\t\tp._onInitTween = function(target, vars, tween) {\n\t\t\tif (!target.nodeType) { //css is only for dom elements\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._target = target;\n\t\t\tthis._tween = tween;\n\t\t\tthis._vars = vars;\n\t\t\t_autoRound = vars.autoRound;\n\t\t\t_hasPriority = false;\n\t\t\t_suffixMap = vars.suffixMap || CSSPlugin.suffixMap;\n\t\t\t_cs = _getComputedStyle(target, \"\");\n\t\t\t_overwriteProps = this._overwriteProps;\n\t\t\tvar style = target.style,\n\t\t\t\tv, pt, pt2, first, last, next, zIndex, tpt, threeD;\n\t\t\tif (_reqSafariFix) if (style.zIndex === \"\") {\n\t\t\t\tv = _getStyle(target, \"zIndex\", _cs);\n\t\t\t\tif (v === \"auto\" || v === \"\") {\n\t\t\t\t\t//corrects a bug in [non-Android] Safari that prevents it from repainting elements in their new positions if they don't have a zIndex set. We also can't just apply this inside _parseTransform() because anything that's moved in any way (like using \"left\" or \"top\" instead of transforms like \"x\" and \"y\") can be affected, so it is best to ensure that anything that's tweening has a z-index. Setting \"WebkitPerspective\" to a non-zero value worked too except that on iOS Safari things would flicker randomly. Plus zIndex is less memory-intensive.\n\t\t\t\t\tthis._addLazySet(style, \"zIndex\", 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof(vars) === \"string\") {\n\t\t\t\tfirst = style.cssText;\n\t\t\t\tv = _getAllStyles(target, _cs);\n\t\t\t\tstyle.cssText = first + \";\" + vars;\n\t\t\t\tv = _cssDif(target, v, _getAllStyles(target)).difs;\n\t\t\t\tif (!_supportsOpacity && _opacityValExp.test(vars)) {\n\t\t\t\t\tv.opacity = parseFloat( RegExp.$1 );\n\t\t\t\t}\n\t\t\t\tvars = v;\n\t\t\t\tstyle.cssText = first;\n\t\t\t}\n\t\t\tthis._firstPT = pt = this.parse(target, vars, null);\n\n\t\t\tif (this._transformType) {\n\t\t\t\tthreeD = (this._transformType === 3);\n\t\t\t\tif (!_transformProp) {\n\t\t\t\t\tstyle.zoom = 1; //helps correct an IE issue.\n\t\t\t\t} else if (_isSafari) {\n\t\t\t\t\t_reqSafariFix = true;\n\t\t\t\t\t//if zIndex isn't set, iOS Safari doesn't repaint things correctly sometimes (seemingly at random).\n\t\t\t\t\tif (style.zIndex === \"\") {\n\t\t\t\t\t\tzIndex = _getStyle(target, \"zIndex\", _cs);\n\t\t\t\t\t\tif (zIndex === \"auto\" || zIndex === \"\") {\n\t\t\t\t\t\t\tthis._addLazySet(style, \"zIndex\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//Setting WebkitBackfaceVisibility corrects 3 bugs:\n\t\t\t\t\t// 1) [non-Android] Safari skips rendering changes to \"top\" and \"left\" that are made on the same frame/render as a transform update.\n\t\t\t\t\t// 2) iOS Safari sometimes neglects to repaint elements in their new positions. Setting \"WebkitPerspective\" to a non-zero value worked too except that on iOS Safari things would flicker randomly.\n\t\t\t\t\t// 3) Safari sometimes displayed odd artifacts when tweening the transform (or WebkitTransform) property, like ghosts of the edges of the element remained. Definitely a browser bug.\n\t\t\t\t\t//Note: we allow the user to override the auto-setting by defining WebkitBackfaceVisibility in the vars of the tween.\n\t\t\t\t\tif (_isSafariLT6) {\n\t\t\t\t\t\tthis._addLazySet(style, \"WebkitBackfaceVisibility\", this._vars.WebkitBackfaceVisibility || (threeD ? \"visible\" : \"hidden\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpt2 = pt;\n\t\t\t\twhile (pt2 && pt2._next) {\n\t\t\t\t\tpt2 = pt2._next;\n\t\t\t\t}\n\t\t\t\ttpt = new CSSPropTween(target, \"transform\", 0, 0, null, 2);\n\t\t\t\tthis._linkCSSP(tpt, null, pt2);\n\t\t\t\ttpt.setRatio = (threeD && _supports3D) ? _set3DTransformRatio : _transformProp ? _set2DTransformRatio : _setIETransformRatio;\n\t\t\t\ttpt.data = this._transform || _getTransform(target, _cs, true);\n\t\t\t\t_overwriteProps.pop(); //we don't want to force the overwrite of all \"transform\" tweens of the target - we only care about individual transform properties like scaleX, rotation, etc. The CSSPropTween constructor automatically adds the property to _overwriteProps which is why we need to pop() here.\n\t\t\t}\n\n\t\t\tif (_hasPriority) {\n\t\t\t\t//reorders the linked list in order of pr (priority)\n\t\t\t\twhile (pt) {\n\t\t\t\t\tnext = pt._next;\n\t\t\t\t\tpt2 = first;\n\t\t\t\t\twhile (pt2 && pt2.pr > pt.pr) {\n\t\t\t\t\t\tpt2 = pt2._next;\n\t\t\t\t\t}\n\t\t\t\t\tif ((pt._prev = pt2 ? pt2._prev : last)) {\n\t\t\t\t\t\tpt._prev._next = pt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfirst = pt;\n\t\t\t\t\t}\n\t\t\t\t\tif ((pt._next = pt2)) {\n\t\t\t\t\t\tpt2._prev = pt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlast = pt;\n\t\t\t\t\t}\n\t\t\t\t\tpt = next;\n\t\t\t\t}\n\t\t\t\tthis._firstPT = first;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\n\t\tp.parse = function(target, vars, pt, plugin) {\n\t\t\tvar style = target.style,\n\t\t\t\tp, sp, bn, en, bs, es, bsfx, esfx, isStr, rel;\n\t\t\tfor (p in vars) {\n\t\t\t\tes = vars[p]; //ending value string\n\t\t\t\tsp = _specialProps[p]; //SpecialProp lookup.\n\t\t\t\tif (sp) {\n\t\t\t\t\tpt = sp.parse(target, es, p, this, pt, plugin, vars);\n\n\t\t\t\t} else {\n\t\t\t\t\tbs = _getStyle(target, p, _cs) + \"\";\n\t\t\t\t\tisStr = (typeof(es) === \"string\");\n\t\t\t\t\tif (p === \"color\" || p === \"fill\" || p === \"stroke\" || p.indexOf(\"Color\") !== -1 || (isStr && _rgbhslExp.test(es))) { //Opera uses background: to define color sometimes in addition to backgroundColor:\n\t\t\t\t\t\tif (!isStr) {\n\t\t\t\t\t\t\tes = _parseColor(es);\n\t\t\t\t\t\t\tes = ((es.length > 3) ? \"rgba(\" : \"rgb(\") + es.join(\",\") + \")\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpt = _parseComplex(style, p, bs, es, true, \"transparent\", pt, 0, plugin);\n\n\t\t\t\t\t} else if (isStr && (es.indexOf(\" \") !== -1 || es.indexOf(\",\") !== -1)) {\n\t\t\t\t\t\tpt = _parseComplex(style, p, bs, es, true, null, pt, 0, plugin);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbn = parseFloat(bs);\n\t\t\t\t\t\tbsfx = (bn || bn === 0) ? bs.substr((bn + \"\").length) : \"\"; //remember, bs could be non-numeric like \"normal\" for fontWeight, so we should default to a blank suffix in that case.\n\n\t\t\t\t\t\tif (bs === \"\" || bs === \"auto\") {\n\t\t\t\t\t\t\tif (p === \"width\" || p === \"height\") {\n\t\t\t\t\t\t\t\tbn = _getDimension(target, p, _cs);\n\t\t\t\t\t\t\t\tbsfx = \"px\";\n\t\t\t\t\t\t\t} else if (p === \"left\" || p === \"top\") {\n\t\t\t\t\t\t\t\tbn = _calculateOffset(target, p, _cs);\n\t\t\t\t\t\t\t\tbsfx = \"px\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbn = (p !== \"opacity\") ? 0 : 1;\n\t\t\t\t\t\t\t\tbsfx = \"\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trel = (isStr && es.charAt(1) === \"=\");\n\t\t\t\t\t\tif (rel) {\n\t\t\t\t\t\t\ten = parseInt(es.charAt(0) + \"1\", 10);\n\t\t\t\t\t\t\tes = es.substr(2);\n\t\t\t\t\t\t\ten *= parseFloat(es);\n\t\t\t\t\t\t\tesfx = es.replace(_suffixExp, \"\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ten = parseFloat(es);\n\t\t\t\t\t\t\tesfx = isStr ? es.substr((en + \"\").length) || \"\" : \"\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (esfx === \"\") {\n\t\t\t\t\t\t\tesfx = (p in _suffixMap) ? _suffixMap[p] : bsfx; //populate the end suffix, prioritizing the map, then if none is found, use the beginning suffix.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tes = (en || en === 0) ? (rel ? en + bn : en) + esfx : vars[p]; //ensures that any += or -= prefixes are taken care of. Record the end value before normalizing the suffix because we always want to end the tween on exactly what they intended even if it doesn't match the beginning value's suffix.\n\n\t\t\t\t\t\t//if the beginning/ending suffixes don't match, normalize them...\n\t\t\t\t\t\tif (bsfx !== esfx) if (esfx !== \"\") if (en || en === 0) if (bn) { //note: if the beginning value (bn) is 0, we don't need to convert units!\n\t\t\t\t\t\t\tbn = _convertToPixels(target, p, bn, bsfx);\n\t\t\t\t\t\t\tif (esfx === \"%\") {\n\t\t\t\t\t\t\t\tbn /= _convertToPixels(target, p, 100, \"%\") / 100;\n\t\t\t\t\t\t\t\tif (vars.strictUnits !== true) { //some browsers report only \"px\" values instead of allowing \"%\" with getComputedStyle(), so we assume that if we're tweening to a %, we should start there too unless strictUnits:true is defined. This approach is particularly useful for responsive designs that use from() tweens.\n\t\t\t\t\t\t\t\t\tbs = bn + \"%\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else if (esfx === \"em\") {\n\t\t\t\t\t\t\t\tbn /= _convertToPixels(target, p, 1, \"em\");\n\n\t\t\t\t\t\t\t//otherwise convert to pixels.\n\t\t\t\t\t\t\t} else if (esfx !== \"px\") {\n\t\t\t\t\t\t\t\ten = _convertToPixels(target, p, en, esfx);\n\t\t\t\t\t\t\t\tesfx = \"px\"; //we don't use bsfx after this, so we don't need to set it to px too.\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (rel) if (en || en === 0) {\n\t\t\t\t\t\t\t\tes = (en + bn) + esfx; //the changes we made affect relative calculations, so adjust the end value here.\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (rel) {\n\t\t\t\t\t\t\ten += bn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ((bn || bn === 0) && (en || en === 0)) { //faster than isNaN(). Also, previously we required en !== bn but that doesn't really gain much performance and it prevents _parseToProxy() from working properly if beginning and ending values match but need to get tweened by an external plugin anyway. For example, a bezier tween where the target starts at left:0 and has these points: [{left:50},{left:0}] wouldn't work properly because when parsing the last point, it'd match the first (current) one and a non-tweening CSSPropTween would be recorded when we actually need a normal tween (type:0) so that things get updated during the tween properly.\n\t\t\t\t\t\t\tpt = new CSSPropTween(style, p, bn, en - bn, pt, 0, p, (_autoRound !== false && (esfx === \"px\" || p === \"zIndex\")), 0, bs, es);\n\t\t\t\t\t\t\tpt.xs0 = esfx;\n\t\t\t\t\t\t\t//DEBUG: _log(\"tween \"+p+\" from \"+pt.b+\" (\"+bn+esfx+\") to \"+pt.e+\" with suffix: \"+pt.xs0);\n\t\t\t\t\t\t} else if (style[p] === undefined || !es && (es + \"\" === \"NaN\" || es == null)) {\n\t\t\t\t\t\t\t_log(\"invalid \" + p + \" tween value: \" + vars[p]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpt = new CSSPropTween(style, p, en || bn || 0, 0, pt, -1, p, false, 0, bs, es);\n\t\t\t\t\t\t\tpt.xs0 = (es === \"none\" && (p === \"display\" || p.indexOf(\"Style\") !== -1)) ? bs : es; //intermediate value should typically be set immediately (end value) except for \"display\" or things like borderTopStyle, borderBottomStyle, etc. which should use the beginning value during the tween.\n\t\t\t\t\t\t\t//DEBUG: _log(\"non-tweening value \"+p+\": \"+pt.xs0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (plugin) if (pt && !pt.plugin) {\n\t\t\t\t\tpt.plugin = plugin;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn pt;\n\t\t};\n\n\n\t\t//gets called every time the tween updates, passing the new ratio (typically a value between 0 and 1, but not always (for example, if an Elastic.easeOut is used, the value can jump above 1 mid-tween). It will always start and 0 and end at 1.\n\t\tp.setRatio = function(v) {\n\t\t\tvar pt = this._firstPT,\n\t\t\t\tmin = 0.000001,\n\t\t\t\tval, str, i;\n\n\t\t\t//at the end of the tween, we set the values to exactly what we received in order to make sure non-tweening values (like \"position\" or \"float\" or whatever) are set and so that if the beginning/ending suffixes (units) didn't match and we normalized to px, the value that the user passed in is used here. We check to see if the tween is at its beginning in case it's a from() tween in which case the ratio will actually go from 1 to 0 over the course of the tween (backwards).\n\t\t\tif (v === 1 && (this._tween._time === this._tween._duration || this._tween._time === 0)) {\n\t\t\t\twhile (pt) {\n\t\t\t\t\tif (pt.type !== 2) {\n\t\t\t\t\t\tpt.t[pt.p] = pt.e;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.setRatio(v);\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\n\t\t\t} else if (v || !(this._tween._time === this._tween._duration || this._tween._time === 0) || this._tween._rawPrevTime === -0.000001) {\n\t\t\t\twhile (pt) {\n\t\t\t\t\tval = pt.c * v + pt.s;\n\t\t\t\t\tif (pt.r) {\n\t\t\t\t\t\tval = Math.round(val);\n\t\t\t\t\t} else if (val < min) if (val > -min) {\n\t\t\t\t\t\tval = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (!pt.type) {\n\t\t\t\t\t\tpt.t[pt.p] = val + pt.xs0;\n\t\t\t\t\t} else if (pt.type === 1) { //complex value (one that typically has multiple numbers inside a string, like \"rect(5px,10px,20px,25px)\"\n\t\t\t\t\t\ti = pt.l;\n\t\t\t\t\t\tif (i === 2) {\n\t\t\t\t\t\t\tpt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2;\n\t\t\t\t\t\t} else if (i === 3) {\n\t\t\t\t\t\t\tpt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3;\n\t\t\t\t\t\t} else if (i === 4) {\n\t\t\t\t\t\t\tpt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4;\n\t\t\t\t\t\t} else if (i === 5) {\n\t\t\t\t\t\t\tpt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4 + pt.xn4 + pt.xs5;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstr = pt.xs0 + val + pt.xs1;\n\t\t\t\t\t\t\tfor (i = 1; i < pt.l; i++) {\n\t\t\t\t\t\t\t\tstr += pt[\"xn\"+i] + pt[\"xs\"+(i+1)];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpt.t[pt.p] = str;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if (pt.type === -1) { //non-tweening value\n\t\t\t\t\t\tpt.t[pt.p] = pt.xs0;\n\n\t\t\t\t\t} else if (pt.setRatio) { //custom setRatio() for things like SpecialProps, external plugins, etc.\n\t\t\t\t\t\tpt.setRatio(v);\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\n\t\t\t//if the tween is reversed all the way back to the beginning, we need to restore the original values which may have different units (like % instead of px or em or whatever).\n\t\t\t} else {\n\t\t\t\twhile (pt) {\n\t\t\t\t\tif (pt.type !== 2) {\n\t\t\t\t\t\tpt.t[pt.p] = pt.b;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.setRatio(v);\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * @private\n\t\t * Forces rendering of the target's transforms (rotation, scale, etc.) whenever the CSSPlugin's setRatio() is called.\n\t\t * Basically, this tells the CSSPlugin to create a CSSPropTween (type 2) after instantiation that runs last in the linked\n\t\t * list and calls the appropriate (3D or 2D) rendering function. We separate this into its own method so that we can call\n\t\t * it from other plugins like BezierPlugin if, for example, it needs to apply an autoRotation and this CSSPlugin\n\t\t * doesn't have any transform-related properties of its own. You can call this method as many times as you\n\t\t * want and it won't create duplicate CSSPropTweens.\n\t\t *\n\t\t * @param {boolean} threeD if true, it should apply 3D tweens (otherwise, just 2D ones are fine and typically faster)\n\t\t */\n\t\tp._enableTransforms = function(threeD) {\n\t\t\tthis._transformType = (threeD || this._transformType === 3) ? 3 : 2;\n\t\t\tthis._transform = this._transform || _getTransform(this._target, _cs, true); //ensures that the element has a _gsTransform property with the appropriate values.\n\t\t};\n\n\t\tvar lazySet = function(v) {\n\t\t\tthis.t[this.p] = this.e;\n\t\t\tthis.data._linkCSSP(this, this._next, null, true); //we purposefully keep this._next even though it'd make sense to null it, but this is a performance optimization, as this happens during the while (pt) {} loop in setRatio() at the bottom of which it sets pt = pt._next, so if we null it, the linked list will be broken in that loop.\n\t\t};\n\t\t/** @private Gives us a way to set a value on the first render (and only the first render). **/\n\t\tp._addLazySet = function(t, p, v) {\n\t\t\tvar pt = this._firstPT = new CSSPropTween(t, p, 0, 0, this._firstPT, 2);\n\t\t\tpt.e = v;\n\t\t\tpt.setRatio = lazySet;\n\t\t\tpt.data = this;\n\t\t};\n\n\t\t/** @private **/\n\t\tp._linkCSSP = function(pt, next, prev, remove) {\n\t\t\tif (pt) {\n\t\t\t\tif (next) {\n\t\t\t\t\tnext._prev = pt;\n\t\t\t\t}\n\t\t\t\tif (pt._next) {\n\t\t\t\t\tpt._next._prev = pt._prev;\n\t\t\t\t}\n\t\t\t\tif (pt._prev) {\n\t\t\t\t\tpt._prev._next = pt._next;\n\t\t\t\t} else if (this._firstPT === pt) {\n\t\t\t\t\tthis._firstPT = pt._next;\n\t\t\t\t\tremove = true; //just to prevent resetting this._firstPT 5 lines down in case pt._next is null. (optimized for speed)\n\t\t\t\t}\n\t\t\t\tif (prev) {\n\t\t\t\t\tprev._next = pt;\n\t\t\t\t} else if (!remove && this._firstPT === null) {\n\t\t\t\t\tthis._firstPT = pt;\n\t\t\t\t}\n\t\t\t\tpt._next = next;\n\t\t\t\tpt._prev = prev;\n\t\t\t}\n\t\t\treturn pt;\n\t\t};\n\n\t\t//we need to make sure that if alpha or autoAlpha is killed, opacity is too. And autoAlpha affects the \"visibility\" property.\n\t\tp._kill = function(lookup) {\n\t\t\tvar copy = lookup,\n\t\t\t\tpt, p, xfirst;\n\t\t\tif (lookup.autoAlpha || lookup.alpha) {\n\t\t\t\tcopy = {};\n\t\t\t\tfor (p in lookup) { //copy the lookup so that we're not changing the original which may be passed elsewhere.\n\t\t\t\t\tcopy[p] = lookup[p];\n\t\t\t\t}\n\t\t\t\tcopy.opacity = 1;\n\t\t\t\tif (copy.autoAlpha) {\n\t\t\t\t\tcopy.visibility = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lookup.className && (pt = this._classNamePT)) { //for className tweens, we need to kill any associated CSSPropTweens too; a linked list starts at the className's \"xfirst\".\n\t\t\t\txfirst = pt.xfirst;\n\t\t\t\tif (xfirst && xfirst._prev) {\n\t\t\t\t\tthis._linkCSSP(xfirst._prev, pt._next, xfirst._prev._prev); //break off the prev\n\t\t\t\t} else if (xfirst === this._firstPT) {\n\t\t\t\t\tthis._firstPT = pt._next;\n\t\t\t\t}\n\t\t\t\tif (pt._next) {\n\t\t\t\t\tthis._linkCSSP(pt._next, pt._next._next, xfirst._prev);\n\t\t\t\t}\n\t\t\t\tthis._classNamePT = null;\n\t\t\t}\n\t\t\treturn TweenPlugin.prototype._kill.call(this, copy);\n\t\t};\n\n\n\n\t\t//used by cascadeTo() for gathering all the style properties of each child element into an array for comparison.\n\t\tvar _getChildStyles = function(e, props, targets) {\n\t\t\t\tvar children, i, child, type;\n\t\t\t\tif (e.slice) {\n\t\t\t\t\ti = e.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t_getChildStyles(e[i], props, targets);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchildren = e.childNodes;\n\t\t\t\ti = children.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tchild = children[i];\n\t\t\t\t\ttype = child.type;\n\t\t\t\t\tif (child.style) {\n\t\t\t\t\t\tprops.push(_getAllStyles(child));\n\t\t\t\t\t\tif (targets) {\n\t\t\t\t\t\t\ttargets.push(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ((type === 1 || type === 9 || type === 11) && child.childNodes.length) {\n\t\t\t\t\t\t_getChildStyles(child, props, targets);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t/**\n\t\t * Typically only useful for className tweens that may affect child elements, this method creates a TweenLite\n\t\t * and then compares the style properties of all the target's child elements at the tween's start and end, and\n\t\t * if any are different, it also creates tweens for those and returns an array containing ALL of the resulting\n\t\t * tweens (so that you can easily add() them to a TimelineLite, for example). The reason this functionality is\n\t\t * wrapped into a separate static method of CSSPlugin instead of being integrated into all regular className tweens\n\t\t * is because it creates entirely new tweens that may have completely different targets than the original tween,\n\t\t * so if they were all lumped into the original tween instance, it would be inconsistent with the rest of the API\n\t\t * and it would create other problems. For example:\n\t\t *  - If I create a tween of elementA, that tween instance may suddenly change its target to include 50 other elements (unintuitive if I specifically defined the target I wanted)\n\t\t *  - We can't just create new independent tweens because otherwise, what happens if the original/parent tween is reversed or pause or dropped into a TimelineLite for tight control? You'd expect that tween's behavior to affect all the others.\n\t\t *  - Analyzing every style property of every child before and after the tween is an expensive operation when there are many children, so this behavior shouldn't be imposed on all className tweens by default, especially since it's probably rare that this extra functionality is needed.\n\t\t *\n\t\t * @param {Object} target object to be tweened\n\t\t * @param {number} Duration in seconds (or frames for frames-based tweens)\n\t\t * @param {Object} Object containing the end values, like {className:\"newClass\", ease:Linear.easeNone}\n\t\t * @return {Array} An array of TweenLite instances\n\t\t */\n\t\tCSSPlugin.cascadeTo = function(target, duration, vars) {\n\t\t\tvar tween = TweenLite.to(target, duration, vars),\n\t\t\t\tresults = [tween],\n\t\t\t\tb = [],\n\t\t\t\te = [],\n\t\t\t\ttargets = [],\n\t\t\t\t_reservedProps = TweenLite._internals.reservedProps,\n\t\t\t\ti, difs, p;\n\t\t\ttarget = tween._targets || tween.target;\n\t\t\t_getChildStyles(target, b, targets);\n\t\t\ttween.render(duration, true);\n\t\t\t_getChildStyles(target, e);\n\t\t\ttween.render(0, true);\n\t\t\ttween._enabled(true);\n\t\t\ti = targets.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tdifs = _cssDif(targets[i], b[i], e[i]);\n\t\t\t\tif (difs.firstMPT) {\n\t\t\t\t\tdifs = difs.difs;\n\t\t\t\t\tfor (p in vars) {\n\t\t\t\t\t\tif (_reservedProps[p]) {\n\t\t\t\t\t\t\tdifs[p] = vars[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresults.push( TweenLite.to(targets[i], duration, difs) );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t\tTweenPlugin.activate([CSSPlugin]);\n\t\treturn CSSPlugin;\n\n\t}, true);\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n/*\n * ----------------------------------------------------------------\n * RoundPropsPlugin\n * ----------------------------------------------------------------\n */\n\t(function() {\n\n\t\tvar RoundPropsPlugin = window._gsDefine.plugin({\n\t\t\t\tpropName: \"roundProps\",\n\t\t\t\tpriority: -1,\n\t\t\t\tAPI: 2,\n\n\t\t\t\t//called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n\t\t\t\tinit: function(target, value, tween) {\n\t\t\t\t\tthis._tween = tween;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t}),\n\t\t\tp = RoundPropsPlugin.prototype;\n\n\t\tp._onInitAllProps = function() {\n\t\t\tvar tween = this._tween,\n\t\t\t\trp = (tween.vars.roundProps instanceof Array) ? tween.vars.roundProps : tween.vars.roundProps.split(\",\"),\n\t\t\t\ti = rp.length,\n\t\t\t\tlookup = {},\n\t\t\t\trpt = tween._propLookup.roundProps,\n\t\t\t\tprop, pt, next;\n\t\t\twhile (--i > -1) {\n\t\t\t\tlookup[rp[i]] = 1;\n\t\t\t}\n\t\t\ti = rp.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tprop = rp[i];\n\t\t\t\tpt = tween._firstPT;\n\t\t\t\twhile (pt) {\n\t\t\t\t\tnext = pt._next; //record here, because it may get removed\n\t\t\t\t\tif (pt.pg) {\n\t\t\t\t\t\tpt.t._roundProps(lookup, true);\n\t\t\t\t\t} else if (pt.n === prop) {\n\t\t\t\t\t\tthis._add(pt.t, prop, pt.s, pt.c);\n\t\t\t\t\t\t//remove from linked list\n\t\t\t\t\t\tif (next) {\n\t\t\t\t\t\t\tnext._prev = pt._prev;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (pt._prev) {\n\t\t\t\t\t\t\tpt._prev._next = next;\n\t\t\t\t\t\t} else if (tween._firstPT === pt) {\n\t\t\t\t\t\t\ttween._firstPT = next;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpt._next = pt._prev = null;\n\t\t\t\t\t\ttween._propLookup[prop] = rpt;\n\t\t\t\t\t}\n\t\t\t\t\tpt = next;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tp._add = function(target, p, s, c) {\n\t\t\tthis._addTween(target, p, s, s + c, p, true);\n\t\t\tthis._overwriteProps.push(p);\n\t\t};\n\n\t}());\n\n\n\n\n\n\n\n\n\n\n/*\n * ----------------------------------------------------------------\n * AttrPlugin\n * ----------------------------------------------------------------\n */\n\twindow._gsDefine.plugin({\n\t\tpropName: \"attr\",\n\t\tAPI: 2,\n\t\tversion: \"0.3.2\",\n\n\t\t//called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n\t\tinit: function(target, value, tween) {\n\t\t\tvar p, start, end;\n\t\t\tif (typeof(target.setAttribute) !== \"function\") {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._target = target;\n\t\t\tthis._proxy = {};\n\t\t\tthis._start = {}; // we record start and end values exactly as they are in case they're strings (not numbers) - we need to be able to revert to them cleanly.\n\t\t\tthis._end = {};\n\t\t\tfor (p in value) {\n\t\t\t\tthis._start[p] = this._proxy[p] = start = target.getAttribute(p);\n\t\t\t\tend = this._addTween(this._proxy, p, parseFloat(start), value[p], p);\n\t\t\t\tthis._end[p] = end ? end.s + end.c : value[p];\n\t\t\t\tthis._overwriteProps.push(p);\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t//called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)\n\t\tset: function(ratio) {\n\t\t\tthis._super.setRatio.call(this, ratio);\n\t\t\tvar props = this._overwriteProps,\n\t\t\t\ti = props.length,\n\t\t\t\tlookup = (ratio === 1) ? this._end : ratio ? this._proxy : this._start,\n\t\t\t\tp;\n\t\t\twhile (--i > -1) {\n\t\t\t\tp = props[i];\n\t\t\t\tthis._target.setAttribute(p, lookup[p] + \"\");\n\t\t\t}\n\t\t}\n\n\t});\n\n\n\n\n\n\n\n\n\n\n/*\n * ----------------------------------------------------------------\n * DirectionalRotationPlugin\n * ----------------------------------------------------------------\n */\n\twindow._gsDefine.plugin({\n\t\tpropName: \"directionalRotation\",\n\t\tAPI: 2,\n\t\tversion: \"0.2.0\",\n\n\t\t//called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n\t\tinit: function(target, value, tween) {\n\t\t\tif (typeof(value) !== \"object\") {\n\t\t\t\tvalue = {rotation:value};\n\t\t\t}\n\t\t\tthis.finals = {};\n\t\t\tvar cap = (value.useRadians === true) ? Math.PI * 2 : 360,\n\t\t\t\tmin = 0.000001,\n\t\t\t\tp, v, start, end, dif, split;\n\t\t\tfor (p in value) {\n\t\t\t\tif (p !== \"useRadians\") {\n\t\t\t\t\tsplit = (value[p] + \"\").split(\"_\");\n\t\t\t\t\tv = split[0];\n\t\t\t\t\tstart = parseFloat( (typeof(target[p]) !== \"function\") ? target[p] : target[ ((p.indexOf(\"set\") || typeof(target[\"get\" + p.substr(3)]) !== \"function\") ? p : \"get\" + p.substr(3)) ]() );\n\t\t\t\t\tend = this.finals[p] = (typeof(v) === \"string\" && v.charAt(1) === \"=\") ? start + parseInt(v.charAt(0) + \"1\", 10) * Number(v.substr(2)) : Number(v) || 0;\n\t\t\t\t\tdif = end - start;\n\t\t\t\t\tif (split.length) {\n\t\t\t\t\t\tv = split.join(\"_\");\n\t\t\t\t\t\tif (v.indexOf(\"short\") !== -1) {\n\t\t\t\t\t\t\tdif = dif % cap;\n\t\t\t\t\t\t\tif (dif !== dif % (cap / 2)) {\n\t\t\t\t\t\t\t\tdif = (dif < 0) ? dif + cap : dif - cap;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n\t\t\t\t\t\t\tdif = ((dif + cap * 9999999999) % cap) - ((dif / cap) | 0) * cap;\n\t\t\t\t\t\t} else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n\t\t\t\t\t\t\tdif = ((dif - cap * 9999999999) % cap) - ((dif / cap) | 0) * cap;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (dif > min || dif < -min) {\n\t\t\t\t\t\tthis._addTween(target, p, start, start + dif, p);\n\t\t\t\t\t\tthis._overwriteProps.push(p);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t//called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)\n\t\tset: function(ratio) {\n\t\t\tvar pt;\n\t\t\tif (ratio !== 1) {\n\t\t\t\tthis._super.setRatio.call(this, ratio);\n\t\t\t} else {\n\t\t\t\tpt = this._firstPT;\n\t\t\t\twhile (pt) {\n\t\t\t\t\tif (pt.f) {\n\t\t\t\t\t\tpt.t[pt.p](this.finals[pt.p]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.t[pt.p] = this.finals[pt.p];\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t})._autoCSS = true;\n\n\n\n\n\n\n\n\t\n\t\n\t\n\t\n/*\n * ----------------------------------------------------------------\n * EasePack\n * ----------------------------------------------------------------\n */\n\twindow._gsDefine(\"easing.Back\", [\"easing.Ease\"], function(Ease) {\n\t\t\n\t\tvar w = (window.GreenSockGlobals || window),\n\t\t\tgs = w.com.greensock,\n\t\t\t_2PI = Math.PI * 2,\n\t\t\t_HALF_PI = Math.PI / 2,\n\t\t\t_class = gs._class,\n\t\t\t_create = function(n, f) {\n\t\t\t\tvar C = _class(\"easing.\" + n, function(){}, true),\n\t\t\t\t\tp = C.prototype = new Ease();\n\t\t\t\tp.constructor = C;\n\t\t\t\tp.getRatio = f;\n\t\t\t\treturn C;\n\t\t\t},\n\t\t\t_easeReg = Ease.register || function(){}, //put an empty function in place just as a safety measure in case someone loads an OLD version of TweenLite.js where Ease.register doesn't exist.\n\t\t\t_wrap = function(name, EaseOut, EaseIn, EaseInOut, aliases) {\n\t\t\t\tvar C = _class(\"easing.\"+name, {\n\t\t\t\t\teaseOut:new EaseOut(),\n\t\t\t\t\teaseIn:new EaseIn(),\n\t\t\t\t\teaseInOut:new EaseInOut()\n\t\t\t\t}, true);\n\t\t\t\t_easeReg(C, name);\n\t\t\t\treturn C;\n\t\t\t},\n\t\t\tEasePoint = function(time, value, next) {\n\t\t\t\tthis.t = time;\n\t\t\t\tthis.v = value;\n\t\t\t\tif (next) {\n\t\t\t\t\tthis.next = next;\n\t\t\t\t\tnext.prev = this;\n\t\t\t\t\tthis.c = next.v - value;\n\t\t\t\t\tthis.gap = next.t - time;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t//Back\n\t\t\t_createBack = function(n, f) {\n\t\t\t\tvar C = _class(\"easing.\" + n, function(overshoot) {\n\t\t\t\t\t\tthis._p1 = (overshoot || overshoot === 0) ? overshoot : 1.70158;\n\t\t\t\t\t\tthis._p2 = this._p1 * 1.525;\n\t\t\t\t\t}, true),\n\t\t\t\t\tp = C.prototype = new Ease();\n\t\t\t\tp.constructor = C;\n\t\t\t\tp.getRatio = f;\n\t\t\t\tp.config = function(overshoot) {\n\t\t\t\t\treturn new C(overshoot);\n\t\t\t\t};\n\t\t\t\treturn C;\n\t\t\t},\n\n\t\t\tBack = _wrap(\"Back\",\n\t\t\t\t_createBack(\"BackOut\", function(p) {\n\t\t\t\t\treturn ((p = p - 1) * p * ((this._p1 + 1) * p + this._p1) + 1);\n\t\t\t\t}),\n\t\t\t\t_createBack(\"BackIn\", function(p) {\n\t\t\t\t\treturn p * p * ((this._p1 + 1) * p - this._p1);\n\t\t\t\t}),\n\t\t\t\t_createBack(\"BackInOut\", function(p) {\n\t\t\t\t\treturn ((p *= 2) < 1) ? 0.5 * p * p * ((this._p2 + 1) * p - this._p2) : 0.5 * ((p -= 2) * p * ((this._p2 + 1) * p + this._p2) + 2);\n\t\t\t\t})\n\t\t\t),\n\n\n\t\t\t//SlowMo\n\t\t\tSlowMo = _class(\"easing.SlowMo\", function(linearRatio, power, yoyoMode) {\n\t\t\t\tpower = (power || power === 0) ? power : 0.7;\n\t\t\t\tif (linearRatio == null) {\n\t\t\t\t\tlinearRatio = 0.7;\n\t\t\t\t} else if (linearRatio > 1) {\n\t\t\t\t\tlinearRatio = 1;\n\t\t\t\t}\n\t\t\t\tthis._p = (linearRatio !== 1) ? power : 0;\n\t\t\t\tthis._p1 = (1 - linearRatio) / 2;\n\t\t\t\tthis._p2 = linearRatio;\n\t\t\t\tthis._p3 = this._p1 + this._p2;\n\t\t\t\tthis._calcEnd = (yoyoMode === true);\n\t\t\t}, true),\n\t\t\tp = SlowMo.prototype = new Ease(),\n\t\t\tSteppedEase, RoughEase, _createElastic;\n\n\t\tp.constructor = SlowMo;\n\t\tp.getRatio = function(p) {\n\t\t\tvar r = p + (0.5 - p) * this._p;\n\t\t\tif (p < this._p1) {\n\t\t\t\treturn this._calcEnd ? 1 - ((p = 1 - (p / this._p1)) * p) : r - ((p = 1 - (p / this._p1)) * p * p * p * r);\n\t\t\t} else if (p > this._p3) {\n\t\t\t\treturn this._calcEnd ? 1 - (p = (p - this._p3) / this._p1) * p : r + ((p - r) * (p = (p - this._p3) / this._p1) * p * p * p);\n\t\t\t}\n\t\t\treturn this._calcEnd ? 1 : r;\n\t\t};\n\t\tSlowMo.ease = new SlowMo(0.7, 0.7);\n\n\t\tp.config = SlowMo.config = function(linearRatio, power, yoyoMode) {\n\t\t\treturn new SlowMo(linearRatio, power, yoyoMode);\n\t\t};\n\n\n\t\t//SteppedEase\n\t\tSteppedEase = _class(\"easing.SteppedEase\", function(steps) {\n\t\t\t\tsteps = steps || 1;\n\t\t\t\tthis._p1 = 1 / steps;\n\t\t\t\tthis._p2 = steps + 1;\n\t\t\t}, true);\n\t\tp = SteppedEase.prototype = new Ease();\n\t\tp.constructor = SteppedEase;\n\t\tp.getRatio = function(p) {\n\t\t\tif (p < 0) {\n\t\t\t\tp = 0;\n\t\t\t} else if (p >= 1) {\n\t\t\t\tp = 0.999999999;\n\t\t\t}\n\t\t\treturn ((this._p2 * p) >> 0) * this._p1;\n\t\t};\n\t\tp.config = SteppedEase.config = function(steps) {\n\t\t\treturn new SteppedEase(steps);\n\t\t};\n\n\n\t\t//RoughEase\n\t\tRoughEase = _class(\"easing.RoughEase\", function(vars) {\n\t\t\tvars = vars || {};\n\t\t\tvar taper = vars.taper || \"none\",\n\t\t\t\ta = [],\n\t\t\t\tcnt = 0,\n\t\t\t\tpoints = (vars.points || 20) | 0,\n\t\t\t\ti = points,\n\t\t\t\trandomize = (vars.randomize !== false),\n\t\t\t\tclamp = (vars.clamp === true),\n\t\t\t\ttemplate = (vars.template instanceof Ease) ? vars.template : null,\n\t\t\t\tstrength = (typeof(vars.strength) === \"number\") ? vars.strength * 0.4 : 0.4,\n\t\t\t\tx, y, bump, invX, obj, pnt;\n\t\t\twhile (--i > -1) {\n\t\t\t\tx = randomize ? Math.random() : (1 / points) * i;\n\t\t\t\ty = template ? template.getRatio(x) : x;\n\t\t\t\tif (taper === \"none\") {\n\t\t\t\t\tbump = strength;\n\t\t\t\t} else if (taper === \"out\") {\n\t\t\t\t\tinvX = 1 - x;\n\t\t\t\t\tbump = invX * invX * strength;\n\t\t\t\t} else if (taper === \"in\") {\n\t\t\t\t\tbump = x * x * strength;\n\t\t\t\t} else if (x < 0.5) {  //\"both\" (start)\n\t\t\t\t\tinvX = x * 2;\n\t\t\t\t\tbump = invX * invX * 0.5 * strength;\n\t\t\t\t} else {\t\t\t\t//\"both\" (end)\n\t\t\t\t\tinvX = (1 - x) * 2;\n\t\t\t\t\tbump = invX * invX * 0.5 * strength;\n\t\t\t\t}\n\t\t\t\tif (randomize) {\n\t\t\t\t\ty += (Math.random() * bump) - (bump * 0.5);\n\t\t\t\t} else if (i % 2) {\n\t\t\t\t\ty += bump * 0.5;\n\t\t\t\t} else {\n\t\t\t\t\ty -= bump * 0.5;\n\t\t\t\t}\n\t\t\t\tif (clamp) {\n\t\t\t\t\tif (y > 1) {\n\t\t\t\t\t\ty = 1;\n\t\t\t\t\t} else if (y < 0) {\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ta[cnt++] = {x:x, y:y};\n\t\t\t}\n\t\t\ta.sort(function(a, b) {\n\t\t\t\treturn a.x - b.x;\n\t\t\t});\n\n\t\t\tpnt = new EasePoint(1, 1, null);\n\t\t\ti = points;\n\t\t\twhile (--i > -1) {\n\t\t\t\tobj = a[i];\n\t\t\t\tpnt = new EasePoint(obj.x, obj.y, pnt);\n\t\t\t}\n\n\t\t\tthis._prev = new EasePoint(0, 0, (pnt.t !== 0) ? pnt : pnt.next);\n\t\t}, true);\n\t\tp = RoughEase.prototype = new Ease();\n\t\tp.constructor = RoughEase;\n\t\tp.getRatio = function(p) {\n\t\t\tvar pnt = this._prev;\n\t\t\tif (p > pnt.t) {\n\t\t\t\twhile (pnt.next && p >= pnt.t) {\n\t\t\t\t\tpnt = pnt.next;\n\t\t\t\t}\n\t\t\t\tpnt = pnt.prev;\n\t\t\t} else {\n\t\t\t\twhile (pnt.prev && p <= pnt.t) {\n\t\t\t\t\tpnt = pnt.prev;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._prev = pnt;\n\t\t\treturn (pnt.v + ((p - pnt.t) / pnt.gap) * pnt.c);\n\t\t};\n\t\tp.config = function(vars) {\n\t\t\treturn new RoughEase(vars);\n\t\t};\n\t\tRoughEase.ease = new RoughEase();\n\n\n\t\t//Bounce\n\t\t_wrap(\"Bounce\",\n\t\t\t_create(\"BounceOut\", function(p) {\n\t\t\t\tif (p < 1 / 2.75) {\n\t\t\t\t\treturn 7.5625 * p * p;\n\t\t\t\t} else if (p < 2 / 2.75) {\n\t\t\t\t\treturn 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n\t\t\t\t} else if (p < 2.5 / 2.75) {\n\t\t\t\t\treturn 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n\t\t\t\t}\n\t\t\t\treturn 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n\t\t\t}),\n\t\t\t_create(\"BounceIn\", function(p) {\n\t\t\t\tif ((p = 1 - p) < 1 / 2.75) {\n\t\t\t\t\treturn 1 - (7.5625 * p * p);\n\t\t\t\t} else if (p < 2 / 2.75) {\n\t\t\t\t\treturn 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\n\t\t\t\t} else if (p < 2.5 / 2.75) {\n\t\t\t\t\treturn 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\n\t\t\t\t}\n\t\t\t\treturn 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\n\t\t\t}),\n\t\t\t_create(\"BounceInOut\", function(p) {\n\t\t\t\tvar invert = (p < 0.5);\n\t\t\t\tif (invert) {\n\t\t\t\t\tp = 1 - (p * 2);\n\t\t\t\t} else {\n\t\t\t\t\tp = (p * 2) - 1;\n\t\t\t\t}\n\t\t\t\tif (p < 1 / 2.75) {\n\t\t\t\t\tp = 7.5625 * p * p;\n\t\t\t\t} else if (p < 2 / 2.75) {\n\t\t\t\t\tp = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n\t\t\t\t} else if (p < 2.5 / 2.75) {\n\t\t\t\t\tp = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n\t\t\t\t} else {\n\t\t\t\t\tp = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n\t\t\t\t}\n\t\t\t\treturn invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\n\t\t\t})\n\t\t);\n\n\n\t\t//CIRC\n\t\t_wrap(\"Circ\",\n\t\t\t_create(\"CircOut\", function(p) {\n\t\t\t\treturn Math.sqrt(1 - (p = p - 1) * p);\n\t\t\t}),\n\t\t\t_create(\"CircIn\", function(p) {\n\t\t\t\treturn -(Math.sqrt(1 - (p * p)) - 1);\n\t\t\t}),\n\t\t\t_create(\"CircInOut\", function(p) {\n\t\t\t\treturn ((p*=2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n\t\t\t})\n\t\t);\n\n\n\t\t//Elastic\n\t\t_createElastic = function(n, f, def) {\n\t\t\tvar C = _class(\"easing.\" + n, function(amplitude, period) {\n\t\t\t\t\tthis._p1 = amplitude || 1;\n\t\t\t\t\tthis._p2 = period || def;\n\t\t\t\t\tthis._p3 = this._p2 / _2PI * (Math.asin(1 / this._p1) || 0);\n\t\t\t\t}, true),\n\t\t\t\tp = C.prototype = new Ease();\n\t\t\tp.constructor = C;\n\t\t\tp.getRatio = f;\n\t\t\tp.config = function(amplitude, period) {\n\t\t\t\treturn new C(amplitude, period);\n\t\t\t};\n\t\t\treturn C;\n\t\t};\n\t\t_wrap(\"Elastic\",\n\t\t\t_createElastic(\"ElasticOut\", function(p) {\n\t\t\t\treturn this._p1 * Math.pow(2, -10 * p) * Math.sin( (p - this._p3) * _2PI / this._p2 ) + 1;\n\t\t\t}, 0.3),\n\t\t\t_createElastic(\"ElasticIn\", function(p) {\n\t\t\t\treturn -(this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin( (p - this._p3) * _2PI / this._p2 ));\n\t\t\t}, 0.3),\n\t\t\t_createElastic(\"ElasticInOut\", function(p) {\n\t\t\t\treturn ((p *= 2) < 1) ? -0.5 * (this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin( (p - this._p3) * _2PI / this._p2)) : this._p1 * Math.pow(2, -10 *(p -= 1)) * Math.sin( (p - this._p3) * _2PI / this._p2 ) *0.5 + 1;\n\t\t\t}, 0.45)\n\t\t);\n\n\n\t\t//Expo\n\t\t_wrap(\"Expo\",\n\t\t\t_create(\"ExpoOut\", function(p) {\n\t\t\t\treturn 1 - Math.pow(2, -10 * p);\n\t\t\t}),\n\t\t\t_create(\"ExpoIn\", function(p) {\n\t\t\t\treturn Math.pow(2, 10 * (p - 1)) - 0.001;\n\t\t\t}),\n\t\t\t_create(\"ExpoInOut\", function(p) {\n\t\t\t\treturn ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\t\t\t})\n\t\t);\n\n\n\t\t//Sine\n\t\t_wrap(\"Sine\",\n\t\t\t_create(\"SineOut\", function(p) {\n\t\t\t\treturn Math.sin(p * _HALF_PI);\n\t\t\t}),\n\t\t\t_create(\"SineIn\", function(p) {\n\t\t\t\treturn -Math.cos(p * _HALF_PI) + 1;\n\t\t\t}),\n\t\t\t_create(\"SineInOut\", function(p) {\n\t\t\t\treturn -0.5 * (Math.cos(Math.PI * p) - 1);\n\t\t\t})\n\t\t);\n\n\t\t_class(\"easing.EaseLookup\", {\n\t\t\t\tfind:function(s) {\n\t\t\t\t\treturn Ease.map[s];\n\t\t\t\t}\n\t\t\t}, true);\n\n\t\t//register the non-standard eases\n\t\t_easeReg(w.SlowMo, \"SlowMo\", \"ease,\");\n\t\t_easeReg(RoughEase, \"RoughEase\", \"ease,\");\n\t\t_easeReg(SteppedEase, \"SteppedEase\", \"ease,\");\n\n\t\treturn Back;\n\t\t\n\t}, true);\n\n\n}); \n\n\n\n\n\n\n\n\n\n\n\n/*\n * ----------------------------------------------------------------\n * Base classes like TweenLite, SimpleTimeline, Ease, Ticker, etc.\n * ----------------------------------------------------------------\n */\n(function(window) {\n\n\t\t\"use strict\";\n\t\tvar _globals = window.GreenSockGlobals || window;\n\t\tif (_globals.TweenLite) {\n\t\t\treturn; //in case the core set of classes is already loaded, don't instantiate twice.\n\t\t}\n\t\tvar _namespace = function(ns) {\n\t\t\t\tvar a = ns.split(\".\"),\n\t\t\t\t\tp = _globals, i;\n\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\tp[a[i]] = p = p[a[i]] || {};\n\t\t\t\t}\n\t\t\t\treturn p;\n\t\t\t},\n\t\t\tgs = _namespace(\"com.greensock\"),\n\t\t\t_tinyNum = 0.0000000001,\n\t\t\t_slice = [].slice,\n\t\t\t_emptyFunc = function() {},\n\t\t\t_isArray = (function() { //works around issues in iframe environments where the Array global isn't shared, thus if the object originates in a different window/iframe, \"(obj instanceof Array)\" will evaluate false. We added some speed optimizations to avoid Object.prototype.toString.call() unless it's absolutely necessary because it's VERY slow (like 20x slower)\n\t\t\t\tvar toString = Object.prototype.toString,\n\t\t\t\t\tarray = toString.call([]);\n\t\t\t\treturn function(obj) {\n\t\t\t\t\treturn obj != null && (obj instanceof Array || (typeof(obj) === \"object\" && !!obj.push && toString.call(obj) === array));\n\t\t\t\t};\n\t\t\t}()),\n\t\t\ta, i, p, _ticker, _tickerActive,\n\t\t\t_defLookup = {},\n\n\t\t\t/**\n\t\t\t * @constructor\n\t\t\t * Defines a GreenSock class, optionally with an array of dependencies that must be instantiated first and passed into the definition.\n\t\t\t * This allows users to load GreenSock JS files in any order even if they have interdependencies (like CSSPlugin extends TweenPlugin which is\n\t\t\t * inside TweenLite.js, but if CSSPlugin is loaded first, it should wait to run its code until TweenLite.js loads and instantiates TweenPlugin\n\t\t\t * and then pass TweenPlugin to CSSPlugin's definition). This is all done automatically and internally.\n\t\t\t *\n\t\t\t * Every definition will be added to a \"com.greensock\" global object (typically window, but if a window.GreenSockGlobals object is found,\n\t\t\t * it will go there as of v1.7). For example, TweenLite will be found at window.com.greensock.TweenLite and since it's a global class that should be available anywhere,\n\t\t\t * it is ALSO referenced at window.TweenLite. However some classes aren't considered global, like the base com.greensock.core.Animation class, so\n\t\t\t * those will only be at the package like window.com.greensock.core.Animation. Again, if you define a GreenSockGlobals object on the window, everything\n\t\t\t * gets tucked neatly inside there instead of on the window directly. This allows you to do advanced things like load multiple versions of GreenSock\n\t\t\t * files and put them into distinct objects (imagine a banner ad uses a newer version but the main site uses an older one). In that case, you could\n\t\t\t * sandbox the banner one like:\n\t\t\t *\n\t\t\t * <script>\n\t\t\t *     var gs = window.GreenSockGlobals = {}; //the newer version we're about to load could now be referenced in a \"gs\" object, like gs.TweenLite.to(...). Use whatever alias you want as long as it's unique, \"gs\" or \"banner\" or whatever.\n\t\t\t * </script>\n\t\t\t * <script src=\"js/greensock/v1.7/TweenMax.js\"></script>\n\t\t\t * <script>\n\t\t\t *     window.GreenSockGlobals = null; //reset it back to null so that the next load of TweenMax affects the window and we can reference things directly like TweenLite.to(...)\n\t\t\t * </script>\n\t\t\t * <script src=\"js/greensock/v1.6/TweenMax.js\"></script>\n\t\t\t * <script>\n\t\t\t *     gs.TweenLite.to(...); //would use v1.7\n\t\t\t *     TweenLite.to(...); //would use v1.6\n\t\t\t * </script>\n\t\t\t *\n\t\t\t * @param {!string} ns The namespace of the class definition, leaving off \"com.greensock.\" as that's assumed. For example, \"TweenLite\" or \"plugins.CSSPlugin\" or \"easing.Back\".\n\t\t\t * @param {!Array.<string>} dependencies An array of dependencies (described as their namespaces minus \"com.greensock.\" prefix). For example [\"TweenLite\",\"plugins.TweenPlugin\",\"core.Animation\"]\n\t\t\t * @param {!function():Object} func The function that should be called and passed the resolved dependencies which will return the actual class for this definition.\n\t\t\t * @param {boolean=} global If true, the class will be added to the global scope (typically window unless you define a window.GreenSockGlobals object)\n\t\t\t */\n\t\t\tDefinition = function(ns, dependencies, func, global) {\n\t\t\t\tthis.sc = (_defLookup[ns]) ? _defLookup[ns].sc : []; //subclasses\n\t\t\t\t_defLookup[ns] = this;\n\t\t\t\tthis.gsClass = null;\n\t\t\t\tthis.func = func;\n\t\t\t\tvar _classes = [];\n\t\t\t\tthis.check = function(init) {\n\t\t\t\t\tvar i = dependencies.length,\n\t\t\t\t\t\tmissing = i,\n\t\t\t\t\t\tcur, a, n, cl;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif ((cur = _defLookup[dependencies[i]] || new Definition(dependencies[i], [])).gsClass) {\n\t\t\t\t\t\t\t_classes[i] = cur.gsClass;\n\t\t\t\t\t\t\tmissing--;\n\t\t\t\t\t\t} else if (init) {\n\t\t\t\t\t\t\tcur.sc.push(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (missing === 0 && func) {\n\t\t\t\t\t\ta = (\"com.greensock.\" + ns).split(\".\");\n\t\t\t\t\t\tn = a.pop();\n\t\t\t\t\t\tcl = _namespace(a.join(\".\"))[n] = this.gsClass = func.apply(func, _classes);\n\n\t\t\t\t\t\t//exports to multiple environments\n\t\t\t\t\t\tif (global) {\n\t\t\t\t\t\t\t_globals[n] = cl; //provides a way to avoid global namespace pollution. By default, the main classes like TweenLite, Power1, Strong, etc. are added to window unless a GreenSockGlobals is defined. So if you want to have things added to a custom object instead, just do something like window.GreenSockGlobals = {} before loading any GreenSock files. You can even set up an alias like window.GreenSockGlobals = windows.gs = {} so that you can access everything like gs.TweenLite. Also remember that ALL classes are added to the window.com.greensock object (in their respective packages, like com.greensock.easing.Power1, com.greensock.TweenLite, etc.)\n\t\t\t\t\t\t\tif (typeof(define) === \"function\" && define.amd){ //AMD\n\t\t\t\t\t\t\t\tdefine((window.GreenSockAMDPath ? window.GreenSockAMDPath + \"/\" : \"\") + ns.split(\".\").join(\"/\"), [], function() { return cl; });\n\t\t\t\t\t\t\t} else if (typeof(module) !== \"undefined\" && module.exports){ //node\n\t\t\t\t\t\t\t\tmodule.exports = cl;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (i = 0; i < this.sc.length; i++) {\n\t\t\t\t\t\t\tthis.sc[i].check();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis.check(true);\n\t\t\t},\n\n\t\t\t//used to create Definition instances (which basically registers a class that has dependencies).\n\t\t\t_gsDefine = window._gsDefine = function(ns, dependencies, func, global) {\n\t\t\t\treturn new Definition(ns, dependencies, func, global);\n\t\t\t},\n\n\t\t\t//a quick way to create a class that doesn't have any dependencies. Returns the class, but first registers it in the GreenSock namespace so that other classes can grab it (other classes might be dependent on the class).\n\t\t\t_class = gs._class = function(ns, func, global) {\n\t\t\t\tfunc = func || function() {};\n\t\t\t\t_gsDefine(ns, [], function(){ return func; }, global);\n\t\t\t\treturn func;\n\t\t\t};\n\n\t\t_gsDefine.globals = _globals;\n\n\n\n/*\n * ----------------------------------------------------------------\n * Ease\n * ----------------------------------------------------------------\n */\n\t\tvar _baseParams = [0, 0, 1, 1],\n\t\t\t_blankArray = [],\n\t\t\tEase = _class(\"easing.Ease\", function(func, extraParams, type, power) {\n\t\t\t\tthis._func = func;\n\t\t\t\tthis._type = type || 0;\n\t\t\t\tthis._power = power || 0;\n\t\t\t\tthis._params = extraParams ? _baseParams.concat(extraParams) : _baseParams;\n\t\t\t}, true),\n\t\t\t_easeMap = Ease.map = {},\n\t\t\t_easeReg = Ease.register = function(ease, names, types, create) {\n\t\t\t\tvar na = names.split(\",\"),\n\t\t\t\t\ti = na.length,\n\t\t\t\t\tta = (types || \"easeIn,easeOut,easeInOut\").split(\",\"),\n\t\t\t\t\te, name, j, type;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tname = na[i];\n\t\t\t\t\te = create ? _class(\"easing.\"+name, null, true) : gs.easing[name] || {};\n\t\t\t\t\tj = ta.length;\n\t\t\t\t\twhile (--j > -1) {\n\t\t\t\t\t\ttype = ta[j];\n\t\t\t\t\t\t_easeMap[name + \".\" + type] = _easeMap[type + name] = e[type] = ease.getRatio ? ease : ease[type] || new ease();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\tp = Ease.prototype;\n\t\tp._calcEnd = false;\n\t\tp.getRatio = function(p) {\n\t\t\tif (this._func) {\n\t\t\t\tthis._params[0] = p;\n\t\t\t\treturn this._func.apply(null, this._params);\n\t\t\t}\n\t\t\tvar t = this._type,\n\t\t\t\tpw = this._power,\n\t\t\t\tr = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n\t\t\tif (pw === 1) {\n\t\t\t\tr *= r;\n\t\t\t} else if (pw === 2) {\n\t\t\t\tr *= r * r;\n\t\t\t} else if (pw === 3) {\n\t\t\t\tr *= r * r * r;\n\t\t\t} else if (pw === 4) {\n\t\t\t\tr *= r * r * r * r;\n\t\t\t}\n\t\t\treturn (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\n\t\t};\n\n\t\t//create all the standard eases like Linear, Quad, Cubic, Quart, Quint, Strong, Power0, Power1, Power2, Power3, and Power4 (each with easeIn, easeOut, and easeInOut)\n\t\ta = [\"Linear\",\"Quad\",\"Cubic\",\"Quart\",\"Quint,Strong\"];\n\t\ti = a.length;\n\t\twhile (--i > -1) {\n\t\t\tp = a[i]+\",Power\"+i;\n\t\t\t_easeReg(new Ease(null,null,1,i), p, \"easeOut\", true);\n\t\t\t_easeReg(new Ease(null,null,2,i), p, \"easeIn\" + ((i === 0) ? \",easeNone\" : \"\"));\n\t\t\t_easeReg(new Ease(null,null,3,i), p, \"easeInOut\");\n\t\t}\n\t\t_easeMap.linear = gs.easing.Linear.easeIn;\n\t\t_easeMap.swing = gs.easing.Quad.easeInOut; //for jQuery folks\n\n\n/*\n * ----------------------------------------------------------------\n * EventDispatcher\n * ----------------------------------------------------------------\n */\n\t\tvar EventDispatcher = _class(\"events.EventDispatcher\", function(target) {\n\t\t\tthis._listeners = {};\n\t\t\tthis._eventTarget = target || this;\n\t\t});\n\t\tp = EventDispatcher.prototype;\n\n\t\tp.addEventListener = function(type, callback, scope, useParam, priority) {\n\t\t\tpriority = priority || 0;\n\t\t\tvar list = this._listeners[type],\n\t\t\t\tindex = 0,\n\t\t\t\tlistener, i;\n\t\t\tif (list == null) {\n\t\t\t\tthis._listeners[type] = list = [];\n\t\t\t}\n\t\t\ti = list.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tlistener = list[i];\n\t\t\t\tif (listener.c === callback && listener.s === scope) {\n\t\t\t\t\tlist.splice(i, 1);\n\t\t\t\t} else if (index === 0 && listener.pr < priority) {\n\t\t\t\t\tindex = i + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlist.splice(index, 0, {c:callback, s:scope, up:useParam, pr:priority});\n\t\t\tif (this === _ticker && !_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t};\n\n\t\tp.removeEventListener = function(type, callback) {\n\t\t\tvar list = this._listeners[type], i;\n\t\t\tif (list) {\n\t\t\t\ti = list.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (list[i].c === callback) {\n\t\t\t\t\t\tlist.splice(i, 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp.dispatchEvent = function(type) {\n\t\t\tvar list = this._listeners[type],\n\t\t\t\ti, t, listener;\n\t\t\tif (list) {\n\t\t\t\ti = list.length;\n\t\t\t\tt = this._eventTarget;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tlistener = list[i];\n\t\t\t\t\tif (listener.up) {\n\t\t\t\t\t\tlistener.c.call(listener.s || t, {type:type, target:t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener.c.call(listener.s || t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\n/*\n * ----------------------------------------------------------------\n * Ticker\n * ----------------------------------------------------------------\n */\n \t\tvar _reqAnimFrame = window.requestAnimationFrame,\n\t\t\t_cancelAnimFrame = window.cancelAnimationFrame,\n\t\t\t_getTime = Date.now || function() {return new Date().getTime();},\n\t\t\t_lastUpdate = _getTime();\n\n\t\t//now try to determine the requestAnimationFrame and cancelAnimationFrame functions and if none are found, we'll use a setTimeout()/clearTimeout() polyfill.\n\t\ta = [\"ms\",\"moz\",\"webkit\",\"o\"];\n\t\ti = a.length;\n\t\twhile (--i > -1 && !_reqAnimFrame) {\n\t\t\t_reqAnimFrame = window[a[i] + \"RequestAnimationFrame\"];\n\t\t\t_cancelAnimFrame = window[a[i] + \"CancelAnimationFrame\"] || window[a[i] + \"CancelRequestAnimationFrame\"];\n\t\t}\n\n\t\t_class(\"Ticker\", function(fps, useRAF) {\n\t\t\tvar _self = this,\n\t\t\t\t_startTime = _getTime(),\n\t\t\t\t_useRAF = (useRAF !== false && _reqAnimFrame),\n\t\t\t\t_lagThreshold = 500,\n\t\t\t\t_adjustedLag = 33,\n\t\t\t\t_fps, _req, _id, _gap, _nextTime,\n\t\t\t\t_tick = function(manual) {\n\t\t\t\t\tvar elapsed = _getTime() - _lastUpdate,\n\t\t\t\t\t\toverlap, dispatch;\n\t\t\t\t\tif (elapsed > _lagThreshold) {\n\t\t\t\t\t\t_startTime += elapsed - _adjustedLag;\n\t\t\t\t\t}\n\t\t\t\t\t_lastUpdate += elapsed;\n\t\t\t\t\t_self.time = (_lastUpdate - _startTime) / 1000;\n\t\t\t\t\toverlap = _self.time - _nextTime;\n\t\t\t\t\tif (!_fps || overlap > 0 || manual === true) {\n\t\t\t\t\t\t_self.frame++;\n\t\t\t\t\t\t_nextTime += overlap + (overlap >= _gap ? 0.004 : _gap - overlap);\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (manual !== true) { //make sure the request is made before we dispatch the \"tick\" event so that timing is maintained. Otherwise, if processing the \"tick\" requires a bunch of time (like 15ms) and we're using a setTimeout() that's based on 16.7ms, it'd technically take 31.7ms between frames otherwise.\n\t\t\t\t\t\t_id = _req(_tick);\n\t\t\t\t\t}\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\t_self.dispatchEvent(\"tick\");\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\tEventDispatcher.call(_self);\n\t\t\t_self.time = _self.frame = 0;\n\t\t\t_self.tick = function() {\n\t\t\t\t_tick(true);\n\t\t\t};\n\n\t\t\t_self.lagSmoothing = function(threshold, adjustedLag) {\n\t\t\t\t_lagThreshold = threshold || (1 / _tinyNum); //zero should be interpreted as basically unlimited\n\t\t\t\t_adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);\n\t\t\t};\n\n\t\t\t_self.sleep = function() {\n\t\t\t\tif (_id == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!_useRAF || !_cancelAnimFrame) {\n\t\t\t\t\tclearTimeout(_id);\n\t\t\t\t} else {\n\t\t\t\t\t_cancelAnimFrame(_id);\n\t\t\t\t}\n\t\t\t\t_req = _emptyFunc;\n\t\t\t\t_id = null;\n\t\t\t\tif (_self === _ticker) {\n\t\t\t\t\t_tickerActive = false;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_self.wake = function() {\n\t\t\t\tif (_id !== null) {\n\t\t\t\t\t_self.sleep();\n\t\t\t\t} else if (_self.frame > 10) { //don't trigger lagSmoothing if we're just waking up, and make sure that at least 10 frames have elapsed because of the iOS bug that we work around below with the 1.5-second setTimout().\n\t\t\t\t\t_lastUpdate = _getTime() - _lagThreshold + 5;\n\t\t\t\t}\n\t\t\t\t_req = (_fps === 0) ? _emptyFunc : (!_useRAF || !_reqAnimFrame) ? function(f) { return setTimeout(f, ((_nextTime - _self.time) * 1000 + 1) | 0); } : _reqAnimFrame;\n\t\t\t\tif (_self === _ticker) {\n\t\t\t\t\t_tickerActive = true;\n\t\t\t\t}\n\t\t\t\t_tick(2);\n\t\t\t};\n\n\t\t\t_self.fps = function(value) {\n\t\t\t\tif (!arguments.length) {\n\t\t\t\t\treturn _fps;\n\t\t\t\t}\n\t\t\t\t_fps = value;\n\t\t\t\t_gap = 1 / (_fps || 60);\n\t\t\t\t_nextTime = this.time + _gap;\n\t\t\t\t_self.wake();\n\t\t\t};\n\n\t\t\t_self.useRAF = function(value) {\n\t\t\t\tif (!arguments.length) {\n\t\t\t\t\treturn _useRAF;\n\t\t\t\t}\n\t\t\t\t_self.sleep();\n\t\t\t\t_useRAF = value;\n\t\t\t\t_self.fps(_fps);\n\t\t\t};\n\t\t\t_self.fps(fps);\n\n\t\t\t//a bug in iOS 6 Safari occasionally prevents the requestAnimationFrame from working initially, so we use a 1.5-second timeout that automatically falls back to setTimeout() if it senses this condition.\n\t\t\tsetTimeout(function() {\n\t\t\t\tif (_useRAF && (!_id || _self.frame < 5)) {\n\t\t\t\t\t_self.useRAF(false);\n\t\t\t\t}\n\t\t\t}, 1500);\n\t\t});\n\n\t\tp = gs.Ticker.prototype = new gs.events.EventDispatcher();\n\t\tp.constructor = gs.Ticker;\n\n\n/*\n * ----------------------------------------------------------------\n * Animation\n * ----------------------------------------------------------------\n */\n\t\tvar Animation = _class(\"core.Animation\", function(duration, vars) {\n\t\t\t\tthis.vars = vars = vars || {};\n\t\t\t\tthis._duration = this._totalDuration = duration || 0;\n\t\t\t\tthis._delay = Number(vars.delay) || 0;\n\t\t\t\tthis._timeScale = 1;\n\t\t\t\tthis._active = (vars.immediateRender === true);\n\t\t\t\tthis.data = vars.data;\n\t\t\t\tthis._reversed = (vars.reversed === true);\n\n\t\t\t\tif (!_rootTimeline) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!_tickerActive) { //some browsers (like iOS 6 Safari) shut down JavaScript execution when the tab is disabled and they [occasionally] neglect to start up requestAnimationFrame again when returning - this code ensures that the engine starts up again properly.\n\t\t\t\t\t_ticker.wake();\n\t\t\t\t}\n\n\t\t\t\tvar tl = this.vars.useFrames ? _rootFramesTimeline : _rootTimeline;\n\t\t\t\ttl.add(this, tl._time);\n\n\t\t\t\tif (this.vars.paused) {\n\t\t\t\t\tthis.paused(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t_ticker = Animation.ticker = new gs.Ticker();\n\t\tp = Animation.prototype;\n\t\tp._dirty = p._gc = p._initted = p._paused = false;\n\t\tp._totalTime = p._time = 0;\n\t\tp._rawPrevTime = -1;\n\t\tp._next = p._last = p._onUpdate = p._timeline = p.timeline = null;\n\t\tp._paused = false;\n\n\n\t\t//some browsers (like iOS) occasionally drop the requestAnimationFrame event when the user switches to a different tab and then comes back again, so we use a 2-second setTimeout() to sense if/when that condition occurs and then wake() the ticker.\n\t\tvar _checkTimeout = function() {\n\t\t\t\tif (_tickerActive && _getTime() - _lastUpdate > 2000) {\n\t\t\t\t\t_ticker.wake();\n\t\t\t\t}\n\t\t\t\tsetTimeout(_checkTimeout, 2000);\n\t\t\t};\n\t\t_checkTimeout();\n\n\n\t\tp.play = function(from, suppressEvents) {\n\t\t\tif (from != null) {\n\t\t\t\tthis.seek(from, suppressEvents);\n\t\t\t}\n\t\t\treturn this.reversed(false).paused(false);\n\t\t};\n\n\t\tp.pause = function(atTime, suppressEvents) {\n\t\t\tif (atTime != null) {\n\t\t\t\tthis.seek(atTime, suppressEvents);\n\t\t\t}\n\t\t\treturn this.paused(true);\n\t\t};\n\n\t\tp.resume = function(from, suppressEvents) {\n\t\t\tif (from != null) {\n\t\t\t\tthis.seek(from, suppressEvents);\n\t\t\t}\n\t\t\treturn this.paused(false);\n\t\t};\n\n\t\tp.seek = function(time, suppressEvents) {\n\t\t\treturn this.totalTime(Number(time), suppressEvents !== false);\n\t\t};\n\n\t\tp.restart = function(includeDelay, suppressEvents) {\n\t\t\treturn this.reversed(false).paused(false).totalTime(includeDelay ? -this._delay : 0, (suppressEvents !== false), true);\n\t\t};\n\n\t\tp.reverse = function(from, suppressEvents) {\n\t\t\tif (from != null) {\n\t\t\t\tthis.seek((from || this.totalDuration()), suppressEvents);\n\t\t\t}\n\t\t\treturn this.reversed(true).paused(false);\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\t//stub - we override this method in subclasses.\n\t\t};\n\n\t\tp.invalidate = function() {\n\t\t\treturn this;\n\t\t};\n\n\t\tp.isActive = function() {\n\t\t\tvar tl = this._timeline, //the 2 root timelines won't have a _timeline; they're always active.\n\t\t\t\tstartTime = this._startTime,\n\t\t\t\trawTime;\n\t\t\treturn (!tl || (!this._gc && !this._paused && tl.isActive() && (rawTime = tl.rawTime()) >= startTime && rawTime < startTime + this.totalDuration() / this._timeScale));\n\t\t};\n\n\t\tp._enabled = function (enabled, ignoreTimeline) {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\tthis._gc = !enabled;\n\t\t\tthis._active = this.isActive();\n\t\t\tif (ignoreTimeline !== true) {\n\t\t\t\tif (enabled && !this.timeline) {\n\t\t\t\t\tthis._timeline.add(this, this._startTime - this._delay);\n\t\t\t\t} else if (!enabled && this.timeline) {\n\t\t\t\t\tthis._timeline._remove(this, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\n\t\tp._kill = function(vars, target) {\n\t\t\treturn this._enabled(false, false);\n\t\t};\n\n\t\tp.kill = function(vars, target) {\n\t\t\tthis._kill(vars, target);\n\t\t\treturn this;\n\t\t};\n\n\t\tp._uncache = function(includeSelf) {\n\t\t\tvar tween = includeSelf ? this : this.timeline;\n\t\t\twhile (tween) {\n\t\t\t\ttween._dirty = true;\n\t\t\t\ttween = tween.timeline;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp._swapSelfInParams = function(params) {\n\t\t\tvar i = params.length,\n\t\t\t\tcopy = params.concat();\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (params[i] === \"{self}\") {\n\t\t\t\t\tcopy[i] = this;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn copy;\n\t\t};\n\n//----Animation getters/setters --------------------------------------------------------\n\n\t\tp.eventCallback = function(type, callback, params, scope) {\n\t\t\tif ((type || \"\").substr(0,2) === \"on\") {\n\t\t\t\tvar v = this.vars;\n\t\t\t\tif (arguments.length === 1) {\n\t\t\t\t\treturn v[type];\n\t\t\t\t}\n\t\t\t\tif (callback == null) {\n\t\t\t\t\tdelete v[type];\n\t\t\t\t} else {\n\t\t\t\t\tv[type] = callback;\n\t\t\t\t\tv[type + \"Params\"] = (_isArray(params) && params.join(\"\").indexOf(\"{self}\") !== -1) ? this._swapSelfInParams(params) : params;\n\t\t\t\t\tv[type + \"Scope\"] = scope;\n\t\t\t\t}\n\t\t\t\tif (type === \"onUpdate\") {\n\t\t\t\t\tthis._onUpdate = callback;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.delay = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._delay;\n\t\t\t}\n\t\t\tif (this._timeline.smoothChildTiming) {\n\t\t\t\tthis.startTime( this._startTime + value - this._delay );\n\t\t\t}\n\t\t\tthis._delay = value;\n\t\t\treturn this;\n\t\t};\n\n\t\tp.duration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tthis._dirty = false;\n\t\t\t\treturn this._duration;\n\t\t\t}\n\t\t\tthis._duration = this._totalDuration = value;\n\t\t\tthis._uncache(true); //true in case it's a TweenMax or TimelineMax that has a repeat - we'll need to refresh the totalDuration.\n\t\t\tif (this._timeline.smoothChildTiming) if (this._time > 0) if (this._time < this._duration) if (value !== 0) {\n\t\t\t\tthis.totalTime(this._totalTime * (value / this._duration), true);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.totalDuration = function(value) {\n\t\t\tthis._dirty = false;\n\t\t\treturn (!arguments.length) ? this._totalDuration : this.duration(value);\n\t\t};\n\n\t\tp.time = function(value, suppressEvents) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._time;\n\t\t\t}\n\t\t\tif (this._dirty) {\n\t\t\t\tthis.totalDuration();\n\t\t\t}\n\t\t\treturn this.totalTime((value > this._duration) ? this._duration : value, suppressEvents);\n\t\t};\n\n\t\tp.totalTime = function(time, suppressEvents, uncapped) {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._totalTime;\n\t\t\t}\n\t\t\tif (this._timeline) {\n\t\t\t\tif (time < 0 && !uncapped) {\n\t\t\t\t\ttime += this.totalDuration();\n\t\t\t\t}\n\t\t\t\tif (this._timeline.smoothChildTiming) {\n\t\t\t\t\tif (this._dirty) {\n\t\t\t\t\t\tthis.totalDuration();\n\t\t\t\t\t}\n\t\t\t\t\tvar totalDuration = this._totalDuration,\n\t\t\t\t\t\ttl = this._timeline;\n\t\t\t\t\tif (time > totalDuration && !uncapped) {\n\t\t\t\t\t\ttime = totalDuration;\n\t\t\t\t\t}\n\t\t\t\t\tthis._startTime = (this._paused ? this._pauseTime : tl._time) - ((!this._reversed ? time : totalDuration - time) / this._timeScale);\n\t\t\t\t\tif (!tl._dirty) { //for performance improvement. If the parent's cache is already dirty, it already took care of marking the ancestors as dirty too, so skip the function call here.\n\t\t\t\t\t\tthis._uncache(false);\n\t\t\t\t\t}\n\t\t\t\t\t//in case any of the ancestor timelines had completed but should now be enabled, we should reset their totalTime() which will also ensure that they're lined up properly and enabled. Skip for animations that are on the root (wasteful). Example: a TimelineLite.exportRoot() is performed when there's a paused tween on the root, the export will not complete until that tween is unpaused, but imagine a child gets restarted later, after all [unpaused] tweens have completed. The startTime of that child would get pushed out, but one of the ancestors may have completed.\n\t\t\t\t\tif (tl._timeline) {\n\t\t\t\t\t\twhile (tl._timeline) {\n\t\t\t\t\t\t\tif (tl._timeline._time !== (tl._startTime + tl._totalTime) / tl._timeScale) {\n\t\t\t\t\t\t\t\ttl.totalTime(tl._totalTime, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttl = tl._timeline;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this._gc) {\n\t\t\t\t\tthis._enabled(true, false);\n\t\t\t\t}\n\t\t\t\tif (this._totalTime !== time || this._duration === 0) {\n\t\t\t\t\tthis.render(time, suppressEvents, false);\n\t\t\t\t\tif (_lazyTweens.length) { //in case rendering caused any tweens to lazy-init, we should render them because typically when someone calls seek() or time() or progress(), they expect an immediate render.\n\t\t\t\t\t\t_lazyRender();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.progress = p.totalProgress = function(value, suppressEvents) {\n\t\t\treturn (!arguments.length) ? this._time / this.duration() : this.totalTime(this.duration() * value, suppressEvents);\n\t\t};\n\n\t\tp.startTime = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._startTime;\n\t\t\t}\n\t\t\tif (value !== this._startTime) {\n\t\t\t\tthis._startTime = value;\n\t\t\t\tif (this.timeline) if (this.timeline._sortChildren) {\n\t\t\t\t\tthis.timeline.add(this, value - this._delay); //ensures that any necessary re-sequencing of Animations in the timeline occurs to make sure the rendering order is correct.\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.timeScale = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._timeScale;\n\t\t\t}\n\t\t\tvalue = value || _tinyNum; //can't allow zero because it'll throw the math off\n\t\t\tif (this._timeline && this._timeline.smoothChildTiming) {\n\t\t\t\tvar pauseTime = this._pauseTime,\n\t\t\t\t\tt = (pauseTime || pauseTime === 0) ? pauseTime : this._timeline.totalTime();\n\t\t\t\tthis._startTime = t - ((t - this._startTime) * this._timeScale / value);\n\t\t\t}\n\t\t\tthis._timeScale = value;\n\t\t\treturn this._uncache(false);\n\t\t};\n\n\t\tp.reversed = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._reversed;\n\t\t\t}\n\t\t\tif (value != this._reversed) {\n\t\t\t\tthis._reversed = value;\n\t\t\t\tthis.totalTime(((this._timeline && !this._timeline.smoothChildTiming) ? this.totalDuration() - this._totalTime : this._totalTime), true);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.paused = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._paused;\n\t\t\t}\n\t\t\tif (value != this._paused) if (this._timeline) {\n\t\t\t\tif (!_tickerActive && !value) {\n\t\t\t\t\t_ticker.wake();\n\t\t\t\t}\n\t\t\t\tvar tl = this._timeline,\n\t\t\t\t\traw = tl.rawTime(),\n\t\t\t\t\telapsed = raw - this._pauseTime;\n\t\t\t\tif (!value && tl.smoothChildTiming) {\n\t\t\t\t\tthis._startTime += elapsed;\n\t\t\t\t\tthis._uncache(false);\n\t\t\t\t}\n\t\t\t\tthis._pauseTime = value ? raw : null;\n\t\t\t\tthis._paused = value;\n\t\t\t\tthis._active = this.isActive();\n\t\t\t\tif (!value && elapsed !== 0 && this._initted && this.duration()) {\n\t\t\t\t\tthis.render((tl.smoothChildTiming ? this._totalTime : (raw - this._startTime) / this._timeScale), true, true); //in case the target's properties changed via some other tween or manual update by the user, we should force a render.\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._gc && !value) {\n\t\t\t\tthis._enabled(true, false);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\n/*\n * ----------------------------------------------------------------\n * SimpleTimeline\n * ----------------------------------------------------------------\n */\n\t\tvar SimpleTimeline = _class(\"core.SimpleTimeline\", function(vars) {\n\t\t\tAnimation.call(this, 0, vars);\n\t\t\tthis.autoRemoveChildren = this.smoothChildTiming = true;\n\t\t});\n\n\t\tp = SimpleTimeline.prototype = new Animation();\n\t\tp.constructor = SimpleTimeline;\n\t\tp.kill()._gc = false;\n\t\tp._first = p._last = null;\n\t\tp._sortChildren = false;\n\n\t\tp.add = p.insert = function(child, position, align, stagger) {\n\t\t\tvar prevTween, st;\n\t\t\tchild._startTime = Number(position || 0) + child._delay;\n\t\t\tif (child._paused) if (this !== child._timeline) { //we only adjust the _pauseTime if it wasn't in this timeline already. Remember, sometimes a tween will be inserted again into the same timeline when its startTime is changed so that the tweens in the TimelineLite/Max are re-ordered properly in the linked list (so everything renders in the proper order).\n\t\t\t\tchild._pauseTime = child._startTime + ((this.rawTime() - child._startTime) / child._timeScale);\n\t\t\t}\n\t\t\tif (child.timeline) {\n\t\t\t\tchild.timeline._remove(child, true); //removes from existing timeline so that it can be properly added to this one.\n\t\t\t}\n\t\t\tchild.timeline = child._timeline = this;\n\t\t\tif (child._gc) {\n\t\t\t\tchild._enabled(true, true);\n\t\t\t}\n\t\t\tprevTween = this._last;\n\t\t\tif (this._sortChildren) {\n\t\t\t\tst = child._startTime;\n\t\t\t\twhile (prevTween && prevTween._startTime > st) {\n\t\t\t\t\tprevTween = prevTween._prev;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (prevTween) {\n\t\t\t\tchild._next = prevTween._next;\n\t\t\t\tprevTween._next = child;\n\t\t\t} else {\n\t\t\t\tchild._next = this._first;\n\t\t\t\tthis._first = child;\n\t\t\t}\n\t\t\tif (child._next) {\n\t\t\t\tchild._next._prev = child;\n\t\t\t} else {\n\t\t\t\tthis._last = child;\n\t\t\t}\n\t\t\tchild._prev = prevTween;\n\t\t\tif (this._timeline) {\n\t\t\t\tthis._uncache(true);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp._remove = function(tween, skipDisable) {\n\t\t\tif (tween.timeline === this) {\n\t\t\t\tif (!skipDisable) {\n\t\t\t\t\ttween._enabled(false, true);\n\t\t\t\t}\n\t\t\t\ttween.timeline = null;\n\n\t\t\t\tif (tween._prev) {\n\t\t\t\t\ttween._prev._next = tween._next;\n\t\t\t\t} else if (this._first === tween) {\n\t\t\t\t\tthis._first = tween._next;\n\t\t\t\t}\n\t\t\t\tif (tween._next) {\n\t\t\t\t\ttween._next._prev = tween._prev;\n\t\t\t\t} else if (this._last === tween) {\n\t\t\t\t\tthis._last = tween._prev;\n\t\t\t\t}\n\n\t\t\t\tif (this._timeline) {\n\t\t\t\t\tthis._uncache(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tvar tween = this._first,\n\t\t\t\tnext;\n\t\t\tthis._totalTime = this._time = this._rawPrevTime = time;\n\t\t\twhile (tween) {\n\t\t\t\tnext = tween._next; //record it here because the value could change after rendering...\n\t\t\t\tif (tween._active || (time >= tween._startTime && !tween._paused)) {\n\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttween = next;\n\t\t\t}\n\t\t};\n\n\t\tp.rawTime = function() {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\treturn this._totalTime;\n\t\t};\n\n/*\n * ----------------------------------------------------------------\n * TweenLite\n * ----------------------------------------------------------------\n */\n\t\tvar TweenLite = _class(\"TweenLite\", function(target, duration, vars) {\n\t\t\t\tAnimation.call(this, duration, vars);\n\t\t\t\tthis.render = TweenLite.prototype.render; //speed optimization (avoid prototype lookup on this \"hot\" method)\n\n\t\t\t\tif (target == null) {\n\t\t\t\t\tthrow \"Cannot tween a null target.\";\n\t\t\t\t}\n\n\t\t\t\tthis.target = target = (typeof(target) !== \"string\") ? target : TweenLite.selector(target) || target;\n\n\t\t\t\tvar isSelector = (target.jquery || (target.length && target !== window && target[0] && (target[0] === window || (target[0].nodeType && target[0].style && !target.nodeType)))),\n\t\t\t\t\toverwrite = this.vars.overwrite,\n\t\t\t\t\ti, targ, targets;\n\n\t\t\t\tthis._overwrite = overwrite = (overwrite == null) ? _overwriteLookup[TweenLite.defaultOverwrite] : (typeof(overwrite) === \"number\") ? overwrite >> 0 : _overwriteLookup[overwrite];\n\n\t\t\t\tif ((isSelector || target instanceof Array || (target.push && _isArray(target))) && typeof(target[0]) !== \"number\") {\n\t\t\t\t\tthis._targets = targets = _slice.call(target, 0);\n\t\t\t\t\tthis._propLookup = [];\n\t\t\t\t\tthis._siblings = [];\n\t\t\t\t\tfor (i = 0; i < targets.length; i++) {\n\t\t\t\t\t\ttarg = targets[i];\n\t\t\t\t\t\tif (!targ) {\n\t\t\t\t\t\t\ttargets.splice(i--, 1);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (typeof(targ) === \"string\") {\n\t\t\t\t\t\t\ttarg = targets[i--] = TweenLite.selector(targ); //in case it's an array of strings\n\t\t\t\t\t\t\tif (typeof(targ) === \"string\") {\n\t\t\t\t\t\t\t\ttargets.splice(i+1, 1); //to avoid an endless loop (can't imagine why the selector would return a string, but just in case)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (targ.length && targ !== window && targ[0] && (targ[0] === window || (targ[0].nodeType && targ[0].style && !targ.nodeType))) { //in case the user is passing in an array of selector objects (like jQuery objects), we need to check one more level and pull things out if necessary. Also note that <select> elements pass all the criteria regarding length and the first child having style, so we must also check to ensure the target isn't an HTML node itself.\n\t\t\t\t\t\t\ttargets.splice(i--, 1);\n\t\t\t\t\t\t\tthis._targets = targets = targets.concat(_slice.call(targ, 0));\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._siblings[i] = _register(targ, this, false);\n\t\t\t\t\t\tif (overwrite === 1) if (this._siblings[i].length > 1) {\n\t\t\t\t\t\t\t_applyOverwrite(targ, this, null, 1, this._siblings[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis._propLookup = {};\n\t\t\t\t\tthis._siblings = _register(target, this, false);\n\t\t\t\t\tif (overwrite === 1) if (this._siblings.length > 1) {\n\t\t\t\t\t\t_applyOverwrite(target, this, null, 1, this._siblings);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.vars.immediateRender || (duration === 0 && this._delay === 0 && this.vars.immediateRender !== false)) {\n\t\t\t\t\tthis._time = -_tinyNum; //forces a render without having to set the render() \"force\" parameter to true because we want to allow lazying by default (using the \"force\" parameter always forces an immediate full render)\n\t\t\t\t\tthis.render(-this._delay);\n\t\t\t\t}\n\t\t\t}, true),\n\t\t\t_isSelector = function(v) {\n\t\t\t\treturn (v.length && v !== window && v[0] && (v[0] === window || (v[0].nodeType && v[0].style && !v.nodeType))); //we cannot check \"nodeType\" if the target is window from within an iframe, otherwise it will trigger a security error in some browsers like Firefox.\n\t\t\t},\n\t\t\t_autoCSS = function(vars, target) {\n\t\t\t\tvar css = {},\n\t\t\t\t\tp;\n\t\t\t\tfor (p in vars) {\n\t\t\t\t\tif (!_reservedProps[p] && (!(p in target) || p === \"transform\" || p === \"x\" || p === \"y\" || p === \"width\" || p === \"height\" || p === \"className\" || p === \"border\") && (!_plugins[p] || (_plugins[p] && _plugins[p]._autoCSS))) { //note: <img> elements contain read-only \"x\" and \"y\" properties. We should also prioritize editing css width/height rather than the element's properties.\n\t\t\t\t\t\tcss[p] = vars[p];\n\t\t\t\t\t\tdelete vars[p];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvars.css = css;\n\t\t\t};\n\n\t\tp = TweenLite.prototype = new Animation();\n\t\tp.constructor = TweenLite;\n\t\tp.kill()._gc = false;\n\n//----TweenLite defaults, overwrite management, and root updates ----------------------------------------------------\n\n\t\tp.ratio = 0;\n\t\tp._firstPT = p._targets = p._overwrittenProps = p._startAt = null;\n\t\tp._notifyPluginsOfEnabled = p._lazy = false;\n\n\t\tTweenLite.version = \"1.12.1\";\n\t\tTweenLite.defaultEase = p._ease = new Ease(null, null, 1, 1);\n\t\tTweenLite.defaultOverwrite = \"auto\";\n\t\tTweenLite.ticker = _ticker;\n\t\tTweenLite.autoSleep = true;\n\t\tTweenLite.lagSmoothing = function(threshold, adjustedLag) {\n\t\t\t_ticker.lagSmoothing(threshold, adjustedLag);\n\t\t};\n\t\tTweenLite.selector = window.$ || window.jQuery || function(e) { if (window.$) { TweenLite.selector = window.$; return window.$(e); } return window.document ? window.document.getElementById((e.charAt(0) === \"#\") ? e.substr(1) : e) : e; };\n\n\t\tvar _lazyTweens = [],\n\t\t\t_lazyLookup = {},\n\t\t\t_internals = TweenLite._internals = {isArray:_isArray, isSelector:_isSelector, lazyTweens:_lazyTweens}, //gives us a way to expose certain private values to other GreenSock classes without contaminating tha main TweenLite object.\n\t\t\t_plugins = TweenLite._plugins = {},\n\t\t\t_tweenLookup = _internals.tweenLookup = {},\n\t\t\t_tweenLookupNum = 0,\n\t\t\t_reservedProps = _internals.reservedProps = {ease:1, delay:1, overwrite:1, onComplete:1, onCompleteParams:1, onCompleteScope:1, useFrames:1, runBackwards:1, startAt:1, onUpdate:1, onUpdateParams:1, onUpdateScope:1, onStart:1, onStartParams:1, onStartScope:1, onReverseComplete:1, onReverseCompleteParams:1, onReverseCompleteScope:1, onRepeat:1, onRepeatParams:1, onRepeatScope:1, easeParams:1, yoyo:1, immediateRender:1, repeat:1, repeatDelay:1, data:1, paused:1, reversed:1, autoCSS:1, lazy:1},\n\t\t\t_overwriteLookup = {none:0, all:1, auto:2, concurrent:3, allOnStart:4, preexisting:5, \"true\":1, \"false\":0},\n\t\t\t_rootFramesTimeline = Animation._rootFramesTimeline = new SimpleTimeline(),\n\t\t\t_rootTimeline = Animation._rootTimeline = new SimpleTimeline(),\n\t\t\t_lazyRender = function() {\n\t\t\t\tvar i = _lazyTweens.length;\n\t\t\t\t_lazyLookup = {};\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\ta = _lazyTweens[i];\n\t\t\t\t\tif (a && a._lazy !== false) {\n\t\t\t\t\t\ta.render(a._lazy, false, true);\n\t\t\t\t\t\ta._lazy = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t_lazyTweens.length = 0;\n\t\t\t};\n\n\t\t_rootTimeline._startTime = _ticker.time;\n\t\t_rootFramesTimeline._startTime = _ticker.frame;\n\t\t_rootTimeline._active = _rootFramesTimeline._active = true;\n\t\tsetTimeout(_lazyRender, 1); //on some mobile devices, there isn't a \"tick\" before code runs which means any lazy renders wouldn't run before the next official \"tick\".\n\n\t\tAnimation._updateRoot = TweenLite.render = function() {\n\t\t\t\tvar i, a, p;\n\t\t\t\tif (_lazyTweens.length) { //if code is run outside of the requestAnimationFrame loop, there may be tweens queued AFTER the engine refreshed, so we need to ensure any pending renders occur before we refresh again.\n\t\t\t\t\t_lazyRender();\n\t\t\t\t}\n\t\t\t\t_rootTimeline.render((_ticker.time - _rootTimeline._startTime) * _rootTimeline._timeScale, false, false);\n\t\t\t\t_rootFramesTimeline.render((_ticker.frame - _rootFramesTimeline._startTime) * _rootFramesTimeline._timeScale, false, false);\n\t\t\t\tif (_lazyTweens.length) {\n\t\t\t\t\t_lazyRender();\n\t\t\t\t}\n\t\t\t\tif (!(_ticker.frame % 120)) { //dump garbage every 120 frames...\n\t\t\t\t\tfor (p in _tweenLookup) {\n\t\t\t\t\t\ta = _tweenLookup[p].tweens;\n\t\t\t\t\t\ti = a.length;\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tif (a[i]._gc) {\n\t\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (a.length === 0) {\n\t\t\t\t\t\t\tdelete _tweenLookup[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//if there are no more tweens in the root timelines, or if they're all paused, make the _timer sleep to reduce load on the CPU slightly\n\t\t\t\t\tp = _rootTimeline._first;\n\t\t\t\t\tif (!p || p._paused) if (TweenLite.autoSleep && !_rootFramesTimeline._first && _ticker._listeners.tick.length === 1) {\n\t\t\t\t\t\twhile (p && p._paused) {\n\t\t\t\t\t\t\tp = p._next;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!p) {\n\t\t\t\t\t\t\t_ticker.sleep();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t_ticker.addEventListener(\"tick\", Animation._updateRoot);\n\n\t\tvar _register = function(target, tween, scrub) {\n\t\t\t\tvar id = target._gsTweenID, a, i;\n\t\t\t\tif (!_tweenLookup[id || (target._gsTweenID = id = \"t\" + (_tweenLookupNum++))]) {\n\t\t\t\t\t_tweenLookup[id] = {target:target, tweens:[]};\n\t\t\t\t}\n\t\t\t\tif (tween) {\n\t\t\t\t\ta = _tweenLookup[id].tweens;\n\t\t\t\t\ta[(i = a.length)] = tween;\n\t\t\t\t\tif (scrub) {\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tif (a[i] === tween) {\n\t\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn _tweenLookup[id].tweens;\n\t\t\t},\n\n\t\t\t_applyOverwrite = function(target, tween, props, mode, siblings) {\n\t\t\t\tvar i, changed, curTween, l;\n\t\t\t\tif (mode === 1 || mode >= 4) {\n\t\t\t\t\tl = siblings.length;\n\t\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\t\tif ((curTween = siblings[i]) !== tween) {\n\t\t\t\t\t\t\tif (!curTween._gc) if (curTween._enabled(false, false)) {\n\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (mode === 5) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn changed;\n\t\t\t\t}\n\t\t\t\t//NOTE: Add 0.0000000001 to overcome floating point errors that can cause the startTime to be VERY slightly off (when a tween's time() is set for example)\n\t\t\t\tvar startTime = tween._startTime + _tinyNum,\n\t\t\t\t\toverlaps = [],\n\t\t\t\t\toCount = 0,\n\t\t\t\t\tzeroDur = (tween._duration === 0),\n\t\t\t\t\tglobalStart;\n\t\t\t\ti = siblings.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif ((curTween = siblings[i]) === tween || curTween._gc || curTween._paused) {\n\t\t\t\t\t\t//ignore\n\t\t\t\t\t} else if (curTween._timeline !== tween._timeline) {\n\t\t\t\t\t\tglobalStart = globalStart || _checkOverlap(tween, 0, zeroDur);\n\t\t\t\t\t\tif (_checkOverlap(curTween, globalStart, zeroDur) === 0) {\n\t\t\t\t\t\t\toverlaps[oCount++] = curTween;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (curTween._startTime <= startTime) if (curTween._startTime + curTween.totalDuration() / curTween._timeScale > startTime) if (!((zeroDur || !curTween._initted) && startTime - curTween._startTime <= 0.0000000002)) {\n\t\t\t\t\t\toverlaps[oCount++] = curTween;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ti = oCount;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tcurTween = overlaps[i];\n\t\t\t\t\tif (mode === 2) if (curTween._kill(props, target)) {\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (mode !== 2 || (!curTween._firstPT && curTween._initted)) {\n\t\t\t\t\t\tif (curTween._enabled(false, false)) { //if all property tweens have been overwritten, kill the tween.\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn changed;\n\t\t\t},\n\n\t\t\t_checkOverlap = function(tween, reference, zeroDur) {\n\t\t\t\tvar tl = tween._timeline,\n\t\t\t\t\tts = tl._timeScale,\n\t\t\t\t\tt = tween._startTime;\n\t\t\t\twhile (tl._timeline) {\n\t\t\t\t\tt += tl._startTime;\n\t\t\t\t\tts *= tl._timeScale;\n\t\t\t\t\tif (tl._paused) {\n\t\t\t\t\t\treturn -100;\n\t\t\t\t\t}\n\t\t\t\t\ttl = tl._timeline;\n\t\t\t\t}\n\t\t\t\tt /= ts;\n\t\t\t\treturn (t > reference) ? t - reference : ((zeroDur && t === reference) || (!tween._initted && t - reference < 2 * _tinyNum)) ? _tinyNum : ((t += tween.totalDuration() / tween._timeScale / ts) > reference + _tinyNum) ? 0 : t - reference - _tinyNum;\n\t\t\t};\n\n\n//---- TweenLite instance methods -----------------------------------------------------------------------------\n\n\t\tp._init = function() {\n\t\t\tvar v = this.vars,\n\t\t\t\top = this._overwrittenProps,\n\t\t\t\tdur = this._duration,\n\t\t\t\timmediate = !!v.immediateRender,\n\t\t\t\tease = v.ease,\n\t\t\t\ti, initPlugins, pt, p, startVars;\n\t\t\tif (v.startAt) {\n\t\t\t\tif (this._startAt) {\n\t\t\t\t\tthis._startAt.render(-1, true); //if we've run a startAt previously (when the tween instantiated), we should revert it so that the values re-instantiate correctly particularly for relative tweens. Without this, a TweenLite.fromTo(obj, 1, {x:\"+=100\"}, {x:\"-=100\"}), for example, would actually jump to +=200 because the startAt would run twice, doubling the relative change.\n\t\t\t\t\tthis._startAt.kill();\n\t\t\t\t}\n\t\t\t\tstartVars = {};\n\t\t\t\tfor (p in v.startAt) { //copy the properties/values into a new object to avoid collisions, like var to = {x:0}, from = {x:500}; timeline.fromTo(e, 1, from, to).fromTo(e, 1, to, from);\n\t\t\t\t\tstartVars[p] = v.startAt[p];\n\t\t\t\t}\n\t\t\t\tstartVars.overwrite = false;\n\t\t\t\tstartVars.immediateRender = true;\n\t\t\t\tstartVars.lazy = (immediate && v.lazy !== false);\n\t\t\t\tstartVars.startAt = startVars.delay = null; //no nesting of startAt objects allowed (otherwise it could cause an infinite loop).\n\t\t\t\tthis._startAt = TweenLite.to(this.target, 0, startVars);\n\t\t\t\tif (immediate) {\n\t\t\t\t\tif (this._time > 0) {\n\t\t\t\t\t\tthis._startAt = null; //tweens that render immediately (like most from() and fromTo() tweens) shouldn't revert when their parent timeline's playhead goes backward past the startTime because the initial render could have happened anytime and it shouldn't be directly correlated to this tween's startTime. Imagine setting up a complex animation where the beginning states of various objects are rendered immediately but the tween doesn't happen for quite some time - if we revert to the starting values as soon as the playhead goes backward past the tween's startTime, it will throw things off visually. Reversion should only happen in TimelineLite/Max instances where immediateRender was false (which is the default in the convenience methods like from()).\n\t\t\t\t\t} else if (dur !== 0) {\n\t\t\t\t\t\treturn; //we skip initialization here so that overwriting doesn't occur until the tween actually begins. Otherwise, if you create several immediateRender:true tweens of the same target/properties to drop into a TimelineLite or TimelineMax, the last one created would overwrite the first ones because they didn't get placed into the timeline yet before the first render occurs and kicks in overwriting.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (v.runBackwards && dur !== 0) {\n\t\t\t\t//from() tweens must be handled uniquely: their beginning values must be rendered but we don't want overwriting to occur yet (when time is still 0). Wait until the tween actually begins before doing all the routines like overwriting. At that time, we should render at the END of the tween to ensure that things initialize correctly (remember, from() tweens go backwards)\n\t\t\t\tif (this._startAt) {\n\t\t\t\t\tthis._startAt.render(-1, true);\n\t\t\t\t\tthis._startAt.kill();\n\t\t\t\t\tthis._startAt = null;\n\t\t\t\t} else {\n\t\t\t\t\tpt = {};\n\t\t\t\t\tfor (p in v) { //copy props into a new object and skip any reserved props, otherwise onComplete or onUpdate or onStart could fire. We should, however, permit autoCSS to go through.\n\t\t\t\t\t\tif (!_reservedProps[p] || p === \"autoCSS\") {\n\t\t\t\t\t\t\tpt[p] = v[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpt.overwrite = 0;\n\t\t\t\t\tpt.data = \"isFromStart\"; //we tag the tween with as \"isFromStart\" so that if [inside a plugin] we need to only do something at the very END of a tween, we have a way of identifying this tween as merely the one that's setting the beginning values for a \"from()\" tween. For example, clearProps in CSSPlugin should only get applied at the very END of a tween and without this tag, from(...{height:100, clearProps:\"height\", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in.\n\t\t\t\t\tpt.lazy = (immediate && v.lazy !== false);\n\t\t\t\t\tpt.immediateRender = immediate; //zero-duration tweens render immediately by default, but if we're not specifically instructed to render this tween immediately, we should skip this and merely _init() to record the starting values (rendering them immediately would push them to completion which is wasteful in that case - we'd have to render(-1) immediately after)\n\t\t\t\t\tthis._startAt = TweenLite.to(this.target, 0, pt);\n\t\t\t\t\tif (!immediate) {\n\t\t\t\t\t\tthis._startAt._init(); //ensures that the initial values are recorded\n\t\t\t\t\t\tthis._startAt._enabled(false); //no need to have the tween render on the next cycle. Disable it because we'll always manually control the renders of the _startAt tween.\n\t\t\t\t\t} else if (this._time === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ease) {\n\t\t\t\tthis._ease = TweenLite.defaultEase;\n\t\t\t} else if (ease instanceof Ease) {\n\t\t\t\tthis._ease = (v.easeParams instanceof Array) ? ease.config.apply(ease, v.easeParams) : ease;\n\t\t\t} else {\n\t\t\t\tthis._ease = (typeof(ease) === \"function\") ? new Ease(ease, v.easeParams) : _easeMap[ease] || TweenLite.defaultEase;\n\t\t\t}\n\t\t\tthis._easeType = this._ease._type;\n\t\t\tthis._easePower = this._ease._power;\n\t\t\tthis._firstPT = null;\n\n\t\t\tif (this._targets) {\n\t\t\t\ti = this._targets.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif ( this._initProps( this._targets[i], (this._propLookup[i] = {}), this._siblings[i], (op ? op[i] : null)) ) {\n\t\t\t\t\t\tinitPlugins = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinitPlugins = this._initProps(this.target, this._propLookup, this._siblings, op);\n\t\t\t}\n\n\t\t\tif (initPlugins) {\n\t\t\t\tTweenLite._onPluginEvent(\"_onInitAllProps\", this); //reorders the array in order of priority. Uses a static TweenPlugin method in order to minimize file size in TweenLite\n\t\t\t}\n\t\t\tif (op) if (!this._firstPT) if (typeof(this.target) !== \"function\") { //if all tweening properties have been overwritten, kill the tween. If the target is a function, it's probably a delayedCall so let it live.\n\t\t\t\tthis._enabled(false, false);\n\t\t\t}\n\t\t\tif (v.runBackwards) {\n\t\t\t\tpt = this._firstPT;\n\t\t\t\twhile (pt) {\n\t\t\t\t\tpt.s += pt.c;\n\t\t\t\t\tpt.c = -pt.c;\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onUpdate = v.onUpdate;\n\t\t\tthis._initted = true;\n\t\t};\n\n\t\tp._initProps = function(target, propLookup, siblings, overwrittenProps) {\n\t\t\tvar p, i, initPlugins, plugin, pt, v;\n\t\t\tif (target == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (_lazyLookup[target._gsTweenID]) {\n\t\t\t\t_lazyRender(); //if other tweens of the same target have recently initted but haven't rendered yet, we've got to force the render so that the starting values are correct (imagine populating a timeline with a bunch of sequential tweens and then jumping to the end)\n\t\t\t}\n\n\t\t\tif (!this.vars.css) if (target.style) if (target !== window && target.nodeType) if (_plugins.css) if (this.vars.autoCSS !== false) { //it's so common to use TweenLite/Max to animate the css of DOM elements, we assume that if the target is a DOM element, that's what is intended (a convenience so that users don't have to wrap things in css:{}, although we still recommend it for a slight performance boost and better specificity). Note: we cannot check \"nodeType\" on the window inside an iframe.\n\t\t\t\t_autoCSS(this.vars, target);\n\t\t\t}\n\t\t\tfor (p in this.vars) {\n\t\t\t\tv = this.vars[p];\n\t\t\t\tif (_reservedProps[p]) {\n\t\t\t\t\tif (v) if ((v instanceof Array) || (v.push && _isArray(v))) if (v.join(\"\").indexOf(\"{self}\") !== -1) {\n\t\t\t\t\t\tthis.vars[p] = v = this._swapSelfInParams(v, this);\n\t\t\t\t\t}\n\n\t\t\t\t} else if (_plugins[p] && (plugin = new _plugins[p]())._onInitTween(target, this.vars[p], this)) {\n\n\t\t\t\t\t//t - target \t\t[object]\n\t\t\t\t\t//p - property \t\t[string]\n\t\t\t\t\t//s - start\t\t\t[number]\n\t\t\t\t\t//c - change\t\t[number]\n\t\t\t\t\t//f - isFunction\t[boolean]\n\t\t\t\t\t//n - name\t\t\t[string]\n\t\t\t\t\t//pg - isPlugin \t[boolean]\n\t\t\t\t\t//pr - priority\t\t[number]\n\t\t\t\t\tthis._firstPT = pt = {_next:this._firstPT, t:plugin, p:\"setRatio\", s:0, c:1, f:true, n:p, pg:true, pr:plugin._priority};\n\t\t\t\t\ti = plugin._overwriteProps.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tpropLookup[plugin._overwriteProps[i]] = this._firstPT;\n\t\t\t\t\t}\n\t\t\t\t\tif (plugin._priority || plugin._onInitAllProps) {\n\t\t\t\t\t\tinitPlugins = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (plugin._onDisable || plugin._onEnable) {\n\t\t\t\t\t\tthis._notifyPluginsOfEnabled = true;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis._firstPT = propLookup[p] = pt = {_next:this._firstPT, t:target, p:p, f:(typeof(target[p]) === \"function\"), n:p, pg:false, pr:0};\n\t\t\t\t\tpt.s = (!pt.f) ? parseFloat(target[p]) : target[ ((p.indexOf(\"set\") || typeof(target[\"get\" + p.substr(3)]) !== \"function\") ? p : \"get\" + p.substr(3)) ]();\n\t\t\t\t\tpt.c = (typeof(v) === \"string\" && v.charAt(1) === \"=\") ? parseInt(v.charAt(0) + \"1\", 10) * Number(v.substr(2)) : (Number(v) - pt.s) || 0;\n\t\t\t\t}\n\t\t\t\tif (pt) if (pt._next) {\n\t\t\t\t\tpt._next._prev = pt;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (overwrittenProps) if (this._kill(overwrittenProps, target)) { //another tween may have tried to overwrite properties of this tween before init() was called (like if two tweens start at the same time, the one created second will run first)\n\t\t\t\treturn this._initProps(target, propLookup, siblings, overwrittenProps);\n\t\t\t}\n\t\t\tif (this._overwrite > 1) if (this._firstPT) if (siblings.length > 1) if (_applyOverwrite(target, this, propLookup, this._overwrite, siblings)) {\n\t\t\t\tthis._kill(propLookup, target);\n\t\t\t\treturn this._initProps(target, propLookup, siblings, overwrittenProps);\n\t\t\t}\n\t\t\tif (this._firstPT) if ((this.vars.lazy !== false && this._duration) || (this.vars.lazy && !this._duration)) { //zero duration tweens don't lazy render by default; everything else does.\n\t\t\t\t_lazyLookup[target._gsTweenID] = true;\n\t\t\t}\n\t\t\treturn initPlugins;\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tvar prevTime = this._time,\n\t\t\t\tduration = this._duration,\n\t\t\t\tprevRawPrevTime = this._rawPrevTime,\n\t\t\t\tisComplete, callback, pt, rawPrevTime;\n\t\t\tif (time >= duration) {\n\t\t\t\tthis._totalTime = this._time = duration;\n\t\t\t\tthis.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n\t\t\t\tif (!this._reversed ) {\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\tcallback = \"onComplete\";\n\t\t\t\t}\n\t\t\t\tif (duration === 0) if (this._initted || !this.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\tif (this._startTime === this._timeline._duration) { //if a zero-duration tween is at the VERY end of a timeline and that timeline renders at its end, it will typically add a tiny bit of cushion to the render time to prevent rounding errors from getting in the way of tweens rendering their VERY end. If we then reverse() that timeline, the zero-duration tween will trigger its onReverseComplete even though technically the playhead didn't pass over it again. It's a very specific edge case we must accommodate.\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (time === 0 || prevRawPrevTime < 0 || prevRawPrevTime === _tinyNum) if (prevRawPrevTime !== time) {\n\t\t\t\t\t\tforce = true;\n\t\t\t\t\t\tif (prevRawPrevTime > _tinyNum) {\n\t\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t}\n\n\t\t\t} else if (time < 0.0000001) { //to work around occasional floating point math artifacts, round super small values to 0.\n\t\t\t\tthis._totalTime = this._time = 0;\n\t\t\t\tthis.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t\t\t\tif (prevTime !== 0 || (duration === 0 && prevRawPrevTime > 0 && prevRawPrevTime !== _tinyNum)) {\n\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\tisComplete = this._reversed;\n\t\t\t\t}\n\t\t\t\tif (time < 0) {\n\t\t\t\t\tthis._active = false;\n\t\t\t\t\tif (duration === 0) if (this._initted || !this.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\t\tif (prevRawPrevTime >= 0) {\n\t\t\t\t\t\t\tforce = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t\t}\n\t\t\t\t} else if (!this._initted) { //if we render the very beginning (time == 0) of a fromTo(), we must force the render (normal tweens wouldn't need to render at a time of 0 when the prevTime was also 0). This is also mandatory to make sure overwriting kicks in immediately.\n\t\t\t\t\tforce = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._totalTime = this._time = time;\n\n\t\t\t\tif (this._easeType) {\n\t\t\t\t\tvar r = time / duration, type = this._easeType, pow = this._easePower;\n\t\t\t\t\tif (type === 1 || (type === 3 && r >= 0.5)) {\n\t\t\t\t\t\tr = 1 - r;\n\t\t\t\t\t}\n\t\t\t\t\tif (type === 3) {\n\t\t\t\t\t\tr *= 2;\n\t\t\t\t\t}\n\t\t\t\t\tif (pow === 1) {\n\t\t\t\t\t\tr *= r;\n\t\t\t\t\t} else if (pow === 2) {\n\t\t\t\t\t\tr *= r * r;\n\t\t\t\t\t} else if (pow === 3) {\n\t\t\t\t\t\tr *= r * r * r;\n\t\t\t\t\t} else if (pow === 4) {\n\t\t\t\t\t\tr *= r * r * r * r;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (type === 1) {\n\t\t\t\t\t\tthis.ratio = 1 - r;\n\t\t\t\t\t} else if (type === 2) {\n\t\t\t\t\t\tthis.ratio = r;\n\t\t\t\t\t} else if (time / duration < 0.5) {\n\t\t\t\t\t\tthis.ratio = r / 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.ratio = 1 - (r / 2);\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.ratio = this._ease.getRatio(time / duration);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._time === prevTime && !force) {\n\t\t\t\treturn;\n\t\t\t} else if (!this._initted) {\n\t\t\t\tthis._init();\n\t\t\t\tif (!this._initted || this._gc) { //immediateRender tweens typically won't initialize until the playhead advances (_time is greater than 0) in order to ensure that overwriting occurs properly. Also, if all of the tweening properties have been overwritten (which would cause _gc to be true, as set in _init()), we shouldn't continue otherwise an onStart callback could be called for example.\n\t\t\t\t\treturn;\n\t\t\t\t} else if (!force && this._firstPT && ((this.vars.lazy !== false && this._duration) || (this.vars.lazy && !this._duration))) {\n\t\t\t\t\tthis._time = this._totalTime = prevTime;\n\t\t\t\t\tthis._rawPrevTime = prevRawPrevTime;\n\t\t\t\t\t_lazyTweens.push(this);\n\t\t\t\t\tthis._lazy = time;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//_ease is initially set to defaultEase, so now that init() has run, _ease is set properly and we need to recalculate the ratio. Overall this is faster than using conditional logic earlier in the method to avoid having to set ratio twice because we only init() once but renderTime() gets called VERY frequently.\n\t\t\t\tif (this._time && !isComplete) {\n\t\t\t\t\tthis.ratio = this._ease.getRatio(this._time / duration);\n\t\t\t\t} else if (isComplete && this._ease._calcEnd) {\n\t\t\t\t\tthis.ratio = this._ease.getRatio((this._time === 0) ? 0 : 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._lazy !== false) { //in case a lazy render is pending, we should flush it because the new render is occuring now (imagine a lazy tween instantiating and then immediately the user calls tween.seek(tween.duration()), skipping to the end - the end render would be forced, and then if we didn't flush the lazy render, it'd fire AFTER the seek(), rendering it at the wrong time.\n\t\t\t\tthis._lazy = false;\n\t\t\t}\n\t\t\tif (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n\t\t\t\tthis._active = true;  //so that if the user renders a tween (as opposed to the timeline rendering it), the timeline is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the tween already finished but the user manually re-renders it as halfway done.\n\t\t\t}\n\t\t\tif (prevTime === 0) {\n\t\t\t\tif (this._startAt) {\n\t\t\t\t\tif (time >= 0) {\n\t\t\t\t\t\tthis._startAt.render(time, suppressEvents, force);\n\t\t\t\t\t} else if (!callback) {\n\t\t\t\t\t\tcallback = \"_dummyGS\"; //if no callback is defined, use a dummy value just so that the condition at the end evaluates as true because _startAt should render AFTER the normal render loop when the time is negative. We could handle this in a more intuitive way, of course, but the render loop is the MOST important thing to optimize, so this technique allows us to avoid adding extra conditional logic in a high-frequency area.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.vars.onStart) if (this._time !== 0 || duration === 0) if (!suppressEvents) {\n\t\t\t\t\tthis.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || _blankArray);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpt = this._firstPT;\n\t\t\twhile (pt) {\n\t\t\t\tif (pt.f) {\n\t\t\t\t\tpt.t[pt.p](pt.c * this.ratio + pt.s);\n\t\t\t\t} else {\n\t\t\t\t\tpt.t[pt.p] = pt.c * this.ratio + pt.s;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\n\t\t\tif (this._onUpdate) {\n\t\t\t\tif (time < 0) if (this._startAt && this._startTime) { //if the tween is positioned at the VERY beginning (_startTime 0) of its parent timeline, it's illegal for the playhead to go back further, so we should not render the recorded startAt values.\n\t\t\t\t\tthis._startAt.render(time, suppressEvents, force); //note: for performance reasons, we tuck this conditional logic inside less traveled areas (most tweens don't have an onUpdate). We'd just have it at the end before the onComplete, but the values should be updated before any onUpdate is called, so we ALSO put it here and then if it's not called, we do so later near the onComplete.\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents) if (this._time !== prevTime || isComplete) {\n\t\t\t\t\tthis._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || _blankArray);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (callback) if (!this._gc) { //check _gc because there's a chance that kill() could be called in an onUpdate\n\t\t\t\tif (time < 0 && this._startAt && !this._onUpdate && this._startTime) { //if the tween is positioned at the VERY beginning (_startTime 0) of its parent timeline, it's illegal for the playhead to go back further, so we should not render the recorded startAt values.\n\t\t\t\t\tthis._startAt.render(time, suppressEvents, force);\n\t\t\t\t}\n\t\t\t\tif (isComplete) {\n\t\t\t\t\tif (this._timeline.autoRemoveChildren) {\n\t\t\t\t\t\tthis._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis._active = false;\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents && this.vars[callback]) {\n\t\t\t\t\tthis.vars[callback].apply(this.vars[callback + \"Scope\"] || this, this.vars[callback + \"Params\"] || _blankArray);\n\t\t\t\t}\n\t\t\t\tif (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) { //the onComplete or onReverseComplete could trigger movement of the playhead and for zero-duration tweens (which must discern direction) that land directly back on their start time, we don't want to fire again on the next render. Think of several addPause()'s in a timeline that forces the playhead to a certain spot, but what if it's already paused and another tween is tweening the \"time\" of the timeline? Each time it moves [forward] past that spot, it would move back, and since suppressEvents is true, it'd reset _rawPrevTime to _tinyNum so that when it begins again, the callback would fire (so ultimately it could bounce back and forth during that tween). Again, this is a very uncommon scenario, but possible nonetheless.\n\t\t\t\t\tthis._rawPrevTime = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t\tp._kill = function(vars, target) {\n\t\t\tif (vars === \"all\") {\n\t\t\t\tvars = null;\n\t\t\t}\n\t\t\tif (vars == null) if (target == null || target === this.target) {\n\t\t\t\tthis._lazy = false;\n\t\t\t\treturn this._enabled(false, false);\n\t\t\t}\n\t\t\ttarget = (typeof(target) !== \"string\") ? (target || this._targets || this.target) : TweenLite.selector(target) || target;\n\t\t\tvar i, overwrittenProps, p, pt, propLookup, changed, killProps, record;\n\t\t\tif ((_isArray(target) || _isSelector(target)) && typeof(target[0]) !== \"number\") {\n\t\t\t\ti = target.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (this._kill(vars, target[i])) {\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._targets) {\n\t\t\t\t\ti = this._targets.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (target === this._targets[i]) {\n\t\t\t\t\t\t\tpropLookup = this._propLookup[i] || {};\n\t\t\t\t\t\t\tthis._overwrittenProps = this._overwrittenProps || [];\n\t\t\t\t\t\t\toverwrittenProps = this._overwrittenProps[i] = vars ? this._overwrittenProps[i] || {} : \"all\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (target !== this.target) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tpropLookup = this._propLookup;\n\t\t\t\t\toverwrittenProps = this._overwrittenProps = vars ? this._overwrittenProps || {} : \"all\";\n\t\t\t\t}\n\n\t\t\t\tif (propLookup) {\n\t\t\t\t\tkillProps = vars || propLookup;\n\t\t\t\t\trecord = (vars !== overwrittenProps && overwrittenProps !== \"all\" && vars !== propLookup && (typeof(vars) !== \"object\" || !vars._tempKill)); //_tempKill is a super-secret way to delete a particular tweening property but NOT have it remembered as an official overwritten property (like in BezierPlugin)\n\t\t\t\t\tfor (p in killProps) {\n\t\t\t\t\t\tif ((pt = propLookup[p])) {\n\t\t\t\t\t\t\tif (pt.pg && pt.t._kill(killProps)) {\n\t\t\t\t\t\t\t\tchanged = true; //some plugins need to be notified so they can perform cleanup tasks first\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!pt.pg || pt.t._overwriteProps.length === 0) {\n\t\t\t\t\t\t\t\tif (pt._prev) {\n\t\t\t\t\t\t\t\t\tpt._prev._next = pt._next;\n\t\t\t\t\t\t\t\t} else if (pt === this._firstPT) {\n\t\t\t\t\t\t\t\t\tthis._firstPT = pt._next;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (pt._next) {\n\t\t\t\t\t\t\t\t\tpt._next._prev = pt._prev;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpt._next = pt._prev = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete propLookup[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (record) {\n\t\t\t\t\t\t\toverwrittenProps[p] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!this._firstPT && this._initted) { //if all tweening properties are killed, kill the tween. Without this line, if there's a tween with multiple targets and then you killTweensOf() each target individually, the tween would technically still remain active and fire its onComplete even though there aren't any more properties tweening.\n\t\t\t\t\t\tthis._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn changed;\n\t\t};\n\n\t\tp.invalidate = function() {\n\t\t\tif (this._notifyPluginsOfEnabled) {\n\t\t\t\tTweenLite._onPluginEvent(\"_onDisable\", this);\n\t\t\t}\n\t\t\tthis._firstPT = null;\n\t\t\tthis._overwrittenProps = null;\n\t\t\tthis._onUpdate = null;\n\t\t\tthis._startAt = null;\n\t\t\tthis._initted = this._active = this._notifyPluginsOfEnabled = this._lazy = false;\n\t\t\tthis._propLookup = (this._targets) ? {} : [];\n\t\t\treturn this;\n\t\t};\n\n\t\tp._enabled = function(enabled, ignoreTimeline) {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\tif (enabled && this._gc) {\n\t\t\t\tvar targets = this._targets,\n\t\t\t\t\ti;\n\t\t\t\tif (targets) {\n\t\t\t\t\ti = targets.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tthis._siblings[i] = _register(targets[i], this, true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._siblings = _register(this.target, this, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tAnimation.prototype._enabled.call(this, enabled, ignoreTimeline);\n\t\t\tif (this._notifyPluginsOfEnabled) if (this._firstPT) {\n\t\t\t\treturn TweenLite._onPluginEvent((enabled ? \"_onEnable\" : \"_onDisable\"), this);\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\n//----TweenLite static methods -----------------------------------------------------\n\n\t\tTweenLite.to = function(target, duration, vars) {\n\t\t\treturn new TweenLite(target, duration, vars);\n\t\t};\n\n\t\tTweenLite.from = function(target, duration, vars) {\n\t\t\tvars.runBackwards = true;\n\t\t\tvars.immediateRender = (vars.immediateRender != false);\n\t\t\treturn new TweenLite(target, duration, vars);\n\t\t};\n\n\t\tTweenLite.fromTo = function(target, duration, fromVars, toVars) {\n\t\t\ttoVars.startAt = fromVars;\n\t\t\ttoVars.immediateRender = (toVars.immediateRender != false && fromVars.immediateRender != false);\n\t\t\treturn new TweenLite(target, duration, toVars);\n\t\t};\n\n\t\tTweenLite.delayedCall = function(delay, callback, params, scope, useFrames) {\n\t\t\treturn new TweenLite(callback, 0, {delay:delay, onComplete:callback, onCompleteParams:params, onCompleteScope:scope, onReverseComplete:callback, onReverseCompleteParams:params, onReverseCompleteScope:scope, immediateRender:false, useFrames:useFrames, overwrite:0});\n\t\t};\n\n\t\tTweenLite.set = function(target, vars) {\n\t\t\treturn new TweenLite(target, 0, vars);\n\t\t};\n\n\t\tTweenLite.getTweensOf = function(target, onlyActive) {\n\t\t\tif (target == null) { return []; }\n\t\t\ttarget = (typeof(target) !== \"string\") ? target : TweenLite.selector(target) || target;\n\t\t\tvar i, a, j, t;\n\t\t\tif ((_isArray(target) || _isSelector(target)) && typeof(target[0]) !== \"number\") {\n\t\t\t\ti = target.length;\n\t\t\t\ta = [];\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\ta = a.concat(TweenLite.getTweensOf(target[i], onlyActive));\n\t\t\t\t}\n\t\t\t\ti = a.length;\n\t\t\t\t//now get rid of any duplicates (tweens of arrays of objects could cause duplicates)\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tt = a[i];\n\t\t\t\t\tj = i;\n\t\t\t\t\twhile (--j > -1) {\n\t\t\t\t\t\tif (t === a[j]) {\n\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ta = _register(target).concat();\n\t\t\t\ti = a.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (a[i]._gc || (onlyActive && !a[i].isActive())) {\n\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\t\tTweenLite.killTweensOf = TweenLite.killDelayedCallsTo = function(target, onlyActive, vars) {\n\t\t\tif (typeof(onlyActive) === \"object\") {\n\t\t\t\tvars = onlyActive; //for backwards compatibility (before \"onlyActive\" parameter was inserted)\n\t\t\t\tonlyActive = false;\n\t\t\t}\n\t\t\tvar a = TweenLite.getTweensOf(target, onlyActive),\n\t\t\t\ti = a.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\ta[i]._kill(vars, target);\n\t\t\t}\n\t\t};\n\n\n\n/*\n * ----------------------------------------------------------------\n * TweenPlugin   (could easily be split out as a separate file/class, but included for ease of use (so that people don't need to include another <script> call before loading plugins which is easy to forget)\n * ----------------------------------------------------------------\n */\n\t\tvar TweenPlugin = _class(\"plugins.TweenPlugin\", function(props, priority) {\n\t\t\t\t\tthis._overwriteProps = (props || \"\").split(\",\");\n\t\t\t\t\tthis._propName = this._overwriteProps[0];\n\t\t\t\t\tthis._priority = priority || 0;\n\t\t\t\t\tthis._super = TweenPlugin.prototype;\n\t\t\t\t}, true);\n\n\t\tp = TweenPlugin.prototype;\n\t\tTweenPlugin.version = \"1.10.1\";\n\t\tTweenPlugin.API = 2;\n\t\tp._firstPT = null;\n\n\t\tp._addTween = function(target, prop, start, end, overwriteProp, round) {\n\t\t\tvar c, pt;\n\t\t\tif (end != null && (c = (typeof(end) === \"number\" || end.charAt(1) !== \"=\") ? Number(end) - start : parseInt(end.charAt(0) + \"1\", 10) * Number(end.substr(2)))) {\n\t\t\t\tthis._firstPT = pt = {_next:this._firstPT, t:target, p:prop, s:start, c:c, f:(typeof(target[prop]) === \"function\"), n:overwriteProp || prop, r:round};\n\t\t\t\tif (pt._next) {\n\t\t\t\t\tpt._next._prev = pt;\n\t\t\t\t}\n\t\t\t\treturn pt;\n\t\t\t}\n\t\t};\n\n\t\tp.setRatio = function(v) {\n\t\t\tvar pt = this._firstPT,\n\t\t\t\tmin = 0.000001,\n\t\t\t\tval;\n\t\t\twhile (pt) {\n\t\t\t\tval = pt.c * v + pt.s;\n\t\t\t\tif (pt.r) {\n\t\t\t\t\tval = Math.round(val);\n\t\t\t\t} else if (val < min) if (val > -min) { //prevents issues with converting very small numbers to strings in the browser\n\t\t\t\t\tval = 0;\n\t\t\t\t}\n\t\t\t\tif (pt.f) {\n\t\t\t\t\tpt.t[pt.p](val);\n\t\t\t\t} else {\n\t\t\t\t\tpt.t[pt.p] = val;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t};\n\n\t\tp._kill = function(lookup) {\n\t\t\tvar a = this._overwriteProps,\n\t\t\t\tpt = this._firstPT,\n\t\t\t\ti;\n\t\t\tif (lookup[this._propName] != null) {\n\t\t\t\tthis._overwriteProps = [];\n\t\t\t} else {\n\t\t\t\ti = a.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (lookup[a[i]] != null) {\n\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (pt) {\n\t\t\t\tif (lookup[pt.n] != null) {\n\t\t\t\t\tif (pt._next) {\n\t\t\t\t\t\tpt._next._prev = pt._prev;\n\t\t\t\t\t}\n\t\t\t\t\tif (pt._prev) {\n\t\t\t\t\t\tpt._prev._next = pt._next;\n\t\t\t\t\t\tpt._prev = null;\n\t\t\t\t\t} else if (this._firstPT === pt) {\n\t\t\t\t\t\tthis._firstPT = pt._next;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tp._roundProps = function(lookup, value) {\n\t\t\tvar pt = this._firstPT;\n\t\t\twhile (pt) {\n\t\t\t\tif (lookup[this._propName] || (pt.n != null && lookup[ pt.n.split(this._propName + \"_\").join(\"\") ])) { //some properties that are very plugin-specific add a prefix named after the _propName plus an underscore, so we need to ignore that extra stuff here.\n\t\t\t\t\tpt.r = value;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t};\n\n\t\tTweenLite._onPluginEvent = function(type, tween) {\n\t\t\tvar pt = tween._firstPT,\n\t\t\t\tchanged, pt2, first, last, next;\n\t\t\tif (type === \"_onInitAllProps\") {\n\t\t\t\t//sorts the PropTween linked list in order of priority because some plugins need to render earlier/later than others, like MotionBlurPlugin applies its effects after all x/y/alpha tweens have rendered on each frame.\n\t\t\t\twhile (pt) {\n\t\t\t\t\tnext = pt._next;\n\t\t\t\t\tpt2 = first;\n\t\t\t\t\twhile (pt2 && pt2.pr > pt.pr) {\n\t\t\t\t\t\tpt2 = pt2._next;\n\t\t\t\t\t}\n\t\t\t\t\tif ((pt._prev = pt2 ? pt2._prev : last)) {\n\t\t\t\t\t\tpt._prev._next = pt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfirst = pt;\n\t\t\t\t\t}\n\t\t\t\t\tif ((pt._next = pt2)) {\n\t\t\t\t\t\tpt2._prev = pt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlast = pt;\n\t\t\t\t\t}\n\t\t\t\t\tpt = next;\n\t\t\t\t}\n\t\t\t\tpt = tween._firstPT = first;\n\t\t\t}\n\t\t\twhile (pt) {\n\t\t\t\tif (pt.pg) if (typeof(pt.t[type]) === \"function\") if (pt.t[type]()) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t\treturn changed;\n\t\t};\n\n\t\tTweenPlugin.activate = function(plugins) {\n\t\t\tvar i = plugins.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (plugins[i].API === TweenPlugin.API) {\n\t\t\t\t\t_plugins[(new plugins[i]())._propName] = plugins[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\t//provides a more concise way to define plugins that have no dependencies besides TweenPlugin and TweenLite, wrapping common boilerplate stuff into one function (added in 1.9.0). You don't NEED to use this to define a plugin - the old way still works and can be useful in certain (rare) situations.\n\t\t_gsDefine.plugin = function(config) {\n\t\t\tif (!config || !config.propName || !config.init || !config.API) { throw \"illegal plugin definition.\"; }\n\t\t\tvar propName = config.propName,\n\t\t\t\tpriority = config.priority || 0,\n\t\t\t\toverwriteProps = config.overwriteProps,\n\t\t\t\tmap = {init:\"_onInitTween\", set:\"setRatio\", kill:\"_kill\", round:\"_roundProps\", initAll:\"_onInitAllProps\"},\n\t\t\t\tPlugin = _class(\"plugins.\" + propName.charAt(0).toUpperCase() + propName.substr(1) + \"Plugin\",\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tTweenPlugin.call(this, propName, priority);\n\t\t\t\t\t\tthis._overwriteProps = overwriteProps || [];\n\t\t\t\t\t}, (config.global === true)),\n\t\t\t\tp = Plugin.prototype = new TweenPlugin(propName),\n\t\t\t\tprop;\n\t\t\tp.constructor = Plugin;\n\t\t\tPlugin.API = config.API;\n\t\t\tfor (prop in map) {\n\t\t\t\tif (typeof(config[prop]) === \"function\") {\n\t\t\t\t\tp[map[prop]] = config[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t\tPlugin.version = config.version;\n\t\t\tTweenPlugin.activate([Plugin]);\n\t\t\treturn Plugin;\n\t\t};\n\n\n\t\t//now run through all the dependencies discovered and if any are missing, log that to the console as a warning. This is why it's best to have TweenLite load last - it can check all the dependencies for you.\n\t\ta = window._gsQueue;\n\t\tif (a) {\n\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\ta[i]();\n\t\t\t}\n\t\t\tfor (p in _defLookup) {\n\t\t\t\tif (!_defLookup[p].func) {\n\t\t\t\t\twindow.console.log(\"GSAP encountered missing dependency: com.greensock.\" + p);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_tickerActive = false; //ensures that the first official animation forces a ticker.tick() to update the time when it is instantiated\n\n})(window);\ndefine(\"TweenMax\", function(){});\n\n",
    "/*!\n * VERSION: 1.12.1\n * DATE: 2014-06-26\n * UPDATES AND DOCS AT: http://www.greensock.com\n *\n * @license Copyright (c) 2008-2014, GreenSock. All rights reserved.\n * This work is subject to the terms at http://www.greensock.com/terms_of_use.html or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n */\n\t\n(window._gsQueue || (window._gsQueue = [])).push( function() {\n\n\t\"use strict\";\n\n\twindow._gsDefine(\"TimelineMax\", [\"TimelineLite\",\"TweenLite\",\"easing.Ease\"], function(TimelineLite, TweenLite, Ease) {\n\t\t\n\t\tvar TimelineMax = function(vars) {\n\t\t\t\tTimelineLite.call(this, vars);\n\t\t\t\tthis._repeat = this.vars.repeat || 0;\n\t\t\t\tthis._repeatDelay = this.vars.repeatDelay || 0;\n\t\t\t\tthis._cycle = 0;\n\t\t\t\tthis._yoyo = (this.vars.yoyo === true);\n\t\t\t\tthis._dirty = true;\n\t\t\t},\n\t\t\t_tinyNum = 0.0000000001,\n\t\t\t_blankArray = [],\n\t\t\t_easeNone = new Ease(null, null, 1, 0),\n\t\t\tp = TimelineMax.prototype = new TimelineLite();\n\t\t\t\n\t\tp.constructor = TimelineMax;\n\t\tp.kill()._gc = false;\n\t\tTimelineMax.version = \"1.12.1\";\n\t\t\n\t\tp.invalidate = function() {\n\t\t\tthis._yoyo = (this.vars.yoyo === true);\n\t\t\tthis._repeat = this.vars.repeat || 0;\n\t\t\tthis._repeatDelay = this.vars.repeatDelay || 0;\n\t\t\tthis._uncache(true);\n\t\t\treturn TimelineLite.prototype.invalidate.call(this);\n\t\t};\n\t\t\n\t\tp.addCallback = function(callback, position, params, scope) {\n\t\t\treturn this.add( TweenLite.delayedCall(0, callback, params, scope), position);\n\t\t};\n\t\t\n\t\tp.removeCallback = function(callback, position) {\n\t\t\tif (callback) {\n\t\t\t\tif (position == null) {\n\t\t\t\t\tthis._kill(null, callback);\n\t\t\t\t} else {\n\t\t\t\t\tvar a = this.getTweensOf(callback, false),\n\t\t\t\t\t\ti = a.length,\n\t\t\t\t\t\ttime = this._parseTimeOrLabel(position);\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (a[i]._startTime === time) {\n\t\t\t\t\t\t\ta[i]._enabled(false, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\tp.tweenTo = function(position, vars) {\n\t\t\tvars = vars || {};\n\t\t\tvar copy = {ease:_easeNone, overwrite:(vars.delay ? 2 : 1), useFrames:this.usesFrames(), immediateRender:false},//note: set overwrite to 1 (true/all) by default unless there's a delay so that we avoid a racing situation that could happen if, for example, an onmousemove creates the same tweenTo() over and over again.\n\t\t\t\tduration, p, t;\n\t\t\tfor (p in vars) {\n\t\t\t\tcopy[p] = vars[p];\n\t\t\t}\n\t\t\tcopy.time = this._parseTimeOrLabel(position);\n\t\t\tduration = (Math.abs(Number(copy.time) - this._time) / this._timeScale) || 0.001;\n\t\t\tt = new TweenLite(this, duration, copy);\n\t\t\tcopy.onStart = function() {\n\t\t\t\tt.target.paused(true);\n\t\t\t\tif (t.vars.time !== t.target.time() && duration === t.duration()) { //don't make the duration zero - if it's supposed to be zero, don't worry because it's already initting the tween and will complete immediately, effectively making the duration zero anyway. If we make duration zero, the tween won't run at all.\n\t\t\t\t\tt.duration( Math.abs( t.vars.time - t.target.time()) / t.target._timeScale );\n\t\t\t\t}\n\t\t\t\tif (vars.onStart) { //in case the user had an onStart in the vars - we don't want to overwrite it.\n\t\t\t\t\tvars.onStart.apply(vars.onStartScope || t, vars.onStartParams || _blankArray);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn t;\n\t\t};\n\t\t\n\t\tp.tweenFromTo = function(fromPosition, toPosition, vars) {\n\t\t\tvars = vars || {};\n\t\t\tfromPosition = this._parseTimeOrLabel(fromPosition);\n\t\t\tvars.startAt = {onComplete:this.seek, onCompleteParams:[fromPosition], onCompleteScope:this};\n\t\t\tvars.immediateRender = (vars.immediateRender !== false);\n\t\t\tvar t = this.tweenTo(toPosition, vars);\n\t\t\treturn t.duration((Math.abs( t.vars.time - fromPosition) / this._timeScale) || 0.001);\n\t\t};\n\t\t\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tif (this._gc) {\n\t\t\t\tthis._enabled(true, false);\n\t\t\t}\n\t\t\tvar totalDur = (!this._dirty) ? this._totalDuration : this.totalDuration(),\n\t\t\t\tdur = this._duration,\n\t\t\t\tprevTime = this._time, \n\t\t\t\tprevTotalTime = this._totalTime, \n\t\t\t\tprevStart = this._startTime, \n\t\t\t\tprevTimeScale = this._timeScale, \n\t\t\t\tprevRawPrevTime = this._rawPrevTime,\n\t\t\t\tprevPaused = this._paused, \n\t\t\t\tprevCycle = this._cycle, \n\t\t\t\ttween, isComplete, next, callback, internalForce, cycleDuration;\n\t\t\tif (time >= totalDur) {\n\t\t\t\tif (!this._locked) {\n\t\t\t\t\tthis._totalTime = totalDur;\n\t\t\t\t\tthis._cycle = this._repeat;\n\t\t\t\t}\n\t\t\t\tif (!this._reversed) if (!this._hasPausedChild()) {\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\tcallback = \"onComplete\";\n\t\t\t\t\tif (this._duration === 0) if (time === 0 || prevRawPrevTime < 0 || prevRawPrevTime === _tinyNum) if (prevRawPrevTime !== time && this._first) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t\tif (prevRawPrevTime > _tinyNum) {\n\t\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._rawPrevTime = (this._duration || !suppressEvents || time || this._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\tif (this._yoyo && (this._cycle & 1) !== 0) {\n\t\t\t\t\tthis._time = time = 0;\n\t\t\t\t} else {\n\t\t\t\t\tthis._time = dur;\n\t\t\t\t\ttime = dur + 0.0001; //to avoid occasional floating point rounding errors - sometimes child tweens/timelines were not being fully completed (their progress might be 0.999999999999998 instead of 1 because when _time - tween._startTime is performed, floating point errors would return a value that was SLIGHTLY off). Try (999999999999.7 - 999999999999) * 1 = 0.699951171875 instead of 0.7. We cannot do less then 0.0001 because the same issue can occur when the duration is extremely large like 999999999999 in which case adding 0.00000001, for example, causes it to act like nothing was added.\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (time < 0.0000001) { //to work around occasional floating point math artifacts, round super small values to 0.\n\t\t\t\tif (!this._locked) {\n\t\t\t\t\tthis._totalTime = this._cycle = 0;\n\t\t\t\t}\n\t\t\t\tthis._time = 0;\n\t\t\t\tif (prevTime !== 0 || (dur === 0 && prevRawPrevTime !== _tinyNum && (prevRawPrevTime > 0 || (time < 0 && prevRawPrevTime >= 0)) && !this._locked)) { //edge case for checking time < 0 && prevRawPrevTime >= 0: a zero-duration fromTo() tween inside a zero-duration timeline (yeah, very rare)\n\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\tisComplete = this._reversed;\n\t\t\t\t}\n\t\t\t\tif (time < 0) {\n\t\t\t\t\tthis._active = false;\n\t\t\t\t\tif (dur === 0) if (prevRawPrevTime >= 0 && this._first) { //zero-duration timelines are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis._rawPrevTime = time;\n\t\t\t\t} else {\n\t\t\t\t\tthis._rawPrevTime = (dur || !suppressEvents || time || this._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t\ttime = 0; //to avoid occasional floating point rounding errors (could cause problems especially with zero-duration tweens at the very beginning of the timeline)\n\t\t\t\t\tif (!this._initted) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tif (dur === 0 && prevRawPrevTime < 0) { //without this, zero-duration repeating timelines (like with a simple callback nested at the very beginning and a repeatDelay) wouldn't render the first time through.\n\t\t\t\t\tinternalForce = true;\n\t\t\t\t}\n\t\t\t\tthis._time = this._rawPrevTime = time;\n\t\t\t\tif (!this._locked) {\n\t\t\t\t\tthis._totalTime = time;\n\t\t\t\t\tif (this._repeat !== 0) {\n\t\t\t\t\t\tcycleDuration = dur + this._repeatDelay;\n\t\t\t\t\t\tthis._cycle = (this._totalTime / cycleDuration) >> 0; //originally _totalTime % cycleDuration but floating point errors caused problems, so I normalized it. (4 % 0.8 should be 0 but it gets reported as 0.79999999!)\n\t\t\t\t\t\tif (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration) {\n\t\t\t\t\t\t\tthis._cycle--; //otherwise when rendered exactly at the end time, it will act as though it is repeating (at the beginning)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._time = this._totalTime - (this._cycle * cycleDuration);\n\t\t\t\t\t\tif (this._yoyo) if ((this._cycle & 1) !== 0) {\n\t\t\t\t\t\t\tthis._time = dur - this._time;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this._time > dur) {\n\t\t\t\t\t\t\tthis._time = dur;\n\t\t\t\t\t\t\ttime = dur + 0.0001; //to avoid occasional floating point rounding error\n\t\t\t\t\t\t} else if (this._time < 0) {\n\t\t\t\t\t\t\tthis._time = time = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttime = this._time;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (this._cycle !== prevCycle) if (!this._locked) {\n\t\t\t\t/*\n\t\t\t\tmake sure children at the end/beginning of the timeline are rendered properly. If, for example, \n\t\t\t\ta 3-second long timeline rendered at 2.9 seconds previously, and now renders at 3.2 seconds (which\n\t\t\t\twould get transated to 2.8 seconds if the timeline yoyos or 0.2 seconds if it just repeats), there\n\t\t\t\tcould be a callback or a short tween that's at 2.95 or 3 seconds in which wouldn't render. So \n\t\t\t\twe need to push the timeline to the end (and/or beginning depending on its yoyo value). Also we must\n\t\t\t\tensure that zero-duration tweens at the very beginning or end of the TimelineMax work. \n\t\t\t\t*/\n\t\t\t\tvar backwards = (this._yoyo && (prevCycle & 1) !== 0),\n\t\t\t\t\twrap = (backwards === (this._yoyo && (this._cycle & 1) !== 0)),\n\t\t\t\t\trecTotalTime = this._totalTime,\n\t\t\t\t\trecCycle = this._cycle,\n\t\t\t\t\trecRawPrevTime = this._rawPrevTime,\n\t\t\t\t\trecTime = this._time;\n\t\t\t\t\n\t\t\t\tthis._totalTime = prevCycle * dur;\n\t\t\t\tif (this._cycle < prevCycle) {\n\t\t\t\t\tbackwards = !backwards;\n\t\t\t\t} else {\n\t\t\t\t\tthis._totalTime += dur;\n\t\t\t\t}\n\t\t\t\tthis._time = prevTime; //temporarily revert _time so that render() renders the children in the correct order. Without this, tweens won't rewind correctly. We could arhictect things in a \"cleaner\" way by splitting out the rendering queue into a separate method but for performance reasons, we kept it all inside this method.\n\t\t\t\t\n\t\t\t\tthis._rawPrevTime = (dur === 0) ? prevRawPrevTime - 0.0001 : prevRawPrevTime;\n\t\t\t\tthis._cycle = prevCycle;\n\t\t\t\tthis._locked = true; //prevents changes to totalTime and skips repeat/yoyo behavior when we recursively call render()\n\t\t\t\tprevTime = (backwards) ? 0 : dur;\n\t\t\t\tthis.render(prevTime, suppressEvents, (dur === 0));\n\t\t\t\tif (!suppressEvents) if (!this._gc) {\n\t\t\t\t\tif (this.vars.onRepeat) {\n\t\t\t\t\t\tthis.vars.onRepeat.apply(this.vars.onRepeatScope || this, this.vars.onRepeatParams || _blankArray);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (wrap) {\n\t\t\t\t\tprevTime = (backwards) ? dur + 0.0001 : -0.0001;\n\t\t\t\t\tthis.render(prevTime, true, false);\n\t\t\t\t}\n\t\t\t\tthis._locked = false;\n\t\t\t\tif (this._paused && !prevPaused) { //if the render() triggered callback that paused this timeline, we should abort (very rare, but possible)\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._time = recTime;\n\t\t\t\tthis._totalTime = recTotalTime;\n\t\t\t\tthis._cycle = recCycle;\n\t\t\t\tthis._rawPrevTime = recRawPrevTime;\n\t\t\t}\n\n\t\t\tif ((this._time === prevTime || !this._first) && !force && !internalForce) {\n\t\t\t\tif (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) { //so that onUpdate fires even during the repeatDelay - as long as the totalTime changed, we should trigger onUpdate.\n\t\t\t\t\tthis._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || _blankArray);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} else if (!this._initted) {\n\t\t\t\tthis._initted = true;\n\t\t\t}\n\n\t\t\tif (!this._active) if (!this._paused && this._totalTime !== prevTotalTime && time > 0) {\n\t\t\t\tthis._active = true;  //so that if the user renders the timeline (as opposed to the parent timeline rendering it), it is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the timeline already finished but the user manually re-renders it as halfway done, for example.\n\t\t\t}\n\t\t\t\n\t\t\tif (prevTotalTime === 0) if (this.vars.onStart) if (this._totalTime !== 0) if (!suppressEvents) {\n\t\t\t\tthis.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || _blankArray);\n\t\t\t}\n\n\t\t\tif (this._time >= prevTime) {\n\t\t\t\ttween = this._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._next; //record it here because the value could change after rendering...\n\t\t\t\t\tif (this._paused && !prevPaused) { //in case a tween pauses the timeline when rendering\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= this._time && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttween = this._last;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._prev; //record it here because the value could change after rendering...\n\t\t\t\t\tif (this._paused && !prevPaused) { //in case a tween pauses the timeline when rendering\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= prevTime && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (this._onUpdate) if (!suppressEvents) {\n\t\t\t\tthis._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || _blankArray);\n\t\t\t}\n\t\t\tif (callback) if (!this._locked) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) { //if one of the tweens that was rendered altered this timeline's startTime (like if an onComplete reversed the timeline), it probably isn't complete. If it is, don't worry, because whatever call altered the startTime would complete if it was necessary at the new time. The only exception is the timeScale property. Also check _gc because there's a chance that kill() could be called in an onUpdate\n\t\t\t\tif (isComplete) {\n\t\t\t\t\tif (this._timeline.autoRemoveChildren) {\n\t\t\t\t\t\tthis._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis._active = false;\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents && this.vars[callback]) {\n\t\t\t\t\tthis.vars[callback].apply(this.vars[callback + \"Scope\"] || this, this.vars[callback + \"Params\"] || _blankArray);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tp.getActive = function(nested, tweens, timelines) {\n\t\t\tif (nested == null) {\n\t\t\t\tnested = true;\n\t\t\t}\n\t\t\tif (tweens == null) {\n\t\t\t\ttweens = true;\n\t\t\t}\n\t\t\tif (timelines == null) {\n\t\t\t\ttimelines = false;\n\t\t\t}\n\t\t\tvar a = [], \n\t\t\t\tall = this.getChildren(nested, tweens, timelines), \n\t\t\t\tcnt = 0, \n\t\t\t\tl = all.length,\n\t\t\t\ti, tween;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\ttween = all[i];\n\t\t\t\tif (tween.isActive()) {\n\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\t\t\n\t\t\n\t\tp.getLabelAfter = function(time) {\n\t\t\tif (!time) if (time !== 0) { //faster than isNan()\n\t\t\t\ttime = this._time;\n\t\t\t}\n\t\t\tvar labels = this.getLabelsArray(),\n\t\t\t\tl = labels.length,\n\t\t\t\ti;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tif (labels[i].time > time) {\n\t\t\t\t\treturn labels[i].name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\t\n\t\tp.getLabelBefore = function(time) {\n\t\t\tif (time == null) {\n\t\t\t\ttime = this._time;\n\t\t\t}\n\t\t\tvar labels = this.getLabelsArray(),\n\t\t\t\ti = labels.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (labels[i].time < time) {\n\t\t\t\t\treturn labels[i].name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\t\n\t\tp.getLabelsArray = function() {\n\t\t\tvar a = [],\n\t\t\t\tcnt = 0,\n\t\t\t\tp;\n\t\t\tfor (p in this._labels) {\n\t\t\t\ta[cnt++] = {time:this._labels[p], name:p};\n\t\t\t}\n\t\t\ta.sort(function(a,b) {\n\t\t\t\treturn a.time - b.time;\n\t\t\t});\n\t\t\treturn a;\n\t\t};\n\t\t\n\t\t\n//---- GETTERS / SETTERS -------------------------------------------------------------------------------------------------------\n\t\t\n\t\tp.progress = function(value) {\n\t\t\treturn (!arguments.length) ? this._time / this.duration() : this.totalTime( this.duration() * ((this._yoyo && (this._cycle & 1) !== 0) ? 1 - value : value) + (this._cycle * (this._duration + this._repeatDelay)), false);\n\t\t};\n\t\t\n\t\tp.totalProgress = function(value) {\n\t\t\treturn (!arguments.length) ? this._totalTime / this.totalDuration() : this.totalTime( this.totalDuration() * value, false);\n\t\t};\n\n\t\tp.totalDuration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tif (this._dirty) {\n\t\t\t\t\tTimelineLite.prototype.totalDuration.call(this); //just forces refresh\n\t\t\t\t\t//Instead of Infinity, we use 999999999999 so that we can accommodate reverses.\n\t\t\t\t\tthis._totalDuration = (this._repeat === -1) ? 999999999999 : this._duration * (this._repeat + 1) + (this._repeatDelay * this._repeat);\n\t\t\t\t}\n\t\t\t\treturn this._totalDuration;\n\t\t\t}\n\t\t\treturn (this._repeat === -1) ? this : this.duration( (value - (this._repeat * this._repeatDelay)) / (this._repeat + 1) );\n\t\t};\n\t\t\n\t\tp.time = function(value, suppressEvents) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._time;\n\t\t\t}\n\t\t\tif (this._dirty) {\n\t\t\t\tthis.totalDuration();\n\t\t\t}\n\t\t\tif (value > this._duration) {\n\t\t\t\tvalue = this._duration;\n\t\t\t}\n\t\t\tif (this._yoyo && (this._cycle & 1) !== 0) {\n\t\t\t\tvalue = (this._duration - value) + (this._cycle * (this._duration + this._repeatDelay));\n\t\t\t} else if (this._repeat !== 0) {\n\t\t\t\tvalue += this._cycle * (this._duration + this._repeatDelay);\n\t\t\t}\n\t\t\treturn this.totalTime(value, suppressEvents);\n\t\t};\n\t\t\n\t\tp.repeat = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._repeat;\n\t\t\t}\n\t\t\tthis._repeat = value;\n\t\t\treturn this._uncache(true);\n\t\t};\n\t\t\n\t\tp.repeatDelay = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._repeatDelay;\n\t\t\t}\n\t\t\tthis._repeatDelay = value;\n\t\t\treturn this._uncache(true);\n\t\t};\n\t\t\n\t\tp.yoyo = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._yoyo;\n\t\t\t}\n\t\t\tthis._yoyo = value;\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\tp.currentLabel = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this.getLabelBefore(this._time + 0.00000001);\n\t\t\t}\n\t\t\treturn this.seek(value, true);\n\t\t};\n\t\t\n\t\treturn TimelineMax;\n\t\t\n\t}, true);\n\n\n\n\n\n\n\n/*\n * ----------------------------------------------------------------\n * TimelineLite\n * ----------------------------------------------------------------\n */\n\n\twindow._gsDefine(\"TimelineLite\", [\"core.Animation\",\"core.SimpleTimeline\",\"TweenLite\"], function(Animation, SimpleTimeline, TweenLite) {\n\n\t\tvar TimelineLite = function(vars) {\n\t\t\t\tSimpleTimeline.call(this, vars);\n\t\t\t\tthis._labels = {};\n\t\t\t\tthis.autoRemoveChildren = (this.vars.autoRemoveChildren === true);\n\t\t\t\tthis.smoothChildTiming = (this.vars.smoothChildTiming === true);\n\t\t\t\tthis._sortChildren = true;\n\t\t\t\tthis._onUpdate = this.vars.onUpdate;\n\t\t\t\tvar v = this.vars,\n\t\t\t\t\tval, p;\n\t\t\t\tfor (p in v) {\n\t\t\t\t\tval = v[p];\n\t\t\t\t\tif (_isArray(val)) if (val.join(\"\").indexOf(\"{self}\") !== -1) {\n\t\t\t\t\t\tv[p] = this._swapSelfInParams(val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (_isArray(v.tweens)) {\n\t\t\t\t\tthis.add(v.tweens, 0, v.align, v.stagger);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_tinyNum = 0.0000000001,\n\t\t\t_isSelector = TweenLite._internals.isSelector,\n\t\t\t_isArray = TweenLite._internals.isArray,\n\t\t\t_blankArray = [],\n\t\t\t_globals = window._gsDefine.globals,\n\t\t\t_copy = function(vars) {\n\t\t\t\tvar copy = {}, p;\n\t\t\t\tfor (p in vars) {\n\t\t\t\t\tcopy[p] = vars[p];\n\t\t\t\t}\n\t\t\t\treturn copy;\n\t\t\t},\n\t\t\t_pauseCallback = function(tween, callback, params, scope) {\n\t\t\t\ttween._timeline.pause(tween._startTime);\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback.apply(scope || tween._timeline, params || _blankArray);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_slice = _blankArray.slice,\n\t\t\tp = TimelineLite.prototype = new SimpleTimeline();\n\n\t\tTimelineLite.version = \"1.12.1\";\n\t\tp.constructor = TimelineLite;\n\t\tp.kill()._gc = false;\n\n\t\tp.to = function(target, duration, vars, position) {\n\t\t\tvar Engine = (vars.repeat && _globals.TweenMax) || TweenLite;\n\t\t\treturn duration ? this.add( new Engine(target, duration, vars), position) : this.set(target, vars, position);\n\t\t};\n\n\t\tp.from = function(target, duration, vars, position) {\n\t\t\treturn this.add( ((vars.repeat && _globals.TweenMax) || TweenLite).from(target, duration, vars), position);\n\t\t};\n\n\t\tp.fromTo = function(target, duration, fromVars, toVars, position) {\n\t\t\tvar Engine = (toVars.repeat && _globals.TweenMax) || TweenLite;\n\t\t\treturn duration ? this.add( Engine.fromTo(target, duration, fromVars, toVars), position) : this.set(target, toVars, position);\n\t\t};\n\n\t\tp.staggerTo = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\tvar tl = new TimelineLite({onComplete:onCompleteAll, onCompleteParams:onCompleteAllParams, onCompleteScope:onCompleteAllScope, smoothChildTiming:this.smoothChildTiming}),\n\t\t\t\ti;\n\t\t\tif (typeof(targets) === \"string\") {\n\t\t\t\ttargets = TweenLite.selector(targets) || targets;\n\t\t\t}\n\t\t\tif (_isSelector(targets)) { //senses if the targets object is a selector. If it is, we should translate it into an array.\n\t\t\t\ttargets = _slice.call(targets, 0);\n\t\t\t}\n\t\t\tstagger = stagger || 0;\n\t\t\tfor (i = 0; i < targets.length; i++) {\n\t\t\t\tif (vars.startAt) {\n\t\t\t\t\tvars.startAt = _copy(vars.startAt);\n\t\t\t\t}\n\t\t\t\ttl.to(targets[i], duration, _copy(vars), i * stagger);\n\t\t\t}\n\t\t\treturn this.add(tl, position);\n\t\t};\n\n\t\tp.staggerFrom = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\tvars.immediateRender = (vars.immediateRender != false);\n\t\t\tvars.runBackwards = true;\n\t\t\treturn this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t\t};\n\n\t\tp.staggerFromTo = function(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\ttoVars.startAt = fromVars;\n\t\t\ttoVars.immediateRender = (toVars.immediateRender != false && fromVars.immediateRender != false);\n\t\t\treturn this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t\t};\n\n\t\tp.call = function(callback, params, scope, position) {\n\t\t\treturn this.add( TweenLite.delayedCall(0, callback, params, scope), position);\n\t\t};\n\n\t\tp.set = function(target, vars, position) {\n\t\t\tposition = this._parseTimeOrLabel(position, 0, true);\n\t\t\tif (vars.immediateRender == null) {\n\t\t\t\tvars.immediateRender = (position === this._time && !this._paused);\n\t\t\t}\n\t\t\treturn this.add( new TweenLite(target, 0, vars), position);\n\t\t};\n\n\t\tTimelineLite.exportRoot = function(vars, ignoreDelayedCalls) {\n\t\t\tvars = vars || {};\n\t\t\tif (vars.smoothChildTiming == null) {\n\t\t\t\tvars.smoothChildTiming = true;\n\t\t\t}\n\t\t\tvar tl = new TimelineLite(vars),\n\t\t\t\troot = tl._timeline,\n\t\t\t\ttween, next;\n\t\t\tif (ignoreDelayedCalls == null) {\n\t\t\t\tignoreDelayedCalls = true;\n\t\t\t}\n\t\t\troot._remove(tl, true);\n\t\t\ttl._startTime = 0;\n\t\t\ttl._rawPrevTime = tl._time = tl._totalTime = root._time;\n\t\t\ttween = root._first;\n\t\t\twhile (tween) {\n\t\t\t\tnext = tween._next;\n\t\t\t\tif (!ignoreDelayedCalls || !(tween instanceof TweenLite && tween.target === tween.vars.onComplete)) {\n\t\t\t\t\ttl.add(tween, tween._startTime - tween._delay);\n\t\t\t\t}\n\t\t\t\ttween = next;\n\t\t\t}\n\t\t\troot.add(tl, 0);\n\t\t\treturn tl;\n\t\t};\n\n\t\tp.add = function(value, position, align, stagger) {\n\t\t\tvar curTime, l, i, child, tl, beforeRawTime;\n\t\t\tif (typeof(position) !== \"number\") {\n\t\t\t\tposition = this._parseTimeOrLabel(position, 0, true, value);\n\t\t\t}\n\t\t\tif (!(value instanceof Animation)) {\n\t\t\t\tif ((value instanceof Array) || (value && value.push && _isArray(value))) {\n\t\t\t\t\talign = align || \"normal\";\n\t\t\t\t\tstagger = stagger || 0;\n\t\t\t\t\tcurTime = position;\n\t\t\t\t\tl = value.length;\n\t\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\t\tif (_isArray(child = value[i])) {\n\t\t\t\t\t\t\tchild = new TimelineLite({tweens:child});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.add(child, curTime);\n\t\t\t\t\t\tif (typeof(child) !== \"string\" && typeof(child) !== \"function\") {\n\t\t\t\t\t\t\tif (align === \"sequence\") {\n\t\t\t\t\t\t\t\tcurTime = child._startTime + (child.totalDuration() / child._timeScale);\n\t\t\t\t\t\t\t} else if (align === \"start\") {\n\t\t\t\t\t\t\t\tchild._startTime -= child.delay();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurTime += stagger;\n\t\t\t\t\t}\n\t\t\t\t\treturn this._uncache(true);\n\t\t\t\t} else if (typeof(value) === \"string\") {\n\t\t\t\t\treturn this.addLabel(value, position);\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\tvalue = TweenLite.delayedCall(0, value);\n\t\t\t\t} else {\n\t\t\t\t\tthrow(\"Cannot add \" + value + \" into the timeline; it is not a tween, timeline, function, or string.\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSimpleTimeline.prototype.add.call(this, value, position);\n\n\t\t\t//if the timeline has already ended but the inserted tween/timeline extends the duration, we should enable this timeline again so that it renders properly. We should also align the playhead with the parent timeline's when appropriate.\n\t\t\tif (this._gc || this._time === this._duration) if (!this._paused) if (this._duration < this.duration()) {\n\t\t\t\t//in case any of the ancestors had completed but should now be enabled...\n\t\t\t\ttl = this;\n\t\t\t\tbeforeRawTime = (tl.rawTime() > value._startTime); //if the tween is placed on the timeline so that it starts BEFORE the current rawTime, we should align the playhead (move the timeline). This is because sometimes users will create a timeline, let it finish, and much later append a tween and expect it to run instead of jumping to its end state. While technically one could argue that it should jump to its end state, that's not what users intuitively expect.\n\t\t\t\twhile (tl._timeline) {\n\t\t\t\t\tif (beforeRawTime && tl._timeline.smoothChildTiming) {\n\t\t\t\t\t\ttl.totalTime(tl._totalTime, true); //moves the timeline (shifts its startTime) if necessary, and also enables it.\n\t\t\t\t\t} else if (tl._gc) {\n\t\t\t\t\t\ttl._enabled(true, false);\n\t\t\t\t\t}\n\t\t\t\t\ttl = tl._timeline;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\tp.remove = function(value) {\n\t\t\tif (value instanceof Animation) {\n\t\t\t\treturn this._remove(value, false);\n\t\t\t} else if (value instanceof Array || (value && value.push && _isArray(value))) {\n\t\t\t\tvar i = value.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tthis.remove(value[i]);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t} else if (typeof(value) === \"string\") {\n\t\t\t\treturn this.removeLabel(value);\n\t\t\t}\n\t\t\treturn this.kill(null, value);\n\t\t};\n\n\t\tp._remove = function(tween, skipDisable) {\n\t\t\tSimpleTimeline.prototype._remove.call(this, tween, skipDisable);\n\t\t\tvar last = this._last;\n\t\t\tif (!last) {\n\t\t\t\tthis._time = this._totalTime = this._duration = this._totalDuration = 0;\n\t\t\t} else if (this._time > last._startTime + last._totalDuration / last._timeScale) {\n\t\t\t\tthis._time = this.duration();\n\t\t\t\tthis._totalTime = this._totalDuration;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.append = function(value, offsetOrLabel) {\n\t\t\treturn this.add(value, this._parseTimeOrLabel(null, offsetOrLabel, true, value));\n\t\t};\n\n\t\tp.insert = p.insertMultiple = function(value, position, align, stagger) {\n\t\t\treturn this.add(value, position || 0, align, stagger);\n\t\t};\n\n\t\tp.appendMultiple = function(tweens, offsetOrLabel, align, stagger) {\n\t\t\treturn this.add(tweens, this._parseTimeOrLabel(null, offsetOrLabel, true, tweens), align, stagger);\n\t\t};\n\n\t\tp.addLabel = function(label, position) {\n\t\t\tthis._labels[label] = this._parseTimeOrLabel(position);\n\t\t\treturn this;\n\t\t};\n\n\t\tp.addPause = function(position, callback, params, scope) {\n\t\t\treturn this.call(_pauseCallback, [\"{self}\", callback, params, scope], this, position);\n\t\t};\n\n\t\tp.removeLabel = function(label) {\n\t\t\tdelete this._labels[label];\n\t\t\treturn this;\n\t\t};\n\n\t\tp.getLabelTime = function(label) {\n\t\t\treturn (this._labels[label] != null) ? this._labels[label] : -1;\n\t\t};\n\n\t\tp._parseTimeOrLabel = function(timeOrLabel, offsetOrLabel, appendIfAbsent, ignore) {\n\t\t\tvar i;\n\t\t\t//if we're about to add a tween/timeline (or an array of them) that's already a child of this timeline, we should remove it first so that it doesn't contaminate the duration().\n\t\t\tif (ignore instanceof Animation && ignore.timeline === this) {\n\t\t\t\tthis.remove(ignore);\n\t\t\t} else if (ignore && ((ignore instanceof Array) || (ignore.push && _isArray(ignore)))) {\n\t\t\t\ti = ignore.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (ignore[i] instanceof Animation && ignore[i].timeline === this) {\n\t\t\t\t\t\tthis.remove(ignore[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof(offsetOrLabel) === \"string\") {\n\t\t\t\treturn this._parseTimeOrLabel(offsetOrLabel, (appendIfAbsent && typeof(timeOrLabel) === \"number\" && this._labels[offsetOrLabel] == null) ? timeOrLabel - this.duration() : 0, appendIfAbsent);\n\t\t\t}\n\t\t\toffsetOrLabel = offsetOrLabel || 0;\n\t\t\tif (typeof(timeOrLabel) === \"string\" && (isNaN(timeOrLabel) || this._labels[timeOrLabel] != null)) { //if the string is a number like \"1\", check to see if there's a label with that name, otherwise interpret it as a number (absolute value).\n\t\t\t\ti = timeOrLabel.indexOf(\"=\");\n\t\t\t\tif (i === -1) {\n\t\t\t\t\tif (this._labels[timeOrLabel] == null) {\n\t\t\t\t\t\treturn appendIfAbsent ? (this._labels[timeOrLabel] = this.duration() + offsetOrLabel) : offsetOrLabel;\n\t\t\t\t\t}\n\t\t\t\t\treturn this._labels[timeOrLabel] + offsetOrLabel;\n\t\t\t\t}\n\t\t\t\toffsetOrLabel = parseInt(timeOrLabel.charAt(i-1) + \"1\", 10) * Number(timeOrLabel.substr(i+1));\n\t\t\t\ttimeOrLabel = (i > 1) ? this._parseTimeOrLabel(timeOrLabel.substr(0, i-1), 0, appendIfAbsent) : this.duration();\n\t\t\t} else if (timeOrLabel == null) {\n\t\t\t\ttimeOrLabel = this.duration();\n\t\t\t}\n\t\t\treturn Number(timeOrLabel) + offsetOrLabel;\n\t\t};\n\n\t\tp.seek = function(position, suppressEvents) {\n\t\t\treturn this.totalTime((typeof(position) === \"number\") ? position : this._parseTimeOrLabel(position), (suppressEvents !== false));\n\t\t};\n\n\t\tp.stop = function() {\n\t\t\treturn this.paused(true);\n\t\t};\n\n\t\tp.gotoAndPlay = function(position, suppressEvents) {\n\t\t\treturn this.play(position, suppressEvents);\n\t\t};\n\n\t\tp.gotoAndStop = function(position, suppressEvents) {\n\t\t\treturn this.pause(position, suppressEvents);\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tif (this._gc) {\n\t\t\t\tthis._enabled(true, false);\n\t\t\t}\n\t\t\tvar totalDur = (!this._dirty) ? this._totalDuration : this.totalDuration(),\n\t\t\t\tprevTime = this._time,\n\t\t\t\tprevStart = this._startTime,\n\t\t\t\tprevTimeScale = this._timeScale,\n\t\t\t\tprevPaused = this._paused,\n\t\t\t\ttween, isComplete, next, callback, internalForce;\n\t\t\tif (time >= totalDur) {\n\t\t\t\tthis._totalTime = this._time = totalDur;\n\t\t\t\tif (!this._reversed) if (!this._hasPausedChild()) {\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\tcallback = \"onComplete\";\n\t\t\t\t\tif (this._duration === 0) if (time === 0 || this._rawPrevTime < 0 || this._rawPrevTime === _tinyNum) if (this._rawPrevTime !== time && this._first) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t\tif (this._rawPrevTime > _tinyNum) {\n\t\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._rawPrevTime = (this._duration || !suppressEvents || time || this._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\ttime = totalDur + 0.0001; //to avoid occasional floating point rounding errors - sometimes child tweens/timelines were not being fully completed (their progress might be 0.999999999999998 instead of 1 because when _time - tween._startTime is performed, floating point errors would return a value that was SLIGHTLY off). Try (999999999999.7 - 999999999999) * 1 = 0.699951171875 instead of 0.7.\n\n\t\t\t} else if (time < 0.0000001) { //to work around occasional floating point math artifacts, round super small values to 0.\n\t\t\t\tthis._totalTime = this._time = 0;\n\t\t\t\tif (prevTime !== 0 || (this._duration === 0 && this._rawPrevTime !== _tinyNum && (this._rawPrevTime > 0 || (time < 0 && this._rawPrevTime >= 0)))) {\n\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\tisComplete = this._reversed;\n\t\t\t\t}\n\t\t\t\tif (time < 0) {\n\t\t\t\t\tthis._active = false;\n\t\t\t\t\tif (this._duration === 0) if (this._rawPrevTime >= 0 && this._first) { //zero-duration timelines are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis._rawPrevTime = time;\n\t\t\t\t} else {\n\t\t\t\t\tthis._rawPrevTime = (this._duration || !suppressEvents || time || this._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\n\t\t\t\t\ttime = 0; //to avoid occasional floating point rounding errors (could cause problems especially with zero-duration tweens at the very beginning of the timeline)\n\t\t\t\t\tif (!this._initted) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tthis._totalTime = this._time = this._rawPrevTime = time;\n\t\t\t}\n\t\t\tif ((this._time === prevTime || !this._first) && !force && !internalForce) {\n\t\t\t\treturn;\n\t\t\t} else if (!this._initted) {\n\t\t\t\tthis._initted = true;\n\t\t\t}\n\n\t\t\tif (!this._active) if (!this._paused && this._time !== prevTime && time > 0) {\n\t\t\t\tthis._active = true;  //so that if the user renders the timeline (as opposed to the parent timeline rendering it), it is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the timeline already finished but the user manually re-renders it as halfway done, for example.\n\t\t\t}\n\n\t\t\tif (prevTime === 0) if (this.vars.onStart) if (this._time !== 0) if (!suppressEvents) {\n\t\t\t\tthis.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || _blankArray);\n\t\t\t}\n\n\t\t\tif (this._time >= prevTime) {\n\t\t\t\ttween = this._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._next; //record it here because the value could change after rendering...\n\t\t\t\t\tif (this._paused && !prevPaused) { //in case a tween pauses the timeline when rendering\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= this._time && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttween = this._last;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._prev; //record it here because the value could change after rendering...\n\t\t\t\t\tif (this._paused && !prevPaused) { //in case a tween pauses the timeline when rendering\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= prevTime && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._onUpdate) if (!suppressEvents) {\n\t\t\t\tthis._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || _blankArray);\n\t\t\t}\n\n\t\t\tif (callback) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) { //if one of the tweens that was rendered altered this timeline's startTime (like if an onComplete reversed the timeline), it probably isn't complete. If it is, don't worry, because whatever call altered the startTime would complete if it was necessary at the new time. The only exception is the timeScale property. Also check _gc because there's a chance that kill() could be called in an onUpdate\n\t\t\t\tif (isComplete) {\n\t\t\t\t\tif (this._timeline.autoRemoveChildren) {\n\t\t\t\t\t\tthis._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis._active = false;\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents && this.vars[callback]) {\n\t\t\t\t\tthis.vars[callback].apply(this.vars[callback + \"Scope\"] || this, this.vars[callback + \"Params\"] || _blankArray);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp._hasPausedChild = function() {\n\t\t\tvar tween = this._first;\n\t\t\twhile (tween) {\n\t\t\t\tif (tween._paused || ((tween instanceof TimelineLite) && tween._hasPausedChild())) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tp.getChildren = function(nested, tweens, timelines, ignoreBeforeTime) {\n\t\t\tignoreBeforeTime = ignoreBeforeTime || -9999999999;\n\t\t\tvar a = [],\n\t\t\t\ttween = this._first,\n\t\t\t\tcnt = 0;\n\t\t\twhile (tween) {\n\t\t\t\tif (tween._startTime < ignoreBeforeTime) {\n\t\t\t\t\t//do nothing\n\t\t\t\t} else if (tween instanceof TweenLite) {\n\t\t\t\t\tif (tweens !== false) {\n\t\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (timelines !== false) {\n\t\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t\t}\n\t\t\t\t\tif (nested !== false) {\n\t\t\t\t\t\ta = a.concat(tween.getChildren(true, tweens, timelines));\n\t\t\t\t\t\tcnt = a.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\t\tp.getTweensOf = function(target, nested) {\n\t\t\tvar disabled = this._gc,\n\t\t\t\ta = [],\n\t\t\t\tcnt = 0,\n\t\t\t\ttweens, i;\n\t\t\tif (disabled) {\n\t\t\t\tthis._enabled(true, true); //getTweensOf() filters out disabled tweens, and we have to mark them as _gc = true when the timeline completes in order to allow clean garbage collection, so temporarily re-enable the timeline here.\n\t\t\t}\n\t\t\ttweens = TweenLite.getTweensOf(target);\n\t\t\ti = tweens.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (tweens[i].timeline === this || (nested && this._contains(tweens[i]))) {\n\t\t\t\t\ta[cnt++] = tweens[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (disabled) {\n\t\t\t\tthis._enabled(false, true);\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\t\tp._contains = function(tween) {\n\t\t\tvar tl = tween.timeline;\n\t\t\twhile (tl) {\n\t\t\t\tif (tl === this) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\ttl = tl.timeline;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tp.shiftChildren = function(amount, adjustLabels, ignoreBeforeTime) {\n\t\t\tignoreBeforeTime = ignoreBeforeTime || 0;\n\t\t\tvar tween = this._first,\n\t\t\t\tlabels = this._labels,\n\t\t\t\tp;\n\t\t\twhile (tween) {\n\t\t\t\tif (tween._startTime >= ignoreBeforeTime) {\n\t\t\t\t\ttween._startTime += amount;\n\t\t\t\t}\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\tif (adjustLabels) {\n\t\t\t\tfor (p in labels) {\n\t\t\t\t\tif (labels[p] >= ignoreBeforeTime) {\n\t\t\t\t\t\tlabels[p] += amount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp._kill = function(vars, target) {\n\t\t\tif (!vars && !target) {\n\t\t\t\treturn this._enabled(false, false);\n\t\t\t}\n\t\t\tvar tweens = (!target) ? this.getChildren(true, true, false) : this.getTweensOf(target),\n\t\t\t\ti = tweens.length,\n\t\t\t\tchanged = false;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (tweens[i]._kill(vars, target)) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn changed;\n\t\t};\n\n\t\tp.clear = function(labels) {\n\t\t\tvar tweens = this.getChildren(false, true, true),\n\t\t\t\ti = tweens.length;\n\t\t\tthis._time = this._totalTime = 0;\n\t\t\twhile (--i > -1) {\n\t\t\t\ttweens[i]._enabled(false, false);\n\t\t\t}\n\t\t\tif (labels !== false) {\n\t\t\t\tthis._labels = {};\n\t\t\t}\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp.invalidate = function() {\n\t\t\tvar tween = this._first;\n\t\t\twhile (tween) {\n\t\t\t\ttween.invalidate();\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp._enabled = function(enabled, ignoreTimeline) {\n\t\t\tif (enabled === this._gc) {\n\t\t\t\tvar tween = this._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\ttween._enabled(enabled, true);\n\t\t\t\t\ttween = tween._next;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn SimpleTimeline.prototype._enabled.call(this, enabled, ignoreTimeline);\n\t\t};\n\n\t\tp.duration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tif (this._dirty) {\n\t\t\t\t\tthis.totalDuration(); //just triggers recalculation\n\t\t\t\t}\n\t\t\t\treturn this._duration;\n\t\t\t}\n\t\t\tif (this.duration() !== 0 && value !== 0) {\n\t\t\t\tthis.timeScale(this._duration / value);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.totalDuration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tif (this._dirty) {\n\t\t\t\t\tvar max = 0,\n\t\t\t\t\t\ttween = this._last,\n\t\t\t\t\t\tprevStart = 999999999999,\n\t\t\t\t\t\tprev, end;\n\t\t\t\t\twhile (tween) {\n\t\t\t\t\t\tprev = tween._prev; //record it here in case the tween changes position in the sequence...\n\t\t\t\t\t\tif (tween._dirty) {\n\t\t\t\t\t\t\ttween.totalDuration(); //could change the tween._startTime, so make sure the tween's cache is clean before analyzing it.\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tween._startTime > prevStart && this._sortChildren && !tween._paused) { //in case one of the tweens shifted out of order, it needs to be re-inserted into the correct position in the sequence\n\t\t\t\t\t\t\tthis.add(tween, tween._startTime - tween._delay);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprevStart = tween._startTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tween._startTime < 0 && !tween._paused) { //children aren't allowed to have negative startTimes unless smoothChildTiming is true, so adjust here if one is found.\n\t\t\t\t\t\t\tmax -= tween._startTime;\n\t\t\t\t\t\t\tif (this._timeline.smoothChildTiming) {\n\t\t\t\t\t\t\t\tthis._startTime += tween._startTime / this._timeScale;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.shiftChildren(-tween._startTime, false, -9999999999);\n\t\t\t\t\t\t\tprevStart = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tend = tween._startTime + (tween._totalDuration / tween._timeScale);\n\t\t\t\t\t\tif (end > max) {\n\t\t\t\t\t\t\tmax = end;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttween = prev;\n\t\t\t\t\t}\n\t\t\t\t\tthis._duration = this._totalDuration = max;\n\t\t\t\t\tthis._dirty = false;\n\t\t\t\t}\n\t\t\t\treturn this._totalDuration;\n\t\t\t}\n\t\t\tif (this.totalDuration() !== 0) if (value !== 0) {\n\t\t\t\tthis.timeScale(this._totalDuration / value);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.usesFrames = function() {\n\t\t\tvar tl = this._timeline;\n\t\t\twhile (tl._timeline) {\n\t\t\t\ttl = tl._timeline;\n\t\t\t}\n\t\t\treturn (tl === Animation._rootFramesTimeline);\n\t\t};\n\n\t\tp.rawTime = function() {\n\t\t\treturn this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale;\n\t\t};\n\n\t\treturn TimelineLite;\n\n\t}, true);\n\n}); if (window._gsDefine) { window._gsQueue.pop()(); };\ndefine(\"TimelineMax\", [\"TweenMax\"], (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global.TimelineLite;\n    };\n}(this)));\n\n",
    "\n(function() {\n  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  define('cs!app/elements/AnimatedCircle',['require','threejs','rng','cs!app/components/Colors','TweenMax','TimelineMax'],function(require) {\n    var AnimatedCircle, Colors, RNG, THREE, TimelineMax, TweenMax;\n    THREE = require('threejs');\n    RNG = require('rng');\n    Colors = require('cs!app/components/Colors');\n    TweenMax = require('TweenMax');\n    TimelineMax = require('TimelineMax');\n    return AnimatedCircle = (function() {\n      AnimatedCircle.defaults = {\n        size: 80,\n        outlineWidth: 2,\n        drawOutline: true,\n        drawCircle: false,\n        color: false,\n        fillColor: false,\n        delay: 0,\n        duration: 0.5\n      };\n\n      function AnimatedCircle(options, values) {\n        var tween;\n        if (options == null) {\n          options = {};\n        }\n        if (values == null) {\n          values = {\n            x: 0,\n            y: 0\n          };\n        }\n        this.renderOutline = __bind(this.renderOutline, this);\n        this.renderCircle = __bind(this.renderCircle, this);\n        this.size = options.size || AnimatedCircle.defaults.size;\n        this.outlineWidth = options.outlineWidth || AnimatedCircle.defaults.outlineWidth;\n        this.drawOutline = options.drawOutline || AnimatedCircle.defaults.drawOutline;\n        this.drawCircle = options.drawCircle || AnimatedCircle.defaults.drawCircle;\n        this.color = options.color || Colors.get(0);\n        this.fillColor = options.fillColor || Colors.get(0).clone().multiplyScalar(0.5);\n        this.delay = options.delay || AnimatedCircle.defaults.delay;\n        this.duration = options.duration || AnimatedCircle.defaults.duration;\n        this.container = new THREE.Object3D();\n        this.container.scale.set(0, 0, 0);\n        this.container.position.set(values.x, values.y, 0);\n        this.animatedProperties = {\n          scale: 0\n        };\n        this.timeline = new TimelineMax();\n        tween = TweenLite.to(this.animatedProperties, 0, {\n          scale: 0.00001,\n          ease: Linear.easeNone\n        });\n        this.timeline.add(tween, 0);\n        tween = TweenLite.to(this.animatedProperties, this.duration, {\n          scale: 1,\n          delay: this.delay,\n          ease: Cubic.easeOut\n        });\n        this.timeline.add(tween);\n        tween = TweenLite.to(this.animatedProperties, this.duration * 0.5, {\n          scale: 1.1,\n          ease: Cubic.easeOut\n        });\n        this.timeline.add(tween);\n        tween = TweenLite.to(this.animatedProperties, this.duration, {\n          scale: 0.00001,\n          ease: Cubic.easeIn\n        });\n        this.timeline.add(tween);\n        if (this.drawOutline) {\n          this.renderOutline(this.size, this.color, this.outlineWidth);\n        }\n        if (this.drawCircle) {\n          this.renderCircle(this.size, this.fillColor);\n        }\n      }\n\n      AnimatedCircle.prototype.update = function(seconds, progression) {\n        return this.container.scale.set(this.animatedProperties.scale, this.animatedProperties.scale, this.animatedProperties.scale);\n      };\n\n      AnimatedCircle.prototype.renderCircle = function(size, color) {\n        var material, numSegments, object;\n        material = new THREE.MeshBasicMaterial({\n          color: color,\n          transparent: true,\n          depthWrite: false,\n          depthTest: false\n        });\n        material.blending = THREE.AdditiveBlending;\n        numSegments = parseInt(size / 1.5, 10) + 4;\n        object = new THREE.Mesh(new THREE.CircleGeometry(size, numSegments, 0, Math.PI * 2), material);\n        return this.container.add(object);\n      };\n\n      AnimatedCircle.prototype.renderOutline = function(size, color, outlineWidth) {\n        var material, object;\n        material = new THREE.MeshBasicMaterial({\n          color: color,\n          transparent: true,\n          depthWrite: false,\n          depthTest: false\n        });\n        material.blending = THREE.AdditiveBlending;\n        object = new THREE.Mesh(new THREE.RingGeometry(size - 1, size + outlineWidth, 50, 1, 0, Math.PI * 2), material);\n        return this.container.add(object);\n      };\n\n      return AnimatedCircle;\n\n    })();\n  });\n\n}).call(this);\n\n",
    "\n(function() {\n  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  define('cs!app/elements/Circles',['require','threejs','rng','cs!app/components/Colors','cs!app/elements/AnimatedCircle','TimelineMax'],function(require) {\n    var AnimatedCircle, Circles, Colors, RNG, THREE, TimelineMax;\n    THREE = require('threejs');\n    RNG = require('rng');\n    Colors = require('cs!app/components/Colors');\n    AnimatedCircle = require('cs!app/elements/AnimatedCircle');\n    TimelineMax = require('TimelineMax');\n    return Circles = (function() {\n      Circles.defaults = {\n        numItems: 20,\n        seed: 12002,\n        radius: 80,\n        circleRadius: 20,\n        circleRadiusMax: 20\n      };\n\n      function Circles(options) {\n        var border_radius, color, delay, draw_circle, draw_outline, duration, fillColor, i, item, rndtype, size, x, y, _i, _ref;\n        if (options == null) {\n          options = {};\n        }\n        this.drawOutline = __bind(this.drawOutline, this);\n        this.createCircle = __bind(this.createCircle, this);\n        this.numItems = options.numItems || Circles.defaults.numItems;\n        this.seed = options.seed || Circles.defaults.seed;\n        this.radius = options.radius || Circles.defaults.radius;\n        this.circleRadius = options.circleRadius || Circles.defaults.circleRadius;\n        this.circleRadiusMax = options.circleRadiusMax || Circles.defaults.circleRadiusMax;\n        this.timeline = new TimelineMax();\n        this.rng = new RNG(this.seed);\n        this.rngAnimation = new RNG(this.seed + \"lorem\");\n        this.rngOutline = new RNG(this.seed);\n        this.container = new THREE.Object3D();\n        this.totalDuration = 0;\n        this.items = [];\n        for (i = _i = 0, _ref = this.numItems - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n          color = Colors.get(this.rng.random(0, 1000));\n          fillColor = color.clone().multiplyScalar(this.rng.random(0.3, 0.5));\n          rndtype = this.rng.random(0, 1000) / 1000;\n          size = this.rng.random(this.circleRadius, this.circleRadiusMax);\n          x = this.getRandomPosition();\n          y = this.getRandomPosition();\n          delay = this.rngAnimation.random(0, 2400) / 1000;\n          duration = this.rngAnimation.random(600, 800) / 1000;\n          border_radius = this.rngOutline.exponential();\n          draw_outline = rndtype < 0.8 ? true : false;\n          draw_circle = rndtype > 0.5 ? true : false;\n          item = new AnimatedCircle({\n            size: size,\n            outlineWidth: border_radius,\n            drawOutline: draw_outline,\n            drawCircle: draw_circle,\n            color: color,\n            fillColor: fillColor,\n            delay: delay,\n            duration: duration\n          }, {\n            x: x,\n            y: y\n          });\n          this.container.add(item.container);\n          this.timeline.add(item.timeline, 0);\n          this.items.push(item);\n        }\n        this.totalDuration = this.timeline.duration();\n      }\n\n      Circles.prototype.update = function(seconds, values) {\n        var item, progression, _i, _len, _ref, _results;\n        if (values.progression !== void 0) {\n          progression = values.progression / 2;\n          this.timeline.seek(this.totalDuration * progression);\n          _ref = this.items;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            item = _ref[_i];\n            _results.push(item.update(seconds, values.progression));\n          }\n          return _results;\n        }\n      };\n\n      Circles.prototype.getRandomPosition = function() {\n        return this.rng.random(-this.radius, this.radius);\n      };\n\n      Circles.prototype.createCircle = function(x, y, size, color) {};\n\n      Circles.prototype.drawOutline = function(x, y, size, color) {};\n\n      Circles.prototype.destroy = function() {\n        if (this.container) {\n          if (this.container.parent) {\n            this.container.parent.remove(this.container);\n          }\n          delete this.container;\n        }\n        delete this.rng;\n        return delete this.rngOutline;\n      };\n\n      return Circles;\n\n    })();\n  });\n\n}).call(this);\n\n",
    "\n(function() {\n  define('cs!app/components/ElementFactory',['require','cs!app/elements/Circles'],function(require) {\n    var Circles, ElementFactory, extend;\n    Circles = require('cs!app/elements/Circles');\n    extend = function(object, properties) {\n      var key, val;\n      for (key in properties) {\n        val = properties[key];\n        object[key] = val;\n      }\n      return object;\n    };\n    ElementFactory = (function() {\n      function ElementFactory() {}\n\n      ElementFactory.elements = {\n        Circles: {\n          default_attributes: function() {\n            return extend({}, Circles.defaults);\n          },\n          default_properties: function(time) {\n            if (time == null) {\n              time = 0;\n            }\n            return [\n              {\n                name: \"progression\",\n                \"default\": 1,\n                keys: []\n              }\n            ];\n          },\n          create: function(options) {\n            var defaults, item;\n            defaults = Circles.defaults;\n            options = extend(extend({}, defaults), options);\n            item = new Circles(options);\n            return item;\n          }\n        }\n      };\n\n      ElementFactory.prototype.create = function(itemName, data) {\n        var item;\n        item = ElementFactory.elements[itemName];\n        if (!item) {\n          console.warn(\"Can't create item: \" + itemName);\n          return false;\n        }\n        console.log(\"will create a \" + itemName);\n        console.log(data);\n        return item.create(data);\n      };\n\n      return ElementFactory;\n\n    })();\n    return window.ElementFactory = ElementFactory;\n  });\n\n}).call(this);\n\n",
    "\n(function() {\n  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  define('cs!app/components/Orchestrator',['require','cs!app/components/ElementFactory','TweenMax','TimelineMax'],function(require) {\n    var ElementFactory, Orchestrator, TimelineMax, TweenMax;\n    ElementFactory = require('cs!app/components/ElementFactory');\n    TweenMax = require('TweenMax');\n    TimelineMax = require('TimelineMax');\n    return Orchestrator = (function() {\n      function Orchestrator(timer, data, scene) {\n        this.timer = timer;\n        this.data = data;\n        this.scene = scene;\n        this.update = __bind(this.update, this);\n        this.factory = new ElementFactory();\n        this.mainTimeline = new TimelineMax({\n          paused: true\n        });\n        this.mainTimeline.duration(this.timer.totalDuration / 1000);\n        this.timer.updated.add(this.update);\n        this.update(0);\n      }\n\n      Orchestrator.prototype.update = function(timestamp) {\n        var el, item, key, key_index, next_key, propName, property, propertyTimeline, seconds, should_exist, tween, tween_duration, tween_time, val, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2, _ref3;\n        seconds = timestamp / 1000;\n        _ref = this.data;\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          item = _ref[_i];\n          should_exist = seconds >= item.start && seconds <= item.end ? true : false;\n          if (!item.values && item.properties.length) {\n            item.values = {};\n            _ref1 = item.properties;\n            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n              property = _ref1[_j];\n              if (property.keys.length) {\n                item.values[property.name] = property.keys[0].val;\n              } else if (property[\"default\"]) {\n                item.values[property.name] = property[\"default\"];\n              } else {\n                item.values[property.name] = 0;\n              }\n            }\n          }\n          if (!item.timeline) {\n            item.timeline = new TimelineMax();\n            this.mainTimeline.add(item.timeline, 0);\n            item.isDirty = true;\n          }\n          if (item.timeline && item.isDirty) {\n            item.isDirty = false;\n            item.timeline.clear();\n            _ref2 = item.properties;\n            for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n              property = _ref2[_k];\n              propertyTimeline = new TimelineMax();\n              propName = property.name;\n              _ref3 = property.keys;\n              for (key_index = _l = 0, _len3 = _ref3.length; _l < _len3; key_index = ++_l) {\n                key = _ref3[key_index];\n                if (key_index === 0) {\n                  tween_time = Math.min(-1, key.time - 0.1);\n                  tween_duration = 0;\n                  val = {};\n                  val[propName] = key.val;\n                  tween = TweenLite.to(item.values, tween_duration, val);\n                  propertyTimeline.add(tween, tween_time);\n                }\n                if (key_index < property.keys.length - 1) {\n                  next_key = property.keys[key_index + 1];\n                  tween_duration = next_key.time - key.time;\n                  val = {};\n                  val[propName] = next_key.val;\n                  tween = TweenLite.to(item.values, tween_duration, val);\n                  propertyTimeline.add(tween, key.time);\n                }\n              }\n              item.timeline.add(propertyTimeline, 0);\n            }\n            seconds = seconds - 0.0000001;\n          }\n          if ((item.object && should_exist === false) || item.isDirtyObject) {\n            item.isDirtyObject = false;\n            if (item.object) {\n              this.scene.remove(item.object.container);\n              item.object.destroy();\n              delete item.object;\n            }\n          }\n          if (should_exist && !item.object) {\n            el = this.factory.create('Circles', item.options);\n            this.scene.add(el.container);\n            item.object = el;\n          }\n          if (item.object) {\n            item.object.update(seconds - item.start, item.values);\n          }\n        }\n        return this.mainTimeline.seek(seconds);\n      };\n\n      return Orchestrator;\n\n    })();\n  });\n\n}).call(this);\n\n",
    "/**\n * @license RequireJS text 2.0.12 Copyright (c) 2010-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/text for details\n */\n/*jslint regexp: true */\n/*global require, XMLHttpRequest, ActiveXObject,\n  define, window, process, Packages,\n  java, location, Components, FileUtils */\n\ndefine('text',['module'], function (module) {\n    'use strict';\n\n    var text, fs, Cc, Ci, xpcIsWindows,\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n        hasLocation = typeof location !== 'undefined' && location.href,\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n        defaultHostName = hasLocation && location.hostname,\n        defaultPort = hasLocation && (location.port || undefined),\n        buildMap = {},\n        masterConfig = (module.config && module.config()) || {};\n\n    text = {\n        version: '2.0.12',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {}\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n                strip = false,\n                index = name.indexOf(\".\"),\n                isRelative = name.indexOf('./') === 0 ||\n                             name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1, name.length);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n                match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                   ((!uPort && !uHostName) || uPort === port);\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config && config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config && config.isBuild;\n\n            var parsed = text.parseName(name),\n                nonStripName = parsed.moduleName +\n                    (parsed.ext ? '.' + parsed.ext : ''),\n                url = req.toUrl(nonStripName),\n                useXhr = (masterConfig.useXhr) ||\n                         text.useXhr;\n\n            // Do not load if it is an empty: url\n            if (url.indexOf('empty:') === 0) {\n                onLoad();\n                return;\n            }\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n                                    parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n                               \"define(function () { return '\" +\n                                   content +\n                               \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n                extPart = parsed.ext ? '.' + parsed.ext : '',\n                nonStripName = parsed.moduleName + extPart,\n                //Use a '.js' file name so that it indicates it is a\n                //script that can be loaded across domains.\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n            typeof process !== \"undefined\" &&\n            process.versions &&\n            !!process.versions.node &&\n            !process.versions['node-webkit'])) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback, errback) {\n            try {\n                var file = fs.readFileSync(url, 'utf8');\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n                if (file.indexOf('\\uFEFF') === 0) {\n                    file = file.substring(1);\n                }\n                callback(file);\n            } catch (e) {\n                if (errback) {\n                    errback(e);\n                }\n            }\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n            text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status || 0;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        if (errback) {\n                            errback(err);\n                        }\n                    } else {\n                        callback(xhr.responseText);\n                    }\n\n                    if (masterConfig.onXhrComplete) {\n                        masterConfig.onXhrComplete(xhr, url);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n                encoding = \"utf-8\",\n                file = new java.io.File(url),\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n                content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                if (line !== null) {\n                    stringBuffer.append(line);\n                }\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\n            typeof Components !== 'undefined' && Components.classes &&\n            Components.interfaces)) {\n        //Avert your gaze!\n        Cc = Components.classes;\n        Ci = Components.interfaces;\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\n\n        text.get = function (url, callback) {\n            var inStream, convertStream, fileObj,\n                readData = {};\n\n            if (xpcIsWindows) {\n                url = url.replace(/\\//g, '\\\\');\n            }\n\n            fileObj = new FileUtils.File(url);\n\n            //XPCOM, you so crazy\n            try {\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\n                           .createInstance(Ci.nsIFileInputStream);\n                inStream.init(fileObj, 1, 0, false);\n\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\n                                .createInstance(Ci.nsIConverterInputStream);\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n\n                convertStream.readString(inStream.available(), readData);\n                convertStream.close();\n                inStream.close();\n                callback(readData.value);\n            } catch (e) {\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            }\n        };\n    }\n    return text;\n});\n\n",
    "\ndefine('text!app/data.json',[],function () { return '[{\"id\":\"item1\",\"label\":\"Test circles\",\"start\":0,\"end\":2,\"options\":{\"numItems\":12,\"seed\":12002,\"radius\":84},\"properties\":[{\"name\":\"progression\",\"keys\":[{\"time\":0,\"val\":0},{\"time\":1,\"val\":1},{\"time\":2,\"val\":2}]}]}]\\n';});\n\n",
    "\n(function() {\n  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  define('cs!app/Main',['require','threejs','cs!app/components/Background','cs!app/components/PostFX','cs!app/components/Timer','cs!app/components/Orchestrator','text!app/data.json'],function(require) {\n    var App, Background, Orchestrator, PostFX, THREE, Timer, dataJson;\n    THREE = require('threejs');\n    Background = require('cs!app/components/Background');\n    PostFX = require('cs!app/components/PostFX');\n    Timer = require('cs!app/components/Timer');\n    Orchestrator = require('cs!app/components/Orchestrator');\n    dataJson = require('text!app/data.json');\n    return App = (function() {\n      function App() {\n        this.animate = __bind(this.animate, this);\n        this.onWindowResize = __bind(this.onWindowResize, this);\n        var container;\n        window.app = this;\n        this.timer = new Timer();\n        this.dataSample = [\n          {\n            id: 'item1',\n            label: 'Test circles',\n            type: 'Circles',\n            start: 1,\n            end: 10,\n            options: {\n              numItems: 12,\n              seed: 12002,\n              radius: 84\n            },\n            properties: [\n              {\n                name: 'progression',\n                keys: [\n                  {\n                    time: 2,\n                    val: 7\n                  }, {\n                    time: 3,\n                    val: 42\n                  }, {\n                    time: 5,\n                    val: -40\n                  }\n                ]\n              }\n            ]\n          }\n        ];\n        this.data = JSON.parse(dataJson);\n        this.scene = new THREE.Scene();\n        this.orchestrator = new Orchestrator(this.timer, this.data, this.scene);\n        this.time = Date.now() * 0.0001;\n        container = document.createElement('div');\n        document.body.appendChild(container);\n        this.camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 2000);\n        this.camera.position.z = 600;\n        this.renderer = new THREE.WebGLRenderer({\n          antialias: false,\n          alpha: false\n        });\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.renderer.setClearColor(0x000000, 1);\n        container.appendChild(this.renderer.domElement);\n        window.addEventListener('resize', this.onWindowResize, false);\n        this.postfx = new PostFX(this.scene, this.camera, this.renderer);\n        this.animate();\n      }\n\n      App.prototype.createElements = function() {\n        var material, material2, object;\n        material = new THREE.MeshBasicMaterial({\n          color: 0xebddc8,\n          transparent: true,\n          depthWrite: false,\n          depthTest: false\n        });\n        material.blending = THREE.AdditiveBlending;\n        object = new THREE.Mesh(new THREE.PlaneGeometry(2000, 50, 1, 1), material);\n        object.position.set(20, 0, 350);\n        object.rotation.set(0, 0.8, 0.7);\n        this.scene.add(object);\n        material2 = new THREE.MeshBasicMaterial({\n          color: 0x6f9787,\n          transparent: true,\n          depthWrite: false,\n          depthTest: false\n        });\n        material2.blending = THREE.AdditiveBlending;\n        object = new THREE.Mesh(new THREE.PlaneGeometry(2000, 50, 1, 1), material2);\n        object.position.set(20, 40, 350);\n        object.rotation.set(0, -1, -0.6);\n        return this.scene.add(object);\n      };\n\n      App.prototype.__createElementsBackup = function() {\n        var material, material2, materialBlack, object;\n        material = new THREE.MeshBasicMaterial({\n          color: 0xd7888e,\n          transparent: true\n        });\n        material.blending = THREE.MultiplyBlending;\n        materialBlack = new THREE.MeshBasicMaterial({\n          color: 0x222222,\n          transparent: true,\n          wireframe: false\n        });\n        materialBlack.blending = THREE.MultiplyBlending;\n        material2 = new THREE.MeshBasicMaterial({\n          color: 0x406872,\n          transparent: true\n        });\n        material2.blending = THREE.MultiplyBlending;\n        object = new THREE.Mesh(new THREE.CircleGeometry(50, 50, 0, Math.PI * 2), material);\n        object.position.set(20, 0, 0);\n        this.scene.add(object);\n        object = new THREE.Mesh(new THREE.RingGeometry(43, 50, 50, 1, 0, Math.PI * 2), materialBlack);\n        object.position.set(20, 0, 0);\n        this.scene.add(object);\n        object = new THREE.Mesh(new THREE.RingGeometry(40, 50, 4, 1, 0, Math.PI * 2), material2);\n        object.position.set(-20, 0, 0);\n        object.rotation.set(0, 0, Math.PI / 4);\n        return this.scene.add(object);\n      };\n\n      App.prototype.onWindowResize = function() {\n        var SCREEN_HEIGHT, SCREEN_WIDTH;\n        SCREEN_WIDTH = window.innerWidth;\n        SCREEN_HEIGHT = window.innerHeight;\n        this.camera.aspect = SCREEN_WIDTH / SCREEN_HEIGHT;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);\n        return this.postfx.resize(SCREEN_WIDTH, SCREEN_HEIGHT);\n      };\n\n      App.prototype.animate = function() {\n        requestAnimationFrame(this.animate);\n        return this.render();\n      };\n\n      App.prototype.render = function() {\n        var delta, newTime;\n        newTime = Date.now() * 0.0001;\n        delta = newTime - this.time;\n        this.camera.lookAt(this.scene.position);\n        this.postfx.render(delta);\n        return this.time = newTime;\n      };\n\n      return App;\n\n    })();\n  });\n\n}).call(this);\n\n",
    "// We need to configure cs! and require.js plugins to boot.\n// @see: require-config.js\n\nrequire.config({\n  paths: {\n    \"coffee-script\": \"bower_components/coffee-script/extras/coffee-script\",\n    cs: \"bower_components/require-cs/cs\"\n  }\n});\n\nrequire(['cs!app/Main'], function (Main) {\n  var app = new Main();\n});\n\ndefine(\"boot\", function(){});\n\n"
  ]
}